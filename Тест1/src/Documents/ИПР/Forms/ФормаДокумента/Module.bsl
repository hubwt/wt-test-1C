&НаКлиенте
Перем Кэш;

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Объект.НачалоПериода = Период.ДатаНачала;
	Объект.КонецПериода  = Период.ДатаОкончания;
	//Объект.СрокРеализации = (Объект.КонецПериода - объект.НачалоПериода)/(24*3600);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Период.ДатаНачала    = Объект.НачалоПериода;
	Период.ДатаОкончания = Объект.КонецПериода;
	НастройкаДоступности();
	РассчётПоказателей();
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
РКК =  РКК();
РОП =  РОП();

Элементы.Статус.СписокВыбора.Очистить();
Если РОП тогда
Элементы.Статус.СписокВыбора.Добавить(Перечисления.СтатусыИПР.ЗавершеноРОП);
Элементы.Статус.СписокВыбора.Добавить(Перечисления.СтатусыИПР.ПринятВРаботуРОП);
КонецЕсли;

Если РКК тогда
Элементы.Статус.СписокВыбора.Добавить(Перечисления.СтатусыИПР.АудитВРаботе);
Элементы.Статус.СписокВыбора.Добавить(Перечисления.СтатусыИПР.АудитЗавершён);
Элементы.Статус.СписокВыбора.Добавить(Перечисления.СтатусыИПР.ВозвращеноВРаботу);
Элементы.Статус.СписокВыбора.Добавить(Перечисления.СтатусыИПР.ПринятоНаПовторныйАудит);
Элементы.Статус.СписокВыбора.Добавить(Перечисления.СтатусыИПР.ПовторныйАудитЗавершён);
КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаДоступности()
РКК = НЕ РКК();
РОП = НЕ РОП();
	
элементы.Дата.ТолькоПросмотр 	       = РКК;
элементы.Период.ТолькоПросмотр         = РКК;
элементы.Аудитор.ТолькоПросмотр  	   = РКК;
элементы.Менеджер.ТолькоПросмотр 	   = РКК;
элементы.КонецАудита.ТолькоПросмотр    = РКК;
элементы.Комментарий.ТолькоПросмотр    = РКК;
элементы.НачалоАудита.ТолькоПросмотр   = РКК;
элементы.Ответственный.ТолькоПросмотр  = РКК;
элементы.ПовторныйАудит.ТолькоПросмотр = РКК;

Элементы.СписокЗамечание.ТолькоПросмотр    = РКК; 
//Элементы.СписокКомментарий.ТолькоПросмотр  = РКК;
//Элементы.СписокРекомендация.ТолькоПросмотр = РКК;

Элементы.СписокКомментарийРОП.ТолькоПросмотр = РОП;
//Элементы.СписокМероприятие.ТолькоПросмотр 	 = РОП; 
Элементы.СписокЦель.ТолькоПросмотр  		 = РОП;
Элементы.СписокЧек.ТолькоПросмотр 			 = РОП;


КонецПроцедуры

Функция РОП()
	возврат Пользователи.РолиДоступны("РОП");
КонецФункции

Функция РКК()
	возврат Пользователи.РолиДоступны("РКК");
КонецФункции


&НаСервере
Процедура ОтправитьСообщение(Текст)
	
	Запрос =Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СотрудникиКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
	|	СотрудникиКонтактнаяИнформация.Ссылка.ОтправлятьСМС КАК ОтправлятьСМС
	|ИЗ
	|	Справочник.Сотрудники.КонтактнаяИнформация КАК СотрудникиКонтактнаяИнформация
	|ГДЕ
	|	СотрудникиКонтактнаяИнформация.Ссылка.Пользователь = &Пользователь
	|	И СотрудникиКонтактнаяИнформация.Вид = &Вид";
	Запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.ТелефонСотрудникаСлужебный);
	Запрос.УстановитьПараметр("Пользователь",объект.Ответственный);
	Телефон = Запрос.Выполнить().Выбрать();
	Телефон.Следующий();
	
	НомераПреобразованные = дт_МоиЗвонки.ПреобразоватьНомерТелефона(Телефон.НомерТелефона);
	
	Если ТипЗнч(НомераПреобразованные) = Тип("Массив") Тогда
		НомерТелефона = НомераПреобразованные[0]; 
	Иначе
		НомерТелефона = НомераПреобразованные;
	КонецЕсли;
	
	НомерТелефона = СтрЗаменить(НомерТелефона, "+", "");
	
	Если Телефон.ОтправлятьСМС Тогда
		дт_УведомленияСМС.ОтправитьСМС(НомерТелефона,Текст, Константы.дт_SMS_Подпись.Получить());	
	КонецЕсли;			   
КонецПроцедуры

&НаСервере
Процедура СтатусПриИзмененииНаСервере()
	Если объект.Статус = Перечисления.СтатусыИПР.АудитЗавершён тогда
		Объект.СрокРеализации = 7;
		ОтправитьСообщение("ИПР по менеджеру " + Объект.Менеджер + " за номером " + Объект.Номер + " от " + Объект.Дата + " завершён.")
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	СтатусПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СписокЧекПриИзменении(Элемент)
	Элементы.СписокЧек.ТолькоПросмотр = Истина;
	Элементы.Список.ТекущиеДанные.Датавыполнения = ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	попытка
		Если Элемент.ТекущиеДанные.чек Тогда
			Элементы.СписокЧек.ТолькоПросмотр = Истина;
		Иначе
			Элементы.СписокЧек.ТолькоПросмотр = Ложь;
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Процедура ПовторныйАудитПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Элементы.ПовторныйАудит.ТекущиеДанные.ДатаСоздания) тогда 
		Элементы.ПовторныйАудит.ТекущиеДанные.ДатаСоздания = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьХороший(Команда)	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбораХорошего", ЭтаФорма,"ПодборРеализации");
	ОткрытьФорму("РегистрСведений.ЗаписиЗвонков.ФормаСписка", ПараметрыОткрытия, ЭтаФорма,,,,ОбработкаВыбора);
КонецПроцедуры

Процедура ПриЗакрытииФормыВыбораХорошего(Значение, ДопПараметры) Экспорт
	ДобавлениеЗаписиХорошего(Значение);
КонецПроцедуры


&НаСервере
Процедура ДобавлениеЗаписиХорошего(ДанныеЗаполнения)
	Строка = Объект.ХорошиеЗвонки.Добавить();
	Строка.НомерТелефона = ДанныеЗаполнения.НомерТелефона;
	Строка.Длительность  = ДанныеЗаполнения.Длительность;
	Строка.ТипЗвонка 	 = ДанныеЗаполнения.ТипЗвонка;
	Строка.Менеджер 	 = ДанныеЗаполнения.Менеджер;
	Строка.Дата 		 = ДанныеЗаполнения.Дата;
	Строка.URL 			 = ДанныеЗаполнения.URL;
	
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПлохой(Команда)
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбораПлохого", ЭтаФорма,"ПодборРеализации");
	ОткрытьФорму("РегистрСведений.ЗаписиЗвонков.ФормаСписка", ПараметрыОткрытия, ЭтаФорма,,,,ОбработкаВыбора);
КонецПроцедуры

Процедура ПриЗакрытииФормыВыбораПлохого(Значение, ДопПараметры) Экспорт
	ДобавлениеЗаписиПлохого(Значение);
КонецПроцедуры

&НаСервере
Процедура ДобавлениеЗаписиПлохого(ДанныеЗаполнения)
	Строка = Объект.ПлохиеЗвонки.Добавить();
	Строка.НомерТелефона = ДанныеЗаполнения.НомерТелефона;
	Строка.Длительность  = ДанныеЗаполнения.Длительность;
	Строка.ТипЗвонка 	 = ДанныеЗаполнения.ТипЗвонка;
	Строка.Менеджер 	 = ДанныеЗаполнения.Менеджер;
	Строка.Дата 		 = ДанныеЗаполнения.Дата;
	Строка.URL 			 = ДанныеЗаполнения.URL;
	
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбщий(Команда)
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбораОбщего", ЭтаФорма,"ПодборРеализации");
	ОткрытьФорму("РегистрСведений.ЗаписиЗвонков.ФормаСписка", ПараметрыОткрытия, ЭтаФорма,,,,ОбработкаВыбора);
КонецПроцедуры

Процедура ПриЗакрытииФормыВыбораОбщего(Значение, ДопПараметры) Экспорт
	ДобавлениеЗаписиОбщего(Значение);
КонецПроцедуры

&НаСервере
Процедура ДобавлениеЗаписиОбщего(ДанныеЗаполнения)
	Строка = Объект.ВсеЗвонки.Добавить();
	Строка.НомерТелефона = ДанныеЗаполнения.НомерТелефона;
	Строка.Длительность  = ДанныеЗаполнения.Длительность;
	Строка.ТипЗвонка 	 = ДанныеЗаполнения.ТипЗвонка;
	Строка.Менеджер 	 = ДанныеЗаполнения.Менеджер;
	Строка.Дата 		 = ДанныеЗаполнения.Дата;
	Строка.URL 			 = ДанныеЗаполнения.URL;
	
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ПрослушатьХорошуюЗапись(Команда)
	Если Элементы.ХорошиеЗвонки.ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если Кэш = Неопределено Тогда
		Кэш = Новый Структура();
		Кэш.Вставить("ФайлыЗвонков", Новый Соответствие());
	КонецЕсли;
	
	СсылкаНаФайл = Элементы.ХорошиеЗвонки.ТекущиеДанные.URL;
	СсылкаНаФайлЛокальная = Кэш.ФайлыЗвонков.Получить(СсылкаНаФайл);
	
	Если СсылкаНаФайлЛокальная = Неопределено Тогда
		
		СсылкаНаФайлЛокальная = дт_МоиЗвонкиКлиент.ПолучитьФайлЗаписи(СсылкаНаФайл);
		Если СсылкаНаФайлЛокальная = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		Кэш.ФайлыЗвонков.Вставить(СсылкаНаФайл, СсылкаНаФайлЛокальная);
		
	КонецЕсли;
	дт_МоиЗвонкиКлиент.ПрослушатьФайл(СсылкаНаФайлЛокальная);	  
КонецПроцедуры

&НаКлиенте
Процедура ПрослушатьПлохуюЗапись(Команда)
	Если Элементы.ПлохиеЗвонки.ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если Кэш = Неопределено Тогда
		Кэш = Новый Структура();
		Кэш.Вставить("ФайлыЗвонков", Новый Соответствие());
	КонецЕсли;
	
	СсылкаНаФайл = Элементы.ПлохиеЗвонки.ТекущиеДанные.URL;
	СсылкаНаФайлЛокальная = Кэш.ФайлыЗвонков.Получить(СсылкаНаФайл);
	
	Если СсылкаНаФайлЛокальная = Неопределено Тогда
		
		СсылкаНаФайлЛокальная = дт_МоиЗвонкиКлиент.ПолучитьФайлЗаписи(СсылкаНаФайл);
		Если СсылкаНаФайлЛокальная = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		Кэш.ФайлыЗвонков.Вставить(СсылкаНаФайл, СсылкаНаФайлЛокальная);
		
	КонецЕсли;
	дт_МоиЗвонкиКлиент.ПрослушатьФайл(СсылкаНаФайлЛокальная);	  
КонецПроцедуры

&НаКлиенте
Процедура ПрослушатьОбщуюЗапись(Команда)
	Если Элементы.ВсеЗвонки.ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если Кэш = Неопределено Тогда
		Кэш = Новый Структура();
		Кэш.Вставить("ФайлыЗвонков", Новый Соответствие());
	КонецЕсли;
	
	СсылкаНаФайл = Элементы.ВсеЗвонки.ТекущиеДанные.URL;
	СсылкаНаФайлЛокальная = Кэш.ФайлыЗвонков.Получить(СсылкаНаФайл);
	
	Если СсылкаНаФайлЛокальная = Неопределено Тогда
		
		СсылкаНаФайлЛокальная = дт_МоиЗвонкиКлиент.ПолучитьФайлЗаписи(СсылкаНаФайл);
		Если СсылкаНаФайлЛокальная = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		Кэш.ФайлыЗвонков.Вставить(СсылкаНаФайл, СсылкаНаФайлЛокальная);
		
	КонецЕсли;
	дт_МоиЗвонкиКлиент.ПрослушатьФайл(СсылкаНаФайлЛокальная);	  
КонецПроцедуры

&НаКлиенте
Процедура Рассчёт(Команда)
РассчётПоказателей();	
КонецПроцедуры

&НаКлиенте
Процедура РассчётПоказателей()
	КоличествоЗвонков   = объект.ВсеЗвонки.Количество();
	КоличествоХороших   = объект.ХорошиеЗвонки.Количество();
	КоличествоПлохих    = объект.ПлохиеЗвонки.Количество();
	
	Отбор = Новый Структура();
    Отбор.Вставить("НетЗамечаний",Истина);
	Объект.БезНареканий = Объект.ВсеЗвонки.НайтиСтроки(Отбор).Количество();
	Объект.СОшибками = КоличествоЗвонков - Объект.БезНареканий - КоличествоХороших - КоличествоПлохих;  
КонецПроцедуры

&НаКлиенте
Процедура КопироватьВХорошие(Команда)
	ТекДан = элементы.ВсеЗвонки.ТекущиеДанные;
	новстрок = объект.ХорошиеЗвонки.Добавить();
	ЗаполнитьЗначенияСвойств(новстрок,ТекДан);
КонецПроцедуры

&НаКлиенте
Процедура КопироватьВПлохие(Команда)
	ТекДан = элементы.ВсеЗвонки.ТекущиеДанные;
	новстрок = объект.ПлохиеЗвонки.Добавить();
	ЗаполнитьЗначенияСвойств(новстрок,ТекДан);
КонецПроцедуры

&НаКлиенте
Процедура КопироватьВТехЧасть(Команда)
	ТекДан = элементы.ВсеЗвонки.ТекущиеДанные;
	новстрок = объект.ТехЧасть.Добавить();
	ЗаполнитьЗначенияСвойств(новстрок,ТекДан);
КонецПроцедуры


&НаСервере
Процедура ОбновитьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	ЗаписиЗвонков.НомерТелефона КАК НомерТелефона,
	              |	ЗаписиЗвонков.Дата КАК Дата,
	              |	ЗаписиЗвонков.Длительность КАК Длительность,
	              |	ЗаписиЗвонков.Менеджер КАК Менеджер,
	              |	ЗаписиЗвонков.URL КАК URL,
	              |	ЗаписиЗвонков.Заявка КАК Заявка,
	              |	ЗаписиЗвонков.ТипЗвонка КАК ТипЗвонка,
	              |	ЗаписиЗвонков.Клиент КАК Клиент,
	              |	ЗаписиЗвонков.РучноеРедактирование КАК РучноеРедактирование,
	              |	ЗаписиЗвонков.Комментарий КАК Комментарийобщ,
	              |	ЗаписиЗвонков.СтатусЗаявки КАК СтатусЗаявки,
	              |	ЗаписиЗвонков.Сумма КАК Сумма,
	              |	ЗаписиЗвонков.Продажа КАК Продажа,
	              |	ЗаписиЗвонков.КомментарийАудитора КАК Комментарий,
	              |	ЗаписиЗвонков.ФИОАудитора КАК ФИОАудитора,
	              |	ЗаписиЗвонков.IDКод КАК IDКод,
	              |	ЗаписиЗвонков.ФИОРОКК КАК ФИОРОКК,
	              |	ЗаписиЗвонков.КомментарийРОКК КАК КомментарийРОКК,
	              |	ЗаписиЗвонков.АудитПроверен КАК АудитПроверен,
	              |	ЗаписиЗвонков.Хороший КАК Хороший,
	              |	ЗаписиЗвонков.Плохой КАК Плохой,
	              |	ЗаписиЗвонков.Техно КАК Техно,
	              |	ЗаписиЗвонков.НетЗамечаний КАК НетЗамечаний
	              |ИЗ
	              |	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
	              |ГДЕ
	              |	ЗаписиЗвонков.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	              |	И ЗаписиЗвонков.Менеджер = &Менеджер
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	Дата";
	
	Запрос.УстановитьПараметр("ДатаНачала",Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Менеджер",Объект.Менеджер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	объект.ХорошиеЗвонки.Очистить();
	объект.ПлохиеЗвонки.Очистить();
	объект.ТехЧасть.Очистить();
	объект.ВсеЗвонки.Очистить();
	
	Сошибками = 0;
	Пока выборка.Следующий() Цикл
		Если выборка.Хороший Тогда
			новстрок = объект.ХорошиеЗвонки.Добавить();
			ЗаполнитьЗначенияСвойств(новстрок,выборка);
			КонецЕсли;	
		Если выборка.Плохой Тогда
			новстрок = объект.ПлохиеЗвонки.Добавить();
			ЗаполнитьЗначенияСвойств(новстрок,выборка);
			КонецЕсли;	
		Если выборка.Техно Тогда
			новстрок = объект.ТехЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(новстрок,выборка);
			КонецЕсли;	
		Если выборка.Комментарий <> "" Тогда
			новстрок = объект.ВсеЗвонки.Добавить();
			ЗаполнитьЗначенияСвойств(новстрок,выборка);
			//	Сошибками = Сошибками + 1;		
		КонецЕсли;	
	конецЦикла;
	//Объект.СОшибками = Сошибками;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
	РассчётПоказателей();
КонецПроцедуры

&НаКлиенте
Процедура ПрослушатьТехЗапись(Команда)
	Если Элементы.ТехЧасть.ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если Кэш = Неопределено Тогда
		Кэш = Новый Структура();
		Кэш.Вставить("ФайлыЗвонков", Новый Соответствие());
	КонецЕсли;
	
	СсылкаНаФайл = Элементы.ТехЧасть.ТекущиеДанные.URL;
	СсылкаНаФайлЛокальная = Кэш.ФайлыЗвонков.Получить(СсылкаНаФайл);
	
	Если СсылкаНаФайлЛокальная = Неопределено Тогда
		
		СсылкаНаФайлЛокальная = дт_МоиЗвонкиКлиент.ПолучитьФайлЗаписи(СсылкаНаФайл);
		Если СсылкаНаФайлЛокальная = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		Кэш.ФайлыЗвонков.Вставить(СсылкаНаФайл, СсылкаНаФайлЛокальная);
		
	КонецЕсли;
	дт_МоиЗвонкиКлиент.ПрослушатьФайл(СсылкаНаФайлЛокальная);
КонецПроцедуры



