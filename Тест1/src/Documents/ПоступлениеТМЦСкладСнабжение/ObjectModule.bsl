
#Область ОбработчикиСобытийФормы

Процедура ОбработкаПроведения(Отказ, Режим)
	
	///+ГомзМА 07.04.2023
	// регистр ДвижениеТМЦСкладСнабжение Приход
	Движения.ДвижениеТМЦСкладСнабжение.Записывать = Истина;
	
	Для каждого ТекСтрокаСписокТМЦ Из СписокТМЦ Цикл
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ИнвентарныеНомера.Владелец КАК ТМЦ,
			|	ИнвентарныеНомера.Наименование КАК Наименование,
			|	ИнвентарныеНомера.СерийныйНомер КАК СерийныйНомер,
			|	ИнвентарныеНомера.ДатаПоступления КАК ДатаПоступления,
			|	ИнвентарныеНомера.ДокументПоступления КАК ДокументПоступления,
			|	ИнвентарныеНомера.Ссылка КАК Ссылка,
			|	ИнвентарныеНомера.Стоимость КАК Цена
			|ИЗ
			|	Справочник.ИнвентарныеНомера КАК ИнвентарныеНомера
			|ГДЕ
			|	ИнвентарныеНомера.ДокументПоступления = &ДокументПоступления
			|	И ИнвентарныеНомера.Владелец = &Владелец";
			
			Запрос.УстановитьПараметр("ДокументПоступления", Ссылка);
			Запрос.УстановитьПараметр("Владелец", 			 ТекСтрокаСписокТМЦ.ТМЦ);
			
			//@skip-check query-in-loop
			РезультатЗапроса = Запрос.Выполнить().Выбрать();
			
			Если ТекСтрокаСписокТМЦ.ТипУчета = Перечисления.ТипУчетаТМЦ.УчестьПоштучно Тогда
				Пока РезультатЗапроса.Следующий() Цикл
					Движение 					= Движения.ДвижениеТМЦСкладСнабжение.Добавить();
					Движение.ВидДвижения 		= ВидДвиженияНакопления.Приход;
					Движение.Период 			= Дата;
					Движение.ТМЦ 				= РезультатЗапроса.ТМЦ;
					Движение.МестоХранения 		= ТекСтрокаСписокТМЦ.Склад;
					Движение.ИнвентарныйНомер 	= РезультатЗапроса.Ссылка;
					Движение.Количество 		= 1;
					Движение.Цена 				= РезультатЗапроса.Цена;
				КонецЦикла;
			Иначе
				Пока РезультатЗапроса.Следующий() Цикл
					Движение 					= Движения.ДвижениеТМЦСкладСнабжение.Добавить();
					Движение.ВидДвижения 		= ВидДвиженияНакопления.Приход;
					Движение.Период 			= Дата;
					Движение.ТМЦ 				= РезультатЗапроса.ТМЦ;
					Движение.МестоХранения 		= ТекСтрокаСписокТМЦ.Склад;
					Движение.ИнвентарныйНомер 	= РезультатЗапроса.Ссылка;
					Движение.Количество 		= ТекСтрокаСписокТМЦ.Количество;
					Движение.Цена 				= РезультатЗапроса.Цена;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	///-ГомзМА 07.04.2023

КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный 	= Пользователи.ТекущийПользователь();
	Склад 			= Справочники.МестаХраненияТМЦ.НайтиПоКоду("000000001");
	Организация 	= Справочники.Организация.НайтиПоКоду	  ("000000003");
	
		///+ГомзМА 27.04.2023
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаРасход") Тогда
		Ответственный = Ответственный;
		Поставщик = ДанныеЗаполнения.Получатель;
		ЗаявкаНаРасход = ДанныеЗаполнения.Ссылка;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока 				= СписокТМЦ.Добавить();
			НоваяСтрока.Количество 		= ТекСтрокаТовары.Количество;
			НоваяСтрока.Сумма 			= ТекСтрокаТовары.Сумма;
			НоваяСтрока.ТМЦПоНакладной 	= ТекСтрокаТовары.Товар;
			НоваяСтрока.Цена 			= ТекСтрокаТовары.Цена;
			НоваяСтрока.ТипУчета 		= Перечисления.ТипУчетаТМЦ.УчестьКомплектом;
		КонецЦикла;
	КонецЕсли;
	///-ГомзМА 27.04.2023
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	///+ГомзМА 14.04.2023
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
			Возврат
	КонецЕсли;
	///-ГомзМА 14.04.2023
	
	///+ГомзМА 25.04.2023
	Если Проведен Тогда
		Для каждого СтрокаСписокТМЦ Из СписокТМЦ Цикл
			//@skip-check query-in-loop
			ЗаполнитьИнвентарныеНомераНаСервере(Отказ, СтрокаСписокТМЦ);
		КонецЦикла;
	Иначе 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентарныеНомера.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ИнвентарныеНомера КАК ИнвентарныеНомера
		|ГДЕ
		|	ИнвентарныеНомера.ДокументПоступления = &ДокументПоступления";
		
		Запрос.УстановитьПараметр("ДокументПоступления", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
		
		Если РезультатЗапроса.Количество() > 0 Тогда
			Пока РезультатЗапроса.Следующий() Цикл
				ДокОбъект = РезультатЗапроса.Ссылка.ПолучитьОбъект();
				
				//@skip-check query-in-loop
				ТоварСписанИлиПеремещен = ТоварЕстьВСписанииИлиПеремещении(РезультатЗапроса.Ссылка);
				
				Если ТоварСписанИлиПеремещен = 0 Тогда
					УстановитьПривилегированныйРежим(Истина);
					ДокОбъект.Удалить();
				Иначе
					Отказ = Истина;
					Сообщить("Невозможно отменить проведение документа, так как товар используется в списании или перемещении!");
					Возврат;
				КонецЕсли;
				
			КонецЦикла;
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
	КонецЕсли;
	
	
	///-ГомзМА 25.04.2023
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаДокумента = СписокТМЦ.Итог("Сумма");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьИнвентарныеНомераНаСервере(Отказ = Ложь, СтрокаСписокТМЦ)
	
	///+ГомзМА 14.04.2023
	ДанныеЗаполнения = Новый Структура();
	ДанныеЗаполнения.Вставить("ДокументПоступления", Ссылка);
	ДанныеЗаполнения.Вставить("ДатаПоступления", 	 Дата);
	
	КоличествоИнвНомеровПоТМЦ = ПолучитьКоличествоИнвентарныхНомеровПоТМЦ(СтрокаСписокТМЦ);
	
	//Для каждого СтрокаТаблицы Из СписокТМЦ Цикл
	Если КоличествоИнвНомеровПоТМЦ.Количество() = 0 Тогда
		Если СтрокаСписокТМЦ.ТипУчета = Перечисления.ТипУчетаТМЦ.УчестьПоштучно Тогда
			Для Сч = 1 По СтрокаСписокТМЦ.Количество Цикл
				ДанныеЗаполнения.Вставить("ТМЦ",  			СтрокаСписокТМЦ.ТМЦ);
				ДанныеЗаполнения.Вставить("Цена", 			СтрокаСписокТМЦ.Цена);
				ДанныеЗаполнения.Вставить("ТМЦПоНакладной", СтрокаСписокТМЦ.ТМЦПоНакладной);
				НовыйКод = Справочники.ИнвентарныеНомера.СоздатьНовыйЭлемент(ДанныеЗаполнения, Отказ);
			КонецЦикла;
		Иначе
			ДанныеЗаполнения.Вставить("ТМЦ",  			СтрокаСписокТМЦ.ТМЦ);
			ДанныеЗаполнения.Вставить("Цена", 			СтрокаСписокТМЦ.Цена);
			ДанныеЗаполнения.Вставить("ТМЦПоНакладной", СтрокаСписокТМЦ.ТМЦПоНакладной);
			НовыйКод = Справочники.ИнвентарныеНомера.СоздатьНовыйЭлемент(ДанныеЗаполнения, Отказ);
		КонецЕсли;
	КонецЕсли;
		
		Для каждого СтрокаИнвНомеров Из КоличествоИнвНомеровПоТМЦ Цикл
			Если СтрокаСписокТМЦ.ТипУчета 	= Перечисления.ТипУчетаТМЦ.УчестьПоштучно И
				 СтрокаСписокТМЦ.ТМЦ 		= СтрокаИнвНомеров.Владелец И 
				 Ссылка 					= СтрокаИнвНомеров.ДокументПоступления И 
				 СтрокаСписокТМЦ.Количество > СтрокаИнвНомеров.Количество Тогда

					Для Сч = 1 По СтрокаСписокТМЦ.Количество - СтрокаИнвНомеров.Количество Цикл
						ДанныеЗаполнения.Вставить("ТМЦ",  			СтрокаСписокТМЦ.ТМЦ);
						ДанныеЗаполнения.Вставить("Цена", 			СтрокаСписокТМЦ.Цена);
						ДанныеЗаполнения.Вставить("ТМЦПоНакладной", СтрокаСписокТМЦ.ТМЦПоНакладной);
						НовыйКод = Справочники.ИнвентарныеНомера.СоздатьНовыйЭлемент(ДанныеЗаполнения, Отказ); 
					КонецЦикла;
					
				ИначеЕсли СтрокаСписокТМЦ.ТипУчета 	= Перечисления.ТипУчетаТМЦ.УчестьПоштучно И
						  СтрокаСписокТМЦ.ТМЦ 		= СтрокаИнвНомеров.Владелец И
						  Ссылка 					= СтрокаИнвНомеров.ДокументПоступления И
						  СтрокаСписокТМЦ.Количество < СтрокаИнвНомеров.Количество Тогда
					
							ДанныеЗаполнения.Вставить("ТМЦ", СтрокаСписокТМЦ.ТМЦ);
							//@skip-check query-in-loop
							УдалитьЛишниеИнвентарныеНомера(ДанныеЗаполнения, Отказ, СтрокаИнвНомеров.Количество - СтрокаСписокТМЦ.Количество);
				КонецЕсли;
			КонецЦикла;
			
			//КонецЦикла;
			///-ГомзМА 14.04.2023	

КонецПроцедуры

&НаСервере
Процедура УдалитьЛишниеИнвентарныеНомера(ДанныеЗаполнения, Отказ, Количество)
	
	///+ГомзМА 20.04.2023
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентарныеНомера.Код КАК Код,
		|	ИнвентарныеНомера.Ссылка КАК Ссылка,
		|	ИнвентарныеНомера.Владелец КАК Владелец,
		|	ИнвентарныеНомера.ДокументПоступления КАК ДокументПоступления
		|ИЗ
		|	Справочник.ИнвентарныеНомера КАК ИнвентарныеНомера
		|ГДЕ
		|	ИнвентарныеНомера.ДокументПоступления = &ДокументПоступления
		|	И ИнвентарныеНомера.Владелец = &Владелец
		|
		|УПОРЯДОЧИТЬ ПО
		|	Код УБЫВ";
	
	Запрос.УстановитьПараметр("ДокументПоступления", Ссылка);
	Запрос.УстановитьПараметр("Владелец", ДанныеЗаполнения.ТМЦ);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Сч = 0 По Количество - 1 Цикл
		//Удаление наименования по накладной из регистра сведений
		Запись 					= РегистрыСведений.НаименованиеТМЦПоНакладной.СоздатьМенеджерЗаписи();
		Запись.ТМЦ 				= РезультатЗапроса[Сч].Владелец;
		Запись.ИнвентарныйНомер = РезультатЗапроса[Сч].Ссылка;
		Запись.Удалить();
		
		//Удаление инвентарного номера
		СправочникОбъект = РезультатЗапроса[Сч].Ссылка.ПолучитьОбъект();
		СправочникОбъект.Удалить();

	КонецЦикла;
	///-ГомзМА 20.04.2023

КонецПроцедуры


&НаСервере
Функция ПолучитьКоличествоИнвентарныхНомеровПоТМЦ(СтрокаСписокТМЦ)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентарныеНомера.Владелец КАК Владелец,
		|	ИнвентарныеНомера.ДокументПоступления КАК ДокументПоступления,
		|	СУММА(1) КАК Количество
		|ИЗ
		|	Справочник.ИнвентарныеНомера КАК ИнвентарныеНомера
		|ГДЕ
		|	ИнвентарныеНомера.ДокументПоступления = &ДокументПоступления
		|	И ИнвентарныеНомера.Владелец = &Владелец
		|
		|СГРУППИРОВАТЬ ПО
		|	ИнвентарныеНомера.Владелец,
		|	ИнвентарныеНомера.ДокументПоступления";
	
	Запрос.УстановитьПараметр("ДокументПоступления", Ссылка);
	Запрос.УстановитьПараметр("Владелец", 			 СтрокаСписокТМЦ.ТМЦ);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();

	Возврат РезультатЗапроса;
	
КонецФункции 

Функция ТоварЕстьВСписанииИлиПеремещении(ИнвентарныйНомер)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеТМЦСписокТМЦ.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПеремещениеТМЦ.СписокТМЦ КАК ПеремещениеТМЦСписокТМЦ
		|ГДЕ
		|	ПеремещениеТМЦСписокТМЦ.ИнвентарныйНомер = &ИнвентарныйНомер
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СписаниеТМЦСкладСнабжениеСписокТМЦ.Ссылка
		|ИЗ
		|	Документ.СписаниеТМЦСкладСнабжение.СписокТМЦ КАК СписаниеТМЦСкладСнабжениеСписокТМЦ
		|ГДЕ
		|	СписаниеТМЦСкладСнабжениеСписокТМЦ.ИнвентарныйНомер = &ИнвентарныйНомер";
	
	Запрос.УстановитьПараметр("ИнвентарныйНомер", ИнвентарныйНомер);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	РезультатЗапроса.Следующий();
	
	Возврат РезультатЗапроса.Количество();


КонецФункции // ()


#КонецОбласти



















