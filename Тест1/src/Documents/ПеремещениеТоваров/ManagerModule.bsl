#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Заполнение
// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
	Команда = КомандыЗаполнения.Добавить();
	Команда.Представление = "Заполнить по минимальным запасам";
	Команда.МножественныйВыбор = Ложь;
	Команда.РежимЗаписи = "НеЗаписывать";
	Команда.Обработчик = "ЗаполнитьПоМинимальнымОстаткам";
КонецПроцедуры

Процедура ЗаполнитьПоМинимальнымОстаткам(ДокументСсылка, ПараметрыВыполнения) Экспорт
	
	Форма = ПараметрыВыполнения.Форма;
	Объект = Форма.РеквизитФормыВЗначение("Объект");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РегистрНакопления1Остатки.Товар КАК Номенклатура,
		|	РегистрНакопления1Остатки.машина КАК Автомобиль,
		|	РегистрНакопления1Остатки.индкод КАК Партия,
		|	РегистрНакопления1Остатки.КолвоОстаток КАК Количество1,
		|	0 КАК Количество2
		|ПОМЕСТИТЬ втОстатки
		|ИЗ
		|	РегистрНакопления.РегистрНакопления1.Остатки(, Склад = &Склад1) КАК РегистрНакопления1Остатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрНакопления1Остатки.Товар,
		|	РегистрНакопления1Остатки.машина,
		|	РегистрНакопления1Остатки.индкод,
		|	0,
		|	РегистрНакопления1Остатки.КолвоОстаток
		|ИЗ
		|	РегистрНакопления.РегистрНакопления1.Остатки(, Склад = &Склад2) КАК РегистрНакопления1Остатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОстатки.Номенклатура КАК Номенклатура,
		|	СУММА(втОстатки.Количество1) КАК Количество1,
		|	СУММА(втОстатки.Количество2) КАК Количество2,
		|	втОстатки.Номенклатура.РекомендованаяЦена КАК Цена
		|ИЗ
		|	втОстатки КАК втОстатки
		|СГРУППИРОВАТЬ ПО
		|	втОстатки.Номенклатура,
		|	втОстатки.Номенклатура.РекомендованаяЦена
		|ИМЕЮЩИЕ
		|	СУММА(втОстатки.Количество1) > 2
		|	И СУММА(втОстатки.Количество2) <= 1
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Склад1", Объект.СкладОтправитель);
	Запрос.УстановитьПараметр("Склад2", Объект.СкладПолучатель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Объект.Товары.Очистить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Количество = 0;
		Если Выборка.Количество2 = 0 И Выборка.Количество1 > 2 Тогда
			Количество = 1;	
		ИначеЕсли Выборка.Количество2 = 1 И Выборка.Количество1 > 10 Тогда
			Количество = 2;
		Иначе
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.Товары.Добавить();	
		НоваяСтрока.Товар = Выборка.Номенклатура;
		НоваяСтрока.Цена = Выборка.Цена;
		НоваяСтрока.Количество = Количество;
		
	КонецЦикла;
	
	Форма.ЗначениеВРеквизитФормы(Объект, "Объект");
	Форма.Модифицированность = Истина;
		
КонецПроцедуры


#КонецОбласти


#Область Проведение
Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	НомераТаблиц = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(Реквизиты.Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Склад", Реквизиты.СкладОтправитель);
	
	НомераТаблиц = Новый Структура;

	Запрос.Текст =
		ТекстЗапросаСписанныеТовары(НомераТаблиц)
		+ ТекстЗапросаТоварыОрганизаций(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		Таблица =  Результат[НомерТаблицы.Значение].Выгрузить();
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Таблица);
	КонецЦикла;

	Возврат ПараметрыПроведения;

КонецФункции


Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.СкладОтправитель КАК СкладОтправитель,
	|	Реквизиты.СкладПолучатель КАК СкладПолучатель,
	|	Реквизиты.Ответственный КАК Ответственный,
	|	Реквизиты.Проверяющий КАК Проверяющий,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Статус КАК Статус
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.СкладОтправитель КАК СкладОтправитель,
	|	Реквизиты.СкладПолучатель КАК СкладПолучатель,
	|	Реквизиты.Ответственный КАК Ответственный,
	|	Реквизиты.Проверяющий КАК Проверяющий,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Статус КАК Статус
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()


Функция ТекстЗапросаСписанныеТовары(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСписанныеТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеТоваровТовары.Товар КАК Номенклатура,
	|	ПеремещениеТоваровТовары.Количество КАК Количество,
	|	ПеремещениеТоваровТовары.Автомобиль КАК Автомобиль,
	|	ПеремещениеТоваровТовары.Партия КАК Партия
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	Реквизиты.СкладОтправитель КАК Склад,
	|	ВТ_Товары.Номенклатура КАК Товар,
	|	ВТ_Товары.Количество КАК Колво,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВТ_Товары.Автомобиль КАК машина,
	|	ВТ_Товары.Партия КАК индкод
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (Реквизиты.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещений.Отправлен), ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещений.Принят)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Реквизиты.Дата,
	|	0,
	|	ВЫБОР
	|		КОГДА Реквизиты.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещений.Отправлен)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ВПути)
	|		ИНАЧЕ Реквизиты.СкладПолучатель
	|	КОНЕЦ,
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ВТ_Товары.Автомобиль,
	|	ВТ_Товары.Партия
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (Реквизиты.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещений.Отправлен), ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещений.Принят)))";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

Функция ТекстЗапросаТоварыОрганизаций(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаТоварыГр", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаТоварыСебестоимость", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаТоварыОрганизаций", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ВТ_Товары.НомерСтроки) КАК НомерСтроки,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Партия КАК Партия,
	|	СУММА(ВТ_Товары.Количество) КАК Количество,
	|	ВТ_Товары.Автомобиль КАК Автомобиль
	|ПОМЕСТИТЬ ВТ_ТоварыГр
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Партия,
	|	ВТ_Товары.Автомобиль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Автомобиль КАК Автомобиль,
	|	ВТ_Товары.Партия КАК Партия,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизацийОстатки.КоличествоОстаток > ВТ_Товары.Количество
	|			ТОГДА ВЫРАЗИТЬ(ТоварыОрганизацийОстатки.СтоимостьОстаток * ВТ_Товары.Количество / ТоварыОрганизацийОстатки.КоличествоОстаток КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ТоварыОрганизацийОстатки.СтоимостьОстаток
	|	КОНЕЦ КАК Стоимость
	|ПОМЕСТИТЬ ВТ_ТоварыСебестоимость
	|ИЗ
	|	ВТ_ТоварыГр КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(
	|				&МоментВремени,
	|				Организация = &Организация
	|					И Склад = &Склад
	|					И (Номенклатура, Партия) В
	|						(ВЫБРАТЬ
	|							ВТ_ТоварыГр.Номенклатура,
	|							ВТ_ТоварыГр.Партия
	|						ИЗ
	|							ВТ_ТоварыГр)) КАК ТоварыОрганизацийОстатки
	|		ПО ВТ_Товары.Номенклатура = ТоварыОрганизацийОстатки.Номенклатура
	|			И ВТ_Товары.Партия = ТоварыОрганизацийОстатки.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СкладОтправитель КАК Склад,
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Партия КАК Партия,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВТ_Товары.Стоимость КАК Стоимость
	|ИЗ
	|	ВТ_ТоварыСебестоимость КАК ВТ_Товары,
	|	Реквизиты КАК Реквизиты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.СкладПолучатель,
	|	ВТ_ТоварыСебестоимость.НомерСтроки,
	|	ВТ_ТоварыСебестоимость.Номенклатура,
	|	ВТ_ТоварыСебестоимость.Партия,
	|	ВТ_ТоварыСебестоимость.Количество,
	|	ВТ_ТоварыСебестоимость.Стоимость
	|ИЗ
	|	ВТ_ТоварыСебестоимость КАК ВТ_ТоварыСебестоимость,
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументОбъект, ПараметрыПроведения, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	
	//СтруктураВременныеТаблицы = ПараметрыПроведения.ТаблицаЗапланированныеОтгрузки;
	СтруктураВременныеТаблицы = ПараметрыПроведения.ДляПроведения.СтруктураВременныеТаблицы;
	
		
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДвиженияТовары.Склад КАК Склад,
	|	ДвиженияТовары.Товар КАК Номенклатура,
	|	ДвиженияТовары.машина КАК Автомобиль,
	|	ДвиженияТовары.индкод КАК Партия,
	|	ВЫБОР
	|		КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДвиженияТовары.Колво
	|		ИНАЧЕ -ДвиженияТовары.Колво
	|	КОНЕЦ КАК КоличествоИзменение,
	|	ДвиженияТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ДвиженияТовары
	|ИЗ
	|	&ДвиженияТовары КАК ДвиженияТовары
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДвиженияТовары.Колво
	|			ИНАЧЕ -ДвиженияТовары.Колво
	|		КОНЕЦ < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияТовары.Номенклатура) КАК НоменклатураПредставление,
	|	ДвиженияТовары.Склад КАК Склад,
	|	ДвиженияТовары.Номенклатура КАК Товар,
	|	ДвиженияТовары.Автомобиль КАК Автомобиль,
	|	ДвиженияТовары.Партия КАК индкод,
	|	ДвиженияТовары.КоличествоИзменение КАК КоличествоИзменение,
	|	ДвиженияТовары.НомерСтроки КАК НомерСтроки,
	|	ТоварыОстатки.КолвоОстаток КАК Количество
	|ИЗ
	|	ВТ_ДвиженияТовары КАК ДвиженияТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки(&МоментКонтроля, ) КАК ТоварыОстатки
	|		ПО ДвиженияТовары.Номенклатура = ТоварыОстатки.Товар
	|			И ДвиженияТовары.Склад = ТоварыОстатки.Склад
	|			И ДвиженияТовары.Автомобиль = ТоварыОстатки.машина
	|			И ДвиженияТовары.Партия = ТоварыОстатки.индкод
	|ГДЕ
	|	ЕСТЬNULL(ТоварыОстатки.КолвоОстаток, 0) < 0";
	
	//Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	ТаблицаИсточник = ПараметрыПроведения.ТаблицыДляДвижений.ТаблицаСписанныеТовары;
	Запрос.УстановитьПараметр("МоментКонтроля", ПараметрыПроведения.ДляПроведения.МоментКонтроля);
	Запрос.УстановитьПараметр("ДвиженияТовары", ТаблицаИсточник);
	
	РезультатЗапроса = Запрос.Выполнить();
	// Отрицательный остаток по счету
	Если НЕ РезультатЗапроса.Пустой() Тогда
		//ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			// определим индекс строки табличной части для отображения баллона
			ПараметрыПоискаСтроки = Новый Структура("Товар,индкод");
			ЗаполнитьЗначенияСвойств(ПараметрыПоискаСтроки, Выборка);
			СтрокиТабличнойЧасти = ТаблицаИсточник.НайтиСтроки(ПараметрыПоискаСтроки);
			
			Поле = "";
			НомерСтроки = 0;
			
			Если СтрокиТабличнойЧасти.Количество() <> 0 Тогда
				
				НомерСтроки = СтрокиТабличнойЧасти[0].НомерСтроки;
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", НомерСтроки, "Количество");
				
			КонецЕсли;
			
			ТекстСообщения = СтрШаблон(
				"Строка %1: Количество товара %2 (код %3) превышает остаток по складу %4. Нехватка: %5", 
				НомерСтроки, 
				Выборка.НоменклатураПредставление,
				Выборка.индкод,
				Выборка.Склад,
				//Выборка.КоличествоИзменение, 
				-Выборка.Количество);
			
			
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры // ВыполнитьКонтроль()


#КонецОбласти 




#Область Печать
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПеремещениеТоваров";
	КомандаПечати.Представление = НСтр("ru = 'Перемещение товаров'");
	КомандаПечати.Порядок = 10;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НарядНаСборку";
	КомандаПечати.Представление = НСтр("ru = 'Наряд на сборку'");
	КомандаПечати.Порядок = 20;
	
	// Товарно-транспортная накладная (1-Т)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьТТН";
	КомандаПечати.Идентификатор = "ТТН";
	КомандаПечати.Представление = НСтр("ru = 'Товарно-транспортная накладная (1-Т)'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары";	
	КомандаПечати.Порядок = 80;
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПеремещениеТоваров") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПеремещениеТоваров", "Перемещение товаров", 
			ПечатьПеремещениеТоваров(МассивОбъектов, ОбъектыПечати),,"Документ.ПеремещениеТоваров.ПФ_MXL_ПеремещениеТоваров");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядНаСборку") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НарядНаСборку", "Наряд на сборку", 
			ПечатьПеремещениеТоваров(МассивОбъектов, ОбъектыПечати, "НарядНаСборку"),,"Документ.ПеремещениеТоваров.ПФ_MXL_НарядНаСборку");
	КонецЕсли;
	//ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
	//	КоллекцияПечатныхФорм,
	//	ОбъектыПечати,
	//	ПараметрыВывода);
	
КонецПроцедуры


// Процедура печати документа.
//
// Параметры:
//  МассивОбъектов - Массив - объекты, по которым требуется сформировать печатную форму;
//  ОбъектыПечати  - СписокЗначений - разметка табличных документов по печатаемым объектам:
//   * Значение      - ЛюбаяСсылка - печатаемый объект;
//   * Представление - Строка - имя области, соответствующее объекту.
//  ИмяМакета      - Строка - "Счет" или "Заказ".
//  ВыводитьПлатежныеРеквизиты - Булево - если Истина, выводит шапку с платежными реквизитами в счете.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьПеремещениеТоваров(МассивОбъектов, ОбъектыПечати, ИмяМакета = "ПеремещениеТоваров") Экспорт
	
	ДанныеПечати = ПолучитьДанныеПечатиПеремещениеТоваров(МассивОбъектов, ИмяМакета = "НарядНаСборку");
	
	Шапка      	= ДанныеПечати.Шапка;
	ВыборкаПоТоварам = ДанныеПечати.Товары;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПеремещениеТоваров_Основной";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеТоваров.ПФ_MXL_" + ИмяМакета);
	ФорматДаты = "ДФ=dd.MM.yyyy";
	
	Пока Шапка.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Ссылка", Шапка.Ссылка);
		ВыборкаПоТоварам.Сбросить();
		Если НЕ ВыборкаПоТоварам.НайтиСледующий(СтруктураПоиска) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В документе %1 отсутствуют товары. Печать не требуется'"),
				Шапка.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				Шапка.Ссылка);
			Продолжить;
		КонецЕсли;
		
		
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		
		ДанныеПечатиДоп = Новый Структура();
		ДанныеПечатиДоп.Вставить("ДатаДокумента", Формат(Шапка.ДатаДокумента, ФорматДаты));
		ДанныеПечатиДоп.Вставить("Ответственный", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.Ответственный));
		ДанныеПечатиДоп.Вставить("Проверяющий", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.Проверяющий));
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиДоп);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		
		// Таблица
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		СтрокаТовары = ВыборкаПоТоварам.Выбрать();
		Пока СтрокаТовары.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиДоп);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции


Функция ПолучитьДанныеПечатиПеремещениеТоваров(МассивОбъектов, ЭтоНарядНаСборку = Ложь)

	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Номер КАК НомерДокумента,
	|	Док.Дата КАК ДатаДокумента,
	|	Док.СкладОтправитель КАК СкладОтправитель,
	|	Док.СкладПолучатель КАК СкладПолучатель,
	|	ЕСТЬNULL(Док.Ответственный.Представление, """") КАК Ответственный,
	|	ЕСТЬNULL(Док.Проверяющий.Представление, """") КАК Проверяющий,
	|	Док.Итого КАК СуммаИтого,
	|	Док.СкладПолучатель.Комментарий КАК СкладПолучательАдрес
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Док
	|ГДЕ
	|	Док.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Док.МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТЧТовары.НомерСтроки КАК НомерСтроки,
	|	ТЧТовары.Товар КАК Товар,
	|	ВЫБОР
	|		КОГДА НЕ ТЧТовары.Товар.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ТЧТовары.Товар.НаименованиеПолное
	|		ИНАЧЕ ТЧТовары.Товар.Наименование
	|	КОНЕЦ КАК ТоварНаименование,
	|	ТЧТовары.Товар.Артикул КАК ТоварАртикул,
	|	ТЧТовары.Товар.Код КАК ТоварКод,
	|	ТЧТовары.Товар.Производитель КАК ТоварПроизводитель,
	|	ТЧТовары.Количество КАК Количество,
	|	ТЧТовары.Цена КАК Цена,
	|	ТЧТовары.Ссылка КАК Ссылка,
	|	""шт."" КАК ЕдиницаИзмерения,
	|	ТЧТовары.Партия.Представление КАК ПартияПредставление,
	|	ТЧТовары.Цена * ТЧТовары.Количество КАК Сумма,
	|	Док.СкладОтправитель КАК СкладОтправитель,
	|	Док.СкладПолучатель КАК СкладПолучатель
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТЧТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК Док
	|		ПО ТЧТовары.Ссылка = Док.Ссылка
	|ГДЕ
	|	ТЧТовары.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВТ_Товары.Товар КАК Товар,
	|	ВТ_Товары.ТоварНаименование КАК ТоварНаименование,
	|	ВТ_Товары.ТоварАртикул КАК ТоварАртикул,
	|	ВТ_Товары.ТоварКод КАК ТоварКод,
	|	ВТ_Товары.ТоварПроизводитель КАК ТоварПроизводитель,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВТ_Товары.Цена КАК Цена,
	|	ВТ_Товары.Сумма КАК Сумма,
	|	ВТ_Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Товары.ПартияПредставление КАК ПартияПредставление,
	|	МестаХранения.МестоХранения КАК МестоХранения,
	|	ВТ_Товары.Ссылка КАК Ссылка
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дт_МестаХраненияНоменклатуры.СрезПоследних КАК МестаХранения
	|		ПО ВТ_Товары.Товар = МестаХранения.Номенклатура
	|			И ВТ_Товары." + ?(ЭтоНарядНаСборку, "СкладОтправитель", "СкладПолучатель") + " = МестаХранения.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	" + ?(ЭтоНарядНаСборку, "МестоХранения", "НомерСтроки") + "
	|АВТОУПОРЯДОЧИВАНИЕ
	|ИТОГИ ПО
	|	Ссылка";
	
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Шапка      	= РезультатЗапроса[0].Выбрать();
	ВыборкаПоТоварам = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Возврат Новый Структура("Шапка,Товары",
		Шапка,
		ВыборкаПоТоварам);
		
КонецФункции // ПолучитьДанныеПечатиПеремещениеТоваров()


// Функция выполняет расчет рублевых сумм для вывода таблиц документа на печать
//
Функция ПодготовитьТаблицуДокументаДляПечати(ВыборкаСтрок, ТаблицаПоТоварам)

	ТаблицаПоТоварам.Очистить();

	ВалютаРегламентированногоУчета   = дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	МассивРаспределения = Новый Массив;

	СуммаВзаиморасчетов 	= 0;
	СуммаВзаиморасчетовНДС 	= 0;
	ПерваяСтрокаДокумента 	= Истина;
	СуммаВключаетНДС 		= Неопределено;
	РасчетыВУсловныхЕдиницах= Неопределено;
	ДатаДокумента			= Неопределено;

	Пока ВыборкаСтрок.Следующий() Цикл
		
		СтрокаТаблицы = ТаблицаПоТоварам.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыборкаСтрок);
		
		Если ПерваяСтрокаДокумента Тогда

			СуммаВключаетНДС 			= ВыборкаСтрок.СуммаВключаетНДС;
			РасчетыВУсловныхЕдиницах 	= ВыборкаСтрок.РасчетыВУсловныхЕдиницах;
			ДатаДокумента				= ВыборкаСтрок.ДатаДокумента;
			
			НуженПересчетВРубли = Ложь;
			
			//Если ВыборкаСтрок.Проведен 
			//	И (ВыборкаСтрок.РасчетыВУсловныхЕдиницах
			//	ИЛИ (ВыборкаСтрок.ВалютаДокумента <> ВалютаРегламентированногоУчета И ВыборкаСтрок.ДатаДокумента >= '20090101000000')) Тогда
			//	НуженПересчетВРубли = Истина;
			//КонецЕсли;
			
			ПерваяСтрокаДокумента = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаПоТоварам;

КонецФункции


// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыТТН()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РеализацияТоваровУслугТовары.Товар) КАК Количество
	|ПОМЕСТИТЬ КоличествоТоваров
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка В (&МассивДокументов)
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Дата,
	|	РеализацияТоваровУслуг.Номер,
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.СкладПолучатель.Контрагент КАК Грузополучатель,
	|	РеализацияТоваровУслуг.Организация КАК Грузоотправитель,
	|	РеализацияТоваровУслуг.Организация КАК Перевозчик,
	|	РеализацияТоваровУслуг.Организация.ОсновнойБанковскийСчет КАК БанковскийСчетОрганизации,
	|	РеализацияТоваровУслуг.СкладПолучатель.Контрагент КАК Покупатель,
	|	РеализацияТоваровУслуг.СкладПолучатель.Комментарий КАК АдресДоставки,
	|	РеализацияТоваровУслуг.СкладПолучатель.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.СкладПолучатель.Контрагент.ОсновнойДоговор.Представление КАК Основание,
	|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
	|	1 КАК Курс,
	|	1 КАК Кратность,
	|	ИСТИНА КАК ЦенаВключаетНДС,
	|	ЕСТЬNULL(КоличествоТоваров.Количество, 0) КАК КоличествоНаименований,
	|	"""" КАК ЗаРуководителяНаОсновании,
	|	"""" КАК ЗаГлавногоБухгалтераНаОсновании,
	|	РеализацияТоваровУслуг.Ответственный КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЧерезКого,
	|	"""" КАК КраткоеНаименованиеГруза,
	|	"""" КАК СопроводительныеДокументы,
	|	"""" КАК Водитель,
	|	"""" КАК ВодительскоеУдостоверение,
	|	"""" КАК МаркаАвтомобиля,
	|	"""" КАК РегистрационныйЗнакАвтомобиля
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоТоваров КАК КоличествоТоваров
	|		ПО РеализацияТоваровУслуг.Ссылка = КоличествоТоваров.Ссылка
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В (&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.НомерСтроки КАК НомерСтроки,
	|	РеализацияТоваровУслуг.Номенклатура,
	|	РеализацияТоваровУслуг.ТоварНаименование,
	|	РеализацияТоваровУслуг.ТоварКод КАК ТоварКод,
	|	РеализацияТоваровУслуг.Артикул КАК Артикул,
	|	РеализацияТоваровУслуг.Количество,
	|	РеализацияТоваровУслуг.КоличествоМест,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.ВидУпаковки,
	|	РеализацияТоваровУслуг.Коэффициент,
	|	РеализацияТоваровУслуг.КоличествоВОдномМесте,
	|	РеализацияТоваровУслуг.Цена,
	|	РеализацияТоваровУслуг.Сумма,
	|	РеализацияТоваровУслуг.СуммаНДС,
	|	РеализацияТоваровУслуг.СтавкаНДС,
	|	РеализацияТоваровУслуг.ЭтоВозвратнаяТара,
	|	РеализацияТоваровУслуг.КоэффициентПерерасчета,
	|	РеализацияТоваровУслуг.Весовой
	|ПОМЕСТИТЬ ВТ_ТаблицаПоТоварам
	|ИЗ
	|	&ТаблицаПоТоварам КАК РеализацияТоваровУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	МИНИМУМ(РеализацияТоваровУслуг.НомерСтроки) КАК НомерСтроки,
	|	РеализацияТоваровУслуг.Номенклатура,
	|	РеализацияТоваровУслуг.ТоварНаименование,
	|	РеализацияТоваровУслуг.ТоварКод КАК ТоварКод,
	|	РеализацияТоваровУслуг.Артикул КАК Артикул,
	|	СУММА(РеализацияТоваровУслуг.Количество) КАК Количество,
	|	СУММА(РеализацияТоваровУслуг.КоличествоМест) КАК КоличествоМест,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.ВидУпаковки,
	|	РеализацияТоваровУслуг.Коэффициент,
	|	РеализацияТоваровУслуг.КоличествоВОдномМесте,
	|	РеализацияТоваровУслуг.Цена,
	|	СУММА(РеализацияТоваровУслуг.Сумма) КАК Сумма,
	|	СУММА(РеализацияТоваровУслуг.СуммаНДС) КАК СуммаНДС,
	|	РеализацияТоваровУслуг.СтавкаНДС,
	|	РеализацияТоваровУслуг.ЭтоВозвратнаяТара,
	|	РеализацияТоваровУслуг.КоэффициентПерерасчета,
	|	РеализацияТоваровУслуг.Весовой
	|ИЗ
	|	ВТ_ТаблицаПоТоварам КАК РеализацияТоваровУслуг
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Номенклатура,
	|	РеализацияТоваровУслуг.ТоварНаименование,
	|	РеализацияТоваровУслуг.ТоварКод,
	|	РеализацияТоваровУслуг.Артикул,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.ВидУпаковки,
	|	РеализацияТоваровУслуг.Коэффициент,
	|	РеализацияТоваровУслуг.КоличествоВОдномМесте,
	|	РеализацияТоваровУслуг.Цена,
	|	РеализацияТоваровУслуг.СтавкаНДС,
	|	РеализацияТоваровУслуг.ЭтоВозвратнаяТара,
	|	РеализацияТоваровУслуг.КоэффициентПерерасчета,
	|	РеализацияТоваровУслуг.Весовой
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|ПО
	|	Ссылка";
		
	Возврат ТекстЗапроса;

КонецФункции

// Получить данные объектов для печати ТТН
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// Возвращаемое значение:
//  Структура с данными объектов для печати ТТН.
//
Функция ПолучитьДанныеДляПечатнойФормыТТН(МассивОбъектов) Экспорт
	
	ВалютаРегламентированногоУчета = дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", "Артикул");
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("СтавкаНДС",						дт_ОбщегоНазначенияВызовСервераПовтИсп.СтавкаНДСПоУмолчанию());	
	Запрос.УстановитьПараметр("ДатаНачалаИспользованияОсновнойСтавки", дт_ОбщегоНазначенияВызовСервераПовтИсп.ДатаНачалаИспользованияОсновнойСтавкиНДС());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Ссылка.Дата КАК ДатаДокумента,
	|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
	|	ЛОЖЬ КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ТаблицаДокумента.Ссылка.Проведен, ЛОЖЬ) КАК Проведен,
	|	ИСТИНА КАК СуммаВключаетНДС,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Товар КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Товар.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ТаблицаДокумента.Товар.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.Товар.НаименованиеПолное КАК СТРОКА(200))
	|	КОНЕЦ КАК ТоварНаименование,
	|	ТаблицаДокумента.Товар.Код КАК ТоварКод,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ""Артикул""
	|			ТОГДА ТаблицаДокумента.Товар.Артикул
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Артикул,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Количество КАК КоличествоМест,
	|	""шт."" КАК БазоваяЕдиницаНаименование,
	|	648 КАК БазоваяЕдиницаКодПоОКЕИ,
	|	""шт."" КАК ВидУпаковки,
	|	1 КАК Коэффициент,
	|	1 КАК КоличествоВОдномМесте,
	|	ТаблицаДокумента.Товар.РекомендованаяЦена КАК Цена,
	|	ТаблицаДокумента.Товар.РекомендованаяЦена * ТаблицаДокумента.Количество КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Товар.РекомендованаяЦена * ТаблицаДокумента.Количество * &ТекстСтавкаНДС / (100 + &ТекстСтавкаНДС) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(СпрОрганизации.ЕстьУчетНДС, ИСТИНА)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара,
	|	1 КАК КоэффициентПерерасчета,
	|	ЛОЖЬ КАК Весовой
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организация КАК СпрОрганизации
	|		ПО ТаблицаДокумента.Ссылка.Организация = СпрОрганизации.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(РасчетыВУсловныхЕдиницах),
	|	МАКСИМУМ(Проведен),
	|	МАКСИМУМ(СуммаВключаетНДС)
	|ПО
	|	Ссылка";

	
	ТекстСтавкаНДС = 
	"ВЫБОР
	|	КОГДА НЕ ЕСТЬNULL(СпрОрганизации.ЕстьУчетНДС, ИСТИНА)
	|		ТОГДА 0
	|	КОГДА ТаблицаДокумента.Ссылка.Дата < &ДатаНачалаИспользованияОсновнойСтавки
	|		ТОГДА 18
	|		ИНАЧЕ &СтавкаНДС
	|	КОНЕЦ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СтавкаНДС", ТекстСтавкаНДС); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстСтавкаНДС", ТекстСтавкаНДС); 
	
	РезультатЗапросаТЧ = Запрос.Выполнить();
	ВыборкаПоРегистраторам = РезультатЗапросаТЧ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОписаниеТиповЧисло15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	
	ТаблицаПоТоварам = Новый ТаблицаЗначений;
	КолонкиЗапроса = РезультатЗапросаТЧ.Колонки;
	Для Каждого Колонка Из КолонкиЗапроса Цикл
		ТаблицаПоТоварам.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
	КонецЦикла;
	ТаблицаПоТоварам.Колонки.Добавить("СуммаБезНДС", 				ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СуммаРублевая", 				ОписаниеТиповЧисло15_2);
	
	ТаблицаПоТоварамДоп  = ТаблицаПоТоварам.СкопироватьКолонки();
	
	Пока ВыборкаПоРегистраторам.Следующий() Цикл 
		
		ВыборкаСтрок = ВыборкаПоРегистраторам.Выбрать();
		ТаблицаПоТоварамДоп.Очистить();
		
		ТаблицаПоТоварамДоп = ПодготовитьТаблицуДокументаДляПечати(ВыборкаСтрок, ТаблицаПоТоварамДоп);
	
		// Копируем в общую таблицу
		Для Каждого СтрокаТовар Из ТаблицаПоТоварамДоп Цикл
			НоваяСтрока = ТаблицаПоТоварам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовар);
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТаблицаПоТоварам", ТаблицаПоТоварам);
	
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыТТН();
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[3];
	
	СтруктураДанныхДляПечати 	= Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции


#КонецОбласти 



#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли