
&НаКлиенте
Перем Кэш;

&НаСервере
Функция ЗапуститьПолучениеЗвонковНаСервере()
	
	Если НЕ ПолучитьФункциональнуюОпцию("дт_ИспользоватьИнтеграциюМоиЗвонки") 
		ИЛИ НЕ  ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Возврат Истина;
		
	КонецЕсли;	
	
	Если НЕ ПараметрыДлительнойОперации.Идентификатор = Неопределено Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ПараметрыДлительнойОперации.Идентификатор);
	КонецЕсли;
	
	
	ПараметрыДлительнойОперации.Идентификатор   = Неопределено;
	ПараметрыДлительнойОперации.Завершено       = Истина;
	ПараметрыДлительнойОперации.АдресРезультата = Неопределено;
	ПараметрыДлительнойОперации.Ошибка          = Неопределено;
	
	//ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");
	
	
	ПараметрыМетода = Новый Структура;
	//ПараметрыМетода.Вставить("Ссылка", Объект.Ссылка);
	
	НаименованиеМетода = НСтр("ru = 'Заполнение списка звонков'");
	
	Попытка
		
		РезультатВыполнения = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		УникальныйИдентификатор,
		"дт_МоиЗвонки.ЗапуститьПолучениеТаблицыЗвонков",
		ПараметрыМетода,
		НаименованиеМетода);
		
		
	Исключение
		
		ПараметрыДлительнойОперации.Ошибка = ОписаниеОшибки();
		
		Возврат Ложь;
	КонецПопытки;
	
	
	ПараметрыДлительнойОперации.Идентификатор   = РезультатВыполнения.ИдентификаторЗадания;
	ПараметрыДлительнойОперации.Завершено       = РезультатВыполнения.ЗаданиеВыполнено;
	ПараметрыДлительнойОперации.АдресРезультата = РезультатВыполнения.АдресХранилища;
	
	Возврат РезультатВыполнения.ЗаданиеВыполнено;
	
КонецФункции


&НаКлиенте
Процедура ЗагрузитьПолученныеЗвонки()
	
	ЗагрузитьПолученныеЗвонкиСервер();
	ПоказатьОповещениеПользователя("Список звонков получен");
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПолученныеЗвонкиСервер()
	
	ТаблицаЗвонки.Очистить();
	
	Если ПараметрыДлительнойОперации.АдресРезультата = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	РезультатВыполнения = ПолучитьИзВременногоХранилища(ПараметрыДлительнойОперации.АдресРезультата);
	
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(РезультатВыполнения) = Тип("Структура") Тогда
		
		ТаблицаРезультат = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатВыполнения, "ТаблицаРезультат");
		Если ТаблицаРезультат <> Неопределено Тогда
			
			Сч = 0;
			ТаблицаЗвонки.Загрузить(ТаблицаРезультат);
			Пока (Сч < ТаблицаЗвонки.Количество()) Цикл 
				Строка = ТаблицаЗвонки.Получить(Сч);
				Если Строка.Дата < НачалоДня(Объект.Дата) или Строка.Дата > объект.ДатаИзмененияСостояния тогда
					ТаблицаЗвонки.Удалить(Сч);
					
					
				Иначе
					Сч = Сч+1;
				КонецЕсли;
			КонецЦикла;
			
			ТаблицаЗвонки.Сортировать("Дата Убыв");
		КонецЕсли;
		
	КонецЕсли;
	
	//	Если НЕ ПустаяСтрока(РезультатВыполнения.ТекстОшибки) Тогда
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатВыполнения.ТекстОшибки);
	//	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПрослушатьЗаписьЗвонка(Команда)
	Если Элементы.ТаблицаЗвонки.ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если Кэш = Неопределено Тогда
		Кэш = Новый Структура();
		Кэш.Вставить("ФайлыЗвонков", Новый Соответствие());
	КонецЕсли;
	
	СсылкаНаФайл = Элементы.ТаблицаЗвонки.ТекущиеДанные.ЗаписьURL;
	СсылкаНаФайлЛокальная = Кэш.ФайлыЗвонков.Получить(СсылкаНаФайл);
	
	Если СсылкаНаФайлЛокальная = Неопределено Тогда
		
		СсылкаНаФайлЛокальная = дт_МоиЗвонкиКлиент.ПолучитьФайлЗаписи(СсылкаНаФайл);
		Если СсылкаНаФайлЛокальная = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		Кэш.ФайлыЗвонков.Вставить(СсылкаНаФайл, СсылкаНаФайлЛокальная);
		
	КонецЕсли;
	дт_МоиЗвонкиКлиент.ПрослушатьФайл(СсылкаНаФайлЛокальная);	  
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ОжиданиеДлительнойОперации()
	
	// Обновим статус
	Состояние = СостояниеФоновогоЗадания();
	Если Не ПустаяСтрока(Состояние.Ошибка) Тогда
		// Завершено с ошибкой, сообщим и вернемся на первую страницу.
		//Элементы.ШагиЗагрузки.ТекущаяСтраница = Элементы.ВыборРегионовЗагрузки;
		//Элементы.АвторизацияНаСайтеПоддержкиПользователей.Видимость = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Состояние.Ошибка);
		Возврат;
		
	ИначеЕсли Состояние.Завершено Тогда
		//ПодтверждениеЗакрытияФормы = Истина;
		ЗагрузитьПолученныеЗвонки();
		
		Возврат;
		
	КонецЕсли;
	
	// Процесс продолжается
	Если ТипЗнч(Состояние.Прогресс) = Тип("Структура") Тогда
		
		ТекстПрогресса = Состояние.Прогресс.Текст;
		ИндикаторПрогресса = Состояние.Прогресс.Процент;
		
	КонецЕсли;
	ПодключитьОбработчикОжидания("Подключаемый_ОжиданиеДлительнойОперации", ПараметрыДлительнойОперации.ИнтервалОжидания, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрерватьФоновоеЗадание()
	
	Если ПараметрыДлительнойОперации.Идентификатор <> Неопределено Тогда
		
		ПрерватьФоновоеЗаданиеСервер(ПараметрыДлительнойОперации.Идентификатор);
		ПараметрыДлительнойОперации.Идентификатор = Неопределено;
		
	КонецЕсли;
	
	ОтключитьОбработчикОжидания("Подключаемый_ОжиданиеДлительнойОперации");
	
	//УстановитьВидимость(Ложь);
	
КонецПроцедуры // ПрерватьФоновоеЗадание()


&НаСервереБезКонтекста
Процедура ПрерватьФоновоеЗаданиеСервер(Знач Идентификатор)
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(Идентификатор);
	
КонецПроцедуры

&НаСервере
Функция СостояниеФоновогоЗадания()
	Результат = Новый Структура("Прогресс, Завершено, Ошибка, ПодробноеПредставлениеОшибки");
	
	Результат.Ошибка = "";
	Если ПараметрыДлительнойОперации.Идентификатор = Неопределено Тогда
		Результат.Завершено = Истина;
		Результат.Прогресс  = Неопределено;
		Результат.ПодробноеПредставлениеОшибки = ПараметрыДлительнойОперации.ПодробноеПредставлениеОшибки;
		Результат.Ошибка                       = ПараметрыДлительнойОперации.Ошибка;
	Иначе
		Попытка
			Результат.Завершено = ДлительныеОперации.ЗаданиеВыполнено(ПараметрыДлительнойОперации.Идентификатор);
			Результат.Прогресс  = ДлительныеОперации.ПрочитатьПрогресс(ПараметрыДлительнойОперации.Идентификатор);
		Исключение
			Информация = ИнформацияОбОшибке();
			Результат.ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(Информация);
			Результат.Ошибка                       = КраткоеПредставлениеОшибки(Информация);
		КонецПопытки
	КонецЕсли;
	
	Возврат Результат;
КонецФункции
	
	
&НаКлиенте
Процедура Заполнить(Команда)
			ЗаданиеВыполнялосьРанее = ЗначениеЗаполнено(ПараметрыДлительнойОперации.Идентификатор);
		
		Если ЗаданиеВыполнялосьРанее  Тогда
			Возврат
		КонецЕсли;
		
		ЗаданиеВыполнено = ЗапуститьПолучениеЗвонковНаСервере();
		
		Если НЕ ЗаданиеВыполнено Тогда
			ПоказатьОповещениеПользователя("Получение списка звонков...");
			ПодключитьОбработчикОжидания("Подключаемый_ОжиданиеДлительнойОперации", 0.1, Истина);
		Иначе
			
			ЗагрузитьПолученныеЗвонки();
			
		КонецЕсли;
		//	ЗаполнитьЗвонки();

КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПараметрыДлительнойОперации = Новый Структура("Завершено, АдресРезультата, Идентификатор, Ошибка, ПодробноеПредставлениеОшибки");
	
	ПараметрыДлительнойОперации.Вставить("ИнтервалОжидания", 5);

КонецПроцедуры

