#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс



#КонецОбласти

#Область ОбработчикиСобытий


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	
	Если Не ЗначениеЗаполнено(ВалютаНачальная) 
		И ЗначениеЗаполнено(Откуда) Тогда
		ВалютаНачальная = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Откуда, "Валюта");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВалютаКонечная) 
		И ЗначениеЗаполнено(Куда) Тогда
		ВалютаКонечная = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Куда, "Валюта");
	КонецЕсли;
	
		///+ГомзМА 28.08.2023
	Если Ответственный = Справочники.Пользователи.ПустаяСсылка() Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	///-ГомзМА 28.08.2023
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаРасход") Тогда
		
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Док.СуммаДокумента КАК Сумма,
			|	Док.Комментарий КАК Комментарий,
			|	Док.Ссылка КАК ЗаявкаНаРасход,
			|	Док.Счет КАК Откуда
			|ИЗ
			|	Документ.ЗаявкаНаРасход КАК Док
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
			|		ПО Сотрудники.Ссылка = ВЫРАЗИТЬ(Док.Получатель КАК Справочник.Сотрудники)
			|ГДЕ
			|	Док.Ссылка = &Ссылка";
		
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Шапка = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РезультатЗапроса.Выгрузить()[0]);
		
		ЗаполнениеДокументов.Заполнить(ЭтотОбъект, Шапка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнениеДокументов.ЗаполнитьПоСтруктуре(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект);

КонецПроцедуры



Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр Баланс Расход
	Движения.Баланс.Записывать = Истина;
	Движение = Движения.Баланс.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Измерение1 = Откуда;
	Движение.Баланс = Сумма;

	// регистр Баланс Приход
	Движения.Баланс.Записывать = Истина;
	Движение = Движения.Баланс.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Измерение1 = Куда;
	Движение.Баланс = ?(ВалютаНачальная = ВалютаКонечная, Сумма, СуммаКонечная);
	
	з = новый запрос;
	з.Текст = "ВЫБРАТЬ
	          |	СУММА(БалансОстатки.БалансОстаток) КАК сум
	          |ИЗ
	          |	РегистрНакопления.Баланс.Остатки КАК БалансОстатки
	          |ГДЕ
	          |	БалансОстатки.Измерение1 = &Измерение1";
	з.УстановитьПараметр("Измерение1",Откуда);
	р = з.Выполнить().Выгрузить().Итог("сум");
	Если (р-Сумма) < 0 Тогда
		Сообщить("Невозможно провести так как баланс на счете "+Откуда.Наименование+" будет отрицательным");
		Отказ = Истина;
	КонецЕсли;
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли


