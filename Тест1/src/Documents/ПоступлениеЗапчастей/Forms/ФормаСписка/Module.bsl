
&НаКлиенте
Процедура ПродажиПоКатегориям(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Список1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	#Если НЕ ВебКлиент Тогда
		ОткрытьЗначение(ВыбраннаяСтрока);
	#КонецЕсли	
		
КонецПроцедуры

&НаКлиенте
Процедура брндПриИзменении(Элемент)
	ИзмБрэнд();
КонецПроцедуры

&НаСервере
Процедура ИзмБрэнд()
	Если брнд = Справочники.Машины.ПустаяСсылка() Тогда
		запр = "ВЫБРАТЬ
		       |	ДокументПоступлениеЗапчастей.Ссылка,
		       |	ДокументПоступлениеЗапчастей.ВерсияДанных,
		       |	ДокументПоступлениеЗапчастей.ПометкаУдаления,
		       |	ДокументПоступлениеЗапчастей.Номер,
		       |	ДокументПоступлениеЗапчастей.Дата,
		       |	ДокументПоступлениеЗапчастей.Проведен,
		       |	ДокументПоступлениеЗапчастей.Машина,
		       |	ДокументПоступлениеЗапчастей.Название,
		       |	ДокументПоступлениеЗапчастей.NetZadka,
		       |	ДокументПоступлениеЗапчастей.Новые,
		       |	ДокументПоступлениеЗапчастей.Таблица.(
		       |		Ссылка,
		       |		НомерСтроки,
		       |		Товар,
		       |		Колво,
		       |		Цена,
		       |		Место,
		       |		Комментарий,
		       |		Ответственный,
		       |		остаток
		       |	),
		       |	ДокументПоступлениеЗапчастей.МоментВремени
		       |ИЗ
		       |	Документ.ПоступлениеЗапчастей КАК ДокументПоступлениеЗапчастей
		       |ГДЕ
		       |	ДокументПоступлениеЗапчастей.Новые = ЛОЖЬ";
		Список.ТекстЗапроса=запр;

	Иначе
		запр = "ВЫБРАТЬ
		       |	ДокументПоступлениеЗапчастей.Ссылка,
		       |	ДокументПоступлениеЗапчастей.ВерсияДанных,
		       |	ДокументПоступлениеЗапчастей.ПометкаУдаления,
		       |	ДокументПоступлениеЗапчастей.Номер,
		       |	ДокументПоступлениеЗапчастей.Дата,
		       |	ДокументПоступлениеЗапчастей.Проведен,
		       |	ДокументПоступлениеЗапчастей.Машина,
		       |	ДокументПоступлениеЗапчастей.Название,
		       |	ДокументПоступлениеЗапчастей.NetZadka,
		       |	ДокументПоступлениеЗапчастей.Новые,
		       |	ДокументПоступлениеЗапчастей.Таблица.(
		       |		Ссылка,
		       |		НомерСтроки,
		       |		Товар,
		       |		Колво,
		       |		Цена,
		       |		Место,
		       |		Комментарий,
		       |		Ответственный,
		       |		остаток
		       |	),
		       |	ДокументПоступлениеЗапчастей.МоментВремени
		       |ИЗ
		       |	Документ.ПоступлениеЗапчастей КАК ДокументПоступлениеЗапчастей
		       |ГДЕ
		       |	ДокументПоступлениеЗапчастей.Новые = ЛОЖЬ
		       |	И ДокументПоступлениеЗапчастей.Машина = &брнд";
		Список.ТекстЗапроса=запр;
		Список.Параметры.УстановитьЗначениеПараметра("брнд",брнд);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура Очистить(Команда)
	// Вставить содержимое обработчика.
	очистка();
КонецПроцедуры 

&НаСервере
Процедура очистка()
	брнд = Справочники.Бренд.ПустаяСсылка();
	запр = "ВЫБРАТЬ
		       |	ДокументПоступлениеЗапчастей.Ссылка,
		       |	ДокументПоступлениеЗапчастей.ВерсияДанных,
		       |	ДокументПоступлениеЗапчастей.ПометкаУдаления,
		       |	ДокументПоступлениеЗапчастей.Номер,
		       |	ДокументПоступлениеЗапчастей.Дата,
		       |	ДокументПоступлениеЗапчастей.Проведен,
		       |	ДокументПоступлениеЗапчастей.Машина,
		       |	ДокументПоступлениеЗапчастей.Название,
		       |	ДокументПоступлениеЗапчастей.NetZadka,
		       |	ДокументПоступлениеЗапчастей.Новые,
		       |	ДокументПоступлениеЗапчастей.Таблица.(
		       |		Ссылка,
		       |		НомерСтроки,
		       |		Товар,
		       |		Колво,
		       |		Цена,
		       |		Место,
		       |		Комментарий,
		       |		Ответственный,
		       |		остаток
		       |	),
		       |	ДокументПоступлениеЗапчастей.МоментВремени
		       |ИЗ
		       |	Документ.ПоступлениеЗапчастей КАК ДокументПоступлениеЗапчастей
		       |ГДЕ
		       |	ДокументПоступлениеЗапчастей.Новые = ЛОЖЬ";
		Список.ТекстЗапроса=запр;
КонецПроцедуры


&НаКлиенте
Процедура Очистить2(Команда)
	// Вставить содержимое обработчика.
	очистка2();
КонецПроцедуры
	
 &НаСервере
Процедура ИзмБрэнд2()
	Если брнд2 = Справочники.Бренд.ПустаяСсылка() Тогда
		запр = "ВЫБРАТЬ
		       |	ДокументПоступлениеЗапчастей.Ссылка,
		       |	ДокументПоступлениеЗапчастей.ВерсияДанных,
		       |	ДокументПоступлениеЗапчастей.ПометкаУдаления,
		       |	ДокументПоступлениеЗапчастей.Номер,
		       |	ДокументПоступлениеЗапчастей.Дата,
		       |	ДокументПоступлениеЗапчастей.Проведен,
		       |	ДокументПоступлениеЗапчастей.Машина,
		       |	ДокументПоступлениеЗапчастей.Название,
		       |	ДокументПоступлениеЗапчастей.NetZadka,
		       |	ДокументПоступлениеЗапчастей.Новые,
		       |	ДокументПоступлениеЗапчастей.Таблица.(
		       |		Ссылка,
		       |		НомерСтроки,
		       |		Товар,
		       |		Колво,
		       |		Цена,
		       |		Место,
		       |		Комментарий,
		       |		Ответственный,
		       |		остаток
		       |	),
		       |	ДокументПоступлениеЗапчастей.МоментВремени,
		       |	ДокументПоступлениеЗапчастей.НомерНакладной,
		       |	ДокументПоступлениеЗапчастей.НомерСчетФактуры,
		       |	ДокументПоступлениеЗапчастей.ДатаНакладной,
		       |	ДокументПоступлениеЗапчастей.СуммаНакладной,
		       |	ДокументПоступлениеЗапчастей.ДатаСчетФактура
		       |ИЗ
		       |	Документ.ПоступлениеЗапчастей КАК ДокументПоступлениеЗапчастей
		       |ГДЕ
		       |	ДокументПоступлениеЗапчастей.Новые = ИСТИНА";
		Список.ТекстЗапроса=запр;

	Иначе
		запр = "ВЫБРАТЬ
		       |	ДокументПоступлениеЗапчастей.Ссылка,
		       |	ДокументПоступлениеЗапчастей.ВерсияДанных,
		       |	ДокументПоступлениеЗапчастей.ПометкаУдаления,
		       |	ДокументПоступлениеЗапчастей.Номер,
		       |	ДокументПоступлениеЗапчастей.Дата,
		       |	ДокументПоступлениеЗапчастей.Проведен,
		       |	ДокументПоступлениеЗапчастей.Машина,
		       |	ДокументПоступлениеЗапчастей.Название,
		       |	ДокументПоступлениеЗапчастей.NetZadka,
		       |	ДокументПоступлениеЗапчастей.Новые,
		       |	ДокументПоступлениеЗапчастей.Таблица.(
		       |		Ссылка,
		       |		НомерСтроки,
		       |		Товар,
		       |		Колво,
		       |		Цена,
		       |		Место,
		       |		Комментарий,
		       |		Ответственный,
		       |		остаток
		       |	),
		       |	ДокументПоступлениеЗапчастей.МоментВремени,
		       |	ДокументПоступлениеЗапчастей.НомерНакладной,
		       |	ДокументПоступлениеЗапчастей.НомерСчетФактуры,
		       |	ДокументПоступлениеЗапчастей.ДатаНакладной,
		       |	ДокументПоступлениеЗапчастей.СуммаНакладной,
		       |	ДокументПоступлениеЗапчастей.ДатаСчетФактура
		       |ИЗ
		       |	Документ.ПоступлениеЗапчастей КАК ДокументПоступлениеЗапчастей
		       |ГДЕ
		       |	ДокументПоступлениеЗапчастей.Новые = ИСТИНА
		       |	И ДокументПоступлениеЗапчастей.Таблица.Товар.Бренд = &брнд";
		СписокПоступленияНовые.ТекстЗапроса=запр;
		СписокПоступленияНовые.Параметры.УстановитьЗначениеПараметра("брнд",брнд2);
	КонецЕсли;
КонецПроцедуры

 &НаСервере
Процедура очистка2()
	брнд2 = Справочники.Бренд.ПустаяСсылка();
	запр = "ВЫБРАТЬ
		       |	ДокументПоступлениеЗапчастей.Ссылка,
		       |	ДокументПоступлениеЗапчастей.ВерсияДанных,
		       |	ДокументПоступлениеЗапчастей.ПометкаУдаления,
		       |	ДокументПоступлениеЗапчастей.Номер,
		       |	ДокументПоступлениеЗапчастей.Дата,
		       |	ДокументПоступлениеЗапчастей.Проведен,
		       |	ДокументПоступлениеЗапчастей.Машина,
		       |	ДокументПоступлениеЗапчастей.Название,
		       |	ДокументПоступлениеЗапчастей.NetZadka,
		       |	ДокументПоступлениеЗапчастей.Новые,
		       |	ДокументПоступлениеЗапчастей.Таблица.(
		       |		Ссылка,
		       |		НомерСтроки,
		       |		Товар,
		       |		Колво,
		       |		Цена,
		       |		Место,
		       |		Комментарий,
		       |		Ответственный,
		       |		остаток
		       |	),
		       |	ДокументПоступлениеЗапчастей.МоментВремени,
		       |	ДокументПоступлениеЗапчастей.НомерНакладной,
		       |	ДокументПоступлениеЗапчастей.НомерСчетФактуры,
		       |	ДокументПоступлениеЗапчастей.ДатаНакладной,
		       |	ДокументПоступлениеЗапчастей.СуммаНакладной,
		       |	ДокументПоступлениеЗапчастей.ДатаСчетФактура
		       |ИЗ
		       |	Документ.ПоступлениеЗапчастей КАК ДокументПоступлениеЗапчастей
		       |ГДЕ
		       |	ДокументПоступлениеЗапчастей.Новые = ИСТИНА";
		СписокПоступленияНовые.ТекстЗапроса=запр;
КонецПроцедуры


&НаКлиенте
Процедура брнд2ПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ИзмБрэнд2();
КонецПроцедуры


&НаКлиенте
Процедура СоздатьНовый(Команда)
	// Вставить содержимое обработчика.
	ФормаСписка = ПолучитьФорму("Документ.ПоступлениеЗапчастей.ФормаОбъекта");
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	ФормаСписка.Объект.Новые=Истина;
	Если Не ФормаСписка.Открыта() Тогда
    	ФормаСписка.ОткрытьМодально();
	КонецЕсли;  
КонецПроцедуры


&НаКлиенте
Процедура Команда1(Команда)
	// Вставить содержимое обработчика.
	П();
КонецПроцедуры

&НаСервере
Процедура П()
	выборка = Документы.ПоступлениеЗапчастей.Выбрать();
	Пока выборка.Следующий() Цикл
		док = выборка.ПолучитьОбъект();
		для каждого стр из док.Таблица Цикл
			стр.Наценка = стр.цена / стр.Товар.РекомендованаяЦена;
		КонецЦикла;
		док.Записать();
	КонецЦикла
КонецПроцедуры


&НаКлиенте
Процедура ПосчитатьВсеоСтрок(Команда)
	// Вставить содержимое обработчика.
	ПВС();
	Сообщить(ВсегоСтрок);
КонецПроцедуры

&НаСервере
Процедура ПВС()
	запрос = новый запрос();
	запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеЗапчастейТаблица.Ссылка,
	               |	ПоступлениеЗапчастейТаблица.НомерСтроки,
	               |	ПоступлениеЗапчастейТаблица.Товар,
	               |	ПоступлениеЗапчастейТаблица.Колво,
	               |	ПоступлениеЗапчастейТаблица.Цена,
	               |	ПоступлениеЗапчастейТаблица.Место,
	               |	ПоступлениеЗапчастейТаблица.Комментарий,
	               |	ПоступлениеЗапчастейТаблица.Ответственный,
	               |	ПоступлениеЗапчастейТаблица.остаток,
	               |	ПоступлениеЗапчастейТаблица.ЦенаПоступления,
	               |	ПоступлениеЗапчастейТаблица.ПроцентНаценки,
	               |	ПоступлениеЗапчастейТаблица.Реквизит1,
	               |	ПоступлениеЗапчастейТаблица.Код,
	               |	ПоступлениеЗапчастейТаблица.Наценка
	               |ИЗ
	               |	Документ.ПоступлениеЗапчастей.Таблица КАК ПоступлениеЗапчастейТаблица
	               |ГДЕ
	               |	ПоступлениеЗапчастейТаблица.Ссылка <> &Ссылка";
	запрос.УстановитьПараметр("Ссылка",Справочники.Номенклатура.ПустаяСсылка());
	ВсегоСтрок = запрос.Выполнить().Выгрузить().Количество();
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	// Вставить содержимое обработчика.
	тмп1();
КонецПроцедуры

&НаСервере
Процедура тмп1()
	з = новый запрос;
	з.Текст = "ВЫБРАТЬ
	          |	ПоступлениеЗапчастей.Ссылка
	          |ИЗ
	          |	Документ.ПоступлениеЗапчастей КАК ПоступлениеЗапчастей";
	рез = з.Выполнить().Выгрузить();
	ссыл = Справочники.Коофициенты.НайтиПоКоду("000000003");
	ссыл2 = Справочники.Коофициенты.НайтиПоКоду("000000004");
	для каждого ррр из рез Цикл
		док = ррр.Ссылка.ПолучитьОбъект();
		изм = Ложь;
		для каждого стр из док.Таблица цикл
			Если стр.Наценка.Пустая() или стр.Наценка = ссыл  Тогда
				стр.Наценка = ссыл2;
				изм = Истина;
			КонецЕсли;
		КонецЦикла;
		Сообщить(изм);
		Если изм = Истина Тогда
			док.Записать(РежимЗаписиДокумента.Запись);
			док.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, 
		"Новые", 
		Ложь, // Значение отбора
		ВидСравненияКомпоновкиДанных.Равно,,Истина);
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, 
		"Перекуп", 
		Ложь, // Значение отбора
		ВидСравненияКомпоновкиДанных.Равно,,Истина);
		
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	//	СписокПоступленияНовые, 
	//	"Новые", 
	//	Истина, // Значение отбора
	//	ВидСравненияКомпоновкиДанных.Равно,,Истина);
	//	
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	//	СписокПоступленияНовые, 
	//	"Перекуп", 
	//	Истина, // Значение отбора
	//	ВидСравненияКомпоновкиДанных.Равно,,Истина);

	
	
	Элементы.ГруппаРазборка.Видимость = ПолучитьФункциональнуюОпцию("дт_ИспользоватьРазборку");
	УправлениеФормой(ЭтаФорма);
	
	РассчётУчтённыхЗапчастей();
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОстаткиБалансИзменение" 
		ИЛИ ИмяСобытия = "ОстаткиИзменение" Тогда
		
		Элементы.СписокПоступленияНовые.Обновить();
		Если Элементы.ГруппаРазборка.Видимость Тогда
			Элементы.Список.Обновить();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	Оповестить("ОстаткиИзменение");
КонецПроцедуры


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
    СписокТовары.Параметры.УстановитьЗначениеПараметра("Поступление",Элементы.Список.ТекущиеДанные.ссылка);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПоступленияНовыеПриАктивизацииСтроки(Элемент)
    СписокТовары.Параметры.УстановитьЗначениеПараметра("Поступление",Элементы.Список.ТекущиеДанные.ссылка);

	ОбновитьСуммуИтого(Элемент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура КомандаОплачено(Команда)
	
	ИзменитьПризнакОплаченоКлиент(Элементы.СписокПоступленияНовые, ПредопределенноеЗначение("Перечисление.СостоянияВзаиморасчетов.Оплачено"));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНеОплачено(Команда)
	
	ИзменитьПризнакОплаченоКлиент(Элементы.СписокПоступленияНовые, ПредопределенноеЗначение("Перечисление.СостоянияВзаиморасчетов.Долг"));
	
КонецПроцедуры


&НаКлиенте
Процедура ИзменитьПризнакОплаченоКлиент(Источник, СостояниеУстановить)

	Отказ = Ложь;
	ДокументыКИзменению = Новый Массив();
	
	Для каждого СтрокаСписка Из Источник.ВыделенныеСтроки Цикл
		
		ТекСтрока = Источник.ДанныеСтроки(СтрокаСписка);
		Если ТекСтрока.СостояниеРасчетов <> СостояниеУстановить Тогда
			ДокументыКИзменению.Добавить(СтрокаСписка);	
		КонецЕсли;	
		
	КонецЦикла;
	
	Если ДокументыКИзменению.Количество() <> 0 Тогда
		
		ИзменитьПризнакОплачено(ДокументыКИзменению, СостояниеУстановить, Отказ);
		Источник.Обновить();
		
	КонецЕсли;
	

КонецПроцедуры // ИзменитьПризнакОплаченоКлиент()


#КонецОбласти

#Область Служебные

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Список = Форма.Список;
	
	
	Если НЕ Элементы.ГруппаРазборка.Видимость Тогда
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	

КонецПроцедуры // УправлениеФормой()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура УстановитьУсловноеОформление()

	ЦветЗадолженность = WebЦвета.СветлоРозовый;	

	// Состояние
	ЭлементУО = СписокПоступленияНовые.УсловноеОформление.Элементы.Добавить();
	
	//ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
	//"СуммаНакладной", ВидСравненияКомпоновкиДанных.Больше, Новый ПолеКомпоновкиДанных("СуммаОплачено"));
	//ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветЗадолженность);

	Если ПолучитьФункциональнуюОпцию("дт_ИспользоватьАвтосервис") Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
			"СостояниеРасчетов", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СостоянияВзаиморасчетов.Долг);
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветЗадолженность
		);
	Иначе
	
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
			"СуммаНакладной", ВидСравненияКомпоновкиДанных.Больше, Новый ПолеКомпоновкиДанных("СуммаОплачено"));
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветЗадолженность
		);
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьУсловноеОформление()

&НаСервере
Процедура ИзменитьПризнакОплачено(ДокументыКИзменению, СостояниеУстановить, Отказ = Ложь)
	
	Для каждого ДокументСсылка Из ДокументыКИзменению Цикл
	
		ДокОбъект = ДокументСсылка.ПолучитьОбъект();
		
		Попытка
			ДокОбъект.Заблокировать();
			ДокОбъект.СостояниеРасчетов = СостояниеУстановить;
			ДокОбъект.ОбменДанными.Загрузка = Истина;
			ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон("Не удалось изменить состояние расчетов %1. %2",
					ДокОбъект,
					ОписаниеОшибки()),
				,
				,
				,
				Отказ
			);
		КонецПопытки;
			
	
	КонецЦикла;

КонецПроцедуры // ИзменитьПризнакОплачено()

&НаКлиенте
Процедура ОбновитьСуммуИтого(Источник)

	СуммаИтого = дт_ОбщегоНазначенияВызовСервера.ПолучитьСуммуДокументов(Источник.ВыделенныеСтроки);	

КонецПроцедуры // ОбновитьСуммуИтого()
	
#КонецОбласти

Процедура РассчётУчтённыхЗапчастей()
	Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ПоступлениеЗапчастейТаблица.Колво) КАК Колво
	               |ИЗ
	               |	Документ.ПоступлениеЗапчастей.Таблица КАК ПоступлениеЗапчастейТаблица
	               |ГДЕ
	               |	ПоступлениеЗапчастейТаблица.Ссылка.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияПоступленияЗапчастей.Выполнено)
	               |	И НЕ ПоступлениеЗапчастейТаблица.Ссылка.Новые";
	ВсегоБУучтено = Запрос.Выполнить().Выбрать();
	ВсегоБУучтено.Следующий();
	КоличествоУчтеныхБУ = ВсегоБУучтено.Колво;
	
		Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ПоступлениеЗапчастейТаблица.Колво) КАК Колво
	               |ИЗ
	               |	Документ.ПоступлениеЗапчастей.Таблица КАК ПоступлениеЗапчастейТаблица
	               |ГДЕ
	               |	ПоступлениеЗапчастейТаблица.Ссылка.Новые";
	ВсегоНовучтено = Запрос.Выполнить().Выбрать();
	ВсегоНовучтено.Следующий();
	КоличествоУчтеныхНов = ВсегоНовучтено.Колво;

КонецПроцедуры

	
