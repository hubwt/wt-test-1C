#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение
Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	НомераТаблиц = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	НомераТаблиц = Новый Структура;

	Запрос.Текст =
		ТекстЗапросаПродажи(НомераТаблиц)
		+ ТекстЗапросаПоказанияОдометра(НомераТаблиц)
		+ ТекстЗапросаТопливоВБаках(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		Таблица =  Результат[НомерТаблицы.Значение].Выгрузить();
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Таблица);
	КонецЦикла;

	Возврат ПараметрыПроведения;

КонецФункции


Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Клиент КАК Клиент,
	|	Реквизиты.Состояние КАК Состояние,
	|	Реквизиты.Автомобиль КАК Автомобиль,
	|	Реквизиты.Ответственный КАК Ответственный,
	|	Реквизиты.Ставка КАК Ставка,
	|	Реквизиты.Расстояние КАК Расстояние,
	|	Реквизиты.СуммаДокумента КАК СуммаДокумента,
	|	Реквизиты.ТопливоРасходВсего КАК ТопливоРасходВсего,
	|	Реквизиты.ДатаНачала КАК ДатаНачала,
	|	Реквизиты.ДатаОкончания КАК ДатаОкончания,
	|	Реквизиты.ПоказанияОдометраНачало КАК ПоказанияОдометраНачало,
	|	Реквизиты.ПоказанияОдометраОкончание КАК ПоказанияОдометраОкончание
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ЗаказНаДоставку КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Ответственный КАК Ответственный,
	|	Реквизиты.Клиент КАК Клиент,
	|	Реквизиты.Состояние КАК Состояние,
	|	Реквизиты.Автомобиль КАК Автомобиль,
	|	Реквизиты.Ставка КАК Ставка,
	|	Реквизиты.Расстояние КАК Расстояние,
	|	Реквизиты.СуммаДокумента КАК СуммаДокумента,
	|	Реквизиты.ПоказанияОдометраОкончание КАК ПоказанияОдометраОкончание,
	|	Реквизиты.ТопливоРасходВсего КАК ТопливоРасходВсего
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()


Функция ТекстЗапросаТопливоВБаках(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаТопливоВБаках", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Автомобиль КАК Автомобиль,
	|	Реквизиты.ТопливоРасходВсего КАК Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказаНаДоставку.Выполнен)
	|	И Реквизиты.ТопливоРасходВсего <> 0";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

Функция ТекстЗапросаПродажи(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПродажи", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Ответственный КАК Менеджер,
	|	Реквизиты.Автомобиль КАК Автомобиль,
	|	Реквизиты.Расстояние КАК Количество,
	|	Реквизиты.Ставка КАК Цена,
	|	Реквизиты.СуммаДокумента КАК Сумма
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказаНаДоставку.Выполнен)";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

Функция ТекстЗапросаПоказанияОдометра(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПоказанияОдометра", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.ДатаНачала КАК Период,
	|	Реквизиты.Автомобиль КАК Автомобиль,
	|	Реквизиты.ПоказанияОдометраНачало КАК Показание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказаНаДоставку.Выполнен)
	|	И Реквизиты.ПоказанияОдометраНачало <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Реквизиты.ДатаОкончания,
	|	Реквизиты.Автомобиль,
	|	Реквизиты.ПоказанияОдометраОкончание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказаНаДоставку.Выполнен)
	|	И Реквизиты.ПоказанияОдометраОкончание <> 0";
	

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()


// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументОбъект, ПараметрыПроведения, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	
	//СтруктураВременныеТаблицы = ПараметрыПроведения.ТаблицаЗапланированныеОтгрузки;
	СтруктураВременныеТаблицы = ПараметрыПроведения.ДляПроведения.СтруктураВременныеТаблицы;
	
		
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДвиженияТовары.Автомобиль КАК Автомобиль,
	|	ВЫБОР
	|		КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДвиженияТовары.Количество
	|		ИНАЧЕ -ДвиженияТовары.Количество
	|	КОНЕЦ КАК КоличествоИзменение
	|ПОМЕСТИТЬ ВТ_ДвиженияТовары
	|ИЗ
	|	&ДвиженияТовары КАК ДвиженияТовары
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДвиженияТовары.Количество
	|			ИНАЧЕ -ДвиженияТовары.Количество
	|		КОНЕЦ < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияТовары.Автомобиль КАК Автомобиль,
	|	ДвиженияТовары.КоличествоИзменение КАК КоличествоИзменение,
	|	ТоварыОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	ВТ_ДвиженияТовары КАК ДвиженияТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТопливоВБаках.Остатки(&МоментКонтроля, ) КАК ТоварыОстатки
	|		ПО ДвиженияТовары.Автомобиль = ТоварыОстатки.Автомобиль
	|ГДЕ
	|	ЕСТЬNULL(ТоварыОстатки.КоличествоОстаток, 0) < 0";
	
	//Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	ТаблицаИсточник = ПараметрыПроведения.ТаблицыДляДвижений["ТаблицаТопливоВБаках"];
	Запрос.УстановитьПараметр("МоментКонтроля", ПараметрыПроведения.ДляПроведения.МоментКонтроля);
	Запрос.УстановитьПараметр("ДвиженияТовары", ТаблицаИсточник);
	
	РезультатЗапроса = Запрос.Выполнить();
	// Отрицательный остаток по счету
	Если НЕ РезультатЗапроса.Пустой() Тогда
		//ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Поле = "ТопливоРасходВсего";
			
			ТекстСообщения = СтрШаблон(
				"Количество топлива превышает остаток в баке %1. Нехватка: %2", 
				Выборка.Автомобиль,
				//Выборка.КоличествоИзменение, 
				-Выборка.Количество);
			
			
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект" , Отказ);
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры // ВыполнитьКонтроль()


#КонецОбласти 




#Область Печать
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Универсальный передаточный документ (УПД)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "УПД";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Не Пользователи.РолиДоступны("дт_ПечатьНепроведенныхДокументов");
	КомандаПечати.Порядок = 40;
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
		КомандаПечати, 
		"НомерУПД",
		"",
		ВидСравнения.НеРавно
	);
	
	
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//
	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказНаряд") Тогда
	//	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗаказНаряд", "Перемещение товаров", 
	//		ПечатьЗаказНаряд(МассивОбъектов, ОбъектыПечати),,"Документ.ЗаказНаряд.ПФ_MXL_ЗаказНаряд");
	//КонецЕсли;
	
	//ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
	//	КоллекцияПечатныхФорм,
	//	ОбъектыПечати,
	//	ПараметрыВывода);
	
КонецПроцедуры


Функция ПолучитьНаименование(ДанныеЗаполнения) Экспорт

	ФорматДаты = "ДФ='dd.MM.yyyy ""г.""'";
	Водитель = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеЗаполнения.Водитель);
	
	Наименование = "Услуги грузоперевозки ";
	Если НЕ ДанныеЗаполнения.БезДоговора Тогда
		Наименование = Наименование + СтрШаблон("по договору №%1 от %2 ", ДанныеЗаполнения.НомерДоговора, Формат(ДанныеЗаполнения.ДатаДоговора, ФорматДаты));
	КонецЕсли;	
	
	Наименование = Наименование + СтрШаблон("по маршруту от %1 по %2 %3 - %4, а/м %5 %6, водитель %7",
		Формат(ДанныеЗаполнения.ДатаНачала, ФорматДаты),
		Формат(ДанныеЗаполнения.ДатаОкончания, ФорматДаты),
		ДанныеЗаполнения.ПунктОтправления,
		ДанныеЗаполнения.ПунктНазначения,
		ДанныеЗаполнения.АвтомобильМодель,
		ДанныеЗаполнения.АвтомобильГосНомер,
		Водитель
	);
	
	Возврат Наименование;
	
КонецФункции // ПолучитьНаименование()


#Область Печать_УПД

Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// Заполним наименования услуг
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДанныхДокументов.Ссылка КАК Ссылка,
	|	ЗаказНаДоставку.ДатаНачала КАК ДатаНачала,
	|	ЗаказНаДоставку.ДатаОкончания КАК ДатаОкончания,
	|	ЗаказНаДоставку.Водитель КАК Водитель,
	|	ЗаказНаДоставку.Автомобиль КАК Автомобиль,
	|	ЗаказНаДоставку.Автомобиль.ГосНомер КАК АвтомобильГосНомер,
	|	ЗаказНаДоставку.Автомобиль.МаркаТС КАК АвтомобильМодель,
	|	ЗаказНаДоставку.ПунктОтправления КАК ПунктОтправления,
	|	ЗаказНаДоставку.ПунктНазначения КАК ПунктНазначения,
	|	ЗаказНаДоставку.БезДоговора КАК БезДоговора,
	|	ЗаказНаДоставку.ДоговорКонтрагента.НомерДоговора КАК НомерДоговора,
	|	ЗаказНаДоставку.ДоговорКонтрагента.ДатаДоговора КАК ДатаДоговора
	|ИЗ
	|	ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаДоставку КАК ЗаказНаДоставку
	|		ПО ТаблицаДанныхДокументов.Ссылка = ЗаказНаДоставку.Ссылка";
	
	ТаблицаНаименования = Запрос.Выполнить().Выгрузить();
	ТаблицаНаименования.Колонки.Добавить("НоменклатураНаименование", ОбщегоНазначения.ОписаниеТипаСтрока(200));
	
	Для каждого СтрокаТаблицы Из ТаблицаНаименования Цикл
	
		СтрокаТаблицы.НоменклатураНаименование = ПолучитьНаименование(СтрокаТаблицы);
	
	КонецЦикла;
	
	Запрос.Текст =
	 "ВЫБРАТЬ
	 |	Т.Ссылка КАК Ссылка,
	 |	Т.НоменклатураНаименование КАК НоменклатураНаименование
	 |ПОМЕСТИТЬ ВТ_НаименованияНоменклатуры
	 |ИЗ
	 |	&ТаблицаНаименования КАК Т";
	
	Запрос.УстановитьПараметр("ТаблицаНаименования", ТаблицаНаименования);
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	Запрос.УстановитьПараметр("ВключаяНомераГТД",               ПараметрыЗаполнения.ВключаяНомераГТД);
	Запрос.УстановитьПараметр("ПустаяГТД",                      Неопределено);
	Запрос.УстановитьПараметр("СтавкаНДС",						дт_ОбщегоНазначенияВызовСервераПовтИсп.СтавкаНДСПоУмолчанию());	
	Запрос.УстановитьПараметр("ДатаНачалаИспользованияОсновнойСтавки", дт_ОбщегоНазначенияВызовСервераПовтИсп.ДатаНачалаИспользованияОсновнойСтавкиНДС());
	Запрос.УстановитьПараметр("ВключатьУслуги", ПараметрыЗаполнения.ВключатьУслуги);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	1 КАК НомерСтроки,
	|	NULL КАК Номенклатура,
	|	1 КАК Количество,
	|	1 КАК КоличествоУпаковок,
	|	ТаблицаДокумента.СуммаДокумента КАК Цена,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(СпрОрганизации.ЕстьУчетНДС, ИСТИНА)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * &ТекстСтавкаНДС / (100 + &ТекстСтавкаНДС) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаДокумента - (ВЫРАЗИТЬ(ТаблицаДокумента.СуммаДокумента * &ТекстСтавкаНДС / (100 + &ТекстСтавкаНДС) КАК ЧИСЛО(15, 2))) КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаСНДС,
	|	""шт."" КАК ЕдиницаИзмеренияНаименование,
	|	""796"" КАК ЕдиницаИзмеренияКод,
	|	"""" КАК НаименованиеПостфикс,
	|	NULL КАК Партия,
	|	ИСТИНА КАК ЭтоСобственноеПроизводство
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ЗаказНаДоставку КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаДанныхДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организация КАК СпрОрганизации
	|		ПО ТаблицаДокумента.Ссылка.Организация = СпрОрганизации.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	"""" КАК КодТНВЭД,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
	|	"""" КАК Серия,
	|	&ПустаяГТД КАК НомерГТД,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Количество КАК КоличествоУпаковок,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаСНДС КАК СуммаСНДС,
	|	ЛОЖЬ КАК ЭтоТовар,
	|	ИСТИНА КАК ЭтоНеВозвратнаяТара,
	|	ЛОЖЬ КАК ВернутьМногооборотнуюТару,
	|	НЕОПРЕДЕЛЕНО КАК Упаковка,
	|	ТаблицаДокумента.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.НаименованиеПостфикс КАК НаименованиеПостфикс,
	|	"""" КАК НаименованиеПоставщика,
	|	ТаблицаДокумента.ЭтоСобственноеПроизводство КАК ЭтоСобственноеПроизводство,
	|	ВТ_НаименованияНоменклатуры.НоменклатураНаименование КАК НоменклатураНаименование,
	|	ВТ_НаименованияНоменклатуры.НоменклатураНаименование КАК НоменклатураНаименованиеКраткое,
	|	"""" КАК Код,
	|	"""" КАК Артикул
	|ПОМЕСТИТЬ РеализацияТоваровУслугТаблицаТоваров
	|ИЗ
	|	ВТ_Товары КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НаименованияНоменклатуры КАК ВТ_НаименованияНоменклатуры
	|		ПО ТаблицаДокумента.Ссылка = ВТ_НаименованияНоменклатуры.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Товары";
	
	
	ТекстСтавкаНДС = 
	"ВЫБОР
	|	КОГДА НЕ ЕСТЬNULL(СпрОрганизации.ЕстьУчетНДС, ИСТИНА)
	|		ТОГДА 0
	|	КОГДА ТаблицаДокумента.Ссылка.Дата < &ДатаНачалаИспользованияОсновнойСтавки
	|		ТОГДА 18
	|		ИНАЧЕ &СтавкаНДС
	|	КОНЕЦ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СтавкаНДС", ТекстСтавкаНДС); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстСтавкаНДС", ТекстСтавкаНДС); 
	
	Запрос.Выполнить();
	
КонецПроцедуры


Функция ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	&ВалютаРегл КАК Валюта,
	|	ДанныеДокументов.Организация КАК Организация
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ЗаказНаДоставку КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегл", дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Запрос.Выполнить();
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	ПараметрыЗаполнения.ВключаяНомераГТД = Истина;
	ПараметрыЗаполнения.ВключатьУслуги = Истина;
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	//ПродажиСервер.ПоместитьВременнуюТаблицуДанныхПоставщика(МенеджерВременныхТаблиц);
	//ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	1 КАК СтатусУПД,
	|	ДанныеДокумента.НомерУПД КАК Номер,
	|	ДанныеДокумента.ДатаУПД КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	"""" КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ДанныеДокумента.Клиент КАК Партнер,
	|	ДанныеДокумента.Клиент КАК Контрагент,
	|	ДанныеДокумента.Организация.ЕстьУчетНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.БукваВНакладной КАК Префикс,
	|	0 КАК ИндексПодразделения,
	|	ДанныеДокумента.Организация.ФИО КАК Руководитель,
	|	ДанныеДокумента.Организация.РуководительДолжность КАК ДолжностьРуководителя,
	|	ДанныеДокумента.Организация.ФИО КАК ГлавныйБухгалтер,
	|	ДанныеДокумента.Клиент КАК Грузополучатель,
	|	ДанныеДокумента.Организация КАК Грузоотправитель,
	|	ДанныеДокумента.Организация.КПП КАК КПППоставщика,
	|	ДанныеДокумента.Клиент.КПП КАК КПППокупателя,
	|	ДанныеДокумента.Клиент.Страна2 КАК СтранаРегистрации,
	|	ДанныеДокумента.ПунктНазначенияАдрес КАК АдресДоставки,
	|	ДанныеДокументов.Валюта КАК Валюта,
	|	ДанныеДокументов.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокументов.Валюта.Код КАК ВалютаКод,
	|	ЛОЖЬ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.БезДоговора
	|			ТОГДА """"
	|		ИНАЧЕ ДанныеДокумента.ДоговорКонтрагента
	|	КОНЕЦ КАК Основание,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ДанныеДокумента.БезДоговора
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|			ИНАЧЕ ДанныеДокумента.ДоговорКонтрагента.ДатаДоговора
	|		КОНЕЦ, ДАТАВРЕМЯ(1, 1, 1)) КАК ОснованиеДата,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ДанныеДокумента.БезДоговора
	|				ТОГДА """"
	|			ИНАЧЕ ДанныеДокумента.ДоговорКонтрагента.НомерДоговора
	|		КОНЕЦ, """") КАК ОснованиеНомер,
	|	"""" КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЛицо,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика
	|ИЗ
	|	Документ.ЗаказНаДоставку КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.НоменклатураНаименование КАК НоменклатураНаименование,
	|	ТаблицаТоваров.НоменклатураНаименованиеКраткое КАК НоменклатураНаименованиеКраткое,
	|	ТаблицаТоваров.Код КАК НоменклатураКод,
	|	ТаблицаТоваров.ЭтоСобственноеПроизводство КАК ЭтоСобственноеПроизводство,
	|	ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваров.Артикул КАК Артикул,
	|	ТаблицаТоваров.Упаковка КАК ЕдиницаИзмерения,
	|	ТаблицаТоваров.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаТоваров.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	"""" КАК ХарактеристикаНаименование,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	"""" КАК УпаковкаНаименование,
	|	"""" КАК ВидУпаковки,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	"""" КАК СтранаПроисхождения,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	1 КАК КоличествоМест,
	|	1 КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	0 КАК МассаНетто,
	|	0 КАК МассаБрутто,
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.НаименованиеПостфикс КАК НаименованиеПостфикс,
	|	НЕ ТаблицаТоваров.ЭтоНеВозвратнаяТара КАК ЭтоВозвратнаяТара
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаДоставку КАК Док
	|		ПО ТаблицаТоваров.Ссылка = Док.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	
	Запрос.УстановитьПараметр("ДатаНачалаНовыхФорм", ФормированиеПечатныхФорм.ДатаНачалаПримененияФормСАртикуломВНаименовании());
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	//Запрос.УстановитьПараметр("ВыводитьУслуги",                  ПараметрыПечати.ВыводитьУслуги);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияВеса",            "кг");
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[МассивРезультатов.Количество() - 2];
	РезультатПоТабличнойЧасти = МассивРезультатов[МассивРезультатов.Количество() - 1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

#КонецОбласти


#КонецОбласти 



#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли