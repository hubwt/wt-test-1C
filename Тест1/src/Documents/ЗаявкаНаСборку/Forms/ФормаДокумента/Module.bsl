
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	ЭтоПолноправныйПользователь = ДоступКУдалению();
	ПриЧтенииСозданииНаСервере();
	
	
КонецПроцедуры

&НаСервере
Функция ДоступКУдалению()
	Если Пользователи.ТекущийПользователь() = Справочники.Пользователи.НайтиПоНаименованию("Волобуев Дмитрий Владимирович") 
		Или Пользователи.ТекущийПользователь() = Справочники.Пользователи.НайтиПоНаименованию("Лазарев Антон Александрович")
		Или Пользователи.ТекущийПользователь() = Справочники.Пользователи.НайтиПоНаименованию("Миронов Антон Николаевич")
		Или Пользователи.ТекущийПользователь() = Справочники.Пользователи.НайтиПоНаименованию("Кузмичёв Иван Сергеевич")
		Или Пользователи.ЭтоПолноправныйПользователь() Тогда
		Возврат Истина;
	Иначе
		Возврат ложь;
	конецесли;
КонецФункции


&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ОбновитьТипОснования();
	ОбновитьДобавленныеКолонки();
	УстановитьУсловноеОформление();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры



&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Модифицированность Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры




&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьДобавленныеКолонки();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаВыбора" Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
			Для Индекс = 0 По ВыбранноеЗначение.Количество() - 1 Цикл
				
				НоваяСтрока = ?(Индекс = 0, Элементы.Товары.ТекущиеДанные, Объект.Товары.Добавить());
				НоваяСтрока.Номенклатура = ВыбранноеЗначение[Индекс];
				
				Элементы.Товары.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
				//@skip-check query-in-loop
				ТоварыНоменклатураПриИзменении(Элементы.ТоварыНоменклатура);
				
			КонецЦикла;
			
		Иначе
			Элементы.Товары.ТекущиеДанные.Номенклатура = ВыбранноеЗначение;	
			ТоварыНоменклатураПриИзменении(Элементы.ТоварыНоменклатура);
		КонецЕсли;
	ИначеЕсли ИсточникВыбора.ИмяФормы =  "Справочник.ПроектыРазработки.Форма.ФормаВыбора" Тогда
		
		Объект.Проект = ВыбранноеЗначение;
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.ГруппыМестХранения.Форма.ФормаВыбора" Тогда
		ЗаполнитьПоГруппеМестХранения_Завершение(ВыбранноеЗначение);	
	Иначе 
		Возврат			
	КонецЕсли;
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	ОбновитьТипОснования();
 
    Значение = Объект[Элемент.Имя];
    Объект[Элемент.Имя] = Элемент.ОграничениеТипа.ПривестиЗначение(Значение);
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура ОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОснованиеНачалоВыбораСервер();
	
КонецПроцедуры



&НаСервере
Процедура ОснованиеНачалоВыбораСервер()
	
	СвязиПараметров = Новый Массив();
	Если ЗначениеЗаполнено(Объект.Клиент)  Тогда
			
		СвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.Клиент", "Объект.Клиент"));
		
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		СвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.Склад", "Объект.Склад"));
		СвязиПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.СкладОтправитель", "Объект.Склад"));
	КонецЕсли;
	
	
	НовыеСвязи = Новый ФиксированныйМассив(СвязиПараметров);
	Элементы.Основание.СвязиПараметровВыбора = НовыеСвязи; 
	
КонецПроцедуры


&НаКлиенте
Процедура ОснованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Основание) Тогда
			
		ПоказатьВопрос(Новый ОписаниеОповещения("ОснованиеПриИзменении_Завершение", ЭтотОбъект),
			"Заполнить по основанию?", РежимДиалогаВопрос.ДаНет);
			
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеПриИзменении_Завершение(ДиалогОтвет, Парам2 = Неопределено) Экспорт
	
	ОснованиеПриИзмененииСервер(ДиалогОтвет = КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаСервере
Процедура ОснованиеПриИзмененииСервер(ЗаполнитьПоОснованию)
	
	Если ЗаполнитьПоОснованию Тогда
		ДокОбъект = РеквизитФормыВЗначение("Объект");
		ДокОбъект.Заполнить(Объект.Основание);
		ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
		//Прочитать();
		ПриЧтенииСозданииНаСервере();
	Иначе
			
		МетаданныеОснования = Объект.Основание.Метаданные();
		
		Если НЕ ЗначениеЗаполнено(Объект.Клиент) 
			И ОбщегоНазначения.ЕстьРеквизитОбъекта("Клиент", МетаданныеОснования) Тогда
			Объект.Клиент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Основание, "Клиент");
		КонецЕсли;
	
		Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Склад", МетаданныеОснования) Тогда
				Объект.Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Основание, "Склад");
			ИначеЕсли ОбщегоНазначения.ЕстьРеквизитОбъекта("СкладОтправитель", МетаданныеОснования) Тогда
				Объект.Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Основание, "СкладОтправитель");	
			КонецЕсли;	
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Клиенты = Новый Массив();
	Клиенты.Добавить(Объект.Клиент);
	Клиенты.Добавить(ПредопределенноеЗначение("Справочник.Клиенты.ПустаяСсылка"));
	
	ПараметрыОткрытия = Новый Структура("Отбор,РежимВыбора", Новый Структура("Клиент", Клиенты), Истина);
	ОткрытьФорму("Справочник.ПроектыРазработки.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);	

КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	ОбновитьДобавленныеКолонки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Товары

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	ПараметрыОткрытия.Вставить("ТекущаяСтрока", Элементы.Товары.ТекущиеДанные.Номенклатура);
	ПараметрыОткрытия.Вставить("Склад", Объект.Склад);
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры


&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	///+ГомзМА 29.03.2023
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ТекСтрока.Комментарий = ПолучитьКомментарийИзРегистра(ТекСтрока.Автомобиль, ТекСтрока.Номенклатура, ТекСтрока.Партия);
	///-ГомзМА 29.03.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ДанныеЗаполнения = Новый Структура("МестоХранения,Номенклатура,НомерСтроки");
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Элементы.Товары.ТекущиеДанные);
	
	ДанныеЗаполнения.Вставить("Дата",			Объект.Дата);
	ДанныеЗаполнения.Вставить("Склад",			Объект.Склад);
	//ДанныеЗаполнения.Вставить("Партия",			Неопределено);
	
	ТоварыНоменклатураПриИзмененииНаСервере(ДанныеЗаполнения);
	ЗаполнитьЗначенияСвойств(Элементы.Товары.ТекущиеДанные, ДанныеЗаполнения, , "Номенклатура");
	
	///+ГомзМА 29.03.2023
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ТекСтрока.Комментарий = ПолучитьКомментарийИзРегистра(ТекСтрока.Автомобиль, ТекСтрока.Номенклатура, ТекСтрока.Партия);
	///-ГомзМА 29.03.2023

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТоварыНоменклатураПриИзмененииНаСервере(ДанныеЗаполнения)

	ДанныеЗаполнения.МестоХранения = дт_АдресноеХранение.ПолучитьМестоХранения(ДанныеЗаполнения);
	
	//дт_ЦенообразованиеВызовСервера.НоменклатураПриИзменении(ДанныеЗаполнения, ПредопределенноеЗначение("Справочник.ТипыЦен.Рекомендованная"));
	
КонецПроцедуры



&НаКлиенте
Процедура ТоварыАвтомобильПриИзменении(Элемент)
	
	///+ГомзМА 29.03.2023
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ТекСтрока.Комментарий = ПолучитьКомментарийИзРегистра(ТекСтрока.Автомобиль, ТекСтрока.Номенклатура, ТекСтрока.Партия);
	///-ГомзМА 29.03.2023

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПартияПриИзменении(Элемент)
	
	///+ГомзМА 29.03.2023
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ТекСтрока.Комментарий = ПолучитьКомментарийИзРегистра(ТекСтрока.Автомобиль, ТекСтрока.Номенклатура, ТекСтрока.Партия);
	///-ГомзМА 29.03.2023

КонецПроцедуры




#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ОбновитьКоличество(Команда)
	ОбновитьДобавленныеКолонки();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГруппеМестХранения(Команда)
 	
 	ПараметрыОткрытия = Новый Структура();
 	  
	ОткрытьФорму("Справочник.ГруппыМестХранения.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор, , 
		Новый ОписаниеОповещения("ЗаполнитьПоГруппеМестХранения_Завершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГруппеМестХранения_Завершение(П1, П2 = Неопределено) Экспорт
	Если П1 <> Неопределено Тогда
		ТекстСообщения = ЗаполнитьПоГруппеМестХраненияНаСервере(П1);
		
		ПоказатьОповещениеПользователя(ТекстСообщения);
		
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПоГруппеМестХраненияНаСервере(ГруппаМестХранения)
	
	ОбъектКопия = Новый Структура("Склад,СкладТранзитный,ВидОперации");
	ЗаполнитьЗначенияСвойств(ОбъектКопия, Объект);
	дт_Склад.УстановитьТранзитныйСклад(ОбъектКопия);
	Объект.СкладТранзитный = ОбъектКопия.СкладТранзитный;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Стеллаж.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ втСтеллажи
		|ИЗ
		|	Справочник.Стеллаж КАК Стеллаж
		|ГДЕ
		|	Стеллаж.ГруппаМестХранения = &ГруппаМестХранения
		|	И Стеллаж.Владелец = &Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиСкладТЗ.Номенклатура КАК Номенклатура,
		|	ОстаткиСкладТЗ.Автомобиль КАК Автомобиль,
		|	ОстаткиСкладТЗ.Партия КАК Партия,
		|	ОстаткиСкладТЗ.Распоряжение КАК Распоряжение,
		|	ОстаткиСкладТЗ.КоличествоОстаток КАК Количество
		|ПОМЕСТИТЬ втОстатки
		|ИЗ
		|	РегистрНакопления.ТоварыВТранзитнойЗоне.Остатки(, Склад = &СкладТранзитный) КАК ОстаткиСкладТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МестаХраненияНоменклатуры.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ втНоменклатура
		|ИЗ
		|	РегистрСведений.дт_МестаХраненияНоменклатуры.СрезПоследних(
		|			,
		|			Склад = &Склад
		|				И Номенклатура В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						втОстатки.Номенклатура
		|					ИЗ
		|						втОстатки)) КАК МестаХраненияНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтеллажи КАК Стеллажи
		|		ПО МестаХраненияНоменклатуры.МестоХранения = Стеллажи.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОстатки.Номенклатура КАК Номенклатура,
		|	втОстатки.Автомобиль КАК Автомобиль,
		|	втОстатки.Партия КАК Партия,
		|	втОстатки.Распоряжение КАК Распоряжение,
		|	втОстатки.Количество КАК Количество,
		|	Комментарии.Комментарий КАК Комментарий
		|ИЗ
		|	втОстатки КАК втОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНоменклатура КАК втНоменклатура
		|		ПО втОстатки.Номенклатура = втНоменклатура.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Комментарии КАК Комментарии
		|		ПО втОстатки.Номенклатура = Комментарии.Товар
		|			И втОстатки.Автомобиль = Комментарии.Машина
		|			И втОстатки.Партия = Комментарии.индкод";
	
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("СкладТранзитный", Объект.СкладТранзитный);
	Запрос.УстановитьПараметр("ГруппаМестХранения", ГруппаМестХранения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "Нет данных для заполнения"
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.Товары.Добавить(), ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	ОбновитьДобавленныеКолонки();
	
	Возврат СтрШаблон("Добавлено: %1", ВыборкаДетальныеЗаписи.Количество());
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ТребуетсяДефектовка = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаявокНаСборку.ВозвратОтКлиента");
	ЕстьКлиент = Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаявокНаСборку.РазнесениеПоСкладу");
	ЭтоРазмещение = Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаявокНаСборку.СборкаСоСклада");
	
	Элементы.Дефектовщик.Видимость = ТребуетсяДефектовка;
	Элементы.ТоварыСписать.Видимость = ТребуетсяДефектовка;
	Элементы.Клиент.Видимость = ЕстьКлиент;
	
	Элементы.ТоварыМестоХранения.Заголовок = ?(ЭтоРазмещение, "Разместить в...", "");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТипОснования()

	Если Объект.ВидОперации = Перечисления.ВидыОперацийЗаявокНаСборку.ВозвратОтКлиента Тогда
		
		ТипСтр = "ДокументСсылка.ПродажаЗапчастей,ДокументСсылка.ЗаказНаряд";
	
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийЗаявокНаСборку.РазнесениеПоСкладу Тогда
				
		ТипСтр = "ДокументСсылка.ПоступлениеЗапчастей";
	
	Иначе // нет ограничений типа
		ТипСтр = Неопределено;	
	КонецЕсли;
	
	Элемент = Элементы.Найти("Основание");
	
	Если Элемент <> Неопределено Тогда
	    
	    Элемент.ОграничениеТипа = ?(ТипСтр = Неопределено, 
	    	Новый ОписаниеТипов(),
	    	Новый ОписаниеТипов(ТипСтр)
	    );
	    //Элемент.ВыбиратьТип = Ложь;	
    
    КонецЕсли;
	
	// Обновить список выбора состояний
	Если Объект.ВидОперации = Перечисления.ВидыОперацийЗаявокНаСборку.РазнесениеПоСкладу Тогда
		Элементы.Состояние.СписокВыбора.Очистить();
		Элементы.Состояние.СписокВыбора.Добавить(Перечисления.дт_СтатусыЗаявокНаСборку.ВРаботе);
		Элементы.Состояние.СписокВыбора.Добавить(Перечисления.дт_СтатусыЗаявокНаСборку.Выполнено, "Разнесено по складу");
		Элементы.Состояние.РежимВыбораИзСписка = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Товары.Отменено
	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Товары");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Товары.Списать", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
		
КонецПроцедуры




&НаСервере
Процедура ОбновитьДобавленныеКолонки()
	
	дт_АдресноеХранение.ЗаполнитьМестаХранения(ЭтаФорма, "Склад", "Товары", "Номенклатура");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Партия КАК Партия,
		|	Товары.Автомобиль КАК Автомобиль,
		|	Товары.Распоряжение КАК Распоряжение
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	&Товары КАК Товары
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки,
		|	Номенклатура,
		|	Партия,
		|	Автомобиль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступленияТЗ.КоличествоПриход КАК Количество,
		|	ПоступленияТЗ.Номенклатура КАК Номенклатура,
		|	ПоступленияТЗ.Автомобиль КАК Автомобиль,
		|	ПоступленияТЗ.Партия КАК Партия,
		|	ПоступленияТЗ.Распоряжение
		|ПОМЕСТИТЬ втПоступленияТЗ
		|ИЗ
		|	РегистрНакопления.ТоварыВТранзитнойЗоне.Обороты(,,, Склад = &СкладТЗ
		|	И (Номенклатура, Автомобиль, Партия, Распоряжение) В
		|		(ВЫБРАТЬ
		|			втТовары.Номенклатура,
		|			втТовары.Автомобиль,
		|			втТовары.Партия,
		|			втТовары.Распоряжение
		|		ИЗ
		|			втТовары)) КАК ПоступленияТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Автомобиль,
		|	Партия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступленияСклад.КоличествоРасход КАК Количество,
		|	ПоступленияСклад.Номенклатура КАК Номенклатура,
		|	ПоступленияСклад.Автомобиль КАК Автомобиль,
		|	ПоступленияСклад.Партия КАК Партия,
		|	ПоступленияСклад.Распоряжение
		|ПОМЕСТИТЬ втПоступленияСклад
		|ИЗ
		|	РегистрНакопления.ТоварыВТранзитнойЗоне.Обороты(,,, Склад = &СкладТЗ
		|	И (Номенклатура, Автомобиль, Партия, Распоряжение) В
		|		(ВЫБРАТЬ
		|			втТовары.Номенклатура,
		|			втТовары.Автомобиль,
		|			втТовары.Партия,
		|			втТовары.Распоряжение
		|		ИЗ
		|			втТовары)) КАК ПоступленияСклад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Автомобиль,
		|	Партия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТовары.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(втПоступленияТЗ.Количество, 0) КАК КоличествоТЗ,
		|	ЕСТЬNULL(втПоступленияСклад.Количество, 0) КАК КоличествоСклад
		|ИЗ
		|	втТовары КАК втТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПоступленияТЗ КАК втПоступленияТЗ
		|		ПО втТовары.Номенклатура = втПоступленияТЗ.Номенклатура
		|		И втТовары.Автомобиль = втПоступленияТЗ.Автомобиль
		|		И втТовары.Партия = втПоступленияТЗ.Партия
		|		И втТовары.Распоряжение = втПоступленияТЗ.Распоряжение
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПоступленияСклад КАК втПоступленияСклад
		|		ПО втТовары.Номенклатура = втПоступленияСклад.Номенклатура
		|		И втТовары.Автомобиль = втПоступленияСклад.Автомобиль
		|		И втТовары.Партия = втПоступленияСклад.Партия
		|		И втТовары.Распоряжение = втПоступленияСклад.Распоряжение
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("СкладТЗ", Объект.СкладТранзитный);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтрокаТаблицы = Объект.Товары[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		СтрокаТаблицы.КоличествоВТранзитнойЗоне = ВыборкаДетальныеЗаписи.КоличествоТЗ;
		СтрокаТаблицы.КоличествоНаСкладе = ВыборкаДетальныеЗаписи.КоличествоСклад;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	Отказ = Не ЭтоПолноправныйПользователь;
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьКомментарийИзРегистра(Машина, Товар, индкод)

	///+ГомзМА 29.03.2023
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Комментарии.Машина КАК Машина,
	|	Комментарии.Товар КАК Товар,
	|	Комментарии.индкод КАК индкод,
	|	Комментарии.Комментарий КАК Комментарий
	|ИЗ
	|	РегистрСведений.Комментарии КАК Комментарии
	|ГДЕ
	|	Комментарии.Машина 	 = &Машина
	|	И Комментарии.Товар  = &Товар
	|	И Комментарии.индкод = &индкод";
	
	Запрос.УстановитьПараметр("Машина", Машина);
	Запрос.УстановитьПараметр("Товар",  Товар);
	Запрос.УстановитьПараметр("индкод", индкод);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Количество() = 0 Тогда
		Комментарий = "";
		Возврат Комментарий;
	Иначе
		РезультатЗапроса.Следующий();
		Комментарий = РезультатЗапроса.Комментарий;
		Возврат Комментарий;
	КонецЕсли;
	///-ГомзМА 29.03.2023

КонецФункции // ПолучитьКомментарийИзРегистра()






#КонецОбласти