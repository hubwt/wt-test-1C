
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПолучитьФункциональнуюОпцию("дт_ИспользоватьАвтосервис")
		ИЛИ ПолучитьФункциональнуюОпцию("дт_ИспользоватьГрузоперевозки") Тогда
		
		ЭтаФорма.Заголовок = "Автомобили";
		ЭтаФорма.АвтоЗаголовок = Ложь;
	КонецЕсли;
	
	ЕстьДоступКПоказателям = ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПоказателиАвтомобилей) И ПолучитьФункциональнуюОпцию("дт_ИспользоватьРазборку");
	ЕстьГрузоперевозки = ПолучитьФункциональнуюОпцию("дт_ИспользоватьГрузоперевозки")
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТопливоВБаках);
		
	// Если нет прав на регистр сведений ПоказателиАвтомобилей, то из запроса исключим соединение
	Если НЕ ЕстьДоступКПоказателям Тогда
		
		ТекстЗапроса = Список.ТекстЗапроса;
		
		Индекс = СтрНайти(ТекстЗапроса, "ПоказателиАвтомобилей");
		Если Индекс <> 0 Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
				"ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказателиАвтомобилей КАК ВТ_Показатели",
				""
			);
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"ПО (ВТ_Показатели.Автомобиль = СправочникМашины.Ссылка)",
				""
			);
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"ЕСТЬNULL(ВТ_Показатели.Рентабельность, 0)",
				"0"
			);
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"ЕСТЬNULL(ВТ_Показатели.ВыручкаОплаченная, 0)",
				"0"
			);
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"ЕСТЬNULL(ВТ_Показатели.Прибыль, 0)",
				"0"
			);
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"ЕСТЬNULL(ВТ_Показатели.ВыручкаПотенциальная, 0) КАК ВыручкаПотенциальная",
				"0"
			);
			
			Список.ТекстЗапроса = ТекстЗапроса;
			
		КонецЕсли;
			
	КонецЕсли;
	
	Если НЕ ЕстьГрузоперевозки Тогда
		ТекстЗапроса = Список.ТекстЗапроса;
		
		Индекс = СтрНайти(ТекстЗапроса, "ТопливоВБакахОстатки");
		Если Индекс <> 0 Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
				"ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТопливоВБаках.Остатки КАК ТопливоВБакахОстатки",
				""
			);
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"ПО ТопливоВБакахОстатки.Автомобиль = СправочникМашины.Ссылка",
				""
			);
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"ЕСТЬNULL(ТопливоВБакахОстатки.КоличествоОстаток, 0)",
				"0"
			);
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"ЕСТЬNULL(ТопливоВБакахОстатки.СтоимостьОстаток, 0)",
				"0"
			);
			
		КонецЕсли;	
	КонецЕсли;
	
	Элементы.ГруппаПоказатели.Видимость = ЕстьДоступКПоказателям;
	Элементы.ГруппаГрузоперевозки.Видимость = ЕстьГрузоперевозки;
	
	УстановитьУсловноеОформление();
	
	СортировкаМашинаАгрегат = 3;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы



#КонецОбласти

#Область ОбработчикиКомандФормы



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	// Прибыль, Рентабельность - выделять отрицательные
	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Прибыль");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Рентабельность");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.Сумма", ВидСравненияКомпоновкиДанных.Заполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ВыделятьОтрицательные", Истина);
	

КонецПроцедуры // УстановитьУсловноеОформление()

#КонецОбласти

&НаКлиенте
Процедура ОтчётПоЗапчастям(Команда)
	
	ИмяОтчета = "ПродажаЗапчастейПоАвтомобилям";
	
	ПараметрыОткрытия = ПолучитьПараметрыОткрытияОтчета(ИмяОтчета, элементы.Список.ТекущиеДанные.ссылка);
	ОткрытьФорму("Отчет." + ИмяОтчета + ".ФормаОбъекта", ПараметрыОткрытия, ЭтотОбъект);
КонецПроцедуры


&НаСервереБезКонтекста
Процедура УстановитьЭлементПользовательскогоОтбораСКД(КомпоновщикНастроек, ВидСравнения, ИмяПоля, Значение)
	
	ЭлементОтбора =  КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	//ЭлементОтбораПользовательский =  ПользовательскийОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементОтбора.ИдентификаторПользовательскойНастройки = Новый УникальныйИдентификатор();
	ЭлементОтбора.ВидСравнения = ВидСравнения;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля);
	ЭлементОтбора.ПравоеЗначение = Значение;
	ЭлементОтбора.Использование = Истина;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьПараметрыОткрытияОтчета(ИмяОтчета, Авто)
	
	ОтчетОбъект = Отчеты[ИмяОтчета].Создать();
	
	КомпоновщикНастроек = ОтчетОбъект.КомпоновщикНастроек;
	
	УстановитьЭлементПользовательскогоОтбораСКД(КомпоновщикНастроек, ВидСравненияКомпоновкиДанных.Равно, 
	"Автомобиль", Авто);
	
	ПараметрыОткрытия = Новый Структура(); 	
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыОткрытия.Вставить("Вариант", КомпоновщикНастроек.Настройки);
	ПараметрыОткрытия.Вставить("ПользовательскиеНастройки", КомпоновщикНастроек.ПользовательскиеНастройки);
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

&НаСервере
Процедура СортировкаМашинаАгрегатПриИзмененииНаСервере()
	
	///+ГомзМА 29.09.2023
	Если СортировкаМашинаАгрегат = 1 Тогда
		Текст =  "ВЫБРАТЬ
		|	СправочникМашины.Ссылка КАК Ссылка,
		|	СправочникМашины.ПометкаУдаления КАК ПометкаУдаления,
		|	СправочникМашины.Код КАК Код,
		|	СправочникМашины.Наименование КАК Наименование,
		|	СправочникМашины.ВинКод КАК ВинКод,
		|	СправочникМашины.Комментарий КАК Комментарий,
		|	СправочникМашины.Сумма КАК Сумма,
		|	СправочникМашины.Производитель КАК Производитель,
		|	СправочникМашины.Год КАК Год,
		|	СправочникМашины.НПорядок КАК НПорядок,
		|	СправочникМашины.ТипТС КАК ТипТС,
		|	СправочникМашины.МаркаТС КАК МаркаТС,
		|	СправочникМашины.Дата КАК Дата,
		|	СправочникМашины.КодМашины КАК КодМашины,
		|	СправочникМашины.ГосНомер КАК ГосНомер,
		|	СправочникМашины.Водитель КАК Водитель,
		|	СправочникМашины.ПоказаниеОдометраНаНачалоЭксплуатации КАК ПоказаниеОдометраНаНачалоЭксплуатации,
		|	СправочникМашины.ЭтоПрицеп КАК ЭтоПрицеп,
		|	ЕСТЬNULL(ВТ_Показатели.Рентабельность, 0) КАК Рентабельность,
		|	ЕСТЬNULL(ВТ_Показатели.ВыручкаОплаченная, 0) КАК ВыручкаОплаченная,
		|	ЕСТЬNULL(ВТ_Показатели.Прибыль, 0) КАК Прибыль,
		|	ЕСТЬNULL(ВТ_Показатели.ВыручкаПотенциальная, 0) КАК ВыручкаПотенциальная,
		|	ЕСТЬNULL(ТопливоВБакахОстатки.КоличествоОстаток, 0) КАК ТопливоКоличество,
		|	ЕСТЬNULL(ТопливоВБакахОстатки.СтоимостьОстаток, 0) КАК ТопливоСтоимость,
		|	СправочникМашины.ТипМашины КАК ТипМашины,
		|	СправочникМашины.Поставщик КАК Поставщик,
		|	СправочникМашины.МашинаАгрегат КАК МашинаАгрегат
		|ИЗ
		|	Справочник.Машины КАК СправочникМашины
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказателиАвтомобилей КАК ВТ_Показатели
		|		ПО (ВТ_Показатели.Автомобиль = СправочникМашины.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТопливоВБаках.Остатки КАК ТопливоВБакахОстатки
		|		ПО (ТопливоВБакахОстатки.Автомобиль = СправочникМашины.Ссылка)
		|ГДЕ
		|	СправочникМашины.МашинаАгрегат = 1";
		
		Список.ТекстЗапроса = Текст;
		
	ИначеЕсли СортировкаМашинаАгрегат = 2 Тогда
		Текст =  "ВЫБРАТЬ
		|	СправочникМашины.Ссылка КАК Ссылка,
		|	СправочникМашины.ПометкаУдаления КАК ПометкаУдаления,
		|	СправочникМашины.Код КАК Код,
		|	СправочникМашины.Наименование КАК Наименование,
		|	СправочникМашины.ВинКод КАК ВинКод,
		|	СправочникМашины.Комментарий КАК Комментарий,
		|	СправочникМашины.Сумма КАК Сумма,
		|	СправочникМашины.Производитель КАК Производитель,
		|	СправочникМашины.Год КАК Год,
		|	СправочникМашины.НПорядок КАК НПорядок,
		|	СправочникМашины.ТипТС КАК ТипТС,
		|	СправочникМашины.МаркаТС КАК МаркаТС,
		|	СправочникМашины.Дата КАК Дата,
		|	СправочникМашины.КодМашины КАК КодМашины,
		|	СправочникМашины.ГосНомер КАК ГосНомер,
		|	СправочникМашины.Водитель КАК Водитель,
		|	СправочникМашины.ПоказаниеОдометраНаНачалоЭксплуатации КАК ПоказаниеОдометраНаНачалоЭксплуатации,
		|	СправочникМашины.ЭтоПрицеп КАК ЭтоПрицеп,
		|	ЕСТЬNULL(ВТ_Показатели.Рентабельность, 0) КАК Рентабельность,
		|	ЕСТЬNULL(ВТ_Показатели.ВыручкаОплаченная, 0) КАК ВыручкаОплаченная,
		|	ЕСТЬNULL(ВТ_Показатели.Прибыль, 0) КАК Прибыль,
		|	ЕСТЬNULL(ВТ_Показатели.ВыручкаПотенциальная, 0) КАК ВыручкаПотенциальная,
		|	ЕСТЬNULL(ТопливоВБакахОстатки.КоличествоОстаток, 0) КАК ТопливоКоличество,
		|	ЕСТЬNULL(ТопливоВБакахОстатки.СтоимостьОстаток, 0) КАК ТопливоСтоимость,
		|	СправочникМашины.ТипМашины КАК ТипМашины,
		|	СправочникМашины.Поставщик КАК Поставщик,
		|	СправочникМашины.МашинаАгрегат КАК МашинаАгрегат
		|ИЗ
		|	Справочник.Машины КАК СправочникМашины
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказателиАвтомобилей КАК ВТ_Показатели
		|		ПО (ВТ_Показатели.Автомобиль = СправочникМашины.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТопливоВБаках.Остатки КАК ТопливоВБакахОстатки
		|		ПО (ТопливоВБакахОстатки.Автомобиль = СправочникМашины.Ссылка)
		|ГДЕ
		|	СправочникМашины.МашинаАгрегат = 2";
		
		Список.ТекстЗапроса = Текст;
		
	ИначеЕсли СортировкаМашинаАгрегат = 3 Тогда
		Текст =  "ВЫБРАТЬ
		|	СправочникМашины.Ссылка КАК Ссылка,
		|	СправочникМашины.ПометкаУдаления КАК ПометкаУдаления,
		|	СправочникМашины.Код КАК Код,
		|	СправочникМашины.Наименование КАК Наименование,
		|	СправочникМашины.ВинКод КАК ВинКод,
		|	СправочникМашины.Комментарий КАК Комментарий,
		|	СправочникМашины.Сумма КАК Сумма,
		|	СправочникМашины.Производитель КАК Производитель,
		|	СправочникМашины.Год КАК Год,
		|	СправочникМашины.НПорядок КАК НПорядок,
		|	СправочникМашины.ТипТС КАК ТипТС,
		|	СправочникМашины.МаркаТС КАК МаркаТС,
		|	СправочникМашины.Дата КАК Дата,
		|	СправочникМашины.КодМашины КАК КодМашины,
		|	СправочникМашины.ГосНомер КАК ГосНомер,
		|	СправочникМашины.Водитель КАК Водитель,
		|	СправочникМашины.ПоказаниеОдометраНаНачалоЭксплуатации КАК ПоказаниеОдометраНаНачалоЭксплуатации,
		|	СправочникМашины.ЭтоПрицеп КАК ЭтоПрицеп,
		|	ЕСТЬNULL(ВТ_Показатели.Рентабельность, 0) КАК Рентабельность,
		|	ЕСТЬNULL(ВТ_Показатели.ВыручкаОплаченная, 0) КАК ВыручкаОплаченная,
		|	ЕСТЬNULL(ВТ_Показатели.Прибыль, 0) КАК Прибыль,
		|	ЕСТЬNULL(ВТ_Показатели.ВыручкаПотенциальная, 0) КАК ВыручкаПотенциальная,
		|	ЕСТЬNULL(ТопливоВБакахОстатки.КоличествоОстаток, 0) КАК ТопливоКоличество,
		|	ЕСТЬNULL(ТопливоВБакахОстатки.СтоимостьОстаток, 0) КАК ТопливоСтоимость,
		|	СправочникМашины.ТипМашины КАК ТипМашины,
		|	СправочникМашины.Поставщик КАК Поставщик,
		|	СправочникМашины.МашинаАгрегат КАК МашинаАгрегат
		|ИЗ
		|	Справочник.Машины КАК СправочникМашины
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказателиАвтомобилей КАК ВТ_Показатели
		|		ПО (ВТ_Показатели.Автомобиль = СправочникМашины.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТопливоВБаках.Остатки КАК ТопливоВБакахОстатки
		|		ПО (ТопливоВБакахОстатки.Автомобиль = СправочникМашины.Ссылка)";
		
		Список.ТекстЗапроса = Текст;
	КонецЕсли;
	///-ГомзМА 29.09.2023
	
КонецПроцедуры

&НаКлиенте
Процедура СортировкаМашинаАгрегатПриИзменении(Элемент)
	СортировкаМашинаАгрегатПриИзмененииНаСервере();
КонецПроцедуры
