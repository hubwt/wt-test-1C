
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	Порядок=ЭтаФорма.Список.Порядок;
 Порядок.Элементы.Очистить();
 ЭлементПорядка = Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
 ЭлементПорядка.РежимОтображения =  РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
 ЭлементПорядка.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
 ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("Порядок1"); // Поле, по которому будет упорядочивание
 ЭлементПорядка.Использование = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ttt(Команда)
	// Вставить содержимое обработчика.
	ttt1();
КонецПроцедуры

&НаСервере
Процедура ttt1()
	zapr = new Query;
	zapr.Текст =  "ВЫБРАТЬ
	             |	Категории.Ссылка
	             |ИЗ
	             |	Справочник.Категории КАК Категории";
	rez = zapr.Выполнить().Выгрузить();
	Для Каждого row из rez Цикл
		zapr2 = new Query;
		zapr2.Текст =   "ВЫБРАТЬ
		               |	Podkategorii.Код,
		               |	Podkategorii.Наименование
		               |ИЗ
		               |	Справочник.Podkategorii КАК Podkategorii
		               |ГДЕ
		               |	Podkategorii.Владелец = &Владелец"  ;
		zapr2.УстановитьПараметр("Владелец",row.Ссылка);
		rez2 = zapr2.Выполнить().Выгрузить();
		Для Каждого row2 из rez2 Цикл
        	el = Справочники.Категории.СоздатьЭлемент();
			el.kodpodkat = row2.Код;
			el.Родитель =  row.Ссылка;
			el.Наименование = row2.Наименование;
			el.Записать();
			Сообщить(row2.Наименование);
		КонецЦикла;	
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура МассовоеПеремещение(Команда)
	форма = ПолучитьФорму("Справочник.Категории.Форма.МассовоеПеремещениеТовара");
	форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ИмпортНазваний(Команда)
	СтандартнаяОбработка=ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "cvs (*.csv)|*.csv"; 
	Диалог.Фильтр = Фильтр; 
    Диалог.МножественныйВыбор = Ложь;
	Диалог.Каталог = "С:\";
	Файл = "";
	Если Диалог.Выбрать() Тогда
		Файл = Диалог.ПолноеИмяФайла;
	КонецЕсли;
	Сообщить(Файл);
	Попытка
    // Используется для доступа к параметрам файлов или каталогов. 
    ТекстовыйФайл = Новый Файл(Файл);
    Если ТекстовыйФайл.Существует() = Ложь Тогда
      Сообщить("Файла "+Файл+" не существует!");
      Возврат;
    КонецЕсли;

    // Текстовый документ предназначен для работы с текстами. 
    // Объект позволяет получать и сохранять текст в файле, 
    // работать со строками
    ПотокЧтенияСтрок = Новый ТекстовыйДокумент();
    ПотокЧтенияСтрок.Прочитать(Файл);
  Исключение
    Сообщить("Файл не прочитан.", СтатусСообщения.Внимание);
    Сообщить(ОписаниеОшибки());
    Возврат;
  КонецПопытки;

  // Возвращает текст, извлеченный из файла
  КоличествоСтрок = ПотокЧтенияСтрок.КоличествоСтрок();
  Для Строка = 1 По КоличествоСтрок Цикл

    // Обработка нажатия Ctrl + Break
    ОбработкаПрерыванияПользователя();

    // Чтение строки из файла тхт / csv
    СтрокаИзФайла = ПотокЧтенияСтрок.ПолучитьСтроку(Строка);

    // Разбор строки в массив, используя в качествен символа-разделителя "|"
    МассивСтрок = РазбитьСтрокуНаМассивПодстрок(СтрокаИзФайла,";");
    Если МассивСтрок.Количество() > 1 Тогда
    	Сообщить("Код "+МассивСтрок[0]+" наименование "+МассивСтрок[1]);
		установитьНазваниеДляОписание(МассивСтрок[0],МассивСтрок[1]);
	КонецЕсли;
  КонецЦикла;
  
КонецПроцедуры

&НаСервере
Процедура установитьНазваниеДляОписание(код,описание)
	об = Справочники.Категории.НайтиПоКоду(код).ПолучитьОбъект();
	об.НазваниеДляОписания = описание;
	об.Записать();
КонецПроцедуры


Функция РазбитьСтрокуНаМассивПодстрок(ИсходнаяСтрока,РазделительСтрок)
   СтрокаДляРазбора = ИсходнаяСтрока;
   СтрокаДляРазбора = СтрЗаменить(СтрокаДляРазбора, РазделительСтрок, Символы.ПС);
   МассивСтрок = новый Массив;
   КолвоСтрок = СтрЧислоСтрок(СтрокаДляРазбора);
   Для НомСтр = 1 По КолвоСтрок Цикл
      МассивСтрок.Добавить(СтрПолучитьСтроку(СтрокаДляРазбора, НомСтр));
  КонецЦикла;
   Возврат МассивСтрок;
КонецФункции

		
