
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЭтоАдресВременногоХранилища(СсылкаНаФото)  Тогда 
		ФайлФото = ПолучитьИзВременногоХранилища(СсылкаНаФото); 
		ТекущийОбъект.Фото = Новый ХранилищеЗначения(ФайлФото); 
		УдалитьИзВременногоХранилища(СсылкаНаФото); 
		СсылкаНаФото = ПолучитьНавигационнуюСсылку(Объект.Ссылка,"Фото"); 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СсылкаНафото = ПолучитьНавигационнуюСсылку(Объект.Ссылка,"Фото");    
	Элементы.СсылкаНаФото.РазмерКартинки = РазмерКартинки.АвтоРазмер;
	ВыбратьВопросы();
КонецПроцедуры

&НаКлиенте
Процедура СсылкаНаФотоНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 
	Режим = РежимДиалогаВыбораФайла.Открытие; 
	ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим); 
	ДиалогОткрытия.ПолноеИмяФайла = ""; 
	Фильтр = "Файл Jpg (*.jpg)|*.jpg"; 
	ДиалогОткрытия.Фильтр = Фильтр; 
	ДиалогОткрытия.МножественныйВыбор = Ложь; 
	ДиалогОткрытия.Заголовок = "Выберете файл для загрузки"; 
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗагрузкиФайла",ЭтаФорма); 
	ДиалогОткрытия.Показать(ОписаниеОповещения);	
КонецПроцедуры

&НаКлиенте 
Процедура ПослеЗагрузкиФайла(ВыбранныйФайл,ДопПараметр) Экспорт 
	Если ВыбранныйФайл = Неопределено Тогда 
		Возврат; 
	КонецЕсли; 
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПомещенияФайла", ЭтаФорма); 
	НачатьПомещениеФайла(ОписаниеОповещения,, ВыбранныйФайл[0], Ложь, УникальныйИдентификатор); 
КонецПроцедуры

&НаКлиенте 
Процедура ПослеПомещенияФайла(Результат, Адрес, ВыбранноеИмяФайла,ДопПараметры) Экспорт 
	Если Не Результат Тогда 
		Возврат; 
	КонецЕсли; 
	СсылкаНаФото = Адрес; 
	Модифицированность = Истина; 
КонецПроцедуры

&НаСервере
Процедура ВыбратьВопросы()
	Если ЗначениеЗаполнено(Объект.Вакансия) ИЛИ ЗначениеЗаполнено(Объект.Ссылка)  Тогда	
		СписокВопросы.Параметры.УстановитьЗначениеПараметра("Вакансия",Объект.Вакансия);
		СписокВопросы.Параметры.УстановитьЗначениеПараметра("Кандидат",Объект.Ссылка); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВакансияПриИзменении(Элемент)
	ВыбратьВопросы();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВопросы(Команда)
	ОписаниеВыбора = Новый ОписаниеОповещения("ОбработатьВыборВопроса",ЭтаФорма);
	//ОткрытьФорму("");
	ОткрытьФорму("Справочник.ВопросыККандидату.ФормаВыбора",,,,,,
	ОписаниеВыбора,
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//	Элементы.СписокЧек.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборВопроса(РезультатЗакрытия,ДопПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Возврат;
	КонецЕсли;
	ЗаписьВакансии(РезультатЗакрытия);
	ВыбратьВопросы();
КонецПроцедуры

Процедура ЗаписьВакансии(Результат)
	Отбор = Новый Структура();
	Отбор.Вставить("Вакансия", Объект.Ссылка);
	ОбОбъект = Результат.ссылка.ПолучитьОбъект();
	НайденныеСтроки = ОбОбъект.Вакансии.НайтиСтроки(Отбор);
	
	Если  НайденныеСтроки.Количество() = 0 тогда
		НоваяСтрока = ОбОбъект.Вакансии.Добавить();
		НоваяСтрока.Вакансия = Объект.Ссылка;
		ОбОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура Печать1(Команда)
	ТабДок = Печать(Объект.ссылка);
	
	// создадим коллекцию печатных форм, в которую надо будет добавить нужный нам табличный документ
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("Печать");
	// Добавляем в коллекцию (тип массив) сформированный Табличный документ
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
	// если требуется устанавливаем параметры печати
	КоллекцияПечатныхФорм[0].Экземпляров=1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "Печать";  // используется для формирования имени файла при сохранении из общей формы печати документов
	// .. и выводим стандартной процедурой БСП
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Неопределено,ЭтаФорма);
	
КонецПроцедуры

Функция Печать(Ссылка)
	Табдок= Новый ТабличныйДокумент;
	Макет = Справочники.Кандидаты.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Кандидаты.Вакансия КАК Вакансия,
	|	Кандидаты.Возраст КАК Возраст,
	|	Кандидаты.ДатаСобеседования КАК ДатаСобеседования,
	|	Кандидаты.Код КАК Код,
	|	Кандидаты.Комментарий КАК Комментарий,
	|	Кандидаты.Наименование КАК Наименование,
	|	Кандидаты.ОткудаКандидат КАК ОткудаКандидат,
	|	Кандидаты.Телефон КАК Телефон,
	|	Кандидаты.Фото КАК Фото
	|ИЗ
	|	Справочник.Кандидаты КАК Кандидаты
	|ГДЕ
	|	Кандидаты.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Фотография = Макет.ПолучитьОбласть("Фото");
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Рисунок = Фотография.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
		Рисунок.Верх = 5; 
		Рисунок.Высота = 100; 
		Рисунок.Ширина = 100; 
		Рисунок.Лево = 5; 
		Рисунок.Картинка = Новый Картинка(Выборка.фото.Получить()); 
		Рисунок.РазмерКартинки = РазмерКартинки.АвтоРазмер; 
		ТабДок.Вывести(Фотография);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	
	Возврат Табдок;
КонецФункции


&НаКлиенте
Процедура ДобавитьНовыйВопрос(Команда)
	ПараметрыОткрытия = Новый Структура("Кандидат_Вакансия", объект.Ссылка);
	ФормаВыбора = ПолучитьФорму("Справочник.ВопросыККандидату.Форма.ФормаЭлемента", ПараметрыОткрытия);
	ВыбЭлемент = ФормаВыбора.ОткрытьМодально();
КонецПроцедуры

&НаСервере
Процедура УдалитьВопросНаСервере(ИмяВопроса)
	Отбор = Новый Структура();
	Отбор.Вставить("Вакансия", Объект.Ссылка);
	Попытка
		ОбВопроса = Справочники.ВопросыККандидату.НайтиПоНаименованию(ИмяВопроса).ПолучитьОбъект();
		
		НайденныеСтроки = ОбВопроса.Вакансии.НайтиСтроки(Отбор);
		
		Если  НайденныеСтроки.Количество() > 0 тогда
			Для Каждого мСтрока Из НайденныеСтроки Цикл
				ОбВопроса.Вакансии.Удалить(мСтрока);
				ОбВопроса.Записать();	
			КонецЦикла;
		КонецЕсли;
	Исключение
	КонецПопытки;
	ВыбратьВопросы();	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВопрос(Команда)
	УдалитьВопросНаСервере(Элементы.СписокВопросы.ТекущиеДанные.Наименование);
КонецПроцедуры
