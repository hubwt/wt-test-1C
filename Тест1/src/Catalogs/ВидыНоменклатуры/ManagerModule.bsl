#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура СоздатьЭлементыСпецодежда() Экспорт 
	
	Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Спецодежда")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Спецодежда";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатации;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
						
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Спецоснастка")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Спецоснастка";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатации;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Инвентарь и хозяйственные принадлежности")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Инвентарь и хозяйственные принадлежности";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежности;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку;
		Запись.СчетУчетаЗабалансовый                = ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработку;
		
	КонецЕсли;
	
	Если Набор.Количество() > 0 Тогда
		Набор.Записать(Ложь);
	КонецЕсли;
	
	СоздатьЭлементыМалоценка();
	
КонецПроцедуры

Процедура СоздатьЭлементыВозвратнаяТара() Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Возвратная тара")) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Возвратная тара";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ТараПодТоваромИПорожняя;
		
		Набор.Записать(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура СоздатьЭлементыОС() Экспорт 
	
	Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Оборудование (объекты основных средств)")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Оборудование (объекты основных средств)";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ПриобретениеКомпонентовОсновныхСредств;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСприПриобретенииОсновныхСредств;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Оборудование к установке")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Оборудование к установке";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСприПриобретенииОсновныхСредств;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		
	КонецЕсли;
	
	Если Набор.Количество() > 0 Тогда
		Набор.Записать(Ложь);
	КонецЕсли;
	
	СоздатьЭлементыМалоценка();
	
КонецПроцедуры

Процедура СоздатьЭлементыКомиссияНаПродажу() Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товары на комиссии")) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Товары на комиссии";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ТоварыНаСкладе;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию;
		
		Набор.Записать(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура СоздатьЭлементыКомиссияНаЗакупку() Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товары на ответственном хранении")) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Товары на ответственном хранении";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение;
		
		Набор.Записать(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура СоздатьЭлементыПроизводство() Экспорт 
	
	Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Полуфабрикаты")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Полуфабрикаты";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.Полуфабрикаты;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная;
		Запись.СчетУчетаЗабалансовый                = ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработку;
		Запись.СчетУчетаПередачиЗабалансовый        = ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Продукция")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Продукция";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ГотоваяПродукция;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Продукция из материалов заказчика")) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Продукция из материалов заказчика";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ПроизводствоИзДавальческогоСырья;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
		
	КонецЕсли;
	
	Если Набор.Количество() > 0 Тогда
		Набор.Записать(Ложь);
    КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЭлементыУслугаЕНВД() Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Услуги ЕНВД")) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Услуги ЕНВД";
		ВидНоменклатуры.Услуга = Истина;
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ВыручкаЕНВД;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.СебестоимостьПродажЕНВД;
		
		Набор.Записать(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура СоздатьЭлементыПродукция() Экспорт 
	
	НаименованиеПоУмолчанию = НСтр("ru = 'Продукция'");
	ВидНоменклатурыПродукция = Справочники.ВидыНоменклатуры.НайтиПоНаименованию(НаименованиеПоУмолчанию, Истина);
	
	Если ЗначениеЗаполнено(ВидНоменклатурыПродукция) Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		УстановитьПривилегированныйРежим(Истина);
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("Наименование", НаименованиеПоУмолчанию);
		
		ВидНоменклатуры = Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Заполнить(ДанныеЗаполнения);
		ВидНоменклатуры.Записать();
		
		Набор = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		Запись.СчетУчета = ПланыСчетов.Хозрасчетный.ГотоваяПродукция;
		Запись.СчетУчетаНДСПоРеализации = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		Запись.СчетУчетаПередачи = ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная;
		
		Набор.Записать(Ложь);
		
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура СоздатьЭлементыМатериал() Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Материалы")) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Материалы";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.СырьеИМатериалы;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку;
		Запись.СчетУчетаЗабалансовый                = ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработку;
		
		Набор.Записать(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура СоздатьЭлементыМалоценка() Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Малоценное оборудование и запасы")) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = "Малоценное оборудование и запасы";
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ПриобретениеМалоценногоОборудованияИЗапасов;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		
		Набор.Записать(Ложь);
		
	КонецЕсли; 
	
КонецПроцедуры

Функция НайтиСоздатьЭлементыМалоценка() Экспорт 
	
	НаименованиеМалоценка = НСтр("ru='Малоценное оборудование и запасы'");
	
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию(НаименованиеМалоценка)) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = НаименованиеМалоценка;
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ПриобретениеМалоценногоОборудованияИЗапасов;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		
		Набор.Записать(Ложь);
		
		Возврат ВидНоменклатуры.Ссылка;
		
	Иначе
		
		Возврат Справочники.ВидыНоменклатуры.НайтиПоНаименованию(НаименованиеМалоценка);
		
	КонецЕсли; 
	
КонецФункции

Функция НайтиСоздатьЭлементыТовар() Экспорт 
	
	НаименованиеПоУмолчанию = НСтр("ru = 'Товары'");
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию(НаименованиеПоУмолчанию, Истина)) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = НаименованиеПоУмолчанию;
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчета                            = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		Запись.СчетУчетаНДСУплаченногоНаТаможне     = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
		Запись.СчетУчетаПередачи                    = ПланыСчетов.Хозрасчетный.ПокупныеТоварыОтгруженные;
		
		Набор.Записать(Ложь);
		
		Возврат ВидНоменклатуры.Ссылка;
		
	Иначе
		
		Возврат Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товары");
		
	КонецЕсли; 
	
КонецФункции

Функция НайтиСоздатьЭлементыУслуга() Экспорт 
	
	НаименованиеПоУмолчанию = НСтр("ru = 'Услуги'");
	Если НЕ ЗначениеЗаполнено(Справочники.ВидыНоменклатуры.НайтиПоНаименованию(НаименованиеПоУмолчанию, Истина)) Тогда
		
		Набор  = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ВидНоменклатуры	= Справочники.ВидыНоменклатуры.СоздатьЭлемент();
		ВидНоменклатуры.Наименование = НаименованиеПоУмолчанию;
		ВидНоменклатуры.Услуга = Истина;
		ВидНоменклатуры.Записать();
		
		Запись = Набор.Добавить();
		Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
		
		Запись.СчетУчетаНДСПоПриобретеннымЦенностям = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымУслугам;
		Запись.СчетУчетаНДСПоРеализации             = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		Запись.СчетДоходовОтРеализации              = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
		Запись.СчетРасходовОтРеализации             = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
		
		Набор.Записать(Ложь);
		
		Возврат ВидНоменклатуры.Ссылка;
		
	Иначе
		
		Возврат Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Услуги");
		
	КонецЕсли; 
	
КонецФункции

Функция НайтиСоздатьЭлементТопливо() Экспорт 
	
	НаименованиеПоУмолчанию = НСтр("ru = 'Топливо'");
	ЭлементСсылка = Справочники.ВидыНоменклатуры.НайтиПоНаименованию(НаименованиеПоУмолчанию, Истина);
	
	Если ЗначениеЗаполнено(ЭлементСсылка) Тогда
		Возврат ЭлементСсылка;
	КонецЕсли;
	
	Набор = РегистрыСведений.СчетаУчетаНоменклатуры.СоздатьНаборЗаписей();
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВидНоменклатуры = Справочники.ВидыНоменклатуры.СоздатьЭлемент();
	ВидНоменклатуры.Наименование = НаименованиеПоУмолчанию;
	ВидНоменклатуры.Услуга = Ложь;
	ВидНоменклатуры.Записать();
	
	Запись = Набор.Добавить();
	Запись.ВидНоменклатуры = ВидНоменклатуры.Ссылка;
	
	Запись.СчетУчета = ПланыСчетов.Хозрасчетный.Топливо;
	
	Набор.Записать(Ложь);
	
	Возврат ВидНоменклатуры.Ссылка;
	
КонецФункции

Функция ЭлементВидНоменклатурыПоУмолчанию(Услуга) Экспорт
	
	НеобходимоСоздатьЭлемент = Ложь;
	
	Если Услуга Тогда
		НаименованиеПоУмолчанию = НСтр("ru = 'Услуги'");
	Иначе
		НаименованиеПоУмолчанию = НСтр("ru = 'Товары'");
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 2
		|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатурыПоУмолчанию,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|ГДЕ
		|	ВидыНоменклатуры.Услуга = &Услуга
		|	И НЕ ВидыНоменклатуры.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		
	Запрос.УстановитьПараметр("Услуга",                          Услуга);
	Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеПоУмолчанию);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.Количество() = 1 Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
			ВидНоменклатурыПоУмолчанию = Выборка.ВидНоменклатурыПоУмолчанию;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
	Иначе
		НеобходимоСоздатьЭлемент = Истина;
	КонецЕсли;
	
	// Создание элемента для обмена с заданными параметрами
	Если НеобходимоСоздатьЭлемент Тогда
		ВидНоменклатурыПоУмолчанию = ?(Услуга, НайтиСоздатьЭлементыУслуга(), НайтиСоздатьЭлементыТовар());
	КонецЕсли;
	
	Возврат ВидНоменклатурыПоУмолчанию.Ссылка;
	
КонецФункции

Процедура ОбновитьВидыНоменклатурыМалоценка() Экспорт
	
	Если Не (ПолучитьФункциональнуюОпцию("ВедетсяУчетСпецодеждыСпецоснастки")
		ИЛИ ПолучитьФункциональнуюОпцию("ВедетсяУчетОсновныхСредствПростойИнтерфейс")
		ИЛИ ПолучитьФункциональнуюОпцию("ВедетсяУчетОсновныхСредств")) Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьЭлементыМалоценка();
	
КонецПроцедуры

Процедура ОтметитьУстаревшиеВидыНоменклатуры2022() Экспорт
	
	ВидыНоменклатуры = Новый ТаблицаЗначений;
	ВидыНоменклатуры.Колонки.Добавить("Наименование", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	ВидыНоменклатуры.Колонки.Добавить("СчетУчета", 	  Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ВидыНоменклатуры.Колонки.Добавить("СчетУчетаПередачи", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	Спецодежда = ВидыНоменклатуры.Добавить();
	Спецодежда.Наименование      = "Спецодежда";
	Спецодежда.СчетУчета         = ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе;
	Спецодежда.СчетУчетаПередачи = ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатации;
	
	Спецоснастка = ВидыНоменклатуры.Добавить();
	Спецоснастка.Наименование      = "Спецоснастка";
	Спецоснастка.СчетУчета         = ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе;
	Спецоснастка.СчетУчетаПередачи = ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатации;
	
	Инвентарь = ВидыНоменклатуры.Добавить();
	Инвентарь.Наименование      = "Инвентарь и хозяйственные принадлежности";
	Инвентарь.СчетУчета         = ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежности;
	Инвентарь.СчетУчетаПередачи = ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидыНоменклатуры", ВидыНоменклатуры);
	запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыНоменклатуры.Наименование КАК Наименование,
	|	ВидыНоменклатуры.СчетУчета КАК СчетУчета,
	|	ВидыНоменклатуры.СчетУчетаПередачи КАК СчетУчетаПередачи
	|ПОМЕСТИТЬ СвойстваВидовНоменклатуры
	|ИЗ
	|	&ВидыНоменклатуры КАК ВидыНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|	СвойстваВидовНоменклатуры.СчетУчета КАК СчетУчета,
	|	СвойстваВидовНоменклатуры.СчетУчетаПередачи КАК СчетУчетаПередачи
	|ПОМЕСТИТЬ ВидыПоНаименованию
	|ИЗ
	|	СвойстваВидовНоменклатуры КАК СвойстваВидовНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО СвойстваВидовНоменклатуры.Наименование = ВидыНоменклатуры.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыПоНаименованию.ВидНоменклатуры КАК ВидНоменклатуры,
	|	СУММА(ВЫБОР
	|			КОГДА ВидыПоНаименованию.СчетУчета = СчетаУчетаНоменклатуры.СчетУчета
	|					И ВидыПоНаименованию.СчетУчетаПередачи = СчетаУчетаНоменклатуры.СчетУчетаПередачи
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СчетаСовпадают,
	|	СУММА(ВЫБОР
	|			КОГДА ВидыПоНаименованию.СчетУчета <> СчетаУчетаНоменклатуры.СчетУчета
	|					ИЛИ ВидыПоНаименованию.СчетУчетаПередачи <> СчетаУчетаНоменклатуры.СчетУчетаПередачи
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СчетаНеСовпадают
	|ИЗ
	|	ВидыПоНаименованию КАК ВидыПоНаименованию
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаНоменклатуры КАК СчетаУчетаНоменклатуры
	|		ПО ВидыПоНаименованию.ВидНоменклатуры = СчетаУчетаНоменклатуры.ВидНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыПоНаименованию.ВидНоменклатуры";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строки Из Результат Цикл
		Если ЗначениеЗаполнено(Строки.ВидНоменклатуры)
			И Строки.СчетаСовпадают > 0
			И Строки.СчетаНеСовпадают = 0 Тогда
			Попытка
				ВидНоменклатурыОбъект = Строки.ВидНоменклатуры.ПолучитьОбъект();
				ВидНоменклатурыОбъект.Наименование = ВидНоменклатурыОбъект.Наименование + НСтр("ru = ' (применяется до 2022 года)'");
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ВидНоменклатурыОбъект);
			Исключение
				ШаблонСообщения = НСтр("ru = 'Не удалось обработать вид номенклатуры
		                               |%1'");
				ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(
					ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Справочники.ВидыНоменклатуры,
					Строки.ВидНоменклатуры,
					ТекстСообщения);
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

#КонецЕсли