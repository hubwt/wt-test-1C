
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//
	//ДатаОстатков = Неопределено;
	//Параметры.Свойство("ДатаОстатков", ДатаОстатков);
	//Если ДатаОстатков = Неопределено Тогда
	//	ДатаОстатков = ТекущаяДата();
	//Иначе
	//	ДатаОстатков = Новый Граница(ДатаОстатков, ВидГраницы.Исключая);
	//КонецЕсли;
	//
	
	//
	//Список.Параметры.УстановитьЗначениеПараметра("ДатаОстатков", ДатаОстатков);        
	//Список.Параметры.УстановитьЗначениеПараметра("Склад", Склад);
	//Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", Номенклатура);
	//Список.Параметры.УстановитьЗначениеПараметра("Номенклатура1", Номенклатура);
	//Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоНоменклатуре", ЗначениеЗаполнено(Номенклатура));
	//Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоСкладу", ЗначениеЗаполнено(Склад));
	
	///+ГомзМА 01.02.2024
	МассивНедопустимыхПолок = Новый Массив;
	МассивНедопустимыхПолок.Добавить(Справочники.Стеллаж.НайтиПоКоду("000001068")); //RegionEKB
	МассивНедопустимыхПолок.Добавить(Справочники.Стеллаж.НайтиПоКоду("000002014")); //RegionMSK
	МассивНедопустимыхПолок.Добавить(Справочники.Стеллаж.НайтиПоКоду("000002015")); //RegionNN

	Если Параметры.Свойство("Отбор") Тогда
		Номенклатура = Неопределено;
		Параметры.Свойство("Склад", Склад);
		
		Параметры.Отбор.Свойство("Владелец", Номенклатура);
	
		Список.Параметры.УстановитьЗначениеПараметра("МассивНедопустимыхПолок", МассивНедопустимыхПолок); 
		Если НЕ Номенклатура = Неопределено Тогда
			Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", Номенклатура);
		КонецЕсли;
	КонецЕсли;
	///-ГомзМА 01.02.2024
		
	ЗаполнитьСписки();
	СкладПриИзмеренииСервер();
КонецПроцедуры



#КонецОбласти

&НаСервере
Процедура ЗаполнитьСписки()
	
	ЗапросСклада = Новый Запрос;	
	ЗапросСклада.Текст = 
	"ВЫБРАТЬ
	|	Склады.Ссылка КАК Ссылка,
	|	Склады.Наименование КАК Представление
	|ИЗ
	|	Справочник.Склады КАК Склады
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Элементы.Склад.СписокВыбора.Очистить();
	Элементы.Склад.СписокВыбора.Добавить(Справочники.Склады.ПустаяСсылка(), "ВСЕ");
	
	ВыборкаДетальныеЗаписиСклада = ЗапросСклада.Выполнить().Выбрать();
	
	Пока ВыборкаДетальныеЗаписиСклада.Следующий() Цикл	
		Элементы.Склад.СписокВыбора.Добавить(ВыборкаДетальныеЗаписиСклада.Ссылка, ВыборкаДетальныеЗаписиСклада.Представление);	
	КонецЦикла;
	
КонецПроцедуры


#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура СкладПриИзменении(Элемент)	
	СкладПриИзмеренииСервер();	
КонецПроцедуры

&НаСервере
Процедура СкладПриИзмеренииСервер()
	
	Если ЗначениеЗаполнено(Склад) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, 
		"Склад", 
		Склад, // Значение отбора
		ВидСравненияКомпоновкиДанных.Равно,, Истина);
	Иначе
		склады = Элементы.склад.СписокВыбора.ВыгрузитьЗначения();
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, 
		"Склад", 
		склады, // Значение отбора
		ВидСравненияКомпоновкиДанных.ВСписке,, Истина);
	КонецЕсли;
	//Список.Параметры.УстановитьЗначениеПараметра("Склад", Склад);
	//Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоСкладу", ЗначениеЗаполнено(Склад));

КонецПроцедуры // СкладПриИзмеренииСервер()

&НаСервере
Процедура СписокВыборЗначенияНаСервере(Ссылки)
	для Каждого СсылкаНаТовар из Ссылки Цикл
		Товар = СсылкаНаТовар.ПолучитьОбъект();
		Товар.распечатано = истина;
		Товар.записать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	 Если ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("ТаблицаФормы") тогда
		СписокВыборЗначенияНаСервере(Значение);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Если НЕ Тип(этаФорма.ВладелецФормы) = Тип("ТаблицаФормы") Тогда
	//	Номенклатура = Неопределено;
	//	Параметры.Свойство("Склад", Склад);
	//	Параметры.Отбор.Свойство("Владелец", Номенклатура);
	//	///+ГомзМА 01.02.2024
	//	Если Параметры.Свойство("ПроверкаНаРегион") Тогда
	//		МассивНедопустимыхПолок = ПолучитьНедопустимыеПолки();
	//		Список.Параметры.УстановитьЗначениеПараметра("МассивНедопустимыхПолок", МассивНедопустимыхПолок); 
	//	КонецЕсли;
	/////-ГомзМА 01.02.2024
	//	Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", Номенклатура);
	//КонецЕсли;
	//

	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы



#КонецОбласти

#Область ОбработчикиКомандФормы



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьНедопустимыеПолки()
	
	///+ГомзМА 01.02.2024
	МассивНедопустимыхПолок = Новый Массив;
	МассивНедопустимыхПолок.Добавить(Справочники.Стеллаж.НайтиПоКоду("000001068")); //RegionEKB
	МассивНедопустимыхПолок.Добавить(Справочники.Стеллаж.НайтиПоКоду("000002014")); //RegionMSK
	МассивНедопустимыхПолок.Добавить(Справочники.Стеллаж.НайтиПоКоду("000002015")); //RegionNN
	
	Возврат МассивНедопустимыхПолок;
	///-ГомзМА 01.02.2024

КонецФункции // ПолучитьНедопустимыеПолки()


#КонецОбласти