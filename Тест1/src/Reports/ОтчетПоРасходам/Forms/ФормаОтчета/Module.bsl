#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	Год = Год(ТекущаяДата());
	Месяц = Месяц(ТекущаяДата());
	ПосчитатьИтоги();
	
	// ++ obrv 11.05.18
	УстановитьВидимостьИДоступность();
	// -- obrv 11.05.18
	
	//СформироватьОтчеты();
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	// Вставить содержимое обработчика.
	ПосчитатьИтоги();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОстаткиБалансИзменение" Тогда
		
		Элементы.СписокОстатковНаСчёте.Обновить();
		СформироватьОтчеты();
		
	ИначеЕсли ИмяСобытия = "РаботыИзменение" Тогда
		
		СформироватьОтчеты();		
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьФункциональныеОпцииФормы();
	СформироватьОтчеты();
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы



#КонецОбласти

#Область ОбработчикиКомандФормы



#КонецОбласти



#Область СлужебныеПроцедурыИФункции





&НаСервере
Процедура ПосчитатьИтоги()
	
	РасчетОтданоБанку();
	РасчетВложено();
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СУММА(РасходыОстатки.СуммаОстаток) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрНакопления.Расходы.Остатки КАК РасходыОстатки
	               |ГДЕ
	               |	РасходыОстатки.ВидРасхода = &ВидРасхода";
	Запрос.УстановитьПараметр("ВидРасхода",Справочники.ВидыРасходов.НайтиПоНаименованию("Расходы на доставку"));
	//Запрос.УстановитьПараметр("ВидРасхода",Справочники.ВидыРасходов.НайтиПоКоду("000000003"));

	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
	РасхДост = Таблица.Итог("СуммаОстаток");
	//Сообщить("РасхДост " + РасхДост);
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СУММА(Расходы.Сумма) КАК СуммаОстаток
	               |ИЗ
	               |	Документ.Расходы КАК Расходы
	               |ГДЕ
	               |	Расходы.Проведен = ИСТИНА
	               |	И Расходы.Новые = ЛОЖЬ";
	//Запрос.Текст = "ВЫБРАТЬ
	//	          |	Расходы.Сумма  КАК СуммаОстаток
	//	          |ИЗ
	//	          |	Документ.Расходы КАК Расходы";
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
    ИтогоРасходов = Таблица.Итог("СуммаОстаток")-РасхДост;
	//Сообщить("Итого Расходов " + ИтогоРасходов);
	
	
	// ++ obrv 18.10.19
	ИтогоДоходов = 0;
	
	ТекстЗапроса = ТекстЗапросаОплаты();
	
	Если Не ПустаяСтрока(ТекстЗапроса) Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТ_Оплаты.СуммаДокумента КАК СуммаДокумента
		|ИЗ
		|	ВТ_Оплаты КАК ВТ_Оплаты
		|ГДЕ
		|	ВТ_Оплаты.СуммаОплаты >= ВТ_Оплаты.СуммаДокумента";	
		
		
		Реультат = Запрос.Выполнить();
		Таблица = Реультат.Выгрузить();
		ИтогоДоходов = Таблица.Итог("СуммаДокумента");
		
	КонецЕсли;
	// -- obrv 18.10.19
	
	//Сообщить("Итого доходов " + ИтогоДоходов);	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ПродажаЗапчастей.Откат) КАК Откат
	               |ИЗ
	               |	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	               |ГДЕ
	               |	ПродажаЗапчастей.Новые = ЛОЖЬ";
				   
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
	отк = Таблица.Итог("Откат");
	ИтогоДоходов = ИтогоДоходов - Таблица.Итог("Откат");
	//Сообщить("Итого откат " + отк);	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ЛичныеРасходыОстатки.СуммаОстаток) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрНакопления.ЛичныеРасходы.Остатки КАК ЛичныеРасходыОстатки";
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
	ЛичныеРасходы = Таблица.Итог("СуммаОстаток");
	//Сообщить("ЛичныеРасходы " + ЛичныеРасходы);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ПриходДенегОстатки.СуммаОстаток) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрНакопления.ПриходДенег.Остатки КАК ПриходДенегОстатки";
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
	НаличныеДеньги = Таблица.Итог("СуммаОстаток");
	//Сообщить("НаличныеДеньги " + НаличныеДеньги);

	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ОтданоСМашиныОстатки.СуммаОстаток) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрНакопления.ОтданоСМашины.Остатки КАК ОтданоСМашиныОстатки
	               |ГДЕ
	               |	ОтданоСМашиныОстатки.Кто = 1";
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
	ОтданоКазанцам = Таблица.Итог("СуммаОстаток");
	//Сообщить("ОтданоКазанцам " + ОтданоКазанцам);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ОтданоСМашиныОстатки.СуммаОстаток) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрНакопления.ОтданоСМашины.Остатки КАК ОтданоСМашиныОстатки
	               |ГДЕ
	               |	ОтданоСМашиныОстатки.Кто = 2";
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
	ВыведеноНам = Таблица.Итог("СуммаОстаток");
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ОтданоСМашиныОстатки.СуммаОстаток) КАК СуммаОстаток
	               |ИЗ
	               |	РегистрНакопления.ОтданоСМашины.Остатки КАК ОтданоСМашиныОстатки
	               |ГДЕ
	               |	ОтданоСМашиныОстатки.Кто = 3";
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
	Артем = Таблица.Итог("СуммаОстаток");

	
	НаличныеДеньги = НаличныеДеньги;
	
	ДенегНаРуках = НаличныеДеньги - ЛичныеРасходы;
	
	Запрос.Текст =
	// ++ obrv 18.10.19
		"ВЫБРАТЬ
		|	ВТ_Оплаты.СуммаОплаты КАК СуммаОплаты,
		|	ВТ_Оплаты.СуммаДокумента КАК СуммаДокумента
		|ИЗ
		|	ВТ_Оплаты КАК ВТ_Оплаты
		|ГДЕ
		|	ВТ_Оплаты.СуммаОплаты < ВТ_Оплаты.СуммаДокумента";	
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
	часть = Таблица.Итог("СуммаОплаты");
	// -- obrv 18.10.19
	
	//Сообщить("часть " + часть);
	
	РазборДолг = Таблица.Итог("СуммаДокумента")-часть;
	
	РазборДенегНаРуках = ИтогоДоходов +часть - ОтданоКазанцам -ИтогоРасходов-ВыведеноНам-Артем;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОбработанныеРасходыОстатки.суммаОстаток
	               |ИЗ
	               |	РегистрНакопления.ОбработанныеРасходы.Остатки КАК ОбработанныеРасходыОстатки";
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
	ВремРезультат = Таблица.Итог("суммаОстаток");
    НеобработанныеРасходы = ИтогоРасходов - ВремРезультат; 
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(РасходыНовые.Остаток) КАК Остаток
	               |ИЗ
	               |	Документ.РасходыНовые КАК РасходыНовые
	               |ГДЕ
	               |	РасходыНовые.Остаток > 0";
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
	НеобработанныеРасходыН = Таблица.Итог("Остаток");	
	
	
	
	
	
	
	
	
	
	
	
	
	//=======================================================
	// ++ obrv 05.10.18
	КредитВБанке = 0;
	ПравоДоступаКредиты = ПравоДоступа("Чтение", Метаданные.Справочники.ВложенияВолжска);
	Если ПравоДоступаКредиты Тогда
		// -- obrv 05.10.18
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ВложенияВолжска.Сумма) КАК Сумма
		|ИЗ
		|	Справочник.ВложенияВолжска КАК ВложенияВолжска";
		КредитВБанке = Запрос.Выполнить().Выгрузить().Итог("Сумма");
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Расходы.Сумма
	               |ИЗ
	               |	Документ.Расходы КАК Расходы
	               |ГДЕ
	               |	Расходы.ВидРасхода = &ВидРасхода
	               |	И Расходы.Проведен = ИСТИНА";
	Запрос.УстановитьПараметр("ВидРасхода", Справочники.ВидыРасходов.НайтиПоКоду("000000010"));			   
	отдано_кредитов = запрос.Выполнить().Выгрузить().Итог("Сумма");
	
	// ++ obrv 05.10.18
	ОсталосьОтбить = 0;
	Если ПравоДоступаКредиты Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенияВолжска.СуммаДолга
		|ИЗ
		|	Справочник.ВложенияВолжска КАК ВложенияВолжска";
		//Вложено = Вложено + Запрос.Выполнить().Выгрузить().Итог("Сумма");
		;
		
		ОсталосьОтбить = Запрос.Выполнить().Выгрузить().Итог("СуммаДолга") - отдано_кредитов;
	КонецЕсли;
	// -- obrv 05.10.18
	
	РасчетГрафика();
	ПосчитатьИтогиМ();
	
	//Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СУММА(Расходы.Сумма) КАК СуммаОстаток
	               |ИЗ
	               |	Документ.Расходы КАК Расходы
	               |ГДЕ
	               |	Расходы.Проведен = ИСТИНА
	               |	И Расходы.Новые = ИСТИНА";
	//Запрос.Текст = "ВЫБРАТЬ
	//	          |	Расходы.Сумма  КАК СуммаОстаток
	//	          |ИЗ
	//	          |	Документ.Расходы КАК Расходы";
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
    РасходыНовых = Таблица.Итог("СуммаОстаток");

	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ПродажаЗапчастей.ИтогоРекв) КАК Поле1
	               |ИЗ
	               |	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	               |ГДЕ
	               |	ПродажаЗапчастей.Оплачено = ИСТИНА
	               |	И ПродажаЗапчастей.Новые = ИСТИНА";
	Реультат = Запрос.Выполнить();
    Таблица = Реультат.Выгрузить();
	ПродажиНовых = Таблица.Итог("Поле1");
	НаРукахНовые = ПродажиНовых-РасходыНовых;
	//================================================
	ЗапчастейНаСумму = 0;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегистрНакопления1Остатки.Товар,
	               |	РегистрНакопления1Остатки.машина,
	               |	ИндНомер.Цена КАК цена,
	               |	РегистрНакопления1Остатки.КолвоОстаток,
	               |	Комментарии.Комментарий,
	               |	ИндНомер.Код,
	               |	(ВЫРАЗИТЬ(РегистрНакопления1Остатки.Товар.РекомендованаяЦена * ИндНомер.наценка.Коофициент / 10 КАК ЧИСЛО(10, 0))) * 10 * РегистрНакопления1Остатки.КолвоОстаток КАК наценкаФ
	               |ИЗ
	               |	РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Комментарии КАК Комментарии
	               |		ПО (Комментарии.Товар = РегистрНакопления1Остатки.Товар)
	               |			И (Комментарии.Машина = РегистрНакопления1Остатки.машина)
	               |			И (Комментарии.индкод = РегистрНакопления1Остатки.индкод)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК ИндНомер
	               |		ПО (ИндНомер.индкод = РегистрНакопления1Остатки.индкод)";
	ЗапчастейНаСумму = Запрос.Выполнить().Выгрузить().Итог("наценкаФ");
	
		
	запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ПродажаЗапчастей.ОстатокДенег) КАК ОстатокДенег
	               |ИЗ
	               |	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	               |ГДЕ
	               |	ПродажаЗапчастей.Проведен = ИСТИНА
	               |	И ПродажаЗапчастей.Новые <> ИСТИНА";
	ПоЧастямВсего = Запрос.Выполнить().Выгрузить().Итог("ОстатокДенег");
	
	
	//=======================================================
	запрос.Текст = "ВЫБРАТЬ
	               |	ВыводС1ЯнваряОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрНакопления.ВыводС1Января.Остатки КАК ВыводС1ЯнваряОстатки
	               |ГДЕ
	               |	ВыводС1ЯнваряОстатки.Кто = 2";
	НасС1Января = запрос.Выполнить().Выгрузить().Итог("СуммаОстаток");
	запрос.Текст = "ВЫБРАТЬ
	               |	ВыводС1ЯнваряОстатки.СуммаОстаток
	               |ИЗ
	               |	РегистрНакопления.ВыводС1Января.Остатки КАК ВыводС1ЯнваряОстатки
	               |ГДЕ
	               |	ВыводС1ЯнваряОстатки.Кто = 1";
	МаратуС1Января = запрос.Выполнить().Выгрузить().Итог("СуммаОстаток");
	
	ДеньгиНаЗакупку = Макс(ОсталосьОтбить,-ОсталосьОтбить)-ВыведеноНам + НасС1Января;
	РазборДенегНаруках = РазборДенегНаруках - МаратуС1Января + КредитВБанке - Вложено;
    ОсталосьОтдатьМарату = НасС1Января - МаратуС1Января; 
	
	запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	БалансОстатки.БалансОстаток
	               |ИЗ
	               |	РегистрНакопления.Баланс.Остатки КАК БалансОстатки";
	РазборДенегНаруках = запрос.Выполнить().Выгрузить().Итог("БалансОстаток");
	
	запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ЛичныйВывод.Сумма) как сумма1
	               |ИЗ
	               |	Документ.ЛичныйВывод КАК ЛичныйВывод
	               |ГДЕ
	               |	ЛичныйВывод.Проведен = ИСТИНА";
	
	// ++ obrv 11.08.20
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЛичныйВывод) Тогда
		ВыведеноНам = запрос.Выполнить().Выгрузить().Итог("сумма1");
	Иначе
		ВыведеноНам = 0;
	КонецЕсли;
	// -- obrv 11.08.20
	
	
	
	// Показатели для автосервиса
	Если ИспользоватьАвтосервис Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ПродажиОбороты.СуммаОборот) - СУММА(ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК СуммаВаловаяПрибыль,
		|	ПродажиОбороты.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТ_ВаловаяПрибыль
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(, , Регистратор, ) КАК ПродажиОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(, , Регистратор, ) КАК ПродажиСебестоимостьОбороты
		|		ПО ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.Регистратор
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Оплаты.СуммаТовары КАК СуммаТоварыВыручка,
		|	ВТ_ВаловаяПрибыль.СуммаВаловаяПрибыль КАК СуммаТоварыВаловаяПрибыль
		|ИЗ
		|	ВТ_Оплаты КАК ВТ_Оплаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВаловаяПрибыль КАК ВТ_ВаловаяПрибыль
		|		ПО ВТ_Оплаты.Документ = ВТ_ВаловаяПрибыль.Регистратор
		|			И ВТ_Оплаты.СуммаОплаты >= ВТ_Оплаты.СуммаДокумента";	
		
		ТаблицаРезультат =  Запрос.Выполнить().Выгрузить();
		ТоварыВыручка = ТаблицаРезультат.Итог("СуммаТоварыВыручка");
		ТоварыСебестоимость = ТоварыВыручка - ТаблицаРезультат.Итог("СуммаТоварыВаловаяПрибыль");
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыОрганизацийОбороты.Регистратор КАК Регистратор,
		|	ТоварыОрганизацийОбороты.Склад КАК Склад,
		|	ТоварыОрганизацийОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизацийОбороты.Партия КАК Партия,
		|	ТоварыОрганизацийОбороты.СтоимостьРасход КАК Стоимость,
		|	ТоварыОрганизацийОбороты.КоличествоРасход КАК КоличествоРасход,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизацийОбороты.Партия.ДокументПоступления.Контрагенты ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		КОГДА ТоварыОрганизацийОбороты.Партия.ДокументПоступления.Контрагенты В (&ПоставщикиБУ)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоБУ
		|ПОМЕСТИТЬ ВТ_СебестоимостьТоваровПоПоставщикам
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Обороты(, , Регистратор, ) КАК ТоварыОрганизацийОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Оплаты КАК ВТ_Оплаты
		|		ПО 	ВТ_Оплаты.Документ = ТоварыОрганизацийОбороты.Регистратор
		|			И ВТ_Оплаты.СуммаОплаты >= ВТ_Оплаты.СуммаДокумента
		|ГДЕ
		|	НЕ ТоварыОрганизацийОбороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА ПродажиОбороты.КоличествоОборот = 0
		|				ТОГДА 0
		|			ИНАЧЕ ЕСТЬNULL(ВТ_СебестоимостьТоваровПоПоставщикам.КоличествоРасход, 0) * ПродажиОбороты.СуммаОборот / ПродажиОбороты.КоличествоОборот
		|		КОНЕЦ) КАК СуммаВыручка,
		|	ЕСТЬNULL(ВТ_СебестоимостьТоваровПоПоставщикам.ЭтоБУ, ЛОЖЬ) КАК ЭтоБУ
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(, , Регистратор, ) КАК ПродажиОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Оплаты КАК ВТ_Оплаты
		|		ПО 	ВТ_Оплаты.Документ = ПродажиОбороты.Регистратор
		|			И ВТ_Оплаты.СуммаОплаты >= ВТ_Оплаты.СуммаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СебестоимостьТоваровПоПоставщикам КАК ВТ_СебестоимостьТоваровПоПоставщикам
		|		ПО ПродажиОбороты.Регистратор = ВТ_СебестоимостьТоваровПоПоставщикам.Регистратор
		|			И ПродажиОбороты.Номенклатура = ВТ_СебестоимостьТоваровПоПоставщикам.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_СебестоимостьТоваровПоПоставщикам.ЭтоБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СебестоимостьТоваровПоПоставщикам.ЭтоБУ КАК ЭтоБУ,
		|	СУММА(ВТ_СебестоимостьТоваровПоПоставщикам.Стоимость) КАК Стоимость
		|ИЗ
		|	ВТ_СебестоимостьТоваровПоПоставщикам КАК ВТ_СебестоимостьТоваровПоПоставщикам
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_СебестоимостьТоваровПоПоставщикам.ЭтоБУ";
		
		
		ПоставщикиБУ = Новый Массив();
		дт_ОбщегоНазначения.ДобавитьСсылкуВКоллекцию(ПоставщикиБУ, "Контрагенты", "525620015122", "ИНН");// ИП Рожков
		дт_ОбщегоНазначения.ДобавитьСсылкуВКоллекцию(ПоставщикиБУ, "Контрагенты", "5252044090", "ИНН");// Ворктрак
		
		Запрос.УстановитьПараметр("ПоставщикиБУ", ПоставщикиБУ);
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		Выборка = РезультатЗапроса[1].Выбрать();
		ТоварыНовыеПрибыль = 0;
		ТоварыБУПрибыль = 0;
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.ЭтоБУ Тогда
				ТоварыБУПрибыль = ТоварыБУПрибыль + Выборка.СуммаВыручка;
			Иначе	
				ТоварыНовыеПрибыль = ТоварыНовыеПрибыль + Выборка.СуммаВыручка;
			КонецЕсли;	
		КонецЦикла;
		
		Выборка = РезультатЗапроса[2].Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.ЭтоБУ Тогда
				ТоварыБУПрибыль = ТоварыБУПрибыль - Выборка.Стоимость;
			Иначе	
				ТоварыНовыеПрибыль = ТоварыНовыеПрибыль - Выборка.Стоимость;
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	ЕжедневныеРасходы.ПредельныйРасход КАК ПредельныйРасход,
	 |	ЕжедневныеРасходы.Период КАК Период
	 |ИЗ
	 |	РегистрСведений.ЕжедневныеРасходы КАК ЕжедневныеРасходы
	 |ГДЕ
	 |	ЕжедневныеРасходы.Период = &Период";
	 запрос.УстановитьПараметр("Период",НачалоДня(ТекущаяДата()));
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ЕжедневныеРасходы = выборка.ПредельныйРасход;
КонецПроцедуры


&НаСервере
Процедура РасчетГрафика()
	
	Графики.ТипДиаграммы = ТипДиаграммы.Гистограмма;
	
	// ++ obrv 11.05.18
	ПоказатьЛичныеПродажи = НЕ РазрешеныОтчетыРуководителю;
	// -- obrv 11.05.18
	
	Если ИспользоватьАвтосервис Тогда
		СерияУслуги = Графики.УстановитьСерию("Услуги");
		СерияУслуги.Цвет = Новый Цвет(85,116,78); 
		
		СерияТовары = Графики.УстановитьСерию("Товары (прибыль)");
		СерияТовары.Цвет = Новый Цвет(123, 255, 5); 
	Иначе
		сер1 = Графики.УстановитьСерию("Продажи");
		сер1.Цвет = Новый Цвет(85,116,78); 
	КонецЕсли;
	
	// ++ obrv 11.05.18
	//сер2 = Графики.УстановитьСерию("Отдано в Банк"); 
	//сер2.Цвет = Новый Цвет(14,37,99); 
	Если ПоказатьЛичныеПродажи Тогда
	
		СерияЛичныеПродажи = Графики.УстановитьСерию("Продажи личные"); 
		СерияЛичныеПродажи.Цвет = WebЦвета.БледноЗеленый;
		
	КонецЕсли;
	// -- obrv 11.05.18
	сер3 = Графики.УстановитьСерию("Расходы");
	сер3.Цвет = Новый Цвет(208,42,53); 
	
	// ++ obrv 11.05.18
	Если РазрешеныОтчетыРуководителю Тогда
		
		сер2 = Графики.УстановитьСерию("Отдано в Банк"); 
		сер2.Цвет = Новый Цвет(14,37,99); 
		
	КонецЕсли;
	// -- obrv 11.05.18
	
	// ++ obrv 12.09.19
	Текст = ТекстЗапросаОплаты();
	Если Не ПустаяСтрока(Текст) Тогда
		
		Текст = Текст + ";" + Символы.ПС +
		"ВЫБРАТЬ
		|	СУММА(ПродажиОбороты.СуммаОборот) - СУММА(ЕСТЬNULL(ПродажиСебестоимостьОбороты.СтоимостьОборот, 0)) КАК СуммаВаловаяПрибыль,
		|   СУММА(ПродажиОбороты.СуммаОборот) КАК СуммаВыручка,
		|	ПродажиОбороты.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТ_ВаловаяПрибыль
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(&Дата1, &Дата2, Регистратор, &Условие) КАК ПродажиОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиСебестоимость.Обороты(&Дата1, &Дата2, Регистратор, ) КАК ПродажиСебестоимостьОбороты
		|		ПО ПродажиОбороты.Регистратор = ПродажиСебестоимостьОбороты.Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Оплаты.СуммаТовары КАК СуммаТоварыВыручка,
		|	ВТ_Оплаты.СуммаУслуги КАК СуммаУслугиВыручка,
		|	ВТ_Оплаты.СуммаДокумента КАК СуммаДокумента,
		|	ВЫБОР
		|		КОГДА ВТ_Оплаты.СуммаОплаты > ВТ_ВаловаяПрибыль.СуммаВаловаяПрибыль
		|			ТОГДА ВТ_ВаловаяПрибыль.СуммаВаловаяПрибыль
		|		ИНАЧЕ ВТ_Оплаты.СуммаОплаты
		|	КОНЕЦ КАК СуммаВаловаяПрибыльОплаченная,
		|	ВЫБОР
		|		КОГДА ВТ_Оплаты.СуммаОплаты > ВТ_ВаловаяПрибыль.СуммаВыручка
		|			ТОГДА ВТ_ВаловаяПрибыль.СуммаВыручка
		|		ИНАЧЕ ВТ_Оплаты.СуммаОплаты
		|	КОНЕЦ КАК СуммаВыручкаОплаченная,
		|	ВТ_ВаловаяПрибыль.СуммаВаловаяПрибыль КАК СуммаТоварыВаловаяПрибыль
		|ИЗ
		|	ВТ_Оплаты КАК ВТ_Оплаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВаловаяПрибыль КАК ВТ_ВаловаяПрибыль
		|		ПО ВТ_Оплаты.Документ = ВТ_ВаловаяПрибыль.Регистратор
		|			И (ВТ_Оплаты.СуммаОплаты > 0)";	
		
		Если РольДоступна("дт_ЧтениеВсехПродажВГрафике")
			ИЛИ Пользователи.ЭтоПолноправныйПользователь() Тогда
			Условие = "";
		Иначе
			Условие = "Подразделение = &Подразделение";
		КонецЕсли;
		Текст = СтрЗаменить(Текст, "&Условие", Условие);
		
	КонецЕсли;
	// -- obrv 12.09.19
	
	// ++ obrv 20.11.19
	ВидРасходаКредитПлатеж = Справочники.ВидыРасходов.КредитПлатеж;
	// -- obrv 20.11.19
	
	Текст2 = "ВЫБРАТЬ  РАЗРЕШЕННЫЕ
	               |	СУММА(Расходы.Сумма) как сумма
	               |ИЗ
	               |	Документ.Расходы КАК Расходы
	         |ГДЕ
	         |	Расходы.ВидРасхода = &ВидРасхода И Расходы.Дата МЕЖДУ &Дата1 И &Дата2
	         |	И Расходы.Проведен = ИСТИНА";
	Запрос = Новый Запрос;
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Подразделение", дт_ПраваДоступа.ТекущееПодразделение());
	
	Марату = Новый Запрос;
	Марату.Текст = Текст2;
	// ++ obrv 20.11.19
	//Марату.УстановитьПараметр("ВидРасхода",Справочники.ВидыРасходов.НайтиПоКоду("000000010")); // Кредит платеж
	Марату.УстановитьПараметр("ВидРасхода", ВидРасходаКредитПлатеж);
	// -- obrv 20.11.19
	
	ЗапрРасход = Новый Запрос;
	ЗапрРасход.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Расходы.Сумма
	               |ИЗ
	               |	Документ.Расходы КАК Расходы
	               |ГДЕ
	               |	Расходы.Дата МЕЖДУ &Дата1 И &Дата2";
	
	// ++ obrv 05.10.18
	// Добавить к расходам Личный вывод. Исключим расходы вида Кредит платеж
	ЗапрРасход.Текст  = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Расходы.Сумма КАК Сумма
	|ИЗ
	|	Документ.Расходы КАК Расходы
	|ГДЕ
	|	Расходы.Дата МЕЖДУ &Дата1 И &Дата2
	|	И Расходы.Проведен
	|	И НЕ Расходы.ВидРасхода В (&ВидыРасходаИсключить)";
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЛичныйВывод) Тогда
		ЗапрРасход.Текст = ЗапрРасход.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛичныйВывод.Сумма
		|ИЗ
		|	Документ.ЛичныйВывод КАК ЛичныйВывод
		|ГДЕ
		|	ЛичныйВывод.Дата МЕЖДУ &Дата1 И &Дата2
		|	И ЛичныйВывод.Проведен";
		
	КонецЕсли;
	
	
	ВидыРасходаИсключить = Новый Массив();
	ВидыРасходаИсключить.Добавить(ВидРасходаКредитПлатеж);
	
	// Для автосервиса расходы выводим без затрат на покупку з/ч
	Если ИспользоватьАвтосервис Тогда
		ВидыРасходаИсключить = Справочники.ВидыРасходов.ВидыРасходовЗакупкаНовые(ВидыРасходаИсключить);
		ВидыРасходаИсключить = Справочники.ВидыРасходов.ВидыРасходовЗакупкаБУ(ВидыРасходаИсключить);
	КонецЕсли;
	
	ЗапрРасход.УстановитьПараметр("ВидыРасходаИсключить", ВидыРасходаИсключить);
	// -- obrv 05.10.18
				   
	ДатаНачала = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-11));
	ДатаОкончания = ТекущаяДата();
    
    Периоды = Новый ТаблицаЗначений;
    Периоды.Колонки.Добавить("Период");
    Периоды.Колонки.Добавить("ДатаНачала");
    Периоды.Колонки.Добавить("ДатаОкончания");
    Периоды.Колонки.Добавить("Точка");
	
	// ++ obrv 11.05.18
	// Получим данные по личным продажам
	Если ПоказатьЛичныеПродажи Тогда
		
		Ответственный = Пользователи.ТекущийПользователь();
		
		ЗапросЛичныеПродажи = Новый Запрос;
		ЗапросЛичныеПродажи.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
		ЗапросЛичныеПродажи.УстановитьПараметр("КтоПродал", Ответственный);
		ЗапросЛичныеПродажи.УстановитьПараметр("НачалоПериода", ДатаНачала);
		ЗапросЛичныеПродажи.УстановитьПараметр("КонецПериода", ДатаОкончания);
		
		СформироватьВТДокументыПоОтветственному(ДатаНачала, ДатаОкончания, Ответственный, ЗапросЛичныеПродажи.МенеджерВременныхТаблиц);
		
		ТекстЗапроса = ТекстЗапросаОплаты("(&НачалоПериода, &КонецПериода, Месяц, Документ В (ВЫБРАТЬ втДокументыПоОтветственному.Ссылка ИЗ втДокументыПоОтветственному))", Истина, Ложь);
		
		ТаблицаЛичныеПродажи = Неопределено;
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			
			ЗапросЛичныеПродажи.Текст = ТекстЗапроса;
			ЗапросЛичныеПродажи.Выполнить();
			
			ЗапросЛичныеПродажи.Текст = 
			"ВЫБРАТЬ
			|	ВТ_Оплаты.СуммаТовары КАК СуммаТовары,
			|	ВТ_Оплаты.Период КАК Период
			|ПОМЕСТИТЬ ВТ_ОплаченныеСделки
			|ИЗ
			|	ВТ_Оплаты КАК ВТ_Оплаты
			|ГДЕ
			|	ВТ_Оплаты.СуммаОплаты >= ВТ_Оплаты.СуммаДокумента
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ОплаченныеСделки.Период КАК Период,
			|	СУММА(ВТ_ОплаченныеСделки.СуммаТовары) КАК Сумма
			|ИЗ
			|	ВТ_ОплаченныеСделки КАК ВТ_ОплаченныеСделки
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ОплаченныеСделки.Период";	
			
			
			ТаблицаЛичныеПродажи = ЗапросЛичныеПродажи.Выполнить().Выгрузить();
			
		КонецЕсли;
		
		
		
	КонецЕсли;
	// -- obrv 11.05.18

    Пока ДатаНачала < ДатаОкончания Цикл
        Строка = Периоды.Добавить();
        Строка.Период = Формат(ДатаНачала, "ДФ=ММ");
        Строка.ДатаНачала = ДатаНачала;
        Строка.ДатаОкончания = Мин(ДатаОкончания, КонецМесяца(ДатаНачала));
		Если Строка.Период = "01" Тогда
			Строка.Точка = Графики.УстановитьТочку("Январь "+Формат(ДатаНачала, "ДФ=гггг"));;
		КонецЕсли;
		Если Строка.Период = "02" Тогда
			Строка.Точка = Графики.УстановитьТочку("Февраль "+Формат(ДатаНачала, "ДФ=гггг"));;;
		КонецЕсли;
		Если Строка.Период = "03" Тогда
			Строка.Точка = Графики.УстановитьТочку("Март "+Формат(ДатаНачала, "ДФ=гггг"));;;
		КонецЕсли;
		Если Строка.Период = "04" Тогда
			Строка.Точка = Графики.УстановитьТочку("Апрель "+Формат(ДатаНачала, "ДФ=гггг"));;;
		КонецЕсли;
		Если Строка.Период = "05" Тогда
			Строка.Точка = Графики.УстановитьТочку("Май "+Формат(ДатаНачала, "ДФ=гггг"));;;
		КонецЕсли;
		Если Строка.Период = "06" Тогда
			Строка.Точка = Графики.УстановитьТочку("Июнь "+Формат(ДатаНачала, "ДФ=гггг"));;;
		КонецЕсли;
		Если Строка.Период = "07" Тогда
			Строка.Точка = Графики.УстановитьТочку("Июль "+Формат(ДатаНачала, "ДФ=гггг"));;;
		КонецЕсли;
		Если Строка.Период = "08" Тогда
			Строка.Точка = Графики.УстановитьТочку("Август "+Формат(ДатаНачала, "ДФ=гггг"));;;
		КонецЕсли;
		Если Строка.Период = "09" Тогда
			Строка.Точка = Графики.УстановитьТочку("Сентябрь "+Формат(ДатаНачала, "ДФ=гггг"));;;
		КонецЕсли;
		Если Строка.Период = "10" Тогда
			Строка.Точка = Графики.УстановитьТочку("Октябрь "+Формат(ДатаНачала, "ДФ=гггг"));;;
		КонецЕсли;
		Если Строка.Период = "11" Тогда
			Строка.Точка = Графики.УстановитьТочку("Ноябрь "+Формат(ДатаНачала, "ДФ=гггг"));;;
		КонецЕсли;
		Если Строка.Период = "12" Тогда
			Строка.Точка = Графики.УстановитьТочку("Декабрь "+Формат(ДатаНачала, "ДФ=гггг"));;;
		КонецЕсли;
        ДатаНачала = Строка.ДатаОкончания+1;
	КонецЦикла;
	Для Каждого стр Из Периоды Цикл
		Запрос.УстановитьПараметр("Дата1",стр.ДатаНачала);
		Запрос.УстановитьПараметр("Дата2",стр.ДатаОкончания);
		Марату.УстановитьПараметр("Дата1",стр.ДатаНачала);
		Марату.УстановитьПараметр("Дата2",стр.ДатаОкончания);
		ЗапрРасход.УстановитьПараметр("Дата1",стр.ДатаНачала);
		ЗапрРасход.УстановитьПараметр("Дата2",стр.ДатаОкончания);
		// ++ obrv 11.05.18
		//ЯнварьМ = Марату.Выполнить().Выгрузить().Итог("сумма");
		// -- obrv 11.05.18
		ЯнварьР = ЗапрРасход.Выполнить().Выгрузить().Итог("Сумма");
		
		// Продажи
		Если ИспользоватьАвтосервис Тогда
			СуммаУслуги = Запрос.Выполнить().Выгрузить().Итог("СуммаУслугиВыручка");
			СуммаТовары = Запрос.Выполнить().Выгрузить().Итог("СуммаТоварыВаловаяПрибыль");
			Графики.УстановитьЗначение(стр.Точка, СерияУслуги, СуммаУслуги);
			Графики.УстановитьЗначение(стр.Точка, СерияТовары, СуммаТовары);
		Иначе
			Январь = Запрос.Выполнить().Выгрузить().Итог("СуммаВыручкаОплаченная");
			Графики.УстановитьЗначение(стр.Точка,сер1,Январь);
		КонецЕсли;
		
		
		// ++ obrv 11.05.18
		//Графики.УстановитьЗначение(стр.Точка,сер2,ЯнварьМ);
		
		Если ПоказатьЛичныеПродажи Тогда
			СуммаЛичныеПродажи = 0;
			
			Если ТаблицаЛичныеПродажи <> Неопределено Тогда
				
				СтрокаТаблицыЛичныеПродажи = ТаблицаЛичныеПродажи.Найти(стр.ДатаНачала, "Период");
				Если СтрокаТаблицыЛичныеПродажи <> Неопределено Тогда
					СуммаЛичныеПродажи = СтрокаТаблицыЛичныеПродажи.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			Графики.УстановитьЗначение(стр.Точка, СерияЛичныеПродажи, СуммаЛичныеПродажи);

		КонецЕсли;
		// -- obrv 11.05.18
		Графики.УстановитьЗначение(стр.Точка,сер3,ЯнварьР);
		
		// ++ obrv 11.05.18
		Если РазрешеныОтчетыРуководителю Тогда
			
			ЯнварьМ = Марату.Выполнить().Выгрузить().Итог("сумма");
			Графики.УстановитьЗначение(стр.Точка,сер2,ЯнварьМ);
			
		КонецЕсли;
		// -- obrv 11.05.18
	КонецЦикла;
	
	// Легенда перекрывает график
	Графики.ОтображатьЛегенду = Ложь;
	
КонецПроцедуры


&НаСервере
Процедура ПосчитатьИтогиМ()
	Если Год >= 2011 ИЛИ  Месяц > 0 Тогда
		 податам = истина;
		 Если Месяц  > 0 И Год < 2011 Тогда
			 Год = Год(ТекущаяДата());
		 КонецЕсли;
		 Если Месяц > 0 Тогда
			Дат1 = Дата(Год,Месяц,1);
			Дат2 = КонецМесяца(Дат1);
		Иначе
		   Дат1 = Дата(Год,1,1);
		   Дат2 = КонецГода(Дат1);
	   КонецЕсли;
	 КонецЕсли;

    Текст = "ВЫБРАТЬ
	        |	ПродажаЗапчастей.ИтогоРекв
	        |ИЗ
	        |	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	        |ГДЕ
	        |	ПродажаЗапчастей.Дата МЕЖДУ &Дата1 И &Дата2
	        |	И ПродажаЗапчастей.Оплачено = ИСТИНА";
	Запрос = Новый Запрос;
	Запрос.Текст = Текст;
	ЗапрРасход = Новый Запрос;
	ЗапрРасход.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Расходы.Сумма
	               |ИЗ
	               |	Документ.Расходы КАК Расходы
	               |ГДЕ
	               |	Расходы.Дата МЕЖДУ &Дата1 И &Дата2";
	//===============================================================
	Запрос.УстановитьПараметр("Дата1",Дат1);
	Запрос.УстановитьПараметр("Дата2",Дат2);
	ЗапрРасход.УстановитьПараметр("Дата1",Дат1);
	ЗапрРасход.УстановитьПараметр("Дата2",Дат2);
	ИтогоМесяц = Запрос.Выполнить().Выгрузить().Итог("ИтогоРекв");
	РасходовМесяц = ЗапрРасход.Выполнить().Выгрузить().Итог("Сумма");
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВыводДенегИзРазборки.Нам,
	               |	ВыводДенегИзРазборки.Марату
	               |ИЗ
	               |	Документ.ВыводДенегИзРазборки КАК ВыводДенегИзРазборки
	               |ГДЕ
	               |	ВыводДенегИзРазборки.Дата МЕЖДУ &Дата1 И &Дата2";
	Запрос.УстановитьПараметр("Дата1",Дат1);
	Запрос.УстановитьПараметр("Дата2",Дат2);
	МаратуМесяц = Запрос.Выполнить().Выгрузить().Итог("Марату");
	НамМесяц = Запрос.Выполнить().Выгрузить().Итог("Нам");

КонецПроцедуры

&НаКлиенте
Процедура Месяц1ПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПосчитатьИтоги();

КонецПроцедуры

&НаКлиенте
Процедура Год1ПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПосчитатьИтоги();

КонецПроцедуры

&НаСервере
Процедура РасчетОтданоБанку()
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СУММА(Расходы.Сумма) как сумма
	               |ИЗ
	               |	Документ.Расходы КАК Расходы
	               |ГДЕ
	               |	Расходы.ВидРасхода = &ВидРасхода";
	запрос.УстановитьПараметр("ВидРасхода",Справочники.ВидыРасходов.НайтиПоКоду("000000010"));			   
	ОтданоБанку = запрос.Выполнить().Выгрузить().Итог("сумма");
КонецПроцедуры

&НаСервере
Процедура РасчетВложено()
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СУММА(Расходы.Сумма) КАК сумма
	               |ИЗ
	               |	Документ.Расходы КАК Расходы
	               |ГДЕ
	               |	Расходы.ВидРасхода.Наименование В(&ВидыРасхода)";
	// ++ obrv 20.11.19
	//ВидыРасхода = Новый Массив();
	//ВидыРасхода.Добавить("ЗАКУПКА ЕВРОПА");
	//ВидыРасхода.Добавить("ЗАКУПКА ЗАПЧАСТЕЙ РОССИЯ");
	ВидыРасхода = Справочники.ВидыРасходов.ВидыРасходовЗакупкаБУ();
	//запрос.УстановитьПараметр("ВидРасхода",Справочники.ВидыРасходов.НайтиПоКоду("000000009"));			   
	запрос.УстановитьПараметр("ВидыРасхода", ВидыРасхода);
	
	// -- obrv 20.11.19
	
	Вложено = запрос.Выполнить().Выгрузить().Итог("сумма");
	запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СУММА(Расходы.Сумма) как сумма
	               |ИЗ
	               |	Документ.Расходы КАК Расходы
	               |ГДЕ
	               |	Расходы.ВидРасхода В(&ВидыРасхода)";
	
	ВидыРасхода = Справочники.ВидыРасходов.ВидыРасходовЗакупкаНовые();
	запрос.УстановитьПараметр("ВидыРасхода", ВидыРасхода);			   
	
	ВложеноНовые = запрос.Выполнить().Выгрузить().Итог("сумма");
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьИДоступность()
	Элементы.ГруппаРасходыКомпании.Видимость =  ПолныеПрава Или Финансы();

	Элементы.ГруппаСетка.Видимость = РазрешеныОтчетыРуководителю;
	Элементы.ГруппаОстатокДС.Видимость = РазрешеныОтчетыРуководителю или Москвичи();
	
	Элементы.ГруппаПоказателиСтраницы.ТекущаяСтраница = ?(ИспользоватьАвтосервис, Элементы.ГруппаАвтосервис, Элементы.ГруппаОсновные);
	Элементы.ГруппаПоказателиСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	Элементы.ГруппаЗарплатаАвтосервис.Видимость = ИспользоватьАвтосервис И РазрешеныОтчетыРуководителю;
	
КонецПроцедуры // УстановитьВидимостьИДоступность()


&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
    ПолныеПрава = пользователи.РолиДоступны("ПолныеПрава");
	РазрешеныОтчетыРуководителю = РольДоступна("дт_ОтчетыРуководителю");	
	ИспользоватьАвтосервис = ПолучитьФункциональнуюОпцию("дт_ИспользоватьАвтосервис");
КонецПроцедуры // УстановитьФункциональныеОпцииФормы()

&НаСервере 
Функция Москвичи()

	Возврат Пользователи.РолиДоступны("Москва");
	
КонецФункции // УстановитьФункциональныеОпцииФормы()

&НаСервере 
Функция Финансы()

Возврат Пользователи.РолиДоступны("дт_Зарплата")Или Пользователи.РолиДоступны("МенеджерПоПродажам") ;

КонецФункции



&НаСервереБезКонтекста
Функция ТекстЗапросаОплаты(ПараметрыВиртТабл = "", Разрешенные = Истина, ИсключитьПродажиЗЧ = Ложь)

	ВидыДокументов = Новый Массив();
	Если НЕ ИсключитьПродажиЗЧ Тогда
		ВидыДокументов.Добавить("ПродажаЗапчастей");
	КонецЕсли;	
	ВидыДокументов.Добавить("ЗаказНаряд");
	ВидыДокументов.Добавить("ЗаказНаДоставку");
	
	ЕстьПериод = Ложь;
	
	Если Не ПустаяСтрока(ПараметрыВиртТабл) Тогда
		КлючевыеСлова = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Месяц,День,Год,Регистратор");
		Для Каждого КлючевоеСлово Из КлючевыеСлова Цикл
			
			ЕстьПериод = СтрНайти(ПараметрыВиртТабл, КлючевоеСлово) <> 0;
			Если ЕстьПериод Тогда
				Прервать
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
		
	
	
	ТекстЗапроса = "";
	ПервыйВид = Истина;
	
	
	
	
	Для каждого ВидДокумента Из ВидыДокументов Цикл
		
		Если НЕ ПравоДоступа("Чтение", Метаданные.Документы[ВидДокумента]) Тогда
			Продолжить
		КонецЕсли;
		
		
		ИмяПоляСумма = ?(ВидДокумента = "ПродажаЗапчастей", "ИтогоРекв", "СуммаДокумента");
		ИмяПоляСуммаУслуги = ?(ВидДокумента = "ЗаказНаряд", "Док.СуммаРаботы", "0");
		ИмяПоляСуммаТовары = ?(ВидДокумента = "ЗаказНаряд", "СуммаТовары", ИмяПоляСумма);
		
		ТекстЗапроса = ТекстЗапроса + 
		?(ПервыйВид, "ВЫБРАТЬ " + ?(Разрешенные, "РАЗРЕШЕННЫЕ", ""), Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + "ВЫБРАТЬ")
		+ "
		|	" + ?(ЕстьПериод, "ОплатыПоСделкамОбороты.Период КАК Период,", "") + "
		|	ОплатыПоСделкамОбороты.Документ КАК Документ,
		|	ОплатыПоСделкамОбороты.СуммаОборот КАК СуммаОплаты,
		|	Док." + ИмяПоляСумма + " КАК СуммаДокумента,
		|	Док." + ИмяПоляСуммаТовары + " КАК СуммаТовары,
		|	" + ИмяПоляСуммаУслуги + " КАК СуммаУслуги
		| " + ?(ПервыйВид, "ПОМЕСТИТЬ ВТ_Оплаты", "") + "
		|ИЗ
		|	РегистрНакопления.ОплатыПоСделкам.Обороты" + ПараметрыВиртТабл + " КАК ОплатыПоСделкамОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ." + ВидДокумента + " КАК Док
		|		ПО ОплатыПоСделкамОбороты.Документ = Док.Ссылка";
		
		ПервыйВид = Ложь;
	
	КонецЦикла;
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаОплаты()


Процедура СформироватьВТДокументыПоОтветственному(НачалоПериода, КонецПериода, Ответственный, МВТ, Разрешенные = Истина)
	
	ВидыДокументов = Новый Массив();
	ВидыДокументов.Добавить("ПродажаЗапчастей");
	ВидыДокументов.Добавить("ЗаказНаряд");

	
	ТекстЗапроса = "";
	ПервыйВид = Истина;
	
	Для каждого ВидДокумента Из ВидыДокументов Цикл
		
		Если НЕ ПравоДоступа("Чтение", Метаданные.Документы[ВидДокумента]) Тогда
			Продолжить
		КонецЕсли;
		
		
		ТекстЗапроса = ТекстЗапроса + 
		?(ПервыйВид, "ВЫБРАТЬ " + ?(Разрешенные, "РАЗРЕШЕННЫЕ", ""), Символы.ПС + "ОБЪЕДИНИТЬ" + Символы.ПС + "ВЫБРАТЬ")
		+ "
		|	Док.Ссылка КАК Ссылка
		| " + ?(ПервыйВид, "ПОМЕСТИТЬ втДокументыПоОтветственному", "") + "
		|ИЗ
		|	Документ." + ВидДокумента + ".Ответственные КАК Док
		|ГДЕ Док.Сотрудник = &Ответственный 
		|	И Док.Роль = ЗНАЧЕНИЕ(Перечисление.дт_РолиВПродаже.Продавец)
		|	И Док.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода";
		
		Если ВидДокумента = "ПродажаЗапчастей" Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|ОБЪЕДИНИТЬ
			|ВЫБРАТЬ
			|	Док.Ссылка
			|ИЗ
			|	Документ.ПродажаЗапчастей КАК Док
			|ГДЕ Док.КтоПродал = &Ответственный 
			|	И Док.Дата МЕЖДУ &НачалоПериода И &КонецПериода";
		КонецЕсли;
		
		ПервыйВид = Ложь;
	
	КонецЦикла;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Ответственный", Ответственный);
	
	Запрос.Выполнить();
	
КонецПроцедуры


&НаСервере
Функция СформироватьОтчеты()

	Если Элементы.ГруппаЗарплатаАвтосервис.Видимость Тогда
		
		СформироватьОтчетЗарплатаАвтосервис();
		
	КонецЕсли;
	
	Если Москвичи() И НЕ ПолныеПрава тогда
		ТекстЗапроса = СписокОстатковНаСчёте.ТекстЗапроса;
		Текстзапроса = ТекстЗапроса + " ГДЕ РегистрНакопленияБалансОстатки.Измерение1 = &Ссылка";
		СписокОстатковНаСчёте.ТекстЗапроса = Текстзапроса;
		СписокОстатковНаСчёте.Параметры.УстановитьЗначениеПараметра("Ссылка",Справочники.Счета.НайтиПоКоду("000000024"));
		СписокОстатковНаСчёте.Параметры.УстановитьЗначениеПараметра("Ссылка",Справочники.Счета.НайтиПоКоду("000000034"));
	КонецЕсли;
	

КонецФункции // СформироватьОтчеты()


// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура СформироватьОтчетЗарплатаАвтосервис()

	ТаблицаОтчетЗарплатаАвтосервис.Очистить();
	
	Если НЕ ПравоДоступа("Использование", Метаданные.Отчеты.ЗарплатаАвтосервис) Тогда
		Возврат
	КонецЕсли;
	
	ОтчетОбъект = РеквизитФормыВЗначение("ОтчетЗарплатаАвтосервис");
	
	Схема = ОтчетОбъект.ПолучитьМакет("ЗарплатаАвтосервис");
	ИмяВариантаНастроек = "Основной";
	
	ВариантНастроек = Схема.ВариантыНастроек.Найти(ИмяВариантаНастроек);
	
	Если ВариантНастроек <> Неопределено Тогда
		Настройки = ВариантНастроек.Настройки;
	Иначе
		Настройки = Схема.НастройкиПоУмолчанию;
	КонецЕсли;
	
	
	//ЭтаФорма.АдресСхемы = ПоместитьВоВременноеХранилище(Схема, ЭтаФорма.УникальныйИдентификатор);
	//
	//ОтчетОбъект.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ЭтаФорма.АдресСхемы));
	
	
	//КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	//КомпоновщикНастроек.ЗагрузитьНастройки(ПараметрыОтчета.НастройкиКомпоновкиДанных);
	ОтчетОбъект.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Схема));
	ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	Настройки = ОтчетОбъект.КомпоновщикНастроек.ПолучитьНастройки();
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериода", НачалоМесяца(ТекущаяДата()));
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериода", КонецМесяца(ТекущаяДата()));
	ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	
	ОтчетОбъект.СкомпоноватьРезультат(ТаблицаОтчетЗарплатаАвтосервис);
	
	//КомпоновкаДанныхСервер.СформироватьОтчет(ЭтаФорма, "ОтчетЗарплатаАвтосервис", "ЗарплатаАвтосервис", "Основной");

КонецПроцедуры // СформироватьОтчетЗарплатаАвтосервис()

&НаКлиенте
Процедура Команда1(Команда)
	СформироватьОтчетЗарплатаАвтосервис();
КонецПроцедуры


#КонецОбласти
