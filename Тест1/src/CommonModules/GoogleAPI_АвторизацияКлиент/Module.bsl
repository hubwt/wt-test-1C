
#Область КлючиПользователя

Процедура СохранитьФайлСКлючамиВTempПользователя(ПараметрыПользователя, СтрокаПараметровПользоватя) Экспорт 
	
	//проверка существования папки
	ПроверкаСуществования(ПараметрыПользователя.Путь, ПараметрыПользователя.ПолныйПутьКФайлу, СтрокаПараметровПользоватя);	
	
КонецПроцедуры

Процедура ПроверкаСуществования(Путь, ПолныйПутьКФайлу, СтрокаПараметровПользоватя)
	Файл = Новый Файл(Путь);
	Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПроверкаСуществованиеФайлаОкончание",ЭтотОбъект,Новый Структура("Путь, ПолныйПутьКФайлу, СтрокаПараметровПользоватя", Путь, ПолныйПутьКФайлу, СтрокаПараметровПользоватя)));
КонецПроцедуры

Процедура СоздатьКаталогНаКлиентеПослеСозданияКаталога(ИмяКаталога, ВходящийКонтекст) Экспорт
	
	Текст = Новый ЗаписьТекста(
	    ВходящийКонтекст.ПолныйПутьКФайлу, // имя
	    КодировкаТекста.ANSI, // кодировка
	    Символы.ПС, // разделитель строк (необ.)
	    Ложь // перезаписывать файл, а не дописывать в конец (необ.)
	);    
	Текст.ЗаписатьСтроку(ВходящийКонтекст.СтрокаПараметровПользоватя);
	Текст.Закрыть();
	
КонецПроцедуры

Процедура ПроверкаСуществованиеФайлаОкончание(Существует,ДополнительныеПараметры) Экспорт
	
	Если Не Существует Тогда  
		//если папки нет - создаем
		Оповещение = Новый ОписаниеОповещения(
			"СоздатьКаталогНаКлиентеПослеСозданияКаталога", ЭтотОбъект, ДополнительныеПараметры);
		НачатьСозданиеКаталога(Оповещение, ДополнительныеПараметры.Путь);
	Иначе 	
		СоздатьКаталогНаКлиентеПослеСозданияКаталога(ДополнительныеПараметры.Путь, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры	

Функция ПрочитатьФайлСКлючами(ПолныйПутьКФайлу) Экспорт 
	
    Текст = Новый ЧтениеТекста(
        ПолныйПутьКФайлу, // имя
        КодировкаТекста.ANSI, // кодировка
        Символы.ПС, // разделитель строк (необ.)
        ,
        Истина // монопольный режим (необ.)
    );
 
    Возврат Текст.Прочитать();
	
КонецФункции	

#КонецОбласти

