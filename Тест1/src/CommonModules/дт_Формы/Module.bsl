// (с) nov-soft v2 14.09.2021
#Область ПрограммныйИнтерфейс


Функция ЕстьРеквизитФормы(Форма, ИмяРеквизита) Экспорт

	Реквизиты = Форма.ПолучитьРеквизиты();
	
	Для каждого Реквизит Из Реквизиты Цикл
	
		Если Реквизит.Имя = ИмяРеквизита Тогда
			Возврат Истина;
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции // ЕстьРеквизитФормы()



Процедура УстановитьТочностьСумм(Форма, ИменаПолей) Экспорт

	Состав = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Форма.ИмяФормы, ".");
	
	Если Состав.Количество() < 2 Тогда 
		Возврат
	КонецЕсли;
	
	ИспользоватьКопейки = ПолучитьФункциональнуюОпцию("дт_ИспользоватьКопейки", Новый Структура("ВидДокумента", Состав[1]));
	
	Если ИспользоватьКопейки <> Ложь Тогда
		Возврат
	КонецЕсли;
	
	Состав = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаПолей, ",");
	Для каждого ИмяПоля Из Состав Цикл
	
		Форма.Элементы[ИмяПоля].ФорматРедактирования = "ЧДЦ=0";
	
	КонецЦикла;

КонецПроцедуры

Процедура ДобавитьЭлементы(Форма, ДобавляемыеЭлементы, Знач ЭлементДляВставки = Неопределено, ИмяОсновногоРеквизитаФормы = Неопределено, ПараметрыПолей = Неопределено) Экспорт
	
	Элементы = Форма.Элементы;
	Если ЭлементДляВставки <> Неопределено Тогда
		ЭлементДляВставки = Элементы.Найти(ЭлементДляВставки);
	КонецЕсли;
	
	Если ПараметрыПолей = Неопределено Тогда
		ПараметрыПолей = Новый Структура();
		ПараметрыПолей.Вставить("ИспользоватьТекстПодсказки", Ложь);
		ПараметрыПолей.Вставить("СуффиксИмени", "");
		ПараметрыПолей.Вставить("Метаданные", Неопределено)
	КонецЕсли;
	
	Для каждого ОписаниеПоля Из ДобавляемыеЭлементы Цикл
	
		Если ОписаниеПоля.Ключ = "_" Тогда
			Группа = Неопределено;
		Иначе
			Группа = Элементы.Найти(ОписаниеПоля.Ключ);
		КонецЕсли;
		
		ЭтоФормаСписка = Ложь;
		Если ИмяОсновногоРеквизитаФормы = Неопределено Тогда
			ИмяОсновногоРеквизитаФормы = "Объект";
		КонецЕсли;
		
		// Если основной реквизит формы - не строка таблицы, то проверим не является ли он динамическим списком
		ЭтоСтрокаТаблицы = СтрНайти(ИмяОсновногоРеквизитаФормы, "[") <> 0;
		Если НЕ ЭтоСтрокаТаблицы Тогда
			ЭтоФормаСписка = ТипЗнч(Форма[ИмяОсновногоРеквизитаФормы]) = Тип("ДинамическийСписок");
			
			Если Не ЭтоФормаСписка Тогда
				ПараметрыПолей.Вставить("Метаданные", Форма[ИмяОсновногоРеквизитаФормы].Ссылка.Метаданные()); 				
			КонецЕсли;
		КонецЕсли;	
		
		ЭлементыГруппы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ОписаниеПоля.Значение);
		
		Для каждого ЭлементГруппы Из ЭлементыГруппы Цикл
			
			Если ЭлементДляВставки = Неопределено Тогда
				Элемент = Элементы.Добавить(ЭлементГруппы + ПараметрыПолей.СуффиксИмени, Тип("ПолеФормы"), Группа);
			Иначе
				Элемент = Элементы.Вставить(ЭлементГруппы + ПараметрыПолей.СуффиксИмени, Тип("ПолеФормы"), Группа, ЭлементДляВставки);
			КонецЕсли;
			
			
			Если ТипЗнч(Группа) = Тип("ТаблицаФормы") 
				ИЛИ ТипЗнч(Группа) = Тип("ГруппаФормы") И ТипЗнч(Группа.Родитель) = Тип("ТаблицаФормы") Тогда
				
				ИмяТЧ = Группа.Имя;
				Если ТипЗнч(Группа) = Тип("ГруппаФормы") И ТипЗнч(Группа.Родитель) = Тип("ТаблицаФормы") Тогда
					ИмяТЧ = Группа.Родитель.Имя;
				КонецЕсли;
				
				ИмяПоля = СтрЗаменить(Элемент.Имя, ИмяТЧ, "");
				Если ЭтоФормаСписка Тогда
					Элемент.ПутьКДанным = ИмяОсновногоРеквизитаФормы + "." + ИмяПоля;
				Иначе
					Элемент.ПутьКДанным = ИмяОсновногоРеквизитаФормы + "." + ИмяТЧ + "." + ИмяПоля;
				КонецЕсли;	
				
				ЭтоБулево = ЭтоПолеБулево(Форма, ИмяОсновногоРеквизитаФормы, ЭтоФормаСписка, ИмяПоля, ИмяТЧ);
			Иначе
				ИмяПоля = СтрЗаменить(ЭлементГруппы, ИмяОсновногоРеквизитаФормы, "");
				Элемент.ПутьКДанным = ИмяОсновногоРеквизитаФормы + "." + ИмяПоля;
				ЭтоБулево = Ложь;
				Если ЭтоФормаСписка Тогда
					
					ЭтоБулево = ЭтоПолеБулево(Форма, ИмяОсновногоРеквизитаФормы, ЭтоФормаСписка, ИмяПоля);
				ИначеЕсли ЭтоСтрокаТаблицы Тогда
					Если ПараметрыПолей.Метаданные <> Неопределено Тогда
						ТипПоля = ПараметрыПолей.Метаданные.Реквизиты[ИмяПоля].Тип.Типы(); 
						Если ТипПоля.Количество() = 1 И 
							ТипПоля[0] = Тип("Булево") Тогда
							
							ЭтоБулево = Истина;
							
						КонецЕсли;	
					КонецЕсли;	
				Иначе
					ТипПоля = ТипЗнч(Форма[ИмяОсновногоРеквизитаФормы][ЭлементГруппы]);
					ЭтоБулево = ТипПоля  = Тип("Булево");
				КонецЕсли;
			КонецЕсли;	
			
			Элемент.Вид = ?(ЭтоБулево = Истина, 
				ВидПоляФормы.ПолеФлажка, 
				ВидПоляФормы.ПолеВвода
			);
			
			
			// Подсказка ввода
			Если Не ЭтоФормаСписка И Элемент.Вид = ВидПоляФормы.ПолеВвода Тогда
				Если ПараметрыПолей.ИспользоватьТекстПодсказки 
					И ПараметрыПолей.Метаданные <> Неопределено Тогда
					Попытка
						Элемент.ПодсказкаВвода = ПараметрыПолей.Метаданные.Реквизиты[ИмяПоля].Синоним; 
						Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
					Исключение
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
			
			// Действие
			Действия = Неопределено;
			Если ПараметрыПолей.Свойство("Действия", Действия)
				И Действия <> Неопределено Тогда
				
				Для каждого Действие Из Действия Цикл
				
					Элемент.УстановитьДействие(Действие.Ключ, Действие.Значение);
				
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
		
	
	КонецЦикла;

	

КонецПроцедуры

Процедура УстановитьДействияЭлементов(Форма, НовыеЭлементы, ИмяСобытия, ИмяПроцедуры = Неопределено) Экспорт
	
	Элементы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(НовыеЭлементы);
	Для каждого ЭлементИмя Из Элементы Цикл
	
		Форма.Элементы[ЭлементИмя].УстановитьДействие(ИмяСобытия, 
			?(ИмяПроцедуры = Неопределено, 
				ЭлементИмя + ИмяСобытия, 
				ИмяПроцедуры
			)
		);
	
	КонецЦикла;
	
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
Функция ЭтоПолеБулево(Форма, ИмяОсновногоРеквизитаФормы, ЭтоФормаСписка, ИмяПоля, ИмяТЧ = Неопределено)
	
	Результат = Ложь;
	Если ЭтоФормаСписка Тогда
		ПолеКомпоновки = Форма[ИмяОсновногоРеквизитаФормы].КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.Элементы.Найти(ИмяПоля);
		Если ПолеКомпоновки <> Неопределено Тогда
			Результат = ПолеКомпоновки.Тип.Типы().Количество() <> 0 И 
				ПолеКомпоновки.Тип.Типы()[0] = Тип("Булево");
		КонецЕслИ;
			
		Возврат Результат;	
	КонецЕсли;
	
	
	Объект = Форма[ИмяОсновногоРеквизитаФормы];
	Если НЕ ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект, "Ссылка") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ИмяТЧ = Неопределено Тогда
		ТипПоля = ТипЗнч(Форма[ИмяОсновногоРеквизитаФормы][ИмяПоля]);
		Результат = ТипПоля  = Тип("Булево");
		Возврат Результат;
	КонецЕсли;
	
	МетаданныеОбъекта = Объект.Ссылка.Метаданные();
	ТЧ = МетаданныеОбъекта.ТабличныеЧасти.Найти(ИмяТЧ);
	Если ТЧ = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Реквизит = ТЧ.Реквизиты.Найти(ИмяПоля);
	
	Если Реквизит = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;

	Результат = Реквизит.Тип.Типы().Количество() <> 0 И 
		Реквизит.Тип.Типы()[0] = Тип("Булево");
		
	Возврат Результат;
КонецФункции // ПолучитьТипПоля()




#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти