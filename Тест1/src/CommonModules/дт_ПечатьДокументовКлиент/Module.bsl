// Формирует печатные формы документов Списание товаров с использованием макета в формате офисного документа.
Процедура ПечатьДоговор(МакетИДанныеОбъекта, СоставДокументов, Знач ИмяМакета = Неопределено) Экспорт
	
	Если ИмяМакета = Неопределено Тогда // печатаем все макеты
		Для Каждого ДокументСсылка Из СоставДокументов Цикл   
			
			ДанныеОбъектаПоМакетам = МакетИДанныеОбъекта.Данные[ДокументСсылка];
			Для каждого КлючИЗначение Из ДанныеОбъектаПоМакетам Цикл
				
				ИмяМакета = КлючИЗначение.Ключ;
				НапечататьДоговор(ДокументСсылка, МакетИДанныеОбъекта, ИмяМакета);
				
			КонецЦикла;
			
		КонецЦикла;
	Иначе
		Для Каждого ДокументСсылка Из СоставДокументов Цикл   
			
			НапечататьДоговор(ДокументСсылка, МакетИДанныеОбъекта, ИмяМакета);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Формирует печатную форму Договор с использованием макета в формате офисного документа.
Процедура НапечататьДоговор(ДокументСсылка, МакетИДанныеОбъекта, ИмяМакета)
	
	ТипМакета				= МакетИДанныеОбъекта.Макеты.ТипыМакетов[ИмяМакета];
	ДвоичныеДанныеМакетов	= МакетИДанныеОбъекта.Макеты.ДвоичныеДанныеМакетов;
	Области					= МакетИДанныеОбъекта.Макеты.ОписаниеОбластей;
	ДанныеОбъекта = МакетИДанныеОбъекта.Данные[ДокументСсылка][ИмяМакета];
	
	Макет = УправлениеПечатьюКлиент.ИнициализироватьМакетОфисногоДокумента(ДвоичныеДанныеМакетов[ИмяМакета], ТипМакета, ИмяМакета);
	Если Макет = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытьОкноПечатнойФормы = Ложь;
	Попытка
		ПечатнаяФорма = УправлениеПечатьюКлиент.ИнициализироватьПечатнуюФорму(ТипМакета, Макет.НастройкиСтраницыМакета);
		Если ПечатнаяФорма = Неопределено Тогда
			УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
			Возврат;
		КонецЕсли;
		
		// Вывод верхней части документа - обычная область с параметрами.
		Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Области[ИмяМакета]["ШапкаДокумента"]);
		УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Ложь);
		
		Если ДанныеОбъекта.Свойство("Строки") Тогда
			Строки = ДанныеОбъекта.Строки;
			Если Строки.Количество() > 0 Тогда
				
				ОбластьШапка = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Области[ИмяМакета], "ШапкаТаблицы"); 
				
				Если ОбластьШапка <> Неопределено Тогда 
					// Вывод коллекции данных из информационной базы в виде таблицы.
					Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, ОбластьШапка);
					УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
				КонецЕсли;
				
				ОбластьСтрока = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Области[ИмяМакета], "СтрокаТаблицы"); 
				
				Если ОбластьСтрока <> Неопределено Тогда 
					Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, ОбластьСтрока);
					УправлениеПечатьюКлиент.ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма, Область, ДанныеОбъекта.Строки, Ложь);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ОбластьПодвал = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Области[ИмяМакета], "ПодвалДокумента");
		Если ОбластьПодвал <> Неопределено Тогда
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, ОбластьПодвал);
			УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Ложь);
		КонецЕсли;
	
		УправлениеПечатьюКлиент.ПоказатьДокумент(ПечатнаяФорма);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗакрытьОкноПечатнойФормы = Истина;
	КонецПопытки;
	
	УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма, ЗакрытьОкноПечатнойФормы);
	УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
	
КонецПроцедуры
