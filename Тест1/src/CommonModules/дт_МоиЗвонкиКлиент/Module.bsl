#Область ПрограммныйИнтерфейс

Функция ПолучитьФайлЗаписи(Знач ЗаписьURL, Перенаправления = Неопределено, ИмяФайлаВрем = Неопределено) Экспорт
	
	
	Результат = Неопределено;		
	
	#Если ВебКлиент Тогда
		ВызватьИсключение "Данная операция не поддерживается в веб-клиенте";
	
	#Иначе
	
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(ЗаписьURL);
	ПараметрыПодключения = Неопределено;
		
	Если Перенаправления = Неопределено Тогда // 1-й вызов
		
		Перенаправления = Новый Массив(); // массив URL
		
		ПараметрыПодключения = дт_МоиЗвонкиВызовСервера.ПолучитьПараметрыПодключения();
		СтруктураURI_МоиЗвонки = ОбщегоНазначенияКлиентСервер.СтруктураURI(ПараметрыПодключения.АдресСервера);
		
		// Если ссылка ведет на другой сервер, то изменим настройки подключения
		Если СтруктураURI.Хост <> СтруктураURI_МоиЗвонки.Хост Тогда
			ПараметрыПодключения = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыПодключения = Неопределено Тогда
		
		ПараметрыПодключения = дт_МоиЗвонкиВызовСервера.НовыеПараметрыПодключения();
		ПараметрыПодключения.АдресСервера = ЗаписьURL; //СтруктураURI.Хост;
		
	КонецЕсли;
	
	Соединение = ПолучитьСоединение(ПараметрыПодключения);
	
	Если Соединение = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон("Не удалось подключиться к серверу %1", СтруктураURI.Хост)
			
		);
		Возврат Результат;
	КонецЕсли;	
	
	Если ИмяФайлаВрем = Неопределено Тогда
			
		ИмяФайла = ЗаписьURL;
		Если СтрЗаканчиваетсяНа(ИмяФайла, "/") Тогда
			СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ИмяФайла);
		КонецЕсли;
			
		ИмяФайлаВрем = ПолучитьИмяВременногоФайла(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла));
	КонецЕсли;
			
	Запрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере);
	Запрос.Заголовки.Вставить("Accept-Charset", "UTF-8");
	//Запрос.Заголовки.Вставить("X-1C-Request-UID", Строка(Новый УникальныйИдентификатор));
	
	Ответ = Соединение.Получить(Запрос);
	
	Если Ответ.КодСостояния = 301 // 301 Moved Permanently
		Или Ответ.КодСостояния = 302 // 302 Found, 302 Moved Temporarily
		Или Ответ.КодСостояния = 303 // 303 See Other by GET
		Или Ответ.КодСостояния = 307 // 307 Temporary Redirect
		Или Ответ.КодСостояния = 308 Тогда // 308 Permanent Redirect
		
		Если Перенаправления.Количество() > 10 Тогда
			ВызватьИсключение 
				НСтр("ru = 'Превышено количество перенаправлений.'");
		КонецЕсли;
		
		
			
		НовыйURL = Ответ.Заголовки.Получить("Location");
		Если НовыйURL = Неопределено Тогда
			ВызватьИсключение 
					НСтр("ru = 'Некорректное перенаправление, отсутствует HTTP-заголовок ответа ""Location"".'");
		КонецЕсли;
			
		НовыйURL = СокрЛП(НовыйURL);
				
		Если ПустаяСтрока(НовыйURL) Тогда
			ВызватьИсключение НСтр(
				"ru = 'Некорректное перенаправление, пустой HTTP-заголовок ответа ""Location"".'");
		КонецЕсли;
			
		Если Перенаправления.Найти(НовыйURL) <> Неопределено 
			ИЛИ НовыйURL = ЗаписьURL Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Циклическое перенаправление.
					           |Попытка перейти на %1 уже выполнялась ранее.'"),
				НовыйURL);
		КонецЕсли;
				
		Перенаправления.Добавить(ЗаписьURL);
				
		Если Не СтрНачинаетсяС(НовыйURL, "http") Тогда
			// <схема>://<хост>:<порт>/<путь>
			Порт = "";
			Если СтруктураURI.Порт <> Неопределено Тогда
				Порт = ":" + Формат(СтруктураURI.Порт, "ЧГ=");
			КонецЕсли;
				
			НовыйURL = СтрШаблон("%1://%2%3/%4", 
				СтруктураURI.Протокол, 
				СтруктураURI.Хост,
				Порт,
				НовыйURL
			);
				
		КонецЕсли;
	
		Возврат ПолучитьФайлЗаписи(НовыйURL, Перенаправления, ИмяФайлаВрем);
		
	КонецЕсли;
		
	Если Ответ.КодСостояния >= 100 И Ответ.КодСостояния <= 200 Тогда
		
		ДвДанные = Ответ.ПолучитьТелоКакДвоичныеДанные();
		ДвДанные.Записать(ИмяФайлаВрем);
		
	Иначе
			
		ТекстОтвета = СтроковыеФункцииКлиентСервер.ИзвлечьТекстИзHTML(Ответ.ПолучитьТелоКакСтроку());
		
		ТекстОшибки = СтрШаблон("Не удалось получить файл записи. Код ошибки: %1. Ответ: %2", 
			Ответ.КодСостояния,
			ТекстОтвета
		);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки
		);
		Возврат Результат;
		
	КонецЕсли;
	
	Соединение = Неопределено;
	Результат = ИмяФайлаВрем;
	
	#КонецЕсли
	
	Возврат Результат;
КонецФункции

Процедура ПрослушатьФайл(СсылкаЛокальная) Экспорт
	ЗапуститьПриложение(СсылкаЛокальная);
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьСоединение(ПараметрыПодключения)
	
	СоединениеHTTP = Неопределено;
	
	#Если ВебКлиент Тогда
		ВызватьИсключение "Данная операция не поддерживается в веб-клиенте";
	#Иначе
		
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(ПараметрыПодключения.АдресСервера);
	
	ЗащищенноеСоединение = Неопределено;
	Если СтруктураURI.Схема = "https" Тогда
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(
			Новый СертификатКлиентаWindows(),
			Новый СертификатыУдостоверяющихЦентровWindows()
		);
	КонецЕсли;
	
	Попытка
		
		СоединениеHTTP = Новый HTTPСоединение(СтруктураURI.Хост, 
			СтруктураURI.Порт, 
			ПараметрыПодключения.ИмяПользователя, 
			ПараметрыПодключения.Пароль,
			Неопределено, 
			ПараметрыПодключения.Таймаут, 
			ЗащищенноеСоединение
		);
		
	Исключение
		СоединениеHTTP = Неопределено;
		//ЗаписатьТекстОшибки(ОписаниеОшибки(), ПараметрыВыполнения);	
	КонецПопытки;
	
	#КонецЕсли
	
	Возврат СоединениеHTTP;
	

КонецФункции // ПолучитьСоединениеHTTP()



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти