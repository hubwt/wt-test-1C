
// Ищет во всех файлах запись по указанному пути, исключая ссылку, указанную во втором параметре
//
// Параметры:
//  ПутьКФайлу  - Строка - Путь к файлу
//
//  ИсключитьСсылкуИзПоиска  - Ссылка - ссылка на присоединенный файл, который не нужно учитывать
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ЕстьСсылкиНаФайл(Том, ПутьКФайлу, ИсключитьСсылкуИзПоиска = Неопределено) Экспорт

	// проверить все таблицы, относящиеся к определяемым типам
	
	ТекстЗапросаШаблон = 
	"ВЫБРАТЬ
	|	СпрФайлы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.%1 КАК СпрФайлы
	|ГДЕ
	|	СпрФайлы.ПутьКФайлу ПОДОБНО &ПутьКФайлу
	|	И СпрФайлы.Том = &Том
	|	И СпрФайлы.ТипХраненияФайла = ЗНАЧЕНИЕ(Перечисление.ТипыХраненияФайлов.ВТомахНаДиске)";
	
	
	ТекстЗапроса = "";
	ЭтоПервый = Истина;
	ТипВерсииФайлов = Тип("СправочникСсылка.ВерсииФайлов");
	
	Для каждого СпрТип Из Метаданные.ОпределяемыеТипы.ПрисоединенныйФайл.Тип.Типы() Цикл
		
		Если СпрТип = ТипВерсииФайлов Тогда
			Продолжить
		КонецЕсли;
		
		ТипСтрокой = ОбщегоНазначения.СтроковоеПредставлениеТипа(СпрТип);
		ИмяСправочника = СтрРазделить(ТипСтрокой, ".")[1];
		
		ТекстЗапроса = ТекстЗапроса 
			+ ?(ЭтоПервый, "", "
					|ОБЪЕДИНИТЬ ВСЕ
					|"
				) 
			+ СтрШаблон(ТекстЗапросаШаблон, ИмяСправочника);
			
		ЭтоПервый = Ложь;	
		
		Если НЕ ИсключитьСсылкуИзПоиска = Неопределено 
			И ТипЗнч(ИсключитьСсылкуИзПоиска) = СпрТип Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			| И СпрФайлы.Ссылка <> &СсылкаИсключение";
			
		КонецЕсли;
			
	
	КонецЦикла;

	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Том", Том);
	Запрос.УстановитьПараметр("ПутьКФайлу", ПутьКФайлу);
	Запрос.УстановитьПараметр("СсылкаИсключение", ИсключитьСсылкуИзПоиска);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции // ЕстьСсылкиНаФайл()
