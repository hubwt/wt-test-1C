&НаСервере
Функция ПолучитьМаркер(ВидСервиса,Пользователь = Неопределено) Экспорт 
	
	
	//ПараметрыПользователя = ПолучитьПараметрыПользователя();    
	
	//Если ПараметрыПользователя = Неопределено Тогда 
	//	Возврат Неопределено; 
	//КонецЕсли; 
	
	АдресКлиентЛогин = "https://www.google.com/accounts/ClientLogin"; 
	
	Если ВидСервиса = "Таблица" Тогда 
		Сервис = "wise"; 
	ИначеЕсли ВидСервиса = "Документ" Тогда 
		Сервис = "writely"; 
	КонецЕсли; 
	
	Попытка 
		ХМЛХТТП = ПолучитьCOMОбъект("", "Microsoft.XMLHTTP"); 
		ХМЛХТТП.Open("POST", АдресКлиентЛогин, Ложь); 
		ХМЛХТТП.SetRequestHeader("Content-Type", "application/x-www-form-urlencoded"); 
		ХМЛХТТП.Send("Email=" + "admin@worktruck.ru" + "&Passwd=" + "Parts2021" + "&service=" + Сервис + "&source=Gulp-CalGulp-1.05"); 
	Исключение 
		Сообщить("Ошибка:" + ОписаниеОшибки()); 
		Возврат Неопределено; 
	КонецПопытки; 
	
	Если ХМЛХТТП.Status = 200 Тогда 
		Маркер = ХМЛХТТП.ResponseText; 
		Маркер = Прав(Маркер, СтрДлина(Маркер) - СтрДлина("Auth=") - Найти(Маркер, "Auth=") + 1); 
		Возврат Маркер; 
	Иначе 
		Сообщить("Ошибка:" + ХМЛХТТП.Status + "-" + ХМЛХТТП.ResponseText); 
		Возврат Неопределено; 
	КонецЕсли; 
КонецФункции 

&НаСервере 
Функция ПолучитьСписокТаблиц(Пользователь = Неопределено) Экспорт 
	
//	ПараметрыПользователя = ПолучитьПараметрыПользователя(); 
	
	//Если ПараметрыПользователя = Неопределено Тогда 
	//	Возврат Ложь; 
	//КонецЕсли; 
	
	Маркер = ПолучитьМаркер("Таблица"); 
	
	Если Маркер = Неопределено Тогда 
		Возврат Ложь;
	КонецЕсли; 
	
	Адрес = "https://spreadsheets.google.com/feeds/spreadsheets/private/full"; 
	ХМЛХТТП = ПолучитьCOMОбъект("", "Microsoft.XMLHTTP"); 
	ХМЛХТТП.Open("GET", Адрес, Ложь);
	ХМЛХТТП.SetRequestHeader("Content-Type", "application/atom+xml"); 
	ХМЛХТТП.SetRequestHeader("Authorization", "GoogleLogin auth=" +Маркер); 
	ХМЛХТТП.Send(Null); 
	
	Если ХМЛХТТП.Status = 200 Тогда 
		ОтветСервера = ХМЛХТТП.ResponseText; 
		ДеревоXML = ПрочитатьResponseTextXML(ОтветСервера); 
		СписокТаблиц = Новый СписокЗначений; 
		ТаблицаСсылка = ""; 
		НазваниеТаблицы = ""; 
		
		Для Каждого Строка Из ДеревоXML.Строки[0].Строки Цикл 
			Если Строка.ИмяXMLЭлементаДанных = "entry" Тогда 
				Для Каждого ТекАтрибут Из Строка.Строки Цикл 
					Если ТекАтрибут.ИмяXMLЭлементаДанных = "link" Тогда 
						ТекРел = ТекАтрибут.СписокАтрибутов.НайтиПоЗначению("rel"); 
						Если ТекРел.представление = "http://schemas.google.com/spreadsheets/2006#worksheetsfeed" Тогда 
							ТекСсылка = ТекАтрибут.СписокАтрибутов.НайтиПоЗначению("href"); 
							ТаблицаСсылка = ТекСсылка.Представление; 
							ТаблицаСсылка = СтрЗаменить(ТаблицаСсылка,"https://","http://"); 
						КонецЕсли; 
					КонецЕсли; 
					
					Если ТекАтрибут.ИмяXMLЭлементаДанных = "title" Тогда
						НазваниеТаблицы = ТекАтрибут.ЗначениеXMLЭлементаДанных; 
					КонецЕсли; 
				КонецЦикла; 
				
				Если ЗначениеЗаполнено(ТаблицаСсылка) И ЗначениеЗаполнено(НазваниеТаблицы) Тогда 
					СписокТаблиц.Добавить(ТаблицаСсылка,НазваниеТаблицы); 
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
		
		Возврат СписокТаблиц; 
		
	Иначе 
		Сообщить("Ошибка:" + ХМЛХТТП.Status + "-" + ХМЛХТТП.ResponseText); 
		
		Возврат Неопределено; 
		
	КонецЕсли; 
	
КонецФункции 

&НаСервере 


Функция ОбновитьЯчейкуЛистаГугл(Маркер,ИДЛиста,Строка,Колонка,Значение) 
	ТекстСоздания = " 
	
	| " + ИДЛиста + "/R" + Строка(Строка) + "C" + Строка(Колонка)+"     
	| "+ ИДЛиста + "/R"+ Строка(Строка) + "C" + Строка(Колонка)+"""/>     
	| "+ Строка(Строка) + """ col=""" + Строка(Колонка)+ """ inputValue=""" + Значение+"""/> 
	| "; 
	
	ХМЛХТТП = ПолучитьCOMОбъект("", "Microsoft.XMLHTTP"); 
	ХМЛХТТП.Open("POST", ИДЛиста, Ложь); 
	ХМЛХТТП.SetRequestHeader("Content-Type", "application/atom+xml;type=feed"); 
	ХМЛХТТП.SetRequestHeader("X-If-No-Redirect", "true"); 
	ХМЛХТТП.SetRequestHeader("Authorization", "GoogleLogin auth=" + Маркер); 
	ХМЛХТТП.Send(ТекстСоздания); 
	
	Если ХМЛХТТП.Status = 201 Тогда 
		Возврат Истина; 
	Иначе 
		
		Сообщить("Ошибка:" + ХМЛХТТП.Status + "-" + ХМЛХТТП.ResponseText); 
		Возврат Ложь; 
	КонецЕсли; 
КонецФункции


Функция ПрочитатьResponseTextXML(ResponseText) 
	XMLДокумент = Новый ЧтениеXML;
	XMLДокумент.УстановитьСтроку(ResponseText);
	
	ДеревоXMLДокумента = Новый ДеревоЗначений;
	ОписаниеСписокАтрибутов = Новый ОписаниеТипов("СписокЗначений");
	
	ДеревоXMLДокумента.Колонки.Очистить();
	ДеревоXMLДокумента.Колонки.Добавить("ТипУзла");
	ДеревоXMLДокумента.Колонки.Добавить("ИмяXMLЭлементаДанных");
	ДеревоXMLДокумента.Колонки.Добавить("ЗначениеXMLЭлементаДанных");
	ДеревоXMLДокумента.Колонки.Добавить("СписокАтрибутов", ОписаниеСписокАтрибутов);
	ЗагрузитьРекурсивно(XMLДокумент, ДеревоXMLДокумента.Строки);
	
	Возврат ДеревоXMLДокумента;    
КонецФункции

Процедура ЗагрузитьРекурсивно(XMLДокумент, СтрокаДерева) 
	Пока XMLДокумент.Прочитать() Цикл
		Если XMLДокумент.ТипУзла = ТипУзлаXML.ИнструкцияОбработки Тогда
			НоваяСрокаДерева = СтрокаДерева.Добавить();
			НоваяСрокаДерева.ТипУзла = XMLДокумент.ТипУзла;
			НоваяСрокаДерева.ИмяXMLЭлементаДанных = XMLДокумент.Имя;
			НоваяСрокаДерева.ЗначениеXMLЭлементаДанных = XMLДокумент.Значение;
		ИначеЕсли XMLДокумент.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			НоваяСрокаДерева = СтрокаДерева.Добавить();
			НоваяСрокаДерева.ТипУзла = XMLДокумент.ТипУзла;
			НоваяСрокаДерева.ИмяXMLЭлементаДанных = XMLДокумент.Имя;
			НоваяСрокаДерева.ЗначениеXMLЭлементаДанных = XMLДокумент.Значение;
			Пока XMLДокумент.ПрочитатьАтрибут() Цикл
				НоваяСрокаДерева.СписокАтрибутов.Добавить(XMLДокумент.Имя, XMLДокумент.Значение);
			КонецЦикла;
			ЗагрузитьРекурсивно(XMLДокумент, НоваяСрокаДерева.Строки);
		ИначеЕсли XMLДокумент.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Возврат; Прервать;
		ИначеЕсли XMLДокумент.ТипУзла = ТипУзлаXML.Ничего Тогда
			Возврат; Прервать;
		ИначеЕсли XMLДокумент.ТипУзла = ТипУзлаXML.Текст Тогда
			Если СтрокаДерева.Количество() = 0 И СтрокаДерева.Родитель <> Неопределено Тогда
				СтрокаДерева.Родитель.ЗначениеXMLЭлементаДанных = XMLДокумент.Значение;
			Иначе
				НоваяСрокаДерева = СтрокаДерева.Добавить();
				НоваяСрокаДерева.ТипУзла = XMLДокумент.ТипУзла;
				НоваяСрокаДерева.ИмяXMLЭлементаДанных = XMLДокумент.Имя;
				НоваяСрокаДерева.ЗначениеXMLЭлементаДанных = XMLДокумент.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры