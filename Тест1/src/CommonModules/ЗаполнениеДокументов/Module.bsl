#Область ПрограммныйИнтерфейс

// Заполняет реквизиты объекта значениями, полученными в структуре ДанныхЗаполнения.
//	Заполнение возможно только в случае, когда в качестве ДанныхЗаполнения получена структура.
//	Заполнены будут только те реквизиты, для которых в метаданных установлен флаг "ЗаполнятьИзДанныхЗаполнения"
//
//
// Параметры
//  <Объект>  - <СправочникОбъект>, <ДокументОбъект> и т.д. - Заполняемый объект
//  <ДанныеЗаполнения>  - <произвольный тип> - параметр, полученный в ОбработкеЗаполнения объекта
//  <МетаданныеОбъекта>  - <Метаданные> -
//
//
Процедура ЗаполнитьПоСтруктуре(Объект, ДанныеЗаполнения, МетаданныеОбъекта = Неопределено)	Экспорт
	
	Если Объект = Неопределено
		ИЛИ ТипЗнч(ДанныеЗаполнения) <> Тип("Структура")
		ИЛИ ДанныеЗаполнения.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если МетаданныеОбъекта = Неопределено Тогда
		МетаданныеОбъекта = Объект.Метаданные();
	КонецЕсли;
	
	Если Метаданные.Справочники.Содержит(МетаданныеОбъекта)
		ИЛИ Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеОбъекта) Тогда
		РазличатьГруппыИЭлементы = МетаданныеОбъекта.Иерархический;
	Иначе
		РазличатьГруппыИЭлементы = Ложь;
	КонецЕсли;
	
	СтруктураЗаполнения = Новый Структура;
	Для Каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		Если Реквизит.ЗаполнятьИзДанныхЗаполнения
			И ДанныеЗаполнения.Свойство(Реквизит.Имя) Тогда
			СтруктураЗаполнения.Вставить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		Если Реквизит.ЗаполнятьИзДанныхЗаполнения
			И ДанныеЗаполнения.Свойство(Реквизит.Имя) Тогда
			Если РазличатьГруппыИЭлементы Тогда
				Если (Объект.ЭтоГруппа
						И Реквизит.Использование <> Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента)
					ИЛИ (НЕ Объект.ЭтоГруппа
						И Реквизит.Использование <> Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы) Тогда
					СтруктураЗаполнения.Вставить(Реквизит.Имя);
				КонецЕсли;
			Иначе
				СтруктураЗаполнения.Вставить(Реквизит.Имя);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ЗаполняемыйЭлемент Из СтруктураЗаполнения Цикл
		ЗначениеЗаполнения = ДанныеЗаполнения[ЗаполняемыйЭлемент.Ключ];
		Если ТипЗнч(ЗначениеЗаполнения) = Тип("Массив")
			ИЛИ ТипЗнч(ЗначениеЗаполнения) = Тип("ФиксированныйМассив") Тогда
			СтруктураЗаполнения[ЗаполняемыйЭлемент.Ключ] = ЗначениеЗаполнения[0];
		Иначе
			СтруктураЗаполнения[ЗаполняемыйЭлемент.Ключ] = ЗначениеЗаполнения;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(Объект, СтруктураЗаполнения);
	
КонецПроцедуры

// Процедура предназначена для заполнения общих реквизитов документов,
// вызывается в обработчиках событий "ОбработкаЗаполнения" в модулях документов.
//
// Параметры:
//  ДокументОбъект   - ДокументОбъект - Документ, реквизиты которого необходимо заполнить.
//  ДанныеЗаполнения - Структура ИЛИ Неопределено - Одноименный параметр обработчика ОбработкаЗаполнения документа.
//
Процедура Заполнить(ДокументОбъект, ДанныеЗаполнения = Неопределено, ЗаполнятьПустуюОрганизацию = Истина) Экспорт
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ВалютаРегламентированногоУчета = дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();//Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.Дата) Тогда
		ДокументОбъект.Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	КонецЕсли;
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьПоСтруктуре(ДокументОбъект, ДанныеЗаполнения, МетаданныеДокумента);
	КонецЕсли;
	
	ЕстьРеквизитОрганизация          = ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация",          МетаданныеДокумента);
	ЕстьРеквизитСклад		         = ОбщегоНазначения.ЕстьРеквизитОбъекта("Склад",          		МетаданныеДокумента);
//	ЕстьРеквизитКонтрагент           = ОбщегоНазначения.ЕстьРеквизитОбъекта("Контрагент",           МетаданныеДокумента);
//	ЕстьРеквизитДоговор              = ОбщегоНазначения.ЕстьРеквизитОбъекта("ДоговорКонтрагента",   МетаданныеДокумента);
//	ЕстьРеквизитВалютаДокумента      = ОбщегоНазначения.ЕстьРеквизитОбъекта("ВалютаДокумента",      МетаданныеДокумента);
//	ЕстьРеквизитВалютаВзаиморасчетов = ОбщегоНазначения.ЕстьРеквизитОбъекта("ВалютаВзаиморасчетов", МетаданныеДокумента);
//	ЕстьРеквизитСчетОрганизации      = ОбщегоНазначения.ЕстьРеквизитОбъекта("СчетОрганизации",      МетаданныеДокумента);
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Ответственный", МетаданныеДокумента) Тогда
		ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Подразделение", МетаданныеДокумента) 
		И Не ЗначениеЗаполнено(ДокументОбъект.Подразделение) Тогда
		ДокументОбъект.Подразделение = дт_ПраваДоступа.ТекущееПодразделение();
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ЦФО", МетаданныеДокумента) 
		И Не ЗначениеЗаполнено(ДокументОбъект.ЦФО) Тогда
		ДокументОбъект.ЦФО = дт_ПраваДоступа.ТекущееПодразделение();
	КонецЕсли;
	
	Если ЕстьРеквизитОрганизация И 
		Не ЗначениеЗаполнено(ДокументОбъект.Организация) 
		И ЗаполнятьПустуюОрганизацию Тогда
		ДокументОбъект.Организация = дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьОсновнуюОрганизацию();
	КонецЕсли;
	
	Если ЕстьРеквизитСклад 
		И Не ЗначениеЗаполнено(ДокументОбъект.Склад) Тогда
		ДокументОбъект.Склад = дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьОсновнойСклад();
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Город", МетаданныеДокумента)
		И Не ЗначениеЗаполнено(ДокументОбъект.Город) Тогда
		ДокументОбъект.Город = дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьОсновнойГород();
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("НачислятьНДС", МетаданныеДокумента) 
		И Не ЗначениеЗаполнено(ДокументОбъект.НачислятьНДС) Тогда
		ДокументОбъект.НачислятьНДС = ДанныеЗаполнения.НачислятьНДС;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаДокументаНДС", МетаданныеДокумента) 
		И Не ЗначениеЗаполнено(ДокументОбъект.СуммаДокументаНДС) Тогда
		ДокументОбъект.СуммаДокументаНДС = ДанныеЗаполнения.СуммаДокументаНДС;
	КонецЕсли;
	
КонецПроцедуры

// Процедура предназначена для заполнения общих реквизитов документов по документу основанию,
//	вызывается в обработчиках событий "ОбработкаЗаполнения" в модулях документов.
//
// Параметры:
//  ДокументОбъект  - объект редактируемого документа,
//  ДокументОснование - объект документа основания
//  КопироватьПодразделение - булево - если да - подразделение организации берется из документа-основания,
//										если нет - из реквизита СчетОрганизации или настройки пользователя
//
Процедура ЗаполнитьПоОснованию(ДокументОбъект, ДокументОснование, КопироватьПодразделение = Истина) Экспорт

	МетаданныеДокумента          = ДокументОбъект.Метаданные();
	МетаданныеДокументаОснования = ДокументОснование.Метаданные();

	// Дата
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.Дата) Тогда
		ДокументОбъект.Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	КонецЕсли;

	// Организация.
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.Организация = ДокументОснование.Организация;
	КонецЕсли;

	// Склад.
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Склад", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитОбъекта("Склад", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.Склад = ДокументОснование.Склад;
	КонецЕсли;

	// Контрагент.
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Контрагент", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитОбъекта("Контрагент", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.Контрагент = ДокументОснование.Контрагент;
	КонецЕсли;

	// Клиент.
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Клиент", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитОбъекта("Клиент", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.Клиент = ДокументОснование.Клиент;
	КонецЕсли;
	
	// Проект.
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Проект", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитОбъекта("Проект", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.Проект = ДокументОснование.Проект;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции


Процедура УдалитьКлючИзСтруктуры(Структура, Ключ)

	Если ТипЗнч(Структура) = Тип("Структура") И Структура.Свойство(Ключ) Тогда
		Структура.Удалить(Ключ);
	КонецЕсли;

КонецПроцедуры


#КонецОбласти