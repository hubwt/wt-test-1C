#Область ПрограммныйИнтерфейс
// Выполняет движения регистра накопления РегистрНакопления1
//
Процедура ОтразитьДвижения(ПараметрыПроведения, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	РегистрыДляДвижения = Новый Массив();
	РегистрыДляДвижения.Добавить("ТоварыОрганизаций");
	РегистрыДляДвижения.Добавить("ПродажиСебестоимость");
	
	Для каждого Регистр Из РегистрыДляДвижения Цикл
	
		Если ПараметрыПроведения.Свойство("Таблица" + Регистр) Тогда
			ТаблицаДвижения = ПараметрыПроведения["Таблица" + Регистр];
			
			ДвиженияНабор = Движения[Регистр];
			ДвиженияНабор.Записывать = Истина;
			ДвиженияНабор.Загрузить(ТаблицаДвижения);
		КонецЕсли;
		
	
	КонецЦикла;
	
КонецПроцедуры

// Готовит к записи наборы записей документа (только по регистрам, входящих в подсистему)
//
Процедура ПодготовитьНаборыЗаписей(СтруктураОбъект) Экспорт
	
	РегистрыПодсистемы = Новый Массив;
	РегистрыПодсистемы.Добавить("ТоварыОрганизаций");
	РегистрыПодсистемы.Добавить("ПродажиСебестоимость");
	
	Для каждого Регистр Из РегистрыПодсистемы Цикл
	
		НаборЗаписей = СтруктураОбъект.Движения.Найти(Регистр);
		
		Если НаборЗаписей <> Неопределено Тогда
			Если НЕ НаборЗаписей.ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
				
				НаборЗаписей.ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура);
				
			КонецЕсли;
			
			Если НЕ НаборЗаписей.ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
				
				НаборЗаписей.ДополнительныеСвойства.ДляПроведения.Вставить("СтруктураВременныеТаблицы", СтруктураОбъект.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы);
				
			КонецЕсли;
			
			//РегистрыНакопления[Регистр].СоздатьПустуюВременнуюТаблицуИзменение(СтруктураОбъект.ДополнительныеСвойства);
		
		КонецЕсли;
	
	КонецЦикла; 
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти