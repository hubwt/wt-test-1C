//Функция СведенияОВнешнейОбработке() Экспорт
//	
//	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.3.6.1");
//	
//	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
//	ПараметрыРегистрации.Версия = "1.0";
//	//ПараметрыРегистрации.Назначение.Добавить("Документ.ЗаказКлиента");
//	ПараметрыРегистрации.БезопасныйРежим = Ложь;
//	ПараметрыРегистрации.Информация = "Выгрузка записей звонков и привязка к заявкам";
//	
//	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
//	НоваяКоманда.Представление = НСтр("ru = 'Выгрузить звонки'");
//	НоваяКоманда.Идентификатор = "ПолучитьТаблицуЗвонков";
//	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
//	НоваяКоманда.ПоказыватьОповещение = Ложь;
//		
//	Возврат ПараметрыРегистрации;
//	
//КонецФункции

//Процедура ВыполнитьКоманду(ИмяКоманды, ПараметрыВыполнения) Экспорт
//	
//	ПараметрыРегистрации = СведенияОВнешнейОбработке();
//	ПараметрыРегистрации.Команды.Колонки.Идентификатор.Имя = "ИмяКоманды";
//	ЭтаКоманда = ПараметрыРегистрации.Команды.Найти(ИмяКоманды, "ИмяКоманды");
//	Если ЭтаКоманда = Неопределено Тогда
//		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
//			НСтр("ru = 'Команда ""%1"" не поддерживается обработкой ""%2""'"),
//			ИмяКоманды,
//			Метаданные().Представление()
//		);
//	КонецЕсли;

//		
//	Если ИмяКоманды = "ПолучитьТаблицуЗвонков" Тогда
//		
//		ПолучитьТаблицуЗвонков();
//		
//	КонецЕсли;
//	
//КонецПроцедуры


//&НаКлиенте
//Процедура Выгрузить(Команда)
//	Таблица = ПолучитьТаблицуЗвонков();
//КонецПроцедуры

&НаСервере
Функция Получитьзаявку(НомерКлиента,датазаявки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК Ссылка,
	|	ЗаказКлиента.Клиент КАК Клиент,
	|	ЗаказКлиента.СуммаДокумента КАК СуммаДокумента,
	|	ЗаказКлиента.Состояние КАК Состояние,
	|	ЗаказКлиента.ДатаИзмененияСостояния КАК ДатаИзмененияСостояния
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.НомерТелефона = &НомерТелефона
	|	И (ЗаказКлиента.Состояние <> ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Ожидание)
	|			ИЛИ ЗаказКлиента.Состояние <> ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Думает)
	|			ИЛИ ЗаказКлиента.Состояние <> ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.ЖдёмДенег))";
	
	//Запрос.УстановитьПараметр("Дата",НачалоДня(датазаявки));
	//Запрос.УстановитьПараметр("ДатаИзмененияСостояния",КонецДня(датазаявки));
	Запрос.УстановитьПараметр("НомерТелефона",НомерКлиента);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
КонецФункции

&НаСервере
Функция ПолучитьзаявкуОбр(НомерКлиента,датазаявки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК Ссылка,
	|	ЗаказКлиента.Клиент КАК Клиент,
	|	ЗаказКлиента.СуммаДокумента КАК СуммаДокумента,
	|	ЗаказКлиента.Состояние КАК Состояние,
	|	ЗаказКлиента.ДатаИзмененияСостояния КАК ДатаИзмененияСостояния
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.НомерТелефона = &НомерТелефона
	|	И ЗаказКлиента.Дата >= &Дата
	|	И ЗаказКлиента.ДатаИзмененияСостояния <= &ДатаИзмененияСостояния";
	
	Запрос.УстановитьПараметр("Дата",НачалоДня(датазаявки));
	Запрос.УстановитьПараметр("ДатаИзмененияСостояния",КонецДня(датазаявки));
	Запрос.УстановитьПараметр("НомерТелефона",НомерКлиента);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
КонецФункции


&НаСервере
Функция ПолучитьПродажу(Заявка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПродажаЗапчастей.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|ГДЕ
	|	ПродажаЗапчастей.ЗаказКлиента = &ЗаказКлиента";
	
	Запрос.УстановитьПараметр("ЗаказКлиента",Заявка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ссылка;
КонецФункции

&НаСервере
Функция ПолучитьКлиента(НомерКлиента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Клиенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Клиенты КАК Клиенты
	|ГДЕ
	|	Клиенты.Телефон = &Телефон
	|	ИЛИ Клиенты.ДополнительныеКонтакты.Телефон = &Телефон";
	
	Запрос.УстановитьПараметр("Телефон",НомерКлиента);	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ссылка;
КонецФункции

&НаСервере
Функция ПолучитьМенеджера(Добавочный)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДополнительныеНомера.Менеджер КАК Менеджер
	|ИЗ
	|	РегистрСведений.ДополнительныеНомера КАК ДополнительныеНомера
	|ГДЕ
	|	ДополнительныеНомера.Добавочный = &Добавочный";
	
	Запрос.УстановитьПараметр("Добавочный",Добавочный);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Менеджер;
КонецФункции
&НаСервере
Функция ПолучитьКомментарий(Телефон, ДатаЗвонка)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиЗвонков.Комментарий КАК Комментарий,
	|	ЗаписиЗвонков.РучноеРедактирование КАК РучноеРедактирование,
	|	ЗаписиЗвонков.ФИОАудитора КАК ФИОАудитора,
	|	ЗаписиЗвонков.КомментарийАудитора КАК КомментарийАудитора,
	|	ЗаписиЗвонков.Хороший КАК Хороший,
	|	ЗаписиЗвонков.Плохой КАК Плохой,
	|	ЗаписиЗвонков.Техно КАК Техно,
	|	ЗаписиЗвонков.НетЗамечаний КАК НетЗамечаний,
	|	ЗаписиЗвонков.Заявка КАК Заявка,
	|	ЗаписиЗвонков.Заявка.СуммаДокумента КАК СуммаДокумента
	|ИЗ
	|	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
	|ГДЕ
	|	ЗаписиЗвонков.НомерТелефона = &НомерТелефона
	|	И ЗаписиЗвонков.Дата = &Дата";
	
	Запрос.УстановитьПараметр("НомерТелефона",Телефон);
	Запрос.УстановитьПараметр("Дата",ДатаЗвонка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка;
КонецФункции



&НаСервере
Функция ПолучитьРучное(Телефон, ДатаЗвонка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиЗвонков.РучноеРедактирование КАК РучноеРедактирование,
	|	ЗаписиЗвонков.IDКод КАК IDКод
	|ИЗ
	|	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
	|ГДЕ
	|	ЗаписиЗвонков.НомерТелефона = &НомерТелефона
	|	И ЗаписиЗвонков.Дата = &Дата";
	
	Запрос.УстановитьПараметр("НомерТелефона",Телефон);
	Запрос.УстановитьПараметр("Дата",ДатаЗвонка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество()>0 тогда
		Выборка.Следующий();
		Возврат Выборка.РучноеРедактирование;	
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции



&НаСервере
Функция ПолучитьТаблицуЗвонков() Экспорт
	
	ТаблицаРезультат = ПолучитьТаблицуЗвонковзаСутки();
	Для каждого строка из ТаблицаРезультат Цикл
		Если Не ПолучитьРучное(строка.НомерТелефона,строка.Дата) Тогда
			Попытка
				МенеджерЗаписиЗвонков = РегистрыСведений.ЗаписиЗвонков.СоздатьМенеджерЗаписи();
				Если строка.НомерТелефона  <> "" Тогда
					Выборка =Получитьзаявку(строка.НомерТелефона,строка.Дата); 
					МенеджерЗаписиЗвонков.НомерТелефона 	  = строка.НомерТелефона;
					МенеджерЗаписиЗвонков.Дата       		  = строка.Дата;
					МенеджерЗаписиЗвонков.Длительность 		  = Число(строка.Длительность-Дата(1,1,1));
					МенеджерЗаписиЗвонков.Менеджер    		  = ПолучитьМенеджера(Строка(строка.User_id));
					МенеджерЗаписиЗвонков.URL         		  = строка.ЗаписьURL;
					МенеджерЗаписиЗвонков.Заявка     		  = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).Заявка;
					МенеджерЗаписиЗвонков.ТипЗвонка   		  = строка.Типзвонка;
					МенеджерЗаписиЗвонков.клиент      		  = ПолучитьКлиента(строка.НомерТелефона);
					МенеджерЗаписиЗвонков.Комментарий	 	  = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).Комментарий;
					МенеджерЗаписиЗвонков.Сумма        		  = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).СуммаДокумента;
					МенеджерЗаписиЗвонков.СтатусЗаявки		  = Выборка.Состояние;
					МенеджерЗаписиЗвонков.Продажа      		  = ПолучитьПродажу(Выборка.ссылка);
					МенеджерЗаписиЗвонков.IDКод				  = ПолучитьIDКод(Строка.НомерТелефона, Строка.Дата);
					МенеджерЗаписиЗвонков.КомментарийАудитора = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).КомментарийАудитора;
					МенеджерЗаписиЗвонков.ФИОАудитора   	  = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).ФИОАудитора;
					МенеджерЗаписиЗвонков.Хороший   		  = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).Хороший;
					МенеджерЗаписиЗвонков.Плохой  			  = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).Плохой;
					МенеджерЗаписиЗвонков.Техно  			  = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).Техно;
					МенеджерЗаписиЗвонков.НетЗамечаний 		  = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).НетЗамечаний;
					
					МенеджерЗаписиЗвонков.Записать();
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	// ТЗ.Вывести(ТаблицаРезультат);
	//ТаблицаЗвонки.загрузить(ТаблицаРезультат);
	//Возврат ТаблицаРезультат;
	
	
КонецФункции

&НаСервере
Функция ПолучитьIDКод(Телефон, ДатаЗвонка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиЗвонков.РучноеРедактирование КАК РучноеРедактирование,
	|	ЗаписиЗвонков.IDКод КАК IDКод
	|ИЗ
	|	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
	|ГДЕ
	|	ЗаписиЗвонков.НомерТелефона = &НомерТелефона
	|	И ЗаписиЗвонков.Дата = &Дата";
	
	Запрос.УстановитьПараметр("НомерТелефона",Телефон);
	Запрос.УстановитьПараметр("Дата",ДатаЗвонка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество()>0 тогда
		Выборка.Следующий();
		Возврат Выборка.IDКод;
	Иначе 
		Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ЕСТЬNULL(ЗаписиЗвонков.IDКод, 0) КАК IDКод,
			|	ЗаписиЗвонков.НомерТелефона КАК НомерТелефона,
			|	ЗаписиЗвонков.Дата КАК Дата
			|ИЗ
			|	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
			|
			|УПОРЯДОЧИТЬ ПО
			|	IDКод УБЫВ";
			
			РезультатЗапроса = Запрос.Выполнить().Выбрать();
			РезультатЗапроса.Следующий();
			Возврат	РезультатЗапроса.IDКод + 1;
	КонецЕсли;

КонецФункции


&НаСервере
Функция ПолучитьТаблицуЗвонковПоНомеруТелефонаОбр(Телефон) Экспорт
	
	ТаблицаРезультат = ПолучитьТаблицуЗвонковПоНомерам(Телефон);
	Для каждого строка из ТаблицаРезультат Цикл
		Если Не ПолучитьРучное(строка.НомерТелефона,строка.Дата) Тогда
			Попытка
				МенеджерЗаписиЗвонков = РегистрыСведений.ЗаписиЗвонков.СоздатьМенеджерЗаписи();
				Если строка.НомерТелефона  <> "" Тогда
					Выборка =ПолучитьзаявкуОбр(строка.НомерТелефона,строка.Дата); 
					МенеджерЗаписиЗвонков.НомерТелефона = строка.НомерТелефона;
					МенеджерЗаписиЗвонков.Дата          = строка.Дата;
					МенеджерЗаписиЗвонков.Длительность  = Число(строка.Длительность-Дата(1,1,1));
					МенеджерЗаписиЗвонков.Менеджер      = ПолучитьМенеджера(Строка(строка.User_id));
					МенеджерЗаписиЗвонков.URL           = строка.ЗаписьURL;
					МенеджерЗаписиЗвонков.Заявка        = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).Заявка;
					МенеджерЗаписиЗвонков.ТипЗвонка     = строка.Типзвонка;
					МенеджерЗаписиЗвонков.клиент        = ПолучитьКлиента(строка.НомерТелефона);
					МенеджерЗаписиЗвонков.Комментарий   = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).Комментарий;
					МенеджерЗаписиЗвонков.Сумма         = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).СуммаДокумента;
					МенеджерЗаписиЗвонков.СтатусЗаявки  = Выборка.Состояние;
					МенеджерЗаписиЗвонков.Продажа       = ПолучитьПродажу(Выборка.ссылка);
					МенеджерЗаписиЗвонков.КомментарийАудитора = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).КомментарийАудитора;
					МенеджерЗаписиЗвонков.ФИОАудитора   = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).ФИОАудитора;
					МенеджерЗаписиЗвонков.Хороший   = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).Хороший;
					МенеджерЗаписиЗвонков.Плохой   = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).Плохой;
					МенеджерЗаписиЗвонков.Техно   = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).Техно;
					МенеджерЗаписиЗвонков.НетЗамечаний   = ПолучитьКомментарий(строка.НомерТелефона,строка.Дата).НетЗамечаний;
					
					МенеджерЗаписиЗвонков.Записать();
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	// ТЗ.Вывести(ТаблицаРезультат);
	//ТаблицаЗвонки.загрузить(ТаблицаРезультат);
	//Возврат ТаблицаРезультат;
	
	
КонецФункции

Функция ПреобразоватьНомерТелефона(НомерТелефона) Экспорт
	
	НомераТелефонов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(НомерТелефона, ",/");//СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(НомерТелефона, ",");
	
	Если НомераТелефонов.Количество() > 1 Тогда
		
		Результат = Новый Массив();
		
		Для каждого Номер Из НомераТелефонов Цикл
			Результат.Добавить(ПреобразоватьНомерТелефона(Номер));
		КонецЦикла;
		
	Иначе
		Результат = ""; 
		Попытка
			Для Индекс = 1 По СтрДлина(НомераТелефонов[0]) Цикл
				ЧастьСтроки = Сред(НомераТелефонов[0], Индекс, 1);
				Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЧастьСтроки) Тогда
					Результат = Результат + ЧастьСтроки;
				КонецЕсли;
			КонецЦикла;
			
			Если Лев(Результат, 1) = "8" Тогда
				Результат = "+7" + Сред(Результат, 2);	
			КонецЕсли;
			
			Если Лев(Результат, 1) = "7" Тогда
				Результат = "+" + Результат;	
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Возврат Результат;
	
	
КонецФункции // ПреобразоватьНомерТелефона()

Функция ДатуВTimestamp(пДата = Неопределено)
	Возврат Формат(Число(?(ТипЗнч(пДата) = Тип("Дата"), пДата, ТекущаяДата())-Дата("19700101") - 10800),"ЧН=0; ЧГ=0");
КонецФункции

&НаСервере
Функция ПолучитьТаблицуЗвонковПоНомеру(НомерТелефона, ПараметрыПодключения, Соединение, Отказ = Ложь) Экспорт
	
	Результат = НоваяТаблицаЗвонков();
	
	Токен = ПараметрыПодключения.Токен;
	
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(ПараметрыПодключения.АдресСервера);
	
	
	Запрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере);
	Запрос.Заголовки.Вставить("Content-Type", "application/json");
	
	ЗапросСтруктура = Новый Структура();
	ЗапросСтруктура.Вставить("user_name", ПараметрыПодключения.ИмяПользователя);
	ЗапросСтруктура.Вставить("api_key", Токен);
	ЗапросСтруктура.Вставить("action", "calls.list");
	ЗапросСтруктура.Вставить("from_date", Строка(ДатуВTimestamp(ТекущаяДата()-(3600*24*30))));
	//ЗапросСтруктура.Вставить("from_id" , 0);
	ЗапросСтруктура.Вставить("phone" , НомерТелефона);
	ЗапросСтруктура.Вставить("max_results" , 100);
	ЗапросСтруктура.Вставить("supervised" , 1);
	
	// параметры запроса
	ПотокJSON = Новый ЗаписьJSON();
	ПотокJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ПотокJSON, ЗапросСтруктура);
	СтрокаJSON = ПотокJSON.Закрыть();
	Запрос.УстановитьТелоИзСтроки(СтрокаJSON);
	
	
	Запрос.Заголовки.Вставить("Content-Length", СтрДлина(СтрокаJSON));
	
	Попытка
		Ответ = Соединение.ОтправитьДляОбработки(Запрос);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось получить список звонков. %1",
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		Возврат Результат;
	КонецПопытки;
	ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
	
	Если Ответ.КодСостояния <> 200 Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ИзвлечьТекстИзHTML(ТекстОтвета);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстОшибки,
		,
		,
		,
		Отказ
		);
		Возврат Результат;
	КонецЕсли;
	
	ДанныеJSON = дт_ОбщегоНазначения.ПолучитьЗначениеИзJSONСтроки(ТекстОтвета);
	Если ДанныеJSON = Неопределено Тогда
		
		ТекстОшибки = "Ошибка чтения json";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстОшибки,
		,
		,
		,
		Отказ
		);
		Возврат Результат; 
		
	КонецЕсли;
	
	Данные = дт_ОбщегоНазначения.ПолучитьСвойствоОбъектаJSON(ДанныеJSON, "results");
	Если Данные = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для каждого Запись Из Данные Цикл
		
		СсылкаНаЗапись = Запись.Получить("recording");
		Если СсылкаНаЗапись <> Неопределено 
			И ЗначениеЗаполнено(СсылкаНаЗапись) Тогда
			//Сообщить(СсылкаНаЗапись);
			
			//			СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(СсылкаНаЗапись);
			//			Запрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере);
			
			//			ИмяФайла = СсылкаНаЗапись;
			//			Если СтрЗаканчиваетсяНа(ИмяФайла, "/") Тогда
			//				СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ИмяФайла);
			//			КонецЕсли;
			
			НоваяСтрока = Результат.Добавить();
			НоваяСтрока.Дата = ПолучитьДатуИзUTC(Запись.Получить("start_time"));
			НоваяСтрока.ЗаписьURL = СсылкаНаЗапись;
			МассивСтрок = Новый Массив;
			Для Сч = 1 По СтрДлина(Запись.Получить("client_number")) Цикл
				МассивСтрок.Добавить(Сред(Запись.Получить("client_number"), Сч, 1));
			КонецЦикла;
			//МассивСтрок[0] = "+"+МассивСтрок[0];
			Попытка
				Если МассивСтрок[0] = "+" тогда
					//МассивСтрок[0] = "+"+МассивСтрок[0];
					МассивСтрок[2]  = " "+МассивСтрок[2];
					МассивСтрок[5]  = " "+МассивСтрок[5];
					МассивСтрок[8]  = "-"+МассивСтрок[8];
					МассивСтрок[10] = "-"+МассивСтрок[10];
					НомерКлиента = СтрСоединить(МассивСтрок);
				ИначеЕсли МассивСтрок[0] = "8" тогда
					МассивСтрок[0] = "+7";
					МассивСтрок[1]  = " "+МассивСтрок[1];
					МассивСтрок[4]  = " "+МассивСтрок[4];
					МассивСтрок[7]  = "-"+МассивСтрок[7];
					МассивСтрок[9] = "-"+МассивСтрок[9];
				Иначе
					НомерКлиента = Запись.Получить("client_number");
				КонецЕсли;
			Исключение
			КонецПопытки;
			
			
			НоваяСтрока.НомерТелефона = НомерКлиента ;
			НоваяСтрока.Длительность = ПолучитьДатуИзСекунд(Запись.Получить("duration"));
			НоваяСтрока.user_id = Запись.Получить("user_id");
			НоваяСтрока.ТипЗвонка = Запись.Получить("direction"); 
			//			ИмяФайлаВрем = ПолучитьИмяВременногоФайла(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла));
			//			Ответ = Соединение.Получить(Запрос, ИмяФайлаВрем);
			//			Сообщить(ИмяФайлаВрем);
			//Прервать;
		КонецЕсли;
		
		
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьТаблицуЗвонковзаСутки2( ПараметрыПодключения, Соединение, Отказ = Ложь) Экспорт
	
	Результат = НоваяТаблицаЗвонков();
	
	Токен = ПараметрыПодключения.Токен;
	
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(ПараметрыПодключения.АдресСервера);
	
	
	Запрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере);
	Запрос.Заголовки.Вставить("Content-Type", "application/json");
	
	ЗапросСтруктура = Новый Структура();
	ЗапросСтруктура.Вставить("user_name", ПараметрыПодключения.ИмяПользователя);
	ЗапросСтруктура.Вставить("api_key", Токен);
	ЗапросСтруктура.Вставить("action", "calls.list");
	ЗапросСтруктура.Вставить("from_date", Строка(ДатуВTimestamp(ТекущаяДата()-(3600*1))));
	//ЗапросСтруктура.Вставить("from_id" , 0);
	//ЗапросСтруктура.Вставить("phone" , НомерТелефона);
	ЗапросСтруктура.Вставить("max_results" , 100);
	ЗапросСтруктура.Вставить("supervised" , 1);
	
	// параметры запроса
	ПотокJSON = Новый ЗаписьJSON();
	ПотокJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ПотокJSON, ЗапросСтруктура);
	СтрокаJSON = ПотокJSON.Закрыть();
	Запрос.УстановитьТелоИзСтроки(СтрокаJSON);
	
	
	Запрос.Заголовки.Вставить("Content-Length", СтрДлина(СтрокаJSON));
	
	Попытка
		Ответ = Соединение.ОтправитьДляОбработки(Запрос);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось получить список звонков. %1",
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		Возврат Результат;
	КонецПопытки;
	ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
	
	Если Ответ.КодСостояния <> 200 Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ИзвлечьТекстИзHTML(ТекстОтвета);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстОшибки,
		,
		,
		,
		Отказ
		);
		Возврат Результат;
	КонецЕсли;
	
	ДанныеJSON = дт_ОбщегоНазначения.ПолучитьЗначениеИзJSONСтроки(ТекстОтвета);
	Если ДанныеJSON = Неопределено Тогда
		
		ТекстОшибки = "Ошибка чтения json";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстОшибки,
		,
		,
		,
		Отказ
		);
		Возврат Результат; 
		
	КонецЕсли;
	
	Данные = дт_ОбщегоНазначения.ПолучитьСвойствоОбъектаJSON(ДанныеJSON, "results");
	Если Данные = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для каждого Запись Из Данные Цикл
		
		СсылкаНаЗапись = Запись.Получить("recording");
		Если СсылкаНаЗапись <> Неопределено 
			И ЗначениеЗаполнено(СсылкаНаЗапись) Тогда
			//Сообщить(СсылкаНаЗапись);
			
			//			СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(СсылкаНаЗапись);
			//			Запрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере);
			
			//			ИмяФайла = СсылкаНаЗапись;
			//			Если СтрЗаканчиваетсяНа(ИмяФайла, "/") Тогда
			//				СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ИмяФайла);
			//			КонецЕсли;
			
			НоваяСтрока = Результат.Добавить();
			НоваяСтрока.Дата = ПолучитьДатуИзUTC(Запись.Получить("start_time"));
			НоваяСтрока.ЗаписьURL = СсылкаНаЗапись;
			
			НомерКлиента = Запись.Получить("client_number");
			МассивСтрок = Новый Массив;
			Для Сч = 1 По СтрДлина(НомерКлиента) Цикл
				МассивСтрок.Добавить(Сред(НомерКлиента, Сч, 1));
			КонецЦикла;
			Попытка
				Если МассивСтрок[0] = "+" тогда
					//МассивСтрок[0] = "+"+МассивСтрок[0];
					МассивСтрок[2]  = " "+МассивСтрок[2];
					МассивСтрок[5]  = " "+МассивСтрок[5];
					МассивСтрок[8]  = "-"+МассивСтрок[8];
					МассивСтрок[10] = "-"+МассивСтрок[10];
					НомерКлиента = СтрСоединить(МассивСтрок);
				ИначеЕсли МассивСтрок[0] = "8" тогда
					МассивСтрок[0] = "+7";
					МассивСтрок[1]  = " "+МассивСтрок[1];
					МассивСтрок[4]  = " "+МассивСтрок[4];
					МассивСтрок[7]  = "-"+МассивСтрок[7];
					МассивСтрок[9] = "-"+МассивСтрок[9];
					НомерКлиента = СтрСоединить(МассивСтрок);
				Иначе
				КонецЕсли;
			Исключение
			КонецПопытки;
			
			НоваяСтрока.НомерТелефона = НомерКлиента ;
			НоваяСтрока.Длительность = ПолучитьДатуИзСекунд(Запись.Получить("duration"));
			НоваяСтрока.user_id = Запись.Получить("user_id");
			НоваяСтрока.ТипЗвонка = Запись.Получить("direction"); 
			//			ИмяФайлаВрем = ПолучитьИмяВременногоФайла(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла));
			//			Ответ = Соединение.Получить(Запрос, ИмяФайлаВрем);
			//			Сообщить(ИмяФайлаВрем);
			//Прервать;
		КонецЕсли;
		
		
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыПодключения() Экспорт
	ПараметрыПодключения = НовыеПараметрыПодключения();
	
	ПараметрыПодключения.АдресСервера = Константы.дт_МоиЗвонкиАдресСервера.Получить();
	ПараметрыПодключения.ИмяПользователя = Константы.дт_МоиЗвонкиЛогин.Получить();
	ПараметрыПодключения.Пароль = Константы.дт_МоиЗвонкиПароль.Получить();
	ПараметрыПодключения.Вставить("Токен", Константы.дт_МоиЗвонкиAPI_Key.Получить());	
	
	Возврат ПараметрыПодключения;	
КонецФункции

&НаСервере
Функция ПолучитьТаблицуЗвонковПоНомерам(НомераТелефонов, Отказ = Ложь) Экспорт
	
	Результат = НоваяТаблицаЗвонков();
	
	Если НомераТелефонов = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПараметрыПодключения = ПолучитьПараметрыПодключения();
	
	Соединение = ПолучитьСоединение(ПараметрыПодключения);
	
	Если Соединение = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		"Не удалось подключиться к серверу Мои звонки",
		,
		,
		,
		Отказ
		);
		Возврат Результат;
	КонецЕсли;	
	
	//Для каждого НомерТелефона Из НомераТелефонов Цикл
	
	ТаблицаЗвонкоа = ПолучитьТаблицуЗвонковПоНомеру(НомераТелефонов,ПараметрыПодключения, Соединение);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаЗвонкоа, Результат);
	
	//КонецЦикла;
	
	//Результат.Сортировать("Дата");
	
	Соединение = Неопределено;
	
	Возврат Результат;
КонецФункции

&НаСервере
Функция ПолучитьТаблицуЗвонковЗаСутки(Отказ = Ложь) Экспорт
	
	Результат = НоваяТаблицаЗвонков();
	
	//Если НомераТелефонов = Неопределено Тогда
	//	Возврат Результат;
	//КонецЕсли;
	
	ПараметрыПодключения = ПолучитьПараметрыПодключения();
	
	Соединение = ПолучитьСоединение(ПараметрыПодключения);
	
	Если Соединение = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		"Не удалось подключиться к серверу Мои звонки",
		,
		,
		,
		Отказ
		);
		Возврат Результат;
	КонецЕсли;	
	
	//Для каждого НомерТелефона Из НомераТелефонов Цикл
	
	ТаблицаЗвонкоа = ПолучитьТаблицуЗвонковзасутки2(ПараметрыПодключения, Соединение);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаЗвонкоа, Результат);
	
	//КонецЦикла;
	
	//Результат.Сортировать("Дата");
	
	Соединение = Неопределено;
	
	Возврат Результат;
КонецФункции



&НаСервере
Функция НоваяТаблицаЗвонков()
	
	Результат = Новый ТаблицаЗначений(); 
	Результат.Колонки.Добавить("Дата", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));	
	Результат.Колонки.Добавить("ЗаписьURL", ОбщегоНазначения.ОписаниеТипаСтрока(0));	
	Результат.Колонки.Добавить("НомерТелефона", ОбщегоНазначения.ОписаниеТипаСтрока(18));
	Результат.Колонки.Добавить("Длительность", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Время));
	Результат.Колонки.Добавить("user_id", ОбщегоНазначения.ОписаниеТипаЧисло(10));
	Результат.Колонки.Добавить("ТипЗвонка", ОбщегоНазначения.ОписаниеТипаЧисло(1));
	Результат.Колонки.Добавить("Заявка", Новый ОписаниеТипов("ДокументСсылка.ЗаказКлиента"));
	Результат.Колонки.Добавить("Клиент", Новый ОписаниеТипов("СправочникСсылка.Клиенты"));
	Возврат Результат;
	
КонецФункции



Функция НовыеПараметрыПодключения() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("АдресСервера");
	Результат.Вставить("ИмяПользователя");
	Результат.Вставить("Пароль");
	Результат.Вставить("Порт");
	Результат.Вставить("Таймаут");
	Результат.Вставить("ПассивныйРежим");
	Результат.Вставить("РезультатВыполнения", Новый Структура("МассивОшибок", Новый Массив()));
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьСоединение(ПараметрыПодключения) Экспорт
	
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(ПараметрыПодключения.АдресСервера);
	
	ЗащищенноеСоединение = Неопределено;
	Если СтруктураURI.Схема = "https" Тогда
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(
		Новый СертификатКлиентаWindows(),
		Новый СертификатыУдостоверяющихЦентровWindows()
		);
	КонецЕсли;
	
	Попытка
		
		СоединениеHTTP = Новый HTTPСоединение(СтруктураURI.Хост, 
		СтруктураURI.Порт, 
		ПараметрыПодключения.ИмяПользователя, 
		ПараметрыПодключения.Пароль,
		Неопределено, 
		ПараметрыПодключения.Таймаут, 
		ЗащищенноеСоединение
		);
		
	Исключение
		СоединениеHTTP = Неопределено;
		//ЗаписатьТекстОшибки(ОписаниеОшибки(), ПараметрыВыполнения);	
	КонецПопытки;
	
	
	Возврат СоединениеHTTP;
	
	
КонецФункции // ПолучитьСоединениеHTTP()

#Область СлужебныеПроцедурыИФункции 
&НаСервере
Функция ПолучитьДатуИзUTC(ВремяUTC) 
	Результат = Дата(1970, 1, 1) + ВремяUTC;
	
	ЧасовойПоясИнформационнойБазы = ЧасовойПояс();//ПолучитьЧасовойПоясИнформационнойБазы(); // Europe/Moscow
	
	УниверсальнаяДата = УниверсальноеВремя(Результат, "UTC");
	Результат = МестноеВремя(УниверсальнаяДата, ЧасовойПоясИнформационнойБазы); 
	
	Возврат Результат;
КонецФункции

Функция ПолучитьДатуИзСекунд(ВремяСек)
	
	Если ТипЗнч(ВремяСек) <> Тип("Число") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Дата(1, 1, 1) + ВремяСек;
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура СформироватьНапоминания() ЭКСПОРТ 
	
	Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |	Пользователи.Ссылка КАК Ссылка
                   |ИЗ
                   |	Справочник.Пользователи КАК Пользователи
                   |ГДЕ
                   |	НЕ Пользователи.Ссылка.ПометкаУдаления
                   |	И НЕ Пользователи.Недействителен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивМенеджеров = Новый Массив;
	Пока выборка.Следующий() Цикл
		ПользовательИмя = Выборка.Ссылка.ИдентификаторПользователяИБ;                
        ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ПользовательИмя);

		Если НЕ ПользовательИБ = Неопределено И ПользовательИБ.Роли.Содержит(Метаданные.Роли.НапоминанияПоЗаявкам) Тогда
			МассивМенеджеров.Добавить(выборка.ссылка);
		КонецЕсли;
	КонецЦикла;
	
	
	Для Каждого менеджер из МассивМенеджеров Цикл
		КоличествоНеобработанныхЗаявок = 0;
		КоличествоНеобработанныхЗаявок = ПолучитьЗаявкиМенеджера(менеджер);
		
		Если КоличествоНеобработанныхЗаявок > 0 тогда
			
			СоздатьНапоминание(менеджер,КоличествоНеобработанныхЗаявок,1);
		Иначе
			//СоздатьНапоминание(менеджер,КоличествоНеобработанныхЗаявок,2);
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗаявкиМенеджера(менеджер)
	Состояния   = Новый массив();
	Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Отказ);
	Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Продажа);
	Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.НетВНаличии);
	
	Запрос = новый Запрос;
	запрос.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Ссылка) КАК Количество,
	|	ЗаказКлиента.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.ДатаСвязи <= &ДатаСвязи
	|	И НЕ ЗаказКлиента.Состояние В (&Состояния)
	|	И ЗаказКлиента.Ответственный = &Ответственный
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиента.Ответственный";
	Запрос.УстановитьПараметр("ДатаСвязи", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Состояния", Состояния);
	Запрос.УстановитьПараметр("Ответственный", менеджер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если выборка.Количество() > 0 Тогда
		Выборка.Следующий();
		Возврат Выборка.Количество;
	Иначе
		Возврат 0;
	КонецЕсли;
			
КонецФункции

&НаСервере
Процедура СоздатьНапоминание(менеджер,КоличествоНеобработанныхЗаявок,Флаг)
НапоминаниеПользователю = РегистрыСведений.НапоминанияПользователя.СоздатьМенеджерЗаписи();
НапоминаниеПользователю.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ВУказанноеВремя; 
НапоминаниеПользователю.ВремяСобытия = НачалоДня(ТекущаяДата())+(15*3600);
НапоминаниеПользователю.СрокНапоминания = НачалоДня(ТекущаяДата())+(15*3600);
НапоминаниеПользователю.Пользователь = менеджер;
НапоминаниеПользователю.ИнтервалВремениНапоминания = 0;


Если флаг = 1 тогда
	НапоминаниеПользователю.Описание = "Уважаемый "+ менеджер+" , у вас " + КоличествоНеобработанныхЗаявок + " необработанных заявок.";   
ИначеЕсли флаг = 2 тогда
	НапоминаниеПользователю.Описание = "Уважаемый "+ менеджер+" , у вас " + КоличествоНеобработанныхЗаявок + " необработанных заявок. Вы молодец :)"; 
КонецЕсли;
НапоминаниеПользователю.Записать();
КонецПроцедуры

&НаСервере
Процедура НапоминанияОЗаявках() Экспорт
	СформироватьНапоминания();
КонецПроцедуры


&НаСервере
Процедура ПолучитьЗвонкиИЗаявкиПоМенеджерам() Экспорт
	 УстановитьНаСервере();
	///+ГомзМА 21.03.2023
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаписиЗвонков.Дата) КАК Дата,
		|	ЗаписиЗвонков.Менеджер КАК Менеджер
		|ПОМЕСТИТЬ ВТ_ПустыеКлиенты
		|ИЗ
		|	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
		|ГДЕ
		|	ЗаписиЗвонков.Клиент = ЗНАЧЕНИЕ(Справочник.Клиенты.ПустаяССылка)
		|	И (ЗаписиЗвонков.Заявка.Состояние В (&МассивСостояний)
		|			ИЛИ ЗаписиЗвонков.Заявка = ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяССылка))
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаписиЗвонков.Менеджер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ЗаказКлиента.СуммаДокумента) КАК СуммаДокумента,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Ссылка) КАК Ссылка,
		|	ЗаказКлиента.Ответственный КАК Ответственный
		|ПОМЕСТИТЬ ВТ_Заявки
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.ДатаСвязи <= КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|	И ЗаказКлиента.Состояние В(&МассивСостояний)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказКлиента.Ответственный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ЗаписиЗвонков.Длительность) КАК Длительность,
		|	ЗаписиЗвонков.ТипЗвонка КАК ТипЗвонка,
		|	ЗаписиЗвонков.Менеджер КАК Менеджер,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаписиЗвонков.Дата) КАК Дата
		|ПОМЕСТИТЬ ВТ_Звонки
		|ИЗ
		|	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
		|ГДЕ
		|	ЗаписиЗвонков.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаписиЗвонков.Менеджер,
		|	ЗаписиЗвонков.ТипЗвонка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеНомера.Менеджер КАК Менеджер,
		|	ВТ_Заявки.СуммаДокумента КАК СуммаЗаявок,
		|	ВТ_Заявки.Ссылка КАК Заявки,
		|	ЕСТЬNULL(ВТ_Звонки.Длительность, 0) КАК Длительность,
		|	ВТ_Звонки.ТипЗвонка КАК ТипЗвонка,
		|	ВЫБОР
		|		КОГДА НЕ ВТ_Звонки.ТипЗвонка
		|			ТОГДА ВТ_Звонки.Дата
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Вх,
		|	ВЫБОР
		|		КОГДА ВТ_Звонки.ТипЗвонка
		|			ТОГДА ВТ_Звонки.Дата
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Исх,
		|	ВТ_Звонки.Дата КАК Дата,
		|	ВТ_ПустыеКлиенты.Дата КАК ПК
		|ИЗ
		|	РегистрСведений.ДополнительныеНомера КАК ДополнительныеНомера
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заявки КАК ВТ_Заявки
		|		ПО ДополнительныеНомера.Менеджер = ВТ_Заявки.Ответственный
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Звонки КАК ВТ_Звонки
		|		ПО ДополнительныеНомера.Менеджер = ВТ_Звонки.Менеджер
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПустыеКлиенты КАК ВТ_ПустыеКлиенты
		|		ПО ДополнительныеНомера.Менеджер = ВТ_ПустыеКлиенты.Менеджер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Менеджер";
	
	МассивСостояний = Новый Массив;
	МассивСостояний.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Думает);
	МассивСостояний.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Ожидание);
	МассивСостояний.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Срочно);
	
	Запрос.УстановитьПараметр("МассивСостояний", МассивСостояний);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	ПустаяДата = '00010101';
	
	Пока РезультатЗапроса.Следующий() Цикл
		ЗаписьВРегистреСведений = РегистрыСведений.СрезПоказателейМенеджеров.СоздатьМенеджерЗаписи();
		
		Если ТекущаяДатаСеанса() >= НачалоДня(ТекущаяДатаСеанса()) + 9 * 3600 - 300 И ТекущаяДатаСеанса() < НачалоДня(ТекущаяДатаСеанса()) + 12 * 3600 - 600 Тогда
			ЗаписьВРегистреСведений.Дата = НачалоДня(ТекущаяДатаСеанса()) + 9 * 3600;
		ИначеЕсли ТекущаяДатаСеанса() >= НачалоДня(ТекущаяДатаСеанса()) + 12 * 3600 - 600 И ТекущаяДатаСеанса() < НачалоДня(ТекущаяДатаСеанса()) + 15 * 3600 - 600 Тогда
			ЗаписьВРегистреСведений.Дата = НачалоДня(ТекущаяДатаСеанса()) + 12 * 3600;	
		ИначеЕсли ТекущаяДатаСеанса() >= НачалоДня(ТекущаяДатаСеанса()) + 15 * 3600 - 600 И ТекущаяДатаСеанса() < НачалоДня(ТекущаяДатаСеанса()) + 17 * 3600 - 600 Тогда
			ЗаписьВРегистреСведений.Дата = НачалоДня(ТекущаяДатаСеанса()) + 15 * 3600;
		ИначеЕсли ТекущаяДатаСеанса() >= НачалоДня(ТекущаяДатаСеанса()) + 17 * 3600 - 600 И ТекущаяДатаСеанса() < НачалоДня(ТекущаяДатаСеанса()) + 18 * 3600 - 600 Тогда
			ЗаписьВРегистреСведений.Дата = НачалоДня(ТекущаяДатаСеанса()) + 17 * 3600;
		КонецЕсли;
		
		ЗаписьВРегистреСведений.Менеджер 		= РезультатЗапроса.Менеджер;
		ЗаписьВРегистреСведений.ТипЗвонка 		= РезультатЗапроса.ТипЗвонка;
		ЗаписьВРегистреСведений.Заявки 			= РезультатЗапроса.Заявки;
		ЗаписьВРегистреСведений.Сумма 			= РезультатЗапроса.СуммаЗаявок;
		ЗаписьВРегистреСведений.ВходящиеЗвонки  = РезультатЗапроса.Вх;
		ЗаписьВРегистреСведений.ИсходящиеЗвонки = РезультатЗапроса.Исх;
		ЗаписьВРегистреСведений.Время 			= ПустаяДата + РезультатЗапроса.Длительность;
		ЗаписьВРегистреСведений.ПустыеКлиенты 	= РезультатЗапроса.ПК;
		ЗаписьВРегистреСведений.Записать();
		КонецЦикла;
		///-ГомзМА 21.03.2023

	КонецПроцедуры
	
	
	
	&НаСервере
Процедура УстановитьНаСервере()
		//+Сергеев 21.06.2023  000003257

	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаписиЗвонков.НомерТелефона КАК НомерТелефона,
	               |	ЗаписиЗвонков.Дата КАК Дата,
	               |	ЗаписиЗвонков.Длительность КАК Длительность,
	               |	ЗаписиЗвонков.Менеджер КАК Менеджер,
	               |	ЗаписиЗвонков.URL КАК URL,
	               |	ЗаписиЗвонков.Заявка КАК Заявка,
	               |	ЗаписиЗвонков.ТипЗвонка КАК ТипЗвонка,
	               |	ЗаписиЗвонков.Клиент КАК Клиент,
	               |	ЗаписиЗвонков.РучноеРедактирование КАК РучноеРедактирование,
	               |	ЗаписиЗвонков.Комментарий КАК Комментарий,
	               |	ЗаписиЗвонков.СтатусЗаявки КАК СтатусЗаявки,
	               |	ЗаписиЗвонков.Сумма КАК Сумма,
	               |	ЗаписиЗвонков.Продажа КАК Продажа,
	               |	ЗаписиЗвонков.КомментарийАудитора КАК КомментарийАудитора,
	               |	ЗаписиЗвонков.ФИОАудитора КАК ФИОАудитора,
	               |	ЗаписиЗвонков.IDКод КАК IDКод,
	               |	ЗаписиЗвонков.АудитПроверен КАК АудитПроверен,
	               |	ЗаписиЗвонков.Хороший КАК Хороший,
	               |	ЗаписиЗвонков.Плохой КАК Плохой,
	               |	ЗаписиЗвонков.Техно КАК Техно,
	               |	ЗаписиЗвонков.НетЗамечаний КАК НетЗамечаний
	               |ИЗ
	               |	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
	               |ГДЕ
	               |	ЗаписиЗвонков.Клиент = ЗНАЧЕНИЕ(Справочник.Клиенты.ПустаяСсылка)
	               |	И ЗаписиЗвонков.Дата > &Дата";
	
	Запрос.УстановитьПараметр("Дата",ТекущаяДата()-3600*24*30);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока выборка.Следующий() цикл
		МенеджерЗаписиЗвонков = РегистрыСведений.ЗаписиЗвонков.СоздатьМенеджерЗаписи();
		МенеджерЗаписиЗвонков.НомерТелефона 	  = выборка.НомерТелефона;
		МенеджерЗаписиЗвонков.РучноеРедактирование= выборка.РучноеРедактирование;
		МенеджерЗаписиЗвонков.Дата          	  = выборка.Дата;
		МенеджерЗаписиЗвонков.Длительность  	  = выборка.Длительность;
		МенеджерЗаписиЗвонков.Менеджер      	  = выборка.менеджер;
		МенеджерЗаписиЗвонков.URL           	  = выборка.URL;
		МенеджерЗаписиЗвонков.Заявка        	  = выборка.Заявка;
		МенеджерЗаписиЗвонков.ТипЗвонка     	  = выборка.Типзвонка;
		МенеджерЗаписиЗвонков.клиент        	  = ПолучитьКлиентаЛок(выборка.НомерТелефона);
		МенеджерЗаписиЗвонков.Комментарий   	  = выборка.Комментарий;
		МенеджерЗаписиЗвонков.Сумма         	  = Выборка.Сумма;
		МенеджерЗаписиЗвонков.СтатусЗаявки  	  = Выборка.СтатусЗаявки;
		МенеджерЗаписиЗвонков.Продажа       	  = Выборка.Продажа;
		МенеджерЗаписиЗвонков.ФИОАудитора   	  = выборка.ФИОАудитора;
		МенеджерЗаписиЗвонков.КомментарийАудитора = выборка.КомментарийАудитора;
		МенеджерЗаписиЗвонков.Хороший 			  = выборка.Хороший;
		МенеджерЗаписиЗвонков.Плохой 			  = выборка.Плохой;
		МенеджерЗаписиЗвонков.Техно 			  = выборка.Техно;
		МенеджерЗаписиЗвонков.НетЗамечаний 		  = выборка.НетЗамечаний;
		МенеджерЗаписиЗвонков.АудитПроверен 	  = выборка.АудитПроверен;
		
		МенеджерЗаписиЗвонков.Записать();
	КонецЦикла;
	
	  //-Сергеев 21.06.2023  000003257

КонецПроцедуры

&НаСервере
Функция ПолучитьКлиентаЛок(НомерКлиента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Клиенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Клиенты КАК Клиенты
	|ГДЕ
	|	Клиенты.Телефон = &Телефон
	|	ИЛИ Клиенты.ДополнительныеКонтакты.Телефон = &Телефон";
	
	Запрос.УстановитьПараметр("Телефон",НомерКлиента);	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ссылка;
КонецФункции



&НаСервере
Процедура СоздатьЗаявкиПоЗвонкамНаСервере() Экспорт 
	
	///+ГомзМА 11.08.2023
	ЗапросЗаявок = Новый Запрос;
	ЗапросЗаявок.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиЗвонков.НомерТелефона КАК НомерТелефона,
	|	ЗаписиЗвонков.Дата КАК Дата,
	|	ЗаписиЗвонков.Длительность КАК Длительность,
	|	ЗаписиЗвонков.Менеджер КАК Менеджер,
	|	ЗаписиЗвонков.URL КАК URL,
	|	ЗаписиЗвонков.Заявка КАК Заявка,
	|	ЗаписиЗвонков.ТипЗвонка КАК ТипЗвонка,
	|	ЗаписиЗвонков.Клиент КАК Клиент,
	|	ЗаписиЗвонков.РучноеРедактирование КАК РучноеРедактирование,
	|	ЗаписиЗвонков.Комментарий КАК Комментарий,
	|	ЗаписиЗвонков.СтатусЗаявки КАК СтатусЗаявки,
	|	ЗаписиЗвонков.Сумма КАК Сумма,
	|	ЗаписиЗвонков.Продажа КАК Продажа,
	|	ЗаписиЗвонков.КомментарийАудитора КАК КомментарийАудитора,
	|	ЗаписиЗвонков.ФИОАудитора КАК ФИОАудитора,
	|	ЗаписиЗвонков.IDКод КАК IDКод,
	|	ЗаписиЗвонков.ФИОРОКК КАК ФИОРОКК,
	|	ЗаписиЗвонков.КомментарийРОКК КАК КомментарийРОКК,
	|	ЗаписиЗвонков.АудитПроверен КАК АудитПроверен,
	|	ЗаписиЗвонков.Хороший КАК Хороший,
	|	ЗаписиЗвонков.Плохой КАК Плохой,
	|	ЗаписиЗвонков.Техно КАК Техно,
	|	ЗаписиЗвонков.НетЗамечаний КАК НетЗамечаний
	|ИЗ
	|	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
	|ГДЕ
	|	ЗаписиЗвонков.Заявка = ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка)
	|	И ЗаписиЗвонков.Дата > &Дата
	|	И ЗаписиЗвонков.ТипЗвонка = ЛОЖЬ
	|	И ЗаписиЗвонков.НомерТелефона = &НомерТелефона"; 
	
	ЗапросТелефонов = Новый Запрос;
	ЗапросТелефонов.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиЗвонков.НомерТелефона КАК НомерТелефона,
	|	ДополнительныеНомера.Контроль КАК Контроль
	|ИЗ
	|	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеНомера КАК ДополнительныеНомера
	|		ПО ЗаписиЗвонков.Менеджер = ДополнительныеНомера.Менеджер
	|ГДЕ
	|	ЗаписиЗвонков.Заявка = ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка)
	|	И ЗаписиЗвонков.Дата > &Дата
	|	И ЗаписиЗвонков.ТипЗвонка = ЛОЖЬ
	|	И НЕ ДополнительныеНомера.Контроль 
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаписиЗвонков.НомерТелефона,
	|	ДополнительныеНомера.Контроль";
	ЗапросТелефонов.УстановитьПараметр("Дата",НачалоДня(ТекущаяДата()));
	
	
	
	РезультатЗапросаТелефонов = ЗапросТелефонов.Выполнить().Выбрать();
	
	Пока РезультатЗапросаТелефонов.Следующий() Цикл 
		ЗапросЗаявок.УстановитьПараметр("НомерТелефона",РезультатЗапросаТелефонов.НомерТелефона);	
		ЗапросЗаявок.УстановитьПараметр("Дата",НачалоДня(ТекущаяДата()));
		
		РезультатЗапросаЗаявок = ЗапросЗаявок.Выполнить().Выбрать();
		
		ОткрытаяЗаявкаПоЗвонку = ПолучитьОткрытуюЗаявкуПоЗвонку(РезультатЗапросаТелефонов.НомерТелефона);
		
		Если   ОткрытаяЗаявкаПоЗвонку = Неопределено Тогда
			НоваяЗаявка = СоздатьНовуюЗаявку(РезультатЗапросаТелефонов.НомерТелефона);
		КонецЕсли;
		
		Пока РезультатЗапросаЗаявок.Следующий() Цикл
				МенеджерЗаписиЗвонков = РегистрыСведений.ЗаписиЗвонков.СоздатьМенеджерЗаписи();
				
				МенеджерЗаписиЗвонков.НомерТелефона = РезультатЗапросаЗаявок.НомерТелефона;
				МенеджерЗаписиЗвонков.Дата          = РезультатЗапросаЗаявок.Дата;
				МенеджерЗаписиЗвонков.Длительность  = РезультатЗапросаЗаявок.Длительность;
				МенеджерЗаписиЗвонков.Менеджер      = РезультатЗапросаЗаявок.Менеджер;
				МенеджерЗаписиЗвонков.URL           = РезультатЗапросаЗаявок.URL;
                МенеджерЗаписиЗвонков.ТипЗвонка     = РезультатЗапросаЗаявок.Типзвонка;
				МенеджерЗаписиЗвонков.клиент        = РезультатЗапросаЗаявок.клиент;
				МенеджерЗаписиЗвонков.Комментарий   = РезультатЗапросаЗаявок.Комментарий;
				МенеджерЗаписиЗвонков.Сумма         = РезультатЗапросаЗаявок.Сумма;
				МенеджерЗаписиЗвонков.СтатусЗаявки  = РезультатЗапросаЗаявок.СтатусЗаявки;
				МенеджерЗаписиЗвонков.Продажа       = РезультатЗапросаЗаявок.Продажа;
				МенеджерЗаписиЗвонков.IDКод			= РезультатЗапросаЗаявок.IDКод;
				МенеджерЗаписиЗвонков.ФИОАудитора   = РезультатЗапросаЗаявок.ФИОАудитора;
				МенеджерЗаписиЗвонков.Хороший       = РезультатЗапросаЗаявок.Хороший;
				МенеджерЗаписиЗвонков.Плохой   		= РезультатЗапросаЗаявок.Плохой;
				МенеджерЗаписиЗвонков.Техно   		= РезультатЗапросаЗаявок.Техно;
				МенеджерЗаписиЗвонков.НетЗамечаний  = РезультатЗапросаЗаявок.НетЗамечаний;
				
				МенеджерЗаписиЗвонков.КомментарийАудитора    = РезультатЗапросаЗаявок.КомментарийАудитора;
				МенеджерЗаписиЗвонков.РучноеРедактирование   = РезультатЗапросаЗаявок.РучноеРедактирование;
				
			Если   ОткрытаяЗаявкаПоЗвонку <> Неопределено Тогда				
				 МенеджерЗаписиЗвонков.Заявка = ОткрытаяЗаявкаПоЗвонку;
			Иначе 
				 МенеджерЗаписиЗвонков.Заявка = НоваяЗаявка;
				 Попытка
				 	/// Комлев 16/05/24 +++
				 	ОбъектЗаявки = НоваяЗаявка.ПолучитьОбъект();
				 	
				 	//Ягофаров = Справочники.Пользователи.НайтиПоНаименованию("Ягофаров Николай Дмитриевич");
				 
				 	//Если РезультатЗапросаЗаявок.Менеджер = Ягофаров Тогда
				 		//Чувилев = Справочники.Пользователи.НайтиПоНаименованию("Чувилёв Михаил Александрович");
				 		//ОбъектЗаявки.Ответственный = Чувилев;
					//Иначе 
				 		ОбъектЗаявки.Ответственный = РезультатЗапросаЗаявок.Менеджер;
				 	//КонецЕсли;
					
					ОбъектЗаявки.Записать();
				 Исключение
				 	Сообщить("");
			 	КонецПопытки;
			 		/// Комлев 16/05/24 ---
			 КонецЕсли;
			 
			МенеджерЗаписиЗвонков.Записать();
		КонецЦикла;
		
	КонецЦикла;
	///-ГомзМА 11.08.2023  
	
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОткрытуюЗаявкуПоЗвонку(НомерТелефона)

	///+ГомзМА 11.08.2023

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.НомерТелефона = &НомерТелефона
	|	И (ЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Ожидание)
	|			ИЛИ ЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Думает)
	|			ИЛИ ЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.ЖдёмДенег))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказКлиента.Дата УБЫВ";
	Запрос.УстановитьПараметр("НомерТелефона",НомерТелефона);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	Возврат ВыборкаДетальныеЗаписи.ссылка;


	///-ГомзМА 11.08.2023
КонецФункции // ПолучитьОткрытуюЗаявкуПоЗвонку()  

&НаСервере
Функция СоздатьНовуюЗаявку(Телефон)
  ДанныеКлиента = ПолучитьКлиентаДоп(Телефон);
  Если ДанныеКлиента.ссылка.СтатусКлиента <> Справочники.СтатусыКлиентов.НайтиПоКоду("000000007")   Тогда
   НовыйДокумент = Документы.ЗаказКлиента.СоздатьДокумент();
   НовыйДокумент.Дата    = ТекущаяДата();
   НовыйДокумент.Клиент  = ДанныеКлиента.ссылка;
   НовыйДокумент.НомерТелефона = Телефон;
   НовыйДокумент.ДатаСвязи = ТекущаяДата()+25;
   НовыйДокумент.АтоматическоеСоздание = Истина;
   НовыйДокумент.Целевая = Истина;
   НовыйДокумент.ТипЗаявки = Перечисления.ТипЗаявки.Продажа;
   НовыйДокумент.СтатусОбработки = Перечисления.СтатусыОбработкиЗаявок.ВОбработке;
   НовыйДокумент.WTPanel = Справочники.СтатусыWT.НайтиПоНаименованию("Обращение");


   НовыйДокумент.Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Ожидание;
   Попытка
   НовыйДокумент.Записать();
Исключение
    Возврат Документы.ЗаказКлиента.ПустаяСсылка();
   КонецПопытки;

   Возврат НовыйДокумент.Ссылка;
Иначе 
   Возврат Документы.ЗаказКлиента.ПустаяСсылка();
КонецЕсли;


КонецФункции 

&НаСервере
Функция ПолучитьКлиентаДоп(НомерКлиента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Клиенты.Ссылка КАК Ссылка,
	|	Клиенты.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Клиенты КАК Клиенты
	|ГДЕ
	|	(Клиенты.Телефон = &Телефон
	|			ИЛИ Клиенты.ДополнительныеКонтакты.Телефон = &Телефон)";
	
	Запрос.УстановитьПараметр("Телефон",НомерКлиента);	
	Выборка = Запрос.Выполнить().Выбрать(); 
	Выборка.Следующий();
Если выборка.Количество()>0 Тогда
Возврат Выборка;		
Иначе
Возврат Справочники.Клиенты.ПустаяСсылка();
КонецЕсли;

	
КонецФункции

Процедура тестКонверсииВТекст() Экспорт
		ЗапуститьПриложение("C:\Windows\System32\cmd.exe /c cd c:\1ctekst && python test3.py --audio https://worktruck.moizvonki.ru/calls/recordings/jGclcoWrXvtCShoEBxXYnCJDMpQjSNzb.mp4 --output 7.txt",,Истина);
	СтрокаКоманды = "C:\Windows\System32\cmd.exe /c cd c:\1ctekst && python test3.py --audio https://worktruck.moizvonki.ru/calls/recordings/jGclcoWrXvtCShoEBxXYnCJDMpQjSNzb.mp4 --output 7.txt";
whs = Новый COMОбъект("WScript.Shell");
whs.Run(СтрокаКоманды,0,1);	
КонецПроцедуры

&НаСервере
Процедура СформироватьНапоминанияПоПродажам() ЭКСПОРТ 
	
	Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |	Пользователи.Ссылка КАК Ссылка
                   |ИЗ
                   |	Справочник.Пользователи КАК Пользователи
                   |ГДЕ
                   |	НЕ Пользователи.Ссылка.ПометкаУдаления
                   |	И НЕ Пользователи.Недействителен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивМенеджеров = Новый Массив;
	Пока выборка.Следующий() Цикл
		ПользовательИмя = Выборка.Ссылка.ИдентификаторПользователяИБ;                
        ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ПользовательИмя);

		Если НЕ ПользовательИБ = Неопределено И ПользовательИБ.Роли.Содержит(Метаданные.Роли.НапоминанияПоЗаявкам) Тогда
			МассивМенеджеров.Добавить(выборка.ссылка);
		КонецЕсли;
	КонецЦикла;
	
	
	Для Каждого менеджер из МассивМенеджеров Цикл
		//КоличествоНеобработанныхЗаявок = 0;
		Продажи = ПолучитьПродажиМенеджера(менеджер);
		
	//	Если КоличествоНеобработанныхЗаявок > 0 тогда
		
			//СоздатьНапоминание(менеджер,КоличествоНеобработанныхЗаявок,1);
		//Иначе
			//СоздатьНапоминание(менеджер,КоличествоНеобработанныхЗаявок,2);
		//КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПродажиМенеджера(менеджер)
	Состояния   = Новый массив();
	Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Отказ);
	Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Продажа);
	Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.НетВНаличии);
	
	Запрос = новый Запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	ПродажаЗапчастей.Ссылка КАК Ссылка,
	               |	ПродажаЗапчастей.КтоПродал КАК КтоПродал
	               |ИЗ
	               |	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	               |ГДЕ
	               |	ПродажаЗапчастей.Дата > &Дата
	               |	И ПродажаЗапчастей.КтоПродал = &КтоПродал
	               |	И ПродажаЗапчастей.ОжидаемаяДатаВыплаты = &ОжидаемаяДатаВыплаты";
	
	Запрос.УстановитьПараметр("ОжидаемаяДатаВыплаты",Дата("00010101"));
	Запрос.УстановитьПараметр("Дата",  НачалоМесяца((ТекущаяДата())));
	Запрос.УстановитьПараметр("КтоПродал", менеджер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если выборка.Количество() > 0 Тогда
		Пока выборка.Следующий() цикл           //Выборка.Следующий();
			СоздатьНапоминаниеОПродаже(менеджер,выборка.Ссылка,1);
		КонецЦикла;
		
		//Возврат Выборка;
	Иначе
		Возврат 0;
	КонецЕсли;
			
КонецФункции

&НаСервере
Процедура СоздатьНапоминаниеОПродаже(менеджер,продажа,Флаг)
НапоминаниеПользователю = РегистрыСведений.НапоминанияПользователя.СоздатьМенеджерЗаписи();
НапоминаниеПользователю.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ВУказанноеВремя; 
НапоминаниеПользователю.ВремяСобытия = НачалоДня(ТекущаяДата())+(9*3600);
НапоминаниеПользователю.СрокНапоминания = НачалоДня(ТекущаяДата())+(9*3600);
НапоминаниеПользователю.Пользователь = менеджер;
НапоминаниеПользователю.ИнтервалВремениНапоминания = 0;
НапоминаниеПользователю.Источник = продажа;

Если флаг = 1 тогда
	НапоминаниеПользователю.Описание = "Уважаемый "+ менеджер+" , у вас не заполнена ожидаемая дата оплаты в " + продажа ;   
ИначеЕсли флаг = 2 тогда
	//НапоминаниеПользователю.Описание = "Уважаемый "+ менеджер+" , у вас " + КоличествоНеобработанныхЗаявок + " необработанных заявок. Вы молодец :)"; 
КонецЕсли;
НапоминаниеПользователю.Записать();
КонецПроцедуры

&НаСервере
Процедура НапоминанияОпродажах() Экспорт
	СформироватьНапоминанияПоПродажам();
КонецПроцедуры
