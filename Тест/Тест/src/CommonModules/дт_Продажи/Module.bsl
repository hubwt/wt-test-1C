#Область ПрограммныйИнтерфейс
// Выполняет движения регистра накопления РегистрНакопления1
//
Процедура ОтразитьДвижения(ПараметрыПроведения, Движения, Отказ) Экспорт
	
	ТаблицаДвижения = ПараметрыПроведения.ТаблицаПродажи;
	Если Отказ
	 ИЛИ ТаблицаДвижения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	ДвиженияНабор = Движения.Продажи;
	ДвиженияНабор.Записывать = Истина;
	ДвиженияНабор.Загрузить(ТаблицаДвижения);
	
КонецПроцедуры

Функция НарядДоставка(ОбъектПродажи) Экспорт

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ОбъектПродажи.ПолучитьМакет("НарядДоставка");
	ОбластьМакета = Макет.ПолучитьОбласть("шапка");

	ОбластьМакета.Параметры.заголовок = "Наряд на доставку №" + ОбъектПродажи.Номер + "Р";
	ОбластьМакета.Параметры.откого = ОбъектПродажи.Организация.ОтКогоДоставка;
	ОбластьМакета.Параметры.тк = ОбъектПродажи.ТранспортнаяКомпания.Наименование;
	ОбластьМакета.Параметры.куда = "" + ОбъектПродажи.ГородПолучения + "/" + ОбъектПродажи.РегионПолучения + "/"
		+ ОбъектПродажи.СтранаПолучения + "
										  |" + ОбъектПродажи.КоммДост;
	ОбластьМакета.Параметры.Ответственный = ОбъектПродажи.КтоПродал;

	Частный = Ложь;
	Если ОбъектПродажи.доставкаКлиент = Истина Тогда
		Телефон = ОбъектПродажи.Телефон;
		Фио = ОбъектПродажи.НаименованиеИлиФИО;
		Если ОбъектПродажи.частный = Истина Тогда
			Паспорт = ОбъектПродажи.Паспорт + "
											  |" + ОбъектПродажи.Прописка;
			Частный = Истина;
		Иначе
			Инн = ОбъектПродажи.ИНН;
			Частный = Ложь;
		КонецЕсли;
	Иначе
		Если ОбъектПродажи.Клиент.ЧастноеЛицо = Ложь Тогда
			Фио = ОбъектПродажи.Клиент.ПолноеНаименование;
			Инн = ОбъектПродажи.Клиент.ИНН;
			Частный = Ложь;
			Если СтрДлина(ОбъектПродажи.Клиент.РеквизитТелефон) > 3 Тогда
				телефон = ОбъектПродажи.Клиент.РеквизитТелефон;
			Иначе
				телефон = ОбъектПродажи.Клиент.Телефон;
			КонецЕсли;
		Иначе
			Фио = ОбъектПродажи.Клиент.ФИОдост;
			Частный = Истина;
			Паспорт = ОбъектПродажи.Клиент.Паспорт + "
													 |" + ОбъектПродажи.Клиент.Прописка;
			Если СтрДлина(ОбъектПродажи.Клиент.ТелефониДост) > 3 Тогда
				телефон = ОбъектПродажи.Клиент.ТелефониДост;
			Иначе
				телефон = ОбъектПродажи.Клиент.Телефон;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если частный = Ложь Тогда
		ОбластьМакета.Параметры.п1 = "Название Компании:";
		ОбластьМакета.Параметры.зп1 = фио;
		ОбластьМакета.Параметры.п2 = "ИНН:";
		ОбластьМакета.Параметры.зп2 = Инн;
		ОбластьМакета.Параметры.п3 = "Телефон:";
		ОбластьМакета.Параметры.зп3 = Телефон;
	Иначе
		ОбластьМакета.Параметры.п1 = "ФИО:";
		ОбластьМакета.Параметры.зп1 = Фио;
		ОбластьМакета.Параметры.п2 = "Паспорт/Прописка:";
		ОбластьМакета.Параметры.зп2 = паспорт;
		ОбластьМакета.Параметры.п3 = "Телефон:";
		ОбластьМакета.Параметры.зп3 = телефон;
	КонецЕсли;
	Штрихкод =  ГенераторШтрихКода.ПолучитьКомпонентуШтрихКодирования("");
	Штрихкод.Ширина = 120;
	Штрихкод.Высота = 120;
	Штрихкод.ТипКода = 16;
	Штрихкод.УголПоворота = 0;
	Штрихкод.ЗначениеКода = ОбъектПродажи.Номер;
	Штрихкод.ПрозрачныйФон = Истина;
	Штрихкод.ОтображатьТекст = Ложь;

	ДвоичныйШтрихКод = Штрихкод.ПолучитьШтрихКод();
	КартинкаШтрихКод = Новый Картинка(ДвоичныйШтрихКод, Истина);
	ОбластьМакета.Рисунки.КартинкаЗаготовка.Картинка = КартинкаШтрихКод;
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьСтроки = Макет.ПолучитьОбласть("строка");
	НомерСтроки = 0;
	Для Каждого СтрокаТабличнойЧасти Из ОбъектПродажи.Таблица Цикл
		Если СтрокаТабличнойЧасти.Отменено Тогда
			Продолжить;
		КонецЕсли;

		НомерСтроки = НомерСтроки + 1;
		ОбластьСтроки.Параметры.н = НомерСтроки;
		ОбластьСтроки.Параметры.код = СтрокаТабличнойЧасти.Товар.Код;
		ОбластьСтроки.Параметры.артикул = СтрокаТабличнойЧасти.Товар.Артикул;
		ОбластьСтроки.Параметры.название = СтрокаТабличнойЧасти.Товар.Наименование;
		ОбластьСтроки.Параметры.колво = СтрокаТабличнойЧасти.Количество;
		ОбластьСтроки.Параметры.Объем = СтрокаТабличнойЧасти.Товар.Объем;
		ОбластьСтроки.Параметры.Вес = СтрокаТабличнойЧасти.Товар.Вес;
		ТабДокумент.Вывести(ОбластьСтроки);

	КонецЦикла;

	ОбластьСтроки = Макет.ПолучитьОбласть("Сборщик");
	ТабДокумент.Вывести(ОбластьСтроки);

	Возврат ТабДокумент;
КонецФункции // НарядДоставкаСервер()

// Готовит к записи наборы записей документа (только по регистрам, входящих в подсистему)
//
Процедура ПодготовитьНаборыЗаписей(СтруктураОбъект) Экспорт
	
	РегистрыПодсистемы = Новый Массив;
	РегистрыПодсистемы.Добавить("Продажи");
	
	Для каждого Регистр Из РегистрыПодсистемы Цикл
	
		НаборЗаписей = СтруктураОбъект.Движения.Найти(Регистр);
		
		Если НаборЗаписей <> Неопределено Тогда
			Если НЕ НаборЗаписей.ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
				
				НаборЗаписей.ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура);
				
			КонецЕсли;
			
			Если НЕ НаборЗаписей.ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
				
				НаборЗаписей.ДополнительныеСвойства.ДляПроведения.Вставить("СтруктураВременныеТаблицы", СтруктураОбъект.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы);
				
			КонецЕсли;
			
			//РегистрыНакопления[Регистр].СоздатьПустуюВременнуюТаблицуИзменение(СтруктураОбъект.ДополнительныеСвойства);
		
		КонецЕсли;
	
	КонецЦикла; 
	
КонецПроцедуры


// Заполняет регистр сведений ПоказателиАвтомобилей
Процедура дт_РасчетПоказателейАвтомобилей() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПоказателиАвтомобилей.Автомобиль КАК Автомобиль,
		|	ПоказателиАвтомобилей.Рентабельность КАК Рентабельность,
		|	ПоказателиАвтомобилей.ВыручкаОплаченная КАК ВыручкаОплаченная,
		|	ПоказателиАвтомобилей.Прибыль КАК Прибыль,
		|	ПоказателиАвтомобилей.ВыручкаПотенциальная КАК ВыручкаПотенциальная
		|ПОМЕСТИТЬ ВТ_Показатели
		|ИЗ
		|	РегистрСведений.ПоказателиАвтомобилей КАК ПоказателиАвтомобилей
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Автомобиль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БаланПоНакладнойОбороты.Измерение1 КАК ДокументПродажи,
		|	БаланПоНакладнойОбороты.СуммаОборот КАК Сумма
		|ПОМЕСТИТЬ ВТ_Оплаты
		|ИЗ
		|	РегистрНакопления.БаланПоНакладной.Обороты(,,,) КАК БаланПоНакладнойОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОплатыПоСделкамОбороты.Документ,
		|	ОплатыПоСделкамОбороты.СуммаОборот
		|ИЗ
		|	РегистрНакопления.ОплатыПоСделкам.Обороты(,,,) КАК ОплатыПоСделкамОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПродажи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Оплаты.ДокументПродажи КАК ДокументПродажи,
		|	СУММА(ВТ_Оплаты.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОплатыГр
		|ИЗ
		|	ВТ_Оплаты КАК ВТ_Оплаты
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Оплаты.ДокументПродажи
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПродажи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОплатыГр.ДокументПродажи КАК ДокументПродажи,
		|	ВТ_ОплатыГр.Сумма КАК СуммаОплачено,
		|	ВЫБОР
		|		КОГДА ПродажаЗапчастей.ИтогоРекв = 0
		|			ТОГДА 0
		|		КОГДА ЕСТЬNULL(ВТ_ОплатыГр.Сумма, 0) >= ПродажаЗапчастей.ИтогоРекв
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Коэффициент
		|ПОМЕСТИТЬ ВТ_ОплатыКоэф
		|ИЗ
		|	ВТ_ОплатыГр КАК ВТ_ОплатыГр
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
		|		ПО ВТ_ОплатыГр.ДокументПродажи = ПродажаЗапчастей.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПродажи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнформацияОПродажахОбороты.машина КАК Автомобиль,
		|	ИнформацияОПродажахОбороты.Регистратор КАК ДокументПродажи,
		|	ИнформацияОПродажахОбороты.колвоОборот * ИнформацияОПродажахОбороты.цена КАК СуммаВыручка
		|ПОМЕСТИТЬ ВТ_Продажи
		|ИЗ
		|	РегистрНакопления.ИнформацияОПродажах.Обороты(,, Регистратор,) КАК ИнформацияОПродажахОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПродажиОбороты.Автомобиль,
		|	ПродажиОбороты.Регистратор,
		|	ПродажиОбороты.СуммаОборот
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(,, Регистратор,) КАК ПродажиОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПродажи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Продажи.Автомобиль КАК Автомобиль,
		|	ВТ_Продажи.ДокументПродажи КАК ДокументПродажи,
		|	СУММА(ВТ_Продажи.СуммаВыручка) КАК СуммаВыручка
		|ПОМЕСТИТЬ ВТ_ПродажиГр
		|ИЗ
		|	ВТ_Продажи КАК ВТ_Продажи
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Продажи.Автомобиль,
		|	ВТ_Продажи.ДокументПродажи
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПродажи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрНакопления1Остатки.машина КАК Автомобиль,
		|	РегистрНакопления1Остатки.Товар.РекомендованаяЦена * РегистрНакопления1Остатки.КолвоОстаток КАК СуммаПродажи
		|ПОМЕСТИТЬ ВТ_ПродажиПотенциальные
		|ИЗ
		|	РегистрНакопления.РегистрНакопления1.Остатки({(&КонецПериода)},) КАК РегистрНакопления1Остатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеЗапчастей.Таблица КАК ПоступлениеЗапчастейТаблица
		|		ПО РегистрНакопления1Остатки.Товар = ПоступлениеЗапчастейТаблица.Товар
		|		И РегистрНакопления1Остатки.машина = ПоступлениеЗапчастейТаблица.Ссылка.Машина
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоказателиРасчетныеДетально.Автомобиль КАК Автомобиль,
		|	СУММА(ПоказателиРасчетныеДетально.СуммаВыручка) КАК СуммаВыручка,
		|	СУММА(ПоказателиРасчетныеДетально.СуммаВыручкаОплаченная) КАК СуммаВыручкаОплаченная,
		|	СУММА(ПоказателиРасчетныеДетально.СуммаВыручкаПотенциальная) КАК СуммаВыручкаПотенциальная
		|ПОМЕСТИТЬ ВТ_ПоказателиРасчетные
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_Продажи.Автомобиль КАК Автомобиль,
		|		ВТ_Продажи.СуммаВыручка КАК СуммаВыручка,
		|		ВТ_Продажи.СуммаВыручка * ЕСТЬNULL(ВТ_ОплатыКоэф.Коэффициент, 0) КАК СуммаВыручкаОплаченная,
		|		0 КАК СуммаВыручкаПотенциальная
		|	ИЗ
		|		ВТ_ПродажиГр КАК ВТ_Продажи
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОплатыКоэф КАК ВТ_ОплатыКоэф
		|			ПО ВТ_Продажи.ДокументПродажи = ВТ_ОплатыКоэф.ДокументПродажи
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ВТ_ПродажиПотенциальные.Автомобиль,
		|		0,
		|		0,
		|		ВТ_ПродажиПотенциальные.СуммаПродажи
		|	ИЗ
		|		ВТ_ПродажиПотенциальные КАК ВТ_ПродажиПотенциальные) КАК ПоказателиРасчетныеДетально
		|СГРУППИРОВАТЬ ПО
		|	ПоказателиРасчетныеДетально.Автомобиль
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Автомобиль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрНакопления1Остатки.машина КАК машина,
		|	СУММА(РегистрНакопления1Остатки.КолвоОстаток) КАК КолвоОстаток,
		|	СУММА(РегистрНакопления1Остатки.Товар.РекомендованаяЦена) КАК ПотенциальнаяВыручка
		|ПОМЕСТИТЬ ПотенцВыручка
		|ИЗ
		|	РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
		|ГДЕ
		|	РегистрНакопления1Остатки.КолвоОстаток > 0
		|СГРУППИРОВАТЬ ПО
		|	РегистрНакопления1Остатки.машина
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПоказателиРасчетные.Автомобиль КАК Автомобиль,
		|	ВТ_ПоказателиРасчетные.СуммаВыручкаОплаченная КАК ВыручкаОплаченная,
		|	ВТ_ПоказателиРасчетные.СуммаВыручкаОплаченная - Машины.Сумма КАК Прибыль,
		|	ВЫБОР
		|		КОГДА Машины.Сумма = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((ВТ_ПоказателиРасчетные.СуммаВыручкаОплаченная - Машины.Сумма) / Машины.Сумма * 100 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК Рентабельность,
		|	ПотенцВыручка.ПотенциальнаяВыручка КАК ВыручкаПотенциальная
		|ИЗ
		|	ВТ_ПоказателиРасчетные КАК ВТ_ПоказателиРасчетные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Машины КАК Машины
		|			ЛЕВОЕ СОЕДИНЕНИЕ ПотенцВыручка КАК ПотенцВыручка
		|			ПО (Машины.Ссылка = ПотенцВыручка.машина.Ссылка)
		|		ПО (ВТ_ПоказателиРасчетные.Автомобиль = Машины.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Показатели КАК ВТ_Показатели
		|		ПО (ВТ_ПоказателиРасчетные.Автомобиль = ВТ_Показатели.Автомобиль)
		|ГДЕ
		|	(ВТ_Показатели.Автомобиль ЕСТЬ NULL
		|	ИЛИ ВТ_Показатели.Рентабельность <> ВЫБОР
		|		КОГДА Машины.Сумма = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((ВТ_ПоказателиРасчетные.СуммаВыручкаОплаченная - Машины.Сумма) / Машины.Сумма * 100 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ
		|	ИЛИ ВТ_Показатели.Прибыль <> ВТ_ПоказателиРасчетные.СуммаВыручкаОплаченная - Машины.Сумма
		|	ИЛИ ВТ_Показатели.ВыручкаОплаченная <> ВТ_ПоказателиРасчетные.СуммаВыручкаОплаченная
		|	ИЛИ ВТ_Показатели.ВыручкаПотенциальная <> ВТ_ПоказателиРасчетные.СуммаВыручкаПотенциальная)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Запись = РегистрыСведений.ПоказателиАвтомобилей.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаДетальныеЗаписи);
		
		Попытка
		
			Запись.Записать(Истина);	
		
		Исключение
			ТекстСообщения = СтрШаблон("Не удалось записать показатели автомобиля %1. %2",
					ВыборкаДетальныеЗаписи.Автомобиль,
					ОписаниеОшибки()
			);
			ВызватьИсключение ТекстСообщения;
		КонецПопытки;
		
	КонецЦикла;
	
	
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти