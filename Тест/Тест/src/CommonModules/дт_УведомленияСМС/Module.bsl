#Область ПрограммныйИнтерфейс

Функция ПолучитьПараметрыПодключения() Экспорт
	ПараметрыПодключения = НовыеПараметрыПодключения();
	
	ПараметрыПодключения.АдресСервера = Константы.дт_SMS_АдресСервера.Получить();
	ПараметрыПодключения.ИмяПользователя = Константы.дт_SMS_Логин.Получить();
	ПараметрыПодключения.Пароль = Константы.дт_SMS_Пароль.Получить();
	ПараметрыПодключения.Вставить("Токен", Константы.дт_SMS_API_Key.Получить());	
	
	Возврат ПараметрыПодключения;	
КонецФункции



#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция НовыеПараметрыПодключения() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("АдресСервера");
	Результат.Вставить("ИмяПользователя");
	Результат.Вставить("Пароль");
	Результат.Вставить("Порт");
	Результат.Вставить("Таймаут");
	Результат.Вставить("ПассивныйРежим");
	Результат.Вставить("РезультатВыполнения", Новый Структура("МассивОшибок", Новый Массив()));
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьСоединение(ПараметрыПодключения) Экспорт

	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(ПараметрыПодключения.АдресСервера);
	
	ЗащищенноеСоединение = Неопределено;
	Если СтруктураURI.Схема = "https" Тогда
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(
			Новый СертификатКлиентаWindows(),
			Новый СертификатыУдостоверяющихЦентровWindows()
		);
	КонецЕсли;
	
	Попытка
		
		СоединениеHTTP = Новый HTTPСоединение(СтруктураURI.Хост, 
			СтруктураURI.Порт, 
			ПараметрыПодключения.ИмяПользователя, 
			ПараметрыПодключения.Токен,//ПараметрыПодключения.Пароль,
			Неопределено, 
			ПараметрыПодключения.Таймаут, 
			ЗащищенноеСоединение
		);
		
	Исключение
		СоединениеHTTP = Неопределено;
		//ЗаписатьТекстОшибки(ОписаниеОшибки(), ПараметрыВыполнения);	
	КонецПопытки;
	
	
	Возврат СоединениеHTTP;
	

КонецФункции // ПолучитьСоединениеHTTP()

Процедура ОтправитьСМС(НомерТелефона, Текст, Подпись, Отказ = Ложь) Экспорт
	
	ПараметрыПодключения = ПолучитьПараметрыПодключения();
	
	Соединение = ПолучитьСоединение(ПараметрыПодключения);
	
	Если Соединение = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Не удалось подключиться к серверу SMS",
			,
			,
			,
			Отказ
		);
		Возврат;
	КонецЕсли;	
	
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(ПараметрыПодключения.АдресСервера);
	
	
	ИмяФункции = "sms/send"; //"sms/testsend"; 
	
	ПараметрыФункции = СтрШаблон("number=%1&text=%2&sign=%3", 
		НомерТелефона, 
		СтрЗаменить(Текст, " ", "+"),
		Подпись
	);
	
	ПутьНаСервере = СтруктураURI.ПутьНаСервере + "/" + СтрШаблон("%1?%2",
		ИмяФункции,
		ПараметрыФункции
		
	); 
	
	
	Запрос = Новый HTTPЗапрос(ПутьНаСервере);
	Запрос.Заголовки.Вставить("Content-Type", "application/json");
	
	Попытка
		Ответ = Соединение.Получить(Запрос);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон("Не удалось отправить SMS. %1",
				ОписаниеОшибки()),
			,
			,
			,
			Отказ
		);
		Возврат;
	КонецПопытки;
	
	ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
	
	Если Ответ.КодСостояния <> 200 Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ИзвлечьТекстИзHTML(ТекстОтвета);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ
		);
		Возврат;
	КонецЕсли;
	
	ДанныеJSON = дт_ОбщегоНазначения.ПолучитьЗначениеИзJSONСтроки(ТекстОтвета);
	Если ДанныеJSON = Неопределено Тогда
		
		ТекстОшибки = "Ошибка чтения json";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ
		);
		Возврат; 
		
	КонецЕсли;
	
	Данные = дт_ОбщегоНазначения.ПолучитьСвойствоОбъектаJSON(ДанныеJSON, "success");
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	Отказ = НЕ (Данные = Истина);
	
	Если Отказ Тогда
		
		ТекстОшибки = дт_ОбщегоНазначения.ПолучитьСвойствоОбъектаJSON(ДанныеJSON, "message");
		Если ЗначениеЗаполнено(ТекстОшибки)
			И ТипЗнч(ТекстОшибки) = Тип("Строка") Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки,
					,
					,
					,
					Отказ
				);
				
			КонецЕсли;
		 
	КонецЕсли;
	
	Соединение = Неопределено;
	
КонецПроцедуры

Процедура ОтправитьСМСКлиенту(Клиент, ТекстСообщения, Отказ = Ложь) Экспорт
	
	Если Не ЗначениеЗаполнено(Клиент) Тогда
		Возврат
	КонецЕсли;
	
	НомераТелефонов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Клиент, "Телефон");
	
	Если ПустаяСтрока(НомераТелефонов) Тогда
		Возврат
	КонецЕсли;
	
	НомераПреобразованные = дт_МоиЗвонки.ПреобразоватьНомерТелефона(НомераТелефонов);
	
	Если ТипЗнч(НомераПреобразованные) = Тип("Массив") Тогда
		НомерТелефона = НомераПреобразованные[0]; 
	Иначе
		НомерТелефона = НомераПреобразованные;
	КонецЕсли;
	
	НомерТелефона = СтрЗаменить(НомерТелефона, "+", "");
	
	Если ПустаяСтрока(НомерТелефона) Тогда
		Возврат
	КонецЕсли;
	
	Подпись = Константы.дт_SMS_Подпись.Получить();
	
	ОтправитьСМС(НомерТелефона, ТекстСообщения, Подпись, Отказ);
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти