#Область ОписаниеПараметровGoogleAPI

//в ХранилищеОбщихНастроек в ПараметрыAPI_GS нужно сохранить структуру для работы с google api:
//	- ид_клиента 			- Идентификатор клиента
//	- секрет_клиента 		- Секрет клиента
//	- СерверАвторизации 	= "accounts.google.com"
//	- РесурсАвторизации 	= "/o/oauth2/token"
//	- СерверGS 				= "www.googleapis.com"
//	- СерверGSheets			= "sheets.googleapis.com"
//	- РесурсGDrive 			= "/drive/v3/files"
//	- РесурсЗагрузкиGDrive 	= "/upload/drive/v2/files"
//	- РесурсTeamDrive 		= "/drive/v3/teamdrives"
//	- РесурсGSheets 		= "/v4/spreadsheets/"
//	- Порт 					= 443
//	- ИмяПапки              - для сохранения параметров ключей
//	- ИмяФайла              - для сохранения параметров ключей
//

#КонецОбласти


#Область АутентификацияGoogle

Функция ПолучениеНастроекИзХранилищаНастроек()
	
	УстановитьПривилегированныйРежим(Истина);
	СтруктураНастроек = ХранилищеОбщихНастроек.Загрузить("ПараметрыGoogleAPI",,,"Администратор");
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат СтруктураНастроек;
	
КонецФункции	

Процедура УстановитьНастройкиВХранилищеНастроек(СтруктураТокеновАвторизации)
	
	//записать в хранилище общих настроек
	УстановитьПривилегированныйРежим(Истина);
	ХранилищеОбщихНастроек.Сохранить("ПараметрыGoogleAPI",,СтруктураТокеновАвторизации,,"Администратор");
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры	

Функция ПолучитьАктуальнуюСтруктуруGoogleAPI() Экспорт 
	
	Возврат ПолучениеНастроекИзХранилищаНастроек();
	
КонецФункции	

Процедура СформироватьИСохранитьСтруктуруНастроек(СтруктураТокеновАвторизации) Экспорт 
	
	Если СтруктураТокеновАвторизации = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	//записать в хранилище общих настроек
	УстановитьНастройкиВХранилищеНастроек(СтруктураТокеновАвторизации);
		
КонецПроцедуры	

Процедура ОбновитьТокены(ПараметрыПользователя, Знач ПараметрыСистемы) Экспорт
	
    СтрокаЗапроса = "grant_type=refresh_token" + "&";
    СтрокаЗапроса = СтрокаЗапроса + "client_id=" + ПараметрыПользователя.ид_клиента + "&";
    СтрокаЗапроса = СтрокаЗапроса + "client_secret=" + ПараметрыПользователя.секрет_клиента + "&";
    СтрокаЗапроса = СтрокаЗапроса + "refresh_token=" + ПараметрыПользователя.ТокенОбновления;

	Соединение = Новый HTTPСоединение(ПараметрыСистемы.СерверАвторизации, ПараметрыСистемы.Порт,,,,,Новый ЗащищенноеСоединениеOpenSSL);

	Заголовки  = Новый Соответствие;
	Заголовки.Вставить("Content-Type","application/x-www-form-urlencoded");
	
	ЗапросХТТП = Новый HTTPЗапрос(ПараметрыСистемы.РесурсАвторизации, Заголовки);
	ЗапросХТТП.УстановитьТелоИзСтроки(СтрокаЗапроса);

	Ответ = Соединение.ВызватьHTTPМетод("POST",ЗапросХТТП);
	
    Если Ответ.КодСостояния <> 200 Тогда Возврат КонецЕсли;

	Строка = Ответ.ПолучитьТелоКакСтроку();
	
    Чтение = Новый ЧтениеJSON();
	Чтение.УстановитьСтроку(Строка);

	Фабрика = ФабрикаXDTO.ПрочитатьJSON(Чтение);
	
    Чтение.Закрыть();
	
    ПараметрыПользователя.ТокенДоступа = Фабрика.access_token;	
	ПараметрыПользователя.ВремяЖизниТокенаAPI = ТекущаяДата() + Число(Фабрика.expires_in) - 5; //так как есть небольшая задержка при проверки и создании/изменении учетки
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьПараметрыАвторизацииПользователя() Экспорт 
	
	ПараметрыАвторизацииПользователя = Новый Структура;
	ПараметрыАвторизацииПользователя.Вставить("ид_клиента");
	ПараметрыАвторизацииПользователя.Вставить("секрет_клиента");
	ПараметрыАвторизацииПользователя.Вставить("ТокенОбновления");
	ПараметрыАвторизацииПользователя.Вставить("ТокенДоступа");
	ПараметрыАвторизацииПользователя.Вставить("ВремяЖизниТокенаAPI");
	ПараметрыАвторизацииПользователя.Вставить("Путь", "");
	ПараметрыАвторизацииПользователя.Вставить("ИмяФайла");
	ПараметрыАвторизацииПользователя.Вставить("ПолныйПутьКФайлу", "");
	ПараметрыАвторизацииПользователя.Вставить("ИмяПапки");
	
	Возврат ПараметрыАвторизацииПользователя;
	
КонецФункции	

Функция ПолучитьСтруктуруИзСтрокиФайлаСКлючами(СтрокаСтруктуры) Экспорт 
	Возврат ЗначениеИзСтрокиВнутр(СтрокаСтруктуры);
КонецФункции	
