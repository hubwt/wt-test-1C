
Процедура ЗаписьОшибкиПриРаботеСGS(ТекстОшибки, ДополнениеКИмениСобытия = "") Экспорт 
	ЗаписьЖурналаРегистрации(СтрШаблон("Интеграция с GS%1", ДополнениеКИмениСобытия), УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);	
	#Если Клиент Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	#КонецЕсли				
КонецПроцедуры

Функция ТекстОбОшибкеСПараметрами()
	Возврат "Не загружены параметры для работы с G Suite. Необходимо их заполнить в обработке ""Параметры подключения к Google API"".";
КонецФункции	

Процедура СообщитьОбОшибкеСПараметрами(Отказ = Ложь) Экспорт 
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОбОшибкеСПараметрами(),,,,Отказ);
КонецПроцедуры	

Функция ПолучитьИмяКонфигурации() Экспорт 
	Возврат Метаданные.Имя;
КонецФункции	


// Возвращает HTTP-сообщение в виде ДвоичныеДанные
//
// Параметры:
//  ЗаголовкиСообщения - массив строк - 
//  Текст        - Строка -
// 
// Возвращаемое значение:
//  ДвоичныеДанные - HTTP-сообщение
//
Функция СоздатьСообщение_Текст(ЗаголовкиСообщения, ДвоичныеДанныеТекст) Экспорт 
	
	Поток = Новый ПотокВПамяти();
	ЗаписьДанных = Новый ЗаписьДанных(Поток);
	
	// Заголовки.
	Для Каждого Стр Из ЗаголовкиСообщения Цикл 
		ЗаписьДанных.ЗаписатьСтроку(Стр);
	КонецЦикла;	
	ЗаписьДанных.ЗаписатьСтроку("");
	
	// Тело.
	ЗаписьДанных.ЗаписатьСтроку(ДвоичныеДанныеТекст);
	
	ЗаписьДанных.Закрыть();
	
	Возврат Поток.ЗакрытьИПолучитьДвоичныеДанные();
	
КонецФункции

// Возвращает HTTP-сообщение в виде ДвоичныеДанные
//
// Параметры:
//  ЗаголовкиСообщения - массив строк - 
//  ДвоичныеДанныеФайла	 - ДвоичныеДанные - 
// 
// Возвращаемое значение:
//  ДвоичныеДанные - HTTP-сообщение
//
Функция СоздатьСообщение_Файл(ЗаголовкиСообщения, ДвоичныеДанныеФайла) Экспорт 
	
	Поток = Новый ПотокВПамяти();
	ЗаписьДанных = Новый ЗаписьДанных(Поток);
	
	// Заголовки.
	Для Каждого Стр Из ЗаголовкиСообщения Цикл 
		ЗаписьДанных.ЗаписатьСтроку(Стр);
	КонецЦикла;	
	ЗаписьДанных.ЗаписатьСтроку("");

	// Тело.
	ЗаписьДанных.Записать(ДвоичныеДанныеФайла);
	
	ЗаписьДанных.Закрыть();
	
	Возврат Поток.ЗакрытьИПолучитьДвоичныеДанные();
	
КонецФункции

Функция ПолучаемДвоичныеДанныеДляПакетныхСообщенийHTTP(Разделитель, МассивДвоичныхДанных) Экспорт 
	
	ПотокТело = Новый ПотокВПамяти();
	ЗаписьДанных = Новый ЗаписьДанных(ПотокТело);
	
	Для Каждого Стр Из МассивДвоичныхДанных Цикл 
		ЗаписьДанных.ЗаписатьСтроку("--" + Разделитель);
		ЗаписьДанных.Записать(Стр);
	КонецЦикла;	
	
	ЗаписьДанных.ЗаписатьСтроку("--" + Разделитель);
	ЗаписьДанных.ЗаписатьСтроку("--" + Разделитель + "--");

	ЗаписьДанных.Закрыть();
	
	Возврат ПотокТело.ЗакрытьИПолучитьДвоичныеДанные();
	
КонецФункции	

Функция ПодготовкаСоединенияПоAPI(ПараметрыПользователя, ИмяСервера = "") Экспорт 
	
	СтруктураПараметров = GoogleAPI_Авторизация.ПолучитьАктуальнуюСтруктуруGoogleAPI();
	
	Если СтруктураПараметров = Неопределено Тогда 
		
		ЗаписьЖурналаРегистрации("Интеграция с GS. Авторизация", УровеньЖурналаРегистрации.Ошибка,,, ТекстОбОшибкеСПараметрами());
		Возврат СтруктураПараметров;
		
	КонецЕсли;
	
	Если ТекущаяДата() > ПараметрыПользователя.ВремяЖизниТокенаAPI Тогда 
		//обновляем токен
		GoogleAPI_Авторизация.ОбновитьТокены(ПараметрыПользователя, СтруктураПараметров);
	КонецЕсли;	
	
	//формируем запрос к gs
	Соединение = Новый HTTPСоединение(СтруктураПараметров[ИмяСервера], СтруктураПараметров.Порт,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	Заголовки  = Новый Соответствие;
	Заголовки.Вставить("Authorization","Bearer " + ПараметрыПользователя.ТокенДоступа);
	
	СтруктураПараметров.Вставить("Заголовки", Заголовки);
	СтруктураПараметров.Вставить("Соединение", Соединение);
	
	Возврат СтруктураПараметров;
	
КонецФункции
