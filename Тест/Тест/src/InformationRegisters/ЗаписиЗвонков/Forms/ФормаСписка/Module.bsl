&НаКлиенте
Перем Кэш;

&НаКлиенте
Процедура ПрослушатьЗапись(Команда)
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если Кэш = Неопределено Тогда
		Кэш = Новый Структура();
		Кэш.Вставить("ФайлыЗвонков", Новый Соответствие());
	КонецЕсли;
	
	СсылкаНаФайл = Элементы.Список.ТекущиеДанные.URL;
	СсылкаНаФайлЛокальная = Кэш.ФайлыЗвонков.Получить(СсылкаНаФайл);
	
	Если СсылкаНаФайлЛокальная = Неопределено Тогда
		
		СсылкаНаФайлЛокальная = дт_МоиЗвонкиКлиент.ПолучитьФайлЗаписи(СсылкаНаФайл);
		Если СсылкаНаФайлЛокальная = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		Кэш.ФайлыЗвонков.Вставить(СсылкаНаФайл, СсылкаНаФайлЛокальная);
		
	КонецЕсли;
	дт_МоиЗвонкиКлиент.ПрослушатьФайл(СсылкаНаФайлЛокальная);	  
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнениеСписков();
	ОбновлениеСписка();
	
	///+ГомзМА 03.02.2023 (Задача 000002653 от 03.02.2023)
	ПолучитьКоличествоЗвонков();
	///-ГомзМА 03.02.2023 (Задача 000002653 от 03.02.2023)
	
	///+ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость = Ложь;
	///-ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьКоличествоЗвонков()

	///+ГомзМА 03.02.2023 (Задача 000002653 от 03.02.2023)
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	ВсегоЗвонков = Результат.Количество(); 
	
	ВсегоЗаявок = 0;
	ВходящихЗвонков = 0;
	ИсходящихЗвонков = 0;
	ПустойКлиент = Формат(Результат.Итог("БезКлиентов"),"ЧДЦ=0; ЧН=-");

	Для каждого Строка из Результат Цикл
		Если Строка.ТипЗвонка = Истина Тогда
			ИсходящихЗвонков = ИсходящихЗвонков + Строка.ИсходящихЗвонков;
		ИначеЕсли Строка.ТипЗвонка = Ложь Тогда
			ВходящихЗвонков = ВходящихЗвонков + Строка.ВходящихЗвонков;
		КонецЕсли;
	КонецЦикла;
	
	УникальныеЗаявки = Результат;
	УникальныеЗаявки.Свернуть("Заявка");
	ВсегоЗаявок = УникальныеЗаявки.Количество();
	ВсегоЗаявок = ВсегоЗаявок - 1; // Минус одно поле с пустым значением (додумать) 
	///-ГомзМА 03.02.2023 (Задача 000002653 от 03.02.2023)
	
	

КонецПроцедуры



Процедура ОбновлениеСписка()
	
	Если ЗначениеЗаполнено(Менеджер) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, 
		"Менеджер", 
		Менеджер, // Значение отбора
		ВидСравненияКомпоновкиДанных.Равно,, Истина);
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Ссылка,
		|	Пользователи.Представление КАК Представление
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	НЕ Пользователи.Недействителен";
		
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
		
		МассивПользователей = Новый Массив;
		МассивПользователей.Добавить(Справочники.Пользователи.ПустаяСсылка());
		Пока РезультатЗапроса.Следующий() Цикл
			МассивПользователей.Добавить(РезультатЗапроса.Ссылка);
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, 
		"Менеджер", 
		МассивПользователей, // Значение отбора
		ВидСравненияКомпоновкиДанных.ВСписке,, Истина);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Период) Тогда
		//	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		//	Список, 
		//	"Датаначала", 
		//	Период.ДатаНачала, // Значение отбора
		//	ВидСравненияКомпоновкиДанных.Равно,, Истина);
		//	
		//	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		//	Список, 
		//	"ДатаОкончания", 
		//	Период.ДатаОкончания, // Значение отбора
		//	ВидСравненияКомпоновкиДанных.Равно,, Истина);
		Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Период.ДатаНачала);
		Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Период.ДатаОкончания);
	Иначе
		//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		//Список, 
		//"Датаначала", 
		//Дата(1,1,1), // Значение отбора
		//ВидСравненияКомпоновкиДанных.Равно,, Истина);
		//
		//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		//Список, 
		//"ДатаОкончания", 
		//Дата(3000,1,1), // Значение отбора
		//ВидСравненияКомпоновкиДанных.Равно,, Истина);
		Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Дата(1,1,1));
		Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Дата(3000,1,1));
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнениеСписков()
	
	ЗапросМенеджеров = Новый Запрос;
	//Если Пользователи.ЭтоПолноправныйПользователь() Тогда
	
	ЗапросМенеджеров.Текст = 
	"ВЫБРАТЬ
	|	ДолжностиСотрудниковСрезПоследних.Сотрудник.Пользователь КАК СотрудникПользователь,
	|	ДолжностиСотрудниковСрезПоследних.Сотрудник.Фамилия КАК Представление
	|ИЗ
	|	РегистрСведений.ДолжностиСотрудников.СрезПоследних КАК ДолжностиСотрудниковСрезПоследних
	|ГДЕ
	|	ДолжностиСотрудниковСрезПоследних.Должность.Отдел В(&Отдел)
	|	И НЕ ДолжностиСотрудниковСрезПоследних.Сотрудник.Пользователь.Недействителен
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникПользователь
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Отдел = Новый Массив;
	Отдел.Добавить(Справочники.Подразделения.НайтиПоКоду("000000038"));
	Отдел.Добавить(Справочники.Подразделения.НайтиПоКоду("000000055")); 
	
	ЗапросМенеджеров.УстановитьПараметр("Отдел", Отдел);
	ВыборкаМенеджеров = ЗапросМенеджеров.Выполнить().Выбрать();
	
	Элементы.Менеджер1.СписокВыбора.Очистить();
	Элементы.Менеджер1.СписокВыбора.Добавить(Справочники.Пользователи.ПустаяСсылка(), "ВСЕ");
	
	ПользовательЯгофаров = Справочники.Сотрудники.НайтиПоКоду("000000187");
	Пока ВыборкаМенеджеров.Следующий() Цикл
		Элементы.Менеджер1.СписокВыбора.Добавить(ВыборкаМенеджеров.СотрудникПользователь, ВыборкаМенеджеров.Представление); 
	КонецЦикла;
	Элементы.Менеджер1.СписокВыбора.Добавить(ПользовательЯгофаров.Пользователь, ПользовательЯгофаров.Фамилия);  
	
КонецПроцедуры

&НаКлиенте
Процедура Менеджер1ПриИзменении(Элемент)
	ОбновлениеСписка();
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ОбновлениеСписка();
КонецПроцедуры


&НаКлиенте
Процедура СоздатьЗаявку(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание",  элементы.Список.ТекущиеДанные.НомерТелефона);
	//ПараметрыФормы.Вставить("Клиент1С", Запись.Клиент);
	ОткрытьФорму("Документ.заказклиента.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры


&НаКлиенте
Процедура СоздатьКлиента(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание",  элементы.Список.ТекущиеДанные.НомерТелефона);
	ОткрытьФорму("Справочник.Клиенты.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьДопНомер(Команда)
	ОписаниеВыбора = Новый ОписаниеОповещения("ОбработатьВыборКлиента",ЭтаФорма);
	//ОткрытьФорму("");
	ОткрытьФорму("Справочник.Клиенты.ФормаВыбора",,,,,,
ОписаниеВыбора,
РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//	Элементы.СписокЧек.Обновить();

КонецПроцедуры


&НаКлиенте
Процедура ОбработатьВыборКлиента(РезультатЗакрытия,ДопПараметры) Экспорт
	Если Не ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Возврат;
	КонецЕсли;
НомерТелефона = элементы.Список.ТекущиеДанные.НомерТелефона;
ЗаписьДопНомера(РезультатЗакрытия,НомерТелефона);
КонецПроцедуры

Процедура ЗаписьДопНомера(Результат,НомерТелефона)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Телефон", НомерТелефона);
	ОбОбъект = Результат.ссылка.ПолучитьОбъект();
	НайденныеСтроки = ОбОбъект.ДополнительныеКонтакты.НайтиСтроки(Отбор);
	Если  НайденныеСтроки.Количество() = 0 тогда
		НоваяСтрока = ОбОбъект.ДополнительныеКонтакты.Добавить();
		НоваяСтрока.Телефон = НомерТелефона;
		ОбОбъект.Записать();
	КонецЕсли;
МассивПараметров = Новый Массив;
МассивПараметров.Добавить(строка(НомерТелефона));

ФоновыеЗадания.Выполнить("МоиЗвонкиИЗаявки.ПолучитьТаблицуЗвонковПоНомеруТелефонаОбр",МассивПараметров,Новый УникальныйИдентификатор);	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ЭтаФорма.ВладелецФормы = Неопределено Тогда
		
	СсылкаДляОткрытия    = Элементы.Список.ТекущиеДанные[СтрЗаменить(Поле.Имя,Элемент.имя,"")];
	ПараметрыФормы       = Новый Структура("Ключ", СсылкаДляОткрытия);
	Если ТипЗнч(СсылкаДляОткрытия)=тип("справочникСсылка.Клиенты") Тогда
		СтандартнаяОбработка = Ложь;
		ИмяФормыДокумента="справочник.Клиенты.Форма.ФормаЭлемента";
		ФормаДокумента = ПолучитьФорму(ИмяФормыДокумента, ПараметрыФормы);
		ФормаДокумента.Открыть();
	ИначеЕсли ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ЗаказКлиента") Тогда
		СтандартнаяОбработка = Ложь;
		ИмяФормыДокумента="Документ.ЗаказКлиента.Форма.ФормаДокумента";
		ФормаДокумента = ПолучитьФорму(ИмяФормыДокумента, ПараметрыФормы);
		ФормаДокумента.Открыть();
	ИначеЕсли ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ПродажаЗапчастей") Тогда
		СтандартнаяОбработка = Ложь;
		ИмяФормыДокумента="Документ.ПродажаЗапчастей.Форма.ФормаДокумента";
		ФормаДокумента = ПолучитьФорму(ИмяФормыДокумента, ПараметрыФормы);
		ФормаДокумента.Открыть();
	Иначе
		СтандартнаяОбработка = Истина;
		Возврат;
	КонецЕсли;

		
	Иначе
	ДанныеЗаполнения = Новый Структура();
		ДанныеЗаполнения.Вставить("НомерТелефона", Элементы.список.ТекущиеДанные.НомерТелефона);
		ДанныеЗаполнения.Вставить("Дата", Элементы.список.ТекущиеДанные.Дата);
		ДанныеЗаполнения.Вставить("Длительность", Элементы.список.ТекущиеДанные.Длительность);
		ДанныеЗаполнения.Вставить("Менеджер", Элементы.список.ТекущиеДанные.Менеджер);
		ДанныеЗаполнения.Вставить("URL", Элементы.список.ТекущиеДанные.URL);
		ДанныеЗаполнения.Вставить("ТипЗвонка", Элементы.список.ТекущиеДанные.ТипЗвонка);
		ДанныеЗаполнения.Вставить("Клиент", Элементы.список.ТекущиеДанные.Клиент);

		
		ФФФ = ЭтаФорма.ВладелецФормы;
		ОповеститьОВыборе(ДанныеЗаполнения);	
	КонецЕсли;

	
	
		

КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ПолучитьКоличествоЗвонков();
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьПоказатели(Команда)
	
	///+ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	Элементы.ОтобразитьПоказатели.Видимость = НЕ Элементы.ОтобразитьПоказатели.Видимость;
	Элементы.СкрытьПоказатели.Видимость 	= НЕ Элементы.СкрытьПоказатели.Видимость;
	Элементы.ГруппаСчетчик.Видимость 		= НЕ Элементы.ГруппаСчетчик.Видимость;
	///-ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатели(Команда)
	
	///+ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	Элементы.ОтобразитьПоказатели.Видимость = Не Элементы.ОтобразитьПоказатели.Видимость;
	Элементы.СкрытьПоказатели.Видимость 	= Не Элементы.СкрытьПоказатели.Видимость;
	Элементы.ГруппаСчетчик.Видимость 		= НЕ Элементы.ГруппаСчетчик.Видимость;
	///-ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьОтбор(Команда)
	
	///+ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	Элементы.ОтобразитьОтбор.Видимость 										= НЕ Элементы.ОтобразитьОтбор.Видимость;
	Элементы.СкрытьОтбор.Видимость 											= НЕ Элементы.СкрытьОтбор.Видимость;
	Элементы.ГруппаОтбор.Видимость 											= НЕ Элементы.ГруппаОтбор.Видимость;
	Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость 	= НЕ Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость;
	///-ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьОтбор(Команда)
	
	///+ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	Элементы.ОтобразитьОтбор.Видимость 										= НЕ Элементы.ОтобразитьОтбор.Видимость;
	Элементы.СкрытьОтбор.Видимость 											= НЕ Элементы.СкрытьОтбор.Видимость;
	Элементы.ГруппаОтбор.Видимость 											= НЕ Элементы.ГруппаОтбор.Видимость;
	Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость 	= НЕ Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость;
	///-ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	
КонецПроцедуры

&НаКлиенте
Процедура КомментАудитораОтборПриИзменении(Элемент)
	
	//Если КомментАудитораОтбор Тогда
	//	Список.Параметры.УстановитьЗначениеПараметра("КомментарийАудитора", "");
	//Иначе
	//	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	//	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	//	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	//	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	//	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	//	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//КонецЕсли;
	
	КомментАудитораОтборПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КомментАудитораОтборПриИзмененииНаСервере()

	//Если КомментАудитораОтбор Тогда
	//	Список.Параметры.УстановитьЗначениеПараметра("КомментарийАудитораНеРавно", "");
	//Иначе
	//	Список.Параметры.УстановитьЗначениеПараметра("КомментарийАудитораНеРавно", "");
	//	Список.Параметры.УстановитьЗначениеПараметра("КомментарийАудитораРавно", "");
	//КонецЕсли;

КонецПроцедуры



&НаКлиенте
Процедура ДобавитьВИПР(Команда)
	ОписаниеВыбора = Новый ОписаниеОповещения("ОбработатьВыборИПР",ЭтаФорма);
	ОткрытьФорму("Документ.Ипр.ФормаВыбора",,,,,,
	ОписаниеВыбора,
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


&НаКлиенте
Процедура ОбработатьВыборИПР(РезультатЗакрытия,ДопПараметры) Экспорт
	Если Не ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Возврат;
	КонецЕсли;
	ТекСтрока = элементы.Список.ТекущиеДанные;
	ЗаписьвИПР(РезультатЗакрытия,ТекСтрока);
КонецПроцедуры

Процедура ЗаписьвИПР(Результат,ТекСтрока)
	
	ОбОбъект = Результат.ссылка.ПолучитьОбъект();
	//НайденныеСтроки = ОбОбъект.ДополнительныеКонтакты.НайтиСтроки(Отбор);
	//Если  НайденныеСтроки.Количество() = 0 тогда
		НоваяСтрока = ОбОбъект.всеЗвонки.Добавить();
		НоваяСтрока.НомерТелефона= ТекСтрока.НомерТелефона;
		НоваяСтрока.Дата 		 = ТекСтрока.Дата;
		НоваяСтрока.Длительность = ТекСтрока.Длительность;
		НоваяСтрока.Менеджер 	 = ТекСтрока.Менеджер;
		НоваяСтрока.URL 		 = ТекСтрока.URL;
		НоваяСтрока.ТипЗвонка    = ТекСтрока.ТипЗвонка;
		НоваяСтрока.Комментарий  = ТекСтрока.КомментарийАудитора;

		ОбОбъект.Записать();
	//КонецЕсли;
КонецПроцедуры







