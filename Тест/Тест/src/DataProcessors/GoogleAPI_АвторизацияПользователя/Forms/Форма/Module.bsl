
&НаКлиенте
Процедура Авторизоваться()
	
	ЧастьЗапроса = "response_type=code"+"&";
	ЧастьЗапроса = ЧастьЗапроса + "client_id="+ Параметры.ид_клиента + "&";
	ЧастьЗапроса = ЧастьЗапроса + "redirect_uri=http://localhost" + "&";
	ЧастьЗапроса = ЧастьЗапроса + "access_type=offline"+"&";
	
	//scope для работы с сервисами google
	//подробнее https://developers.google.com/admin-sdk/directory/v1/guides/authorizing
	ЧастьЗапроса = ЧастьЗапроса + "scope=https://www.googleapis.com/auth/drive " + 
								"https://www.googleapis.com/auth/spreadsheets " + 
								"https://www.googleapis.com/auth/drive.apps.readonly " + 
								"https://www.googleapis.com/auth/drive.file " +
								"https://www.googleapis.com/auth/drive.appdata " + 
								"https://www.googleapis.com/auth/drive.metadata " + 
								"https://www.googleapis.com/auth/drive.metadata.readonly " +
								"https://www.googleapis.com/auth/drive.photos.readonly " +
								"https://www.googleapis.com/auth/drive.readonly " + 
								"https://www.googleapis.com/auth/spreadsheets.readonly"; 
	
	АдресАвторизации = "https://accounts.google.com/o/oauth2/auth?";
	ПолныйАдресАвторизации = АдресАвторизации + ЧастьЗапроса;
    
    HTML_Поле = ПолныйАдресАвторизации;	
	
КонецПроцедуры

&НаКлиенте
Процедура HTML_ПолеДокументСформирован(Элемент)
	
	ПоискВхождения = СтрНайти(Элементы.HTML_Поле.Документ.URLUnencoded, "http://localhost/?code=");
	
	Если ПоискВхождения = 0 Тогда 
		Возврат;
	КонецЕсли;	
	
	Объект.КодДоступа = Сред(Элементы.HTML_Поле.Документ.URLUnencoded, ПоискВхождения + 23);
	Если ПолучитьТокены() Тогда 
		Возврат;
	КонецЕсли;	
	
	НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ПослеПолученияКаталогаВремФайлов", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияКаталогаВремФайлов(РезультатЗакрытия, ДопПараметры) Экспорт 
	
	Если ЭтаФорма.Открыта() Тогда 
		СтруктураНастроек = ПолучитьНастройки(РезультатЗакрытия + Параметры.ИмяПапки);
		СохранитьФайлСКлючамиВTempПользователя(СтруктураНастроек);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Параметры успешно сохранены.");	
		ЭтаФорма.Закрыть(СтруктураНастроек);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлСКлючамиВTempПользователя(ПараметрыПользователя) Экспорт 
	
	GoogleAPI_АвторизацияКлиент.СохранитьФайлСКлючамиВTempПользователя(ПараметрыПользователя, ВернутьСтрокуИзСтруктуры(ПараметрыПользователя));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьСтрокуИзСтруктуры(ПараметрыПользователя)
	Возврат ЗначениеВСтрокуВнутр(ПараметрыПользователя);
КонецФункции	

&НаКлиенте
Функция ПолучитьТокены()
	
	СтрокаЗапроса = СтрШаблон("client_id=%1&client_secret=%2&grant_type=authorization_code&code=%3&redirect_uri=http://localhost", 
		Параметры.ид_клиента, 
		Параметры.секрет_клиента, 
		Объект.КодДоступа);

	Соединение = Новый HTTPСоединение(Сервер, Порт,,,,,Новый ЗащищенноеСоединениеOpenSSL);

	Заголовки  = Новый Соответствие;
	Заголовки.Вставить("Content-Type","application/x-www-form-urlencoded");
	
	ЗапросХТТП = Новый HTTPЗапрос(Ресурс,Заголовки);
	ЗапросХТТП.УстановитьТелоИзСтроки(СтрокаЗапроса);

	Ответ = Соединение.ВызватьHTTPМетод("POST",ЗапросХТТП);
	
	Если Не Ответ.КодСостояния = 200 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон("Ошибка получения параметров авторизации: %1", Ответ.ПолучитьТелоКакСтроку()));		
		Возврат Истина; 
	КонецЕсли;

	Строка = Ответ.ПолучитьТелоКакСтроку();
	
    Чтение = Новый ЧтениеJSON();
	Чтение.УстановитьСтроку(Строка);

	Фабрика = ФабрикаXDTO.ПрочитатьJSON(Чтение);
	
    Чтение.Закрыть();
	
    Объект.ТокенДоступа 	= Фабрика.access_token;
	Объект.ТокенОбновления 	= Фабрика.refresh_token;	
	Объект.ВремяЖизниТокенаAPI = ТекущаяДата() + Число(Фабрика.expires_in) - 25; //так как есть небольшая задержка между проверкой и работой с google	
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураАвторизации = GoogleAPI_Авторизация.ПолучитьАктуальнуюСтруктуруGoogleAPI();
	Если СтруктураАвторизации = Неопределено Тогда 
		GoogleAPI_ОбщегоНазначения.СообщитьОбОшибкеСПараметрами(Отказ);
		Возврат;
	КонецЕсли;
	
	Параметры.ид_клиента 		= СтруктураАвторизации.ид_клиента;
	Параметры.секрет_клиента	= СтруктураАвторизации.секрет_клиента;
	Параметры.ИмяФайла 			= СтруктураАвторизации.ИмяФайла;
	Параметры.ИмяПапки 			= СтруктураАвторизации.ИмяПапки;
	Сервер 						= СтруктураАвторизации.СерверАвторизации;
	Ресурс						= СтруктураАвторизации.РесурсАвторизации;
	Порт						= СтруктураАвторизации.Порт;
	
КонецПроцедуры

&НаСервере
функция ПолучитьНастройки(ПутьКСохранениюНастроек)
	
	СтруктураНастроек = GoogleAPI_Авторизация.ПолучитьПараметрыАвторизацииПользователя();
	
	ЗаполнитьЗначенияСвойств(СтруктураНастроек, Параметры);
	
	СтруктураНастроек.ТокенОбновления		= 	Объект.ТокенОбновления;
	СтруктураНастроек.ТокенДоступа			= 	Объект.ТокенДоступа;
	СтруктураНастроек.ВремяЖизниТокенаAPI	= 	Объект.ВремяЖизниТокенаAPI;
	
	СтруктураНастроек.Путь 				= ПутьКСохранениюНастроек;
	СтруктураНастроек.ПолныйПутьКФайлу 	= ПутьКСохранениюНастроек + "\" + СтруктураНастроек.ИмяФайла;	
	
	Возврат СтруктураНастроек;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Авторизоваться();
КонецПроцедуры

