
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Партии.Параметры.УстановитьЗначениеПараметра("Товар",Справочники.Номенклатура.НайтиПоКоду("0000001"));
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметр(код)
	Партии.Параметры.УстановитьЗначениеПараметра("Товар",Справочники.Номенклатура.НайтиПоКоду(код));
КонецПроцедуры


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// Вставить содержимое обработчика.	
	УстановитьПараметр(Элементы.Список.ТекущиеДанные.Код);

КонецПроцедуры


&НаКлиенте
Процедура Поиск(Команда)
	// Вставить содержимое обработчика.
	Если Часть  Тогда
		RegExp = Новый COMОбъект("VBScript.RegExp");
         
		RegExp.IgnoreCase = Ложь; //Игнорировать регистр
		RegExp.Global = Истина; //Поиск всех вхождений шаблона
		RegExp.MultiLine = Истина; //Многострочный режим
				
		RegExp.Pattern = "[^a-zA-Zа-яА-Я_0-9 ]";
		стр1=RegExp.Replace( Поиск,"");  

		ПоискПоЧасти(стр1);
	Иначе
		Поиск1();    
	КонецЕсли
КонецПроцедуры

&НаКлиенте 
Процедура Поиск1()
	RegExp = Новый COMОбъект("VBScript.RegExp");
         
	RegExp.IgnoreCase = Ложь; //Игнорировать регистр
	RegExp.Global = Истина; //Поиск всех вхождений шаблона
	RegExp.MultiLine = Истина; //Многострочный режим
			
	RegExp.Pattern = "[^a-zA-Zа-яА-Я_0-9 ]";
	стр1=RegExp.Replace( Поиск,"");  
	Номера = Новый Массив();
	НомВр = Новый Массив();
	Рез1 = РазбитьСтрокуНаМассивПодстрок(стр1," ");
	Для Каждого ном1 из Рез1 Цикл
		НомВр = НачатьПоиск2(ном1);
		для каждого ном2 из НомВр Цикл
			Номера.Добавить(ном2);
		КонецЦикла;
		Номера.Добавить(ном1);
	КонецЦикла;
	RegExp = Новый COMОбъект("VBScript.RegExp");
	Фильтр(стр1, Номера);
КонецПроцедуры

&НаСервере
Функция ПоискПоЧасти(Поиск1)
	 ПоискПо = " ГДЕ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск+""" 
	 | ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск+"%"" 
	 | ИЛИ СправочникНоменклатура.Артикул ПОДОБНО ""%"+Поиск+"%"" 
	 | ИЛИ СправочникНоменклатура.НомерПроизводителя ПОДОБНО ""%"+Поиск+"%""
	| ИЛИ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск1+"%""  
	| ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск1+"%"" 
	| ИЛИ СправочникНоменклатура.АртикулПоиск ПОДОБНО ""%"+Поиск1+"%"" 
	| ИЛИ СправочникНоменклатура.НомерПоиск ПОДОБНО ""%"+Поиск1+"%"" 
	| ИЛИ СправочникНоменклатура.Комплектность.Артикул ПОДОБНО ""%"+Поиск+"%""
	|  ИЛИ НомЗамены.НомерЗамены ПОДОБНО ""%"+Поиск+"%"" ИЛИ СправочникНоменклатура.Комплектность.НомерПоиск ПОДОБНО ""%"+Поиск1+"%""
    | ";
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| )
| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| ЛЕВОЕ СОЕДИНЕНИЕ  Справочник.Номенклатура.НомераЗамен КАК НомЗамены ПО СправочникНоменклатура.Ссылка = НомЗамены.Ссылка
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар "+ ПоискПо;
		Запрос = Новый Запрос;
	Запрос.Текст = Текст1;
	Результат = Запрос.Выполнить();
	Таблица2 = Результат.Выгрузить();
	Количество = Таблица2.Количество();
	Если Таблица2.Количество() < 1 Тогда
		ОчиститьПоиск();
		Сообщить("Номер не найден");
		возврат 0;
	КонецЕсли;
	Текст1 = "ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	Номенклатура.ВерсияДанных,
	|	Номенклатура.ПометкаУдаления,
	|	Номенклатура.Предопределенный,
	|	Номенклатура.Код,
	|	Номенклатура.Наименование,
	|	Номенклатура.Артикул,
	|	Номенклатура.НомерПроизводителя,
	|	Номенклатура.МестоНаСкладе,
	|	Номенклатура.Бренд,
	|	Номенклатура.АртикулПоиск,
	|	Номенклатура.НомерПоиск,
	|	Номенклатура.НаименованиеПолное,
	|	Номенклатура.РекомендованаяЦена,
	|	Номенклатура.ЦенаОригинала,
	|	Номенклатура.МестоНаСкладе2,
	|	Номенклатура.Комплектность.(
	|		Ссылка,
	|		НомерСтроки,
	|		Артикул,
	|		Наименование,
	|		Количество,
	|		Комментарий,
	|		НомерПоиск
	|	),
	|	РегистрНакопления1Остатки.КолвоОстаток,
	|   РезервОстатки.КолвоОстаток как КолвоОстаток1
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки 
	|		ПО Номенклатура.Ссылка =  РегистрНакопления1Остатки.Товар
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки 
	|	ПО Номенклатура.Ссылка = РезервОстатки.Товар ГДЕ ";
	номер = 0;
	Для Каждого строка из Таблица2 Цикл
		номер = номер + 1;
		Если номер<Количество Тогда 
			Текст1= Текст1 + "Номенклатура.Код = """+строка.код+""" ИЛИ ";	
		Иначе
			Текст1= Текст1 + "Номенклатура.Код = """+строка.код+""" ";
		КонецЕсли;
	КонецЦикла;	 
    Список.ТекстЗапроса = Текст1;
КонецФункции


&НаСервере
Функция Фильтр(Поиск1,Номера) Экспорт
	Перем а;
	Мас = РазбитьСтрокуНаМассивПодстрок(Поиск," ");
	Кол = Мас.Количество();
	Коды = Новый Массив();
	Запрос = Новый Запрос();
	ПоискПо = " ГДЕ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск+""" ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск+"%"" ИЛИ СправочникНоменклатура.Артикул = """+Поиск+""" ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Поиск+"""
	| ИЛИ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск1+""" ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск1+"%"" ИЛИ СправочникНоменклатура.АртикулПоиск = """+Поиск1+""" ИЛИ СправочникНоменклатура.НомерПоиск = """+Поиск1+""" ИЛИ СправочникНоменклатура.Комплектность.Артикул= """+Поиск+"""  ИЛИ НомЗамены.НомерЗамены= """+Поиск+""" ИЛИ СправочникНоменклатура.Комплектность.НомерПоиск= """+Поиск1+"""
    | ";
	Если Кол > 1 Тогда
		а=0;
		ПоискПо = ПоискПо + " ИЛИ ( ";
		Пока а < Кол Цикл
			Если а = 0 Тогда
				ПоискПо = ПоискПо + " СправочникНоменклатура.Наименование ПОДОБНО ""%"+Мас[а]+"%""";
			Иначе
				ПоискПо = ПоискПо + " И СправочникНоменклатура.Наименование ПОДОБНО ""%"+Мас[а]+"%""";
			КонецЕсли;
			а = а + 1;
		КонецЦикла;
		ПоискПо = ПоискПо + " ) ";
	КонецЕсли;
	
	Если Кол > 1 Тогда
		а=0;
		Пока а < Кол Цикл
			ПоискПо = ПоискПо + " ИЛИ СправочникНоменклатура.Артикул = """+Мас[а]+"""
			|  ИЛИ СправочникНоменклатура.Код ПОДОБНО ""%"+Мас[а]+"""
			| ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Мас[а]+"""";
			а = а + 1;
		КонецЦикла;
	КонецЕсли;
	
	Номера = УдалитьПовторяющиесяЭлементыМассива(Номера);
			
	Номер1 = Номера.Количество();
	Номер2 = 0;
	Пока Номер2 < Номер1 Цикл
		ПоискПо = ПоискПо + " ИЛИ СправочникНоменклатура.Артикул = """+Номера[Номер2]+"""
		| ИЛИ НомЗамены.НомерЗамены= """+Номера[Номер2]+"""
		| ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Номера[Номер2]+"""
		| ИЛИ СправочникНоменклатура.Комплектность.Артикул= """+Номера[Номер2]+"""
		| ";
		Номер2 = Номер2 +1;
	КонецЦикла;
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| )
| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| ЛЕВОЕ СОЕДИНЕНИЕ  Справочник.Номенклатура.НомераЗамен КАК НомЗамены ПО СправочникНоменклатура.Ссылка = НомЗамены.Ссылка
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар "+ ПоискПо;
	Коды = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст = Текст1;
	Результат = Запрос.Выполнить();
	Таблица2 = Результат.Выгрузить();
	Количество = Таблица2.Количество();
	Если Таблица2.Количество() < 1 Тогда
		ОчиститьПоиск();
		Сообщить("Номер не найден");
		возврат 0;
	КонецЕсли;
	Текст1 = "ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	Номенклатура.ВерсияДанных,
	|	Номенклатура.ПометкаУдаления,
	|	Номенклатура.Предопределенный,
	|	Номенклатура.Код,
	|	Номенклатура.Наименование,
	|	Номенклатура.Артикул,
	|	Номенклатура.НомерПроизводителя,
	|	Номенклатура.МестоНаСкладе,
	|	Номенклатура.Бренд,
	|	Номенклатура.АртикулПоиск,
	|	Номенклатура.НомерПоиск,
	|	Номенклатура.НаименованиеПолное,
	|	Номенклатура.РекомендованаяЦена,
	|	Номенклатура.ЦенаОригинала,
	|	Номенклатура.МестоНаСкладе2,
	|	Номенклатура.Комплектность.(
	|		Ссылка,
	|		НомерСтроки,
	|		Артикул,
	|		Наименование,
	|		Количество,
	|		Комментарий,
	|		НомерПоиск
	|	),
	|	РегистрНакопления1Остатки.КолвоОстаток,
	|   РезервОстатки.КолвоОстаток как КолвоОстаток1
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки 
	|		ПО Номенклатура.Ссылка =  РегистрНакопления1Остатки.Товар
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки 
	|	ПО Номенклатура.Ссылка = РезервОстатки.Товар ГДЕ ";
	номер = 0;
	Для Каждого строка из Таблица2 Цикл
		номер = номер + 1;
		Если номер<Количество Тогда 
			Текст1= Текст1 + "Номенклатура.Код = """+строка.код+""" ИЛИ ";	
		Иначе
			Текст1= Текст1 + "Номенклатура.Код = """+строка.код+""" ";
		КонецЕсли;
	КонецЦикла;	 
	Список.ТекстЗапроса = Текст1;
КонецФункции


&НаСервере
Функция НачатьПоиск2(Поиск1) Экспорт 
// Вставить содержимое обработчика.
	ЭтоСкания = ЛОЖЬ;
	ЭтоЗамена = ЛОЖЬ;
	Запрос = Новый Запрос();
	Номера = Новый Массив();
	НомераВр = Новый Массив();
	Номера.Добавить(Поиск1);
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	НомераСкания.Ссылка,
	 |	НомераСкания.Код КАК Код,
	 |	НомераСкания.Наименование,
	 |	НомераСкания.НомерСкания КАК НомерСкания,
	 |	НомераСкания.НомерЗамена КАК НомерЗамена,
	 |	НомераСкания.Представление
	 |ИЗ
	 |	Справочник.НомераСкания КАК НомераСкания
	 |ГДЕ
	 |	НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск 
	 |	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск1
	 |	ИЛИ НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск2
	 |	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск3
	 |УПОРЯДОЧИТЬ ПО Код";
	 Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
	 Запрос.УстановитьПараметр("ПарамПоиск1","%/"+Поиск+"/%");
	 Запрос.УстановитьПараметр("ПарамПоиск2",Поиск1);
	 Запрос.УстановитьПараметр("ПарамПоиск3","%/"+Поиск1+"/%");
	 РезультатЗапроса = Запрос.Выполнить();
	 Если РезультатЗапроса.Пустой() Тогда
		 
	 Иначе
		ЭтоСкания = Истина; 
		 Выборка = РезультатЗапроса.Выбрать();
		 Пока Выборка.Следующий() Цикл
			 Номера.Добавить(Выборка.НомерСкания);
			 НомераВр = РазбитьСтрокуНаМассивПодстрок(Выборка.НомерЗамена,"/");
			 Номер1 = НомераВр.Количество();
		 	 Номер2 = 0;
			 Пока Номер2<Номер1 Цикл
				 Если СтрДлина(НомераВр[Номер2]) > 3 Тогда
					  Номера.Добавить(НомераВр[Номер2]);
				 КонецЕсли;
				 Номер2 = Номер2 + 1;
			 КонецЦикла;
			 
		 КонецЦикла;
	 КонецЕсли;
	 
	 Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	НомераЗамен.Ссылка,
	 |	НомераЗамен.ВерсияДанных,
	 |	НомераЗамен.ПометкаУдаления,
	 |	НомераЗамен.Предопределенный,
	 |	НомераЗамен.Код,
	 |	НомераЗамен.Наименование,
	 |	НомераЗамен.СканияКод,
	 |	НомераЗамен.НомерСкания,
	 |	НомераЗамен.НомерПоиск,
	 |	НомераЗамен.НомерПолный,
	 |	НомераЗамен.Бренд,
	 |	НомераЗамен.Представление
	 |ИЗ
	 |	Справочник.НомераЗамен КАК НомераЗамен
	 |ГДЕ
	 |	НомераЗамен.НомерСкания ПОДОБНО &ПарамПоиск
	 |	ИЛИ НомераЗамен.НомерПолный ПОДОБНО &ПарамПоиск
	 |	ИЛИ НомераЗамен.НомерСкания ПОДОБНО &ПарамПоиск1
	 |	ИЛИ НомераЗамен.НомерПоиск ПОДОБНО &ПарамПоиск1";
	 Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
	 Запрос.УстановитьПараметр("ПарамПоиск1",Поиск1);
	 РезультатЗапроса = Запрос.Выполнить();
	 Если РезультатЗапроса.Пустой() Тогда
		 
	 Иначе
		 ЭтоЗамена = Истина; 
		 Выборка = РезультатЗапроса.Выбрать();
		 Пока Выборка.Следующий() Цикл
			 Номера.Добавить(Выборка.НомерСкания);
		 КонецЦикла;
	 КонецЕсли;
	 
	 Если ЭтоЗамена ИЛИ ЭтоСкания Тогда
		
		 ПоискПо = "";
		 Номер1 = Номера.Количество();
		 Номер2 = 0;
		 Пока Номер2 < Номер1 Цикл
			ПоискПо = ПоискПо + " ИЛИ НомераЗамен.НомерСкания = """+Номера[Номер2]+"""";
			Номер2 = Номер2 +1;
		 КонецЦикла;
		
		 Запрос.Текст = 
		 "ВЫБРАТЬ DISTINCT
		 |	НомераЗамен.НомерСкания как НомерСкания,
		 |	НомераЗамен.НомерПолный,
		 |	НомераЗамен.НомерПоиск как НомерПоиск
		 |ИЗ
		 |	Справочник.НомераЗамен КАК НомераЗамен
		 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераСкания КАК НомераСкания
		 |		ПО НомераЗамен.НомерСкания = НомераСкания.Код
		 |ГДЕ
		 |	НомераЗамен.НомерСкания ПОДОБНО &ПарамПоиск
		 |			ИЛИ НомераЗамен.НомерПоиск ПОДОБНО &ПарамПоиск1 "+ПоискПо;
		 Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
		 Запрос.УстановитьПараметр("ПарамПоиск1",Поиск1);
		 РезультатЗапроса = Запрос.Выполнить();
		 Если РезультатЗапроса.Пустой() Тогда
		 
		 Иначе 
			 Выборка = РезультатЗапроса.Выбрать();
			 Пока Выборка.Следующий() Цикл
				 Номера.Добавить(Выборка.НомерСкания);
				 Номера.Добавить(Выборка.НомерПоиск);
			 КонецЦикла;
		 КонецЕсли;
		 
		 Если ЭтоСкания Тогда
			 Запрос.Текст=
			 "ВЫБРАТЬ
			 |	НомераСкания.Ссылка,
			 |	НомераСкания.Код КАК Код,
			 |	НомераСкания.Наименование,
			 |	НомераСкания.НомерСкания КАК НомерСкания,
			 |	НомераСкания.НомерЗамена КАК НомерЗамена,
			 |	НомераСкания.Представление
			 |ИЗ
			 |	Справочник.НомераСкания КАК НомераСкания
			 |ГДЕ
			 |	НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск 
			 |	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск1
			 |	ИЛИ НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск1 
			 |	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск2
			 |УПОРЯДОЧИТЬ ПО Код";
			 Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
			 Запрос.УстановитьПараметр("ПарамПоиск1","%/"+Поиск+"/%");
			 Запрос.УстановитьПараметр("ПарамПоиск2",Поиск1);
			 Запрос.УстановитьПараметр("ПарамПоиск3","%/"+Поиск1+"/%");
		 Иначе
			 ПоискПо = "";
			 Номер1 = Номера.Количество();
			 Номер2 = 0;
			 Пока Номер2 < Номер1 Цикл
				ПоискПо = ПоискПо + " ИЛИ НомераСкания.НомерСкания = """+Номера[Номер2]+""" ИЛИ НомераСкания.НомерЗамена ПОДОБНО ""%/"+Номера[Номер2]+"/%""";
				Номер2 = Номер2 +1;
			 КонецЦикла;

			 Если ЭтоЗамена Тогда
				 Запрос.Текст = 
				 "ВЫБРАТЬ
				 |	НомераСкания.Ссылка,
				 |	НомераСкания.Код КАК Код,
				 |	НомераСкания.Наименование,
				 |	НомераСкания.НомерСкания КАК НомерСкания,
				 |	НомераСкания.НомерЗамена КАК НомерЗамена,
				 |	НомераСкания.Представление
				 |ИЗ
				 |	Справочник.НомераСкания КАК НомераСкания
				 |ГДЕ
				 |	НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск 
				 |	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск1
				 |	ИЛИ НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск2 
				 |	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск3" + ПоискПо;
				 Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
				 Запрос.УстановитьПараметр("ПарамПоиск1","%/"+Поиск+"/%");
				 Запрос.УстановитьПараметр("ПарамПоиск2",Поиск1);
				 Запрос.УстановитьПараметр("ПарамПоиск3","%/"+Поиск1+"/%");
			 КонецЕсли;
		 КонецЕсли;
		 РезультатЗапроса = Запрос.Выполнить();
		 Если РезультатЗапроса.Пустой() Тогда
		 
		 Иначе 
			 Выборка = РезультатЗапроса.Выбрать();
			 Пока Выборка.Следующий() Цикл
				 Номера.Добавить(Выборка.НомерСкания);
			 КонецЦикла;
		 КонецЕсли;
	 КонецЕсли;
	 
     ВОЗВРАТ Номера; 	 
КонецФункции


&НаСервере
Функция РазбитьСтрокуНаМассивПодстрок(ИсходнаяСтрока,РазделительСтрок)
   СтрокаДляРазбора = ИсходнаяСтрока;
   СтрокаДляРазбора = СтрЗаменить(СтрокаДляРазбора, РазделительСтрок, Символы.ПС);
   МассивСтрок = новый Массив;
   КолвоСтрок = СтрЧислоСтрок(СтрокаДляРазбора);
   Для НомСтр = 1 По КолвоСтрок Цикл
      МассивСтрок.Добавить(СтрПолучитьСтроку(СтрокаДляРазбора, НомСтр));
  КонецЦикла;
   Возврат МассивСтрок;
КонецФункции

&НаСервере
Функция УдалитьПовторяющиесяЭлементыМассива(Массив) 
 ТекущийИндекс = 0; 
	ВсегоЭлементов = Массив.Количество(); 
	Пока ТекущийИндекс < ВсегоЭлементов Цикл 
		Индекс2 = ТекущийИндекс + 1; 
		Пока Индекс2 < ВсегоЭлементов Цикл 
			Если Массив[Индекс2] = Массив[ТекущийИндекс] Тогда 
				Массив.Удалить(Индекс2); 
				ВсегоЭлементов = ВсегоЭлементов - 1; 
			Иначе 
				Индекс2 = Индекс2 + 1; 
			КонецЕсли; 
		КонецЦикла; 
		ТекущийИндекс = ТекущийИндекс + 1; 
	КонецЦикла; 
Возврат Массив; 
КонецФункции    

&НаКлиенте
Процедура очистить(Команда)
	// Вставить содержимое обработчика.
	ОчиститьПоиск();
КонецПроцедуры

&НаСервере
Процедура ОчиститьПоиск()
		Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	|   РезервОстатки.КолвоОстаток как КолвоОстаток1,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| )
| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар 
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки 
	|	ПО СправочникНоменклатура.Ссылка = РезервОстатки.Товар ";
	
	Список.ТекстЗапроса= Текст1;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИзНомера(Команда)
	// Вставить содержимое обработчика.
	Поиск1();
	Если ПроверкаНаличия(Поиск) > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Текст = "ru = ""Запись в номенклатуре с таким артикулом уже существует. Добавить еще одну запись с таким номером?"";"
		     + " en = ""Запись с номенклатуре таким артикулом уже существует. Добавить еще одну запись с таким номером?""";
		Ответ = Вопрос(НСтр(Текст), Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;
	

	Результат = СоздатьИзКода();
	Если Результат <> Null Тогда
		ТоварСсылка = НайтиПоКод(Результат.Код);
		Если Не ТоварСсылка.Пустая() Тогда
    		ТоварСсылка.ПолучитьФорму().Открыть();
    		//Возврат;
		КонецЕсли;

		
		Поиск1();
	Иначе
		Сообщить("Такой номер не найден");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция НайтиПоКод(Код)
	Возврат Справочники.Номенклатура.НайтиПоКоду(Код)
КонецФункции	

&НаСервере
Функция СоздатьИзКода()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НомераСкания.Наименование,
	               |	НомераСкания.НомерСкания
	               |ИЗ
	               |	Справочник.НомераСкания КАК НомераСкания
	               |ГДЕ
	               |	НомераСкания.НомерСкания = &НомерСкания";
	Запрос.УстановитьПараметр("НомерСкания",Поиск);
	Результат = Запрос.Выполнить();
	Табл = Результат.Выгрузить();
	Наименование = "";
	Номер = "";
	Для Каждого Строка Из Табл Цикл
		Наименование = Строка.Наименование;
		Номер = Строка.НомерСкания;
	КонецЦикла;
	Если Наименование = "" Тогда
		Возврат Null;
	КонецЕсли;
	ЦенОр = 0;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦенаОригинала.Цена
	               |ИЗ
	               |	Справочник.ЦенаОригинала КАК ЦенаОригинала
	               |ГДЕ
	               |	ЦенаОригинала.Артикул = &Артикул";
	Запрос.УстановитьПараметр("Артикул",Поиск);
	Результат = Запрос.Выполнить();
	Табл = Результат.Выгрузить();
	Для Каждого Строка Из Табл Цикл
		ЦенОр = Строка.Цена;
	КонецЦикла;
	об = Справочники.Номенклатура.СоздатьЭлемент();
	об.Артикул = Номер;
	об.АртикулПоиск = Номер;
	об.Бренд = Справочники.Бренд.НайтиПоНаименованию("Scania");
	об.МестоНаСкладе = "0";
	об.Наименование = Наименование;
	об.НомерПроизводителя = Номер;
	об.НомерПоиск = Номер;
	об.ЦенаОригинала = ЦенОр;
	об.Записать();
	Возврат об;
КонецФункции

&НаКлиенте
Процедура ДобавитьВПриход(Команда)
	// Вставить содержимое обработчика.
	ФормаСписка = ПолучитьФорму("Документ.ПоступлениеЗапчастей.ФормаВыбора");
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	Если Не ФормаСписка.Открыта() Тогда
    	ФормаСписка.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ДобавитьВДокумент(ВыбранноеЗначение, СсылкаНом)
	Объект = ВыбранноеЗначение.ПолучитьОбъект();
	Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Строка = Объект.Таблица.Добавить();
    Строка.Товар = СсылкаНом;
	Строка.Ответственный = НайтиПользователя();
	Объект.Записать(РежимЗаписиДокумента.Запись);
    Возврат Объект;
КонецФункции


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	// Вставить содержимое обработчика.
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПоступлениеЗапчастей") Тогда
		Результат = ДобавитьВДокумент(ВыбранноеЗначение,Элементы.Список.ТекущаяСтрока);
		Если Результат <> Null Тогда
			ТоварСсылка = НайтиДок(Результат.Номер);
			Если Не ТоварСсылка.Пустая() Тогда
	    		ТоварСсылка.ПолучитьФорму().ОткрытьМодально();
	    		УстановитьПараметр(Элементы.Список.ТекущиеДанные.Код);
			КонецЕсли;
	 	Иначе
			Сообщить("Такой номер не найден");
		КонецЕсли; 
	КонецЕсли;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПродажаЗапчастей") Тогда
		Результат = ДобавитьВПродажуСерв(ВыбранноеЗначение,Элементы.Список.ТекущаяСтрока, Элементы.Партии.ТекущиеДанные.КолвоОстаток,Элементы.Партии.ТекущиеДанные.Машина,Элементы.Партии.ТекущиеДанные.Цена);
		
	    Если Результат <> Null Тогда
			ТоварСсылка = НайтиДокПродажа(Результат.Номер);
			Если Не ТоварСсылка.Пустая() Тогда
	    		ТоварСсылка.ПолучитьФорму().ОткрытьМодально();
	    		УстановитьПараметр(Элементы.Список.ТекущиеДанные.Код);
			КонецЕсли;
	 	Иначе
			Сообщить("Такой номер не найден");
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.РезервЗапчастей") Тогда
		Результат = ДобавитьВРезервСерв(ВыбранноеЗначение,Элементы.Список.ТекущаяСтрока, Элементы.Партии.ТекущиеДанные.КолвоОстаток,Элементы.Партии.ТекущиеДанные.Машина,Элементы.Партии.ТекущиеДанные.Цена);
		
	    Если Результат <> Null Тогда
			ТоварСсылка = НайтиДокРезерв(Результат.Номер);
			Если Не ТоварСсылка.Пустая() Тогда
	    		ТоварСсылка.ПолучитьФорму().ОткрытьМодально();
	    		УстановитьПараметр(Элементы.Список.ТекущиеДанные.Код);
			КонецЕсли;
	 	Иначе
			Сообщить("Такой номер не найден");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиДок(Код)
	Возврат Документы.ПоступлениеЗапчастей.НайтиПоНомеру(Код);
КонецФункции	

&НаСервере
Функция ПроверкаНаличия(Поиск33)
	RegExp = Новый COMОбъект("VBScript.RegExp");
         
	RegExp.IgnoreCase = Ложь; //Игнорировать регистр
	RegExp.Global = Истина; //Поиск всех вхождений шаблона
	RegExp.MultiLine = Истина; //Многострочный режим
			
	RegExp.Pattern = "\W";
	RegExp.Pattern = "[^a-zA-Zа-яА-Я_0-9]";
	стр1=RegExp.Replace( Поиск33,"");  
	Номера = Новый Массив();
	Номера = НачатьПоиск2(стр1);
	RegExp = Новый COMОбъект("VBScript.RegExp");
	Возврат ПоискВнутренний(стр1, Номера);
	
КонецФункции

&НаСервере
Функция  ПоискВнутренний(Поиск1,Номера)
	Перем а;
	Мас = РазбитьСтрокуНаМассивПодстрок(Поиск," ");
	Кол = Мас.Количество();
	Коды = Новый Массив();
	Запрос = Новый Запрос();
	ПоискПо = " ГДЕ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск+""" ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск+"%"" ИЛИ СправочникНоменклатура.Артикул = """+Поиск+""" ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Поиск+"""
	| ИЛИ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск1+""" ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск1+"%"" ИЛИ СправочникНоменклатура.АртикулПоиск = """+Поиск1+""" ИЛИ СправочникНоменклатура.НомерПоиск = """+Поиск1+""" ИЛИ СправочникНоменклатура.Комплектность.Артикул= """+Поиск+""" ИЛИ СправочникНоменклатура.Комплектность.НомерПоиск= """+Поиск1+"""
    | ";
	Если Кол > 1 Тогда
		а=0;
		ПоискПо = ПоискПо + " ИЛИ ( ";
		Пока а < Кол Цикл
			Если а = 0 Тогда
				ПоискПо = ПоискПо + " СправочникНоменклатура.Наименование ПОДОБНО ""%"+Мас[а]+"%""";
			Иначе
				ПоискПо = ПоискПо + " И СправочникНоменклатура.Наименование ПОДОБНО ""%"+Мас[а]+"%""";
			КонецЕсли;
			а = а + 1;
		КонецЦикла;
		ПоискПо = ПоискПо + " ) ";
	КонецЕсли;
	
	Номера = УдалитьПовторяющиесяЭлементыМассива(Номера);
			
	Номер1 = Номера.Количество();
	Номер2 = 0;
	Пока Номер2 < Номер1 Цикл
		ПоискПо = ПоискПо + " ИЛИ СправочникНоменклатура.Артикул = """+Номера[Номер2]+""" ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Номера[Номер2]+""" ИЛИ СправочникНоменклатура.Комплектность.Артикул= """+Номера[Номер2]+"""
		| ";
		Номер2 = Номер2 +1;
	КонецЦикла;
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| )
| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар "+ ПоискПо;
	Запрос = Новый Запрос;
	Запрос.Текст= Текст1;
	Результат = Запрос.Выполнить();
	Таблица = Результат.Выгрузить();
	Возврат Таблица.Количество();
КонецФункции

&НаКлиенте
Процедура ДобавитьВПродажу(Команда)
	// Вставить содержимое обработчика.
	ФормаСписка = ПолучитьФорму("Документ.ПродажаЗапчастей.ФормаВыбора");
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	Если Не ФормаСписка.Открыта() Тогда
    	ФормаСписка.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ДобавитьВПродажуСерв(ВыбранноеЗначение, СсылкаНом,Колво,Машина,Цена)
	
    Объект = ВыбранноеЗначение.ПолучитьОбъект();
	Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Строка = Объект.Таблица.Добавить();
    Строка.Товар = СсылкаНом;
	Строка.Количество = 1;
	Строка.машина = Машина;
	Строка.Цена = Цена;
	Строка.цена1 = Цена;
	Объект.Записать(РежимЗаписиДокумента.Запись);
    Возврат Объект;
КонецФункции

&НаСервере
Функция НайтиДокПродажа(Код)
	Возврат Документы.ПродажаЗапчастей.НайтиПоНомеру(Код);
КонецФункции

&НаКлиенте
Процедура ДобавитьВРезерв(Команда)
	// Вставить содержимое обработчика.
	ФормаСписка = ПолучитьФорму("Документ.РезервЗапчастей.ФормаВыбора");
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	Если Не ФормаСписка.Открыта() Тогда
    	ФормаСписка.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ДобавитьВРезервСерв(ВыбранноеЗначение, СсылкаНом,Колво,Машина,Цена)
	
    Объект = ВыбранноеЗначение.ПолучитьОбъект();
	Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Строка = Объект.Таблица.Добавить();
    Строка.Товар = СсылкаНом;
	Строка.Количество = Колво;
	Строка.машина = Машина;
	Строка.Цена = Цена;
	Строка.цена1 = Цена;
	Объект.Записать(РежимЗаписиДокумента.Запись);
    Возврат Объект;
КонецФункции

&НаСервере
Функция НайтиДокРезерв(Код)
	Возврат Документы.РезервЗапчастей.НайтиПоНомеру(Код);
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	ТабДокумент = ПечатьСервер();
	ТабДокумент.Показать();


КонецПроцедуры

&НаСервере
Функция ПечатьСервер()

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("Макет");
	ОбластьМакета = Макет.ПолучитьОбласть("шапка");
	ТабДокумент.Вывести(ОбластьМакета);
	строка =   Макет.ПолучитьОбласть("строка");
	ссс = Элементы.Список.ВыделенныеСтроки;
	Для Каждого стр Из ссс Цикл
		строка.Параметры.код = стр.Код;
		строка.Параметры.артикул = стр.Артикул;
		строка.Параметры.название = стр.Наименование;
		строка.Параметры.колво = табл(стр.Код);
		строка.Параметры.место = стр.МестоНаСкладе2;
		ТабДокумент.Вывести(строка);
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции // ПечатьСервер()

&НаСервере
Функция ПолучитьМакет(название)
	Возврат  Отчеты.Отчет1.ПолучитьМакет(название);
КонецФункции

&НаСервере
Функция табл(код)
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	РегистрНакопления1Остатки.КолвоОстаток
	                |ИЗ
	                |	РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	                |ГДЕ
	                | РегистрНакопления1Остатки.Товар.Код = &Код";
	Запрос.УстановитьПараметр("Код",Код);
	результат = Запрос.Выполнить();
	табл = результат.Выгрузить();
	для каждого стр из табл цикл
		возврат стр.КолвоОстаток;
	КонецЦикла;
	Возврат 0;
КонецФункции


&НаСервере
Функция НайтиПользователя()
	// ++ obrv 16.01.18
	//Возврат Справочники.Пользователи.НайтиПоНаименованию(ИмяПользователя());
	Возврат ПользователиКлиентСервер.ТекущийПользователь();
	// -- obrv 16.01.18
КонецФункции

&НаКлиенте
Процедура ИзменитьЦену(Команда)
	// Вставить содержимое обработчика.
	ФормаСписка = ПолучитьФорму("Обработка.МассовоеИзменениеЦен.Форма.Форма");
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	ФормаСписка.Цена = 1000;
	Если Не ФормаСписка.Открыта() Тогда
    	ФормаСписка.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры
	


