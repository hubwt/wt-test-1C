
&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ОбновитьСписки(); 
КонецПроцедуры

&НаСервере
Функция ПолучитьРодителяВидыРасходов_3()
	
	Родитель = Справочники.ВидыРасходов_3.НайтиПоКоду("000000001");
	Возврат Родитель ;

КонецФункции
&НаКлиенте
Процедура ОтделНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОчиститьКатегории();
	ОбновитьСписки(); 
	СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("Родитель", объект.Филиал);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Отдел");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;

КонецПроцедуры
&НаКлиенте
Функция ОчиститьКатегории()
	
	Объект.Категория1 = Неопределено;
	Объект.Категория2 = Неопределено;
	Объект.Категория3 = Неопределено;
	Объект.Категория4 = Неопределено;
	Объект.Категория5 = Неопределено;
	Объект.Категория6 = Неопределено; 
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКонстантуДата1();
	
	Дата1 = Константы.ПериодСписокЦентРасходаДата1.Получить(); 
	Возврат Дата1; 

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКонстантуДата2();
	
	Дата2 = Константы.ПериодСписокЦентРасходаДата2.Получить(); 
	Возврат Дата2; 

КонецФункции
&НаКлиенте	
Функция ОбновитьСписки()
	
	Если   ЗначениеЗаполнено(Объект.Категория1) И ЗначениеЗаполнено (Период) Тогда 
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория1);
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);   

	Иначе 
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Дата1",Дата(1,1,1));
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Дата2",Дата(1,1,1));  
	КонецЕсли; 
	
	Если   ЗначениеЗаполнено(Объект.Категория2) И ЗначениеЗаполнено (Период) Тогда 
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория2);
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);   

	Иначе 
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Дата1",Дата(1,1,1));
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Дата2",Дата(1,1,1));  
	КонецЕсли;
	
	Если   ЗначениеЗаполнено(Объект.Категория3) И ЗначениеЗаполнено (Период) Тогда 
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория3);
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);   

	Иначе 
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Дата1",Дата(1,1,1));
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Дата2",Дата(1,1,1));  
	КонецЕсли;
	
	Если   ЗначениеЗаполнено(Объект.Категория4) И ЗначениеЗаполнено (Период) Тогда 
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория4);
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);   

		Иначе 
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Дата1",Дата(1,1,1));
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Дата2",Дата(1,1,1));  
	КонецЕсли;
	
	Если   ЗначениеЗаполнено(Объект.Категория5) И ЗначениеЗаполнено (Период) Тогда 
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория5);
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);   

	Иначе 
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Дата1",Дата(1,1,1));
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Дата2",Дата(1,1,1));  
	КонецЕсли;
	
	Если   ЗначениеЗаполнено(Объект.Категория6) И ЗначениеЗаполнено (Период) Тогда 
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория6);
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);   

	Иначе 
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Дата1",Дата(1,1,1));
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Дата2",Дата(1,1,1));  
	КонецЕсли;
	
	ОбновитьПодвалы(); 
	
КонецФункции 

&НаКлиенте
Процедура ФилиалНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОчиститьКатегории(); 
	ОбновитьСписки(); 
	
	Объект.Отдел = Неопределено; 
	
	СтандартнаяОбработка = ЛОЖЬ;
    Родитель = ПолучитьРодителяВидыРасходов_3();
    Отбор = Новый Структура();
    Отбор.Вставить("Родитель", Родитель);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Филиал");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт

   //Дополнительные условия если необходимо
   Если ДопПараметры = "Филиал" тогда

    	Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Филиал = Значение ///Если Множественный Выбор - то вернется массив 
    
    ИНачеЕсли ДопПараметры = "Отдел" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Отдел = Значение; ///Если Множественный Выбор - то вернется массив
   		ПодтянутьВидРасхода3План (); 
     ИНачеЕсли ДопПараметры = "Категория" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория = Значение ///Если Множественный Выбор - то вернется массив
   
   ИНачеЕсли ДопПараметры = "Категория1" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория1 = Значение ///Если Множественный Выбор - то вернется массив
   
   ИНачеЕсли ДопПараметры = "Категория2" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория2 = Значение ///Если Множественный Выбор - то вернется массив
   
    
   ИначеЕсли ДопПараметры = "Категория3" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория3 = Значение ///Если Множественный Выбор - то вернется массив
   
   ИНачеЕсли ДопПараметры = "Категория4" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория4 = Значение ///Если Множественный Выбор - то вернется массив
   
   ИНачеЕсли ДопПараметры = "Категория5" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория5 = Значение ///Если Множественный Выбор - то вернется массив
   
   ИНачеЕсли ДопПараметры = "Категория6" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория6 = Значение ///Если Множественный Выбор - то вернется массив
   КонецЕсли;
   
   ОбновитьСписки();
  
КонецПроцедуры

&НаСервере
Функция ПодтянутьВидРасхода3План ()
	объект.РасходПлан = Объект.Отдел.План; 
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Дата1 =	ПолучитьКонстантуДата1();
	Дата2 = ПолучитьКонстантуДата2();
	
	Если Дата1 < Дата(2011,1,1) ИЛИ Дата2 < Дата(2011,1,1) ТОГДА 
		
		Период.ДатаНачала = НачалоМесяца (ТекущаяДата());  
		Период.ДатаОкончания = КонецМесяца (ТекущаяДата()); 
	
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Данные за текущий месяц";
		Сообщение.Сообщить();
	ИНаче 
		Период.ДатаНачала		= Дата1;
		Период.ДатаОкончания 	= Дата2;
	КонецЕСли; 
	
	ОбновитьСписки(); 
КонецПроцедуры

&НаКлиенте
Процедура Категория1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("Родитель", объект.Отдел);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория1");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;

КонецПроцедуры

&НаКлиенте
Процедура Категория2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("Родитель", объект.Отдел);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория2");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

&НаКлиенте
Процедура Категория3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("Родитель", объект.Отдел);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория3");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

&НаКлиенте
Процедура Категория4НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("Родитель", объект.Отдел);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория4");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

&НаКлиенте
Процедура Категория5НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("Родитель", объект.Отдел);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория5");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

&НаКлиенте
Процедура Категория6НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("Родитель", объект.Отдел);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория6");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

&НаКлиенте
Процедура ФОТПриИзменении(Элемент)
	ФОТПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ФОТПриИзмененииНаСервере()
	
	Объект.Зарплата = Объект.ФОТ.ЗПФакт;
	
КонецПроцедуры

Функция ОбновитьПодвалы()
	Объект.РасходФакт = 0;
	Объект.ЗарплатаФакт = 0;  
	ЗаполнитьПодвалДинСписок1(); 
	ЗаполнитьПодвалДинСписок2(); 
	ЗаполнитьПодвалДинСписок3(); 
	ЗаполнитьПодвалДинСписок4(); 
	ЗаполнитьПодвалДинСписок5(); 
	ЗаполнитьПодвалДинСписок6(); 
	
КонецФункции

Процедура ЗаполнитьПодвалДинСписок1()
	
	Если ЗначениеЗаполнено(Объект.Категория1) ТОгда 
		План = Объект.Категория1.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок1.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок1.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок1Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок1Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	Объект.РасходФакт = Объект.РасходФакт + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");  
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок2()
	
	Если ЗначениеЗаполнено(Объект.Категория1) ТОгда 
		
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок2.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок2.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок2Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок2Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");

	Объект.РасходФакт = Объект.РасходФакт + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");  
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок3()
	
	Если ЗначениеЗаполнено(Объект.Категория3) ТОгда 
		
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок3.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок3.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок3Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок3Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	Объект.РасходФакт = Объект.РасходФакт + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");  
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок4()
	
	Если ЗначениеЗаполнено(Объект.Категория4) ТОгда 
		
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок4.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок4.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок4Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок4Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");

	Объект.РасходФакт = Объект.РасходФакт + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-"); 
	Объект.ЗарплатаФакт = Объект.ЗарплатаФакт + + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");  
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок5()
	
	Если ЗначениеЗаполнено(Объект.Категория5) ТОгда 
		План = Объект.Категория1.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок5.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок5.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок5Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок5Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	Объект.РасходФакт = Объект.РасходФакт + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-"); 
	Объект.ЗарплатаФакт = Объект.ЗарплатаФакт + + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");   
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок6()
	
	Если ЗначениеЗаполнено(Объект.Категория6) ТОгда 
		
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок6.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок6.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок6Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок6Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	Объект.РасходФакт = Объект.РасходФакт + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");  
КонецПроцедуры

