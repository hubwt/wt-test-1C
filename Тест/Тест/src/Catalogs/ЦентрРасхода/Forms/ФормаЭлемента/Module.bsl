#Область КомандыСписков

&НаКлиенте
Процедура Расходы1(Команда)
	КомандыСписовПодмена1(Истина,ложь,ложь);
КонецПроцедуры

&НаКлиенте
Процедура Статьи1(Команда)
	КомандыСписовПодмена1(ложь,Истина,ложь);
КонецПроцедуры

&НаКлиенте
Процедура Влияния1(Команда)
	КомандыСписовПодмена1(ложь,ложь,Истина);
КонецПроцедуры

&НаСервере
Функция КомандыСписовПодмена1(Флаг1 = Неопределено,Флаг2 = Неопределено,Флаг3 = Неопределено)

// 1 - Расходы, 2 - Статьи , 3 - Влияния
		
		Элементы.ДинСписок1.Видимость 	= Ложь;
		Элементы.ДинСписок11.Видимость	= Ложь; 
		Элементы.ДинСписок111.Видимость = Ложь; 
		
		Элементы.Расходы1.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Статьи1.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Влияния1.ЦветФона 	= Новый Цвет (252,250,235);
		
		
	Если Флаг1 = Истина Тогда
		Элементы.ДинСписок1.Видимость 	= Истина;
		Элементы.Расходы1.ЦветФона 		= Новый Цвет (210,160,6);  //227,168,7
	ИначеЕСЛИ Флаг2 = Истина Тогда
		Элементы.ДинСписок11.Видимость 	= Истина;
		Элементы.Статьи1.ЦветФона 		= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг3 = Истина Тогда
		Элементы.ДинСписок111.Видимость = Истина;
		Элементы.Влияния1.ЦветФона 		= Новый Цвет (210,160,6);
	КонецЕсли;
	
КонецФункции


&НаКлиенте
Процедура Расходы2(Команда)
	КомандыСписовПодмена2(Истина,ложь,ложь,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Статьи2(Команда)
	КомандыСписовПодмена2(ложь,Истина,ложь,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Влияния2(Команда)
	КомандыСписовПодмена2(ложь,ложь,Истина,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ТМЦ2(Команда)
	
	КомандыСписовПодмена2(ложь,ложь,Ложь,Истина);

КонецПроцедуры



&НаСервере
Функция КомандыСписовПодмена2(Флаг1 = Неопределено,Флаг2 = Неопределено,Флаг3 = Неопределено,Флаг4 = Неопределено)

// 1 - Расходы, 2 - Статьи , 3 - Влияния 4 - ТМЦ
		
		Элементы.ДинСписок2.Видимость 	= Ложь;
		Элементы.ДинСписок22.Видимость	= Ложь; 
		Элементы.ДинСписок222.Видимость = Ложь; 
		Элементы.ДинСписок2222.Видимость = Ложь; 
	
		Элементы.Расходы2.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Статьи2.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Влияния2.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.ТМЦ2.ЦветФона 		= Новый Цвет (252,250,235);
		
	Если Флаг1 = Истина Тогда
		Элементы.ДинСписок2.Видимость 		= Истина;
		Элементы.Расходы2.ЦветФона 			= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг2 = Истина Тогда
		Элементы.ДинСписок22.Видимость 	= Истина;
		Элементы.Статьи2.ЦветФона 			= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг3 = Истина Тогда
		Элементы.ДинСписок222.Видимость 	= Истина;
		Элементы.Влияния2.ЦветФона 			= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг4 = Истина Тогда
		Элементы.ДинСписок2222.Видимость 	= Истина;
		Элементы.ТМЦ2.ЦветФона 				= Новый Цвет (210,160,6);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура Расходы3(Команда)
	КомандыСписовПодмена3(Истина,ложь,ложь);
КонецПроцедуры
&НаКлиенте
Процедура Статьи3(Команда)
	КомандыСписовПодмена3(ложь,Истина,ложь);
КонецПроцедуры

&НаКлиенте
Процедура Влияния3(Команда)
	КомандыСписовПодмена3(ложь,ложь,Истина);
КонецПроцедуры

&НаСервере
Функция КомандыСписовПодмена3(Флаг1 = Неопределено,Флаг2 = Неопределено,Флаг3 = Неопределено)

// 1 - Расходы, 2 - Статьи , 3 - Влияния
		
		Элементы.ДинСписок3.Видимость 	= Ложь;
		Элементы.ДинСписок33.Видимость	= Ложь; 
		Элементы.ДинСписок333.Видимость = Ложь; 
	
		Элементы.Расходы3.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Статьи3.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Влияния3.ЦветФона 	= Новый Цвет (252,250,235);
	
	Если Флаг1 = Истина Тогда
		Элементы.ДинСписок3.Видимость 	= Истина;
		Элементы.Расходы3.ЦветФона 	= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг2 = Истина Тогда
		Элементы.ДинСписок33.Видимость 	= Истина;
		Элементы.Статьи3.ЦветФона 	= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг3 = Истина Тогда
		Элементы.ДинСписок333.Видимость = Истина;
		Элементы.Влияния3.ЦветФона 	= Новый Цвет (210,160,6);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура Расходы4(Команда)
	КомандыСписовПодмена4(Истина,ложь,ложь);
КонецПроцедуры
&НаКлиенте
Процедура Статьи4(Команда)
	КомандыСписовПодмена4(ложь,Истина,ложь);
КонецПроцедуры

&НаКлиенте
Процедура Влияния4(Команда)
	КомандыСписовПодмена4(ложь,ложь,Истина);
КонецПроцедуры
&НаСервере
Функция КомандыСписовПодмена4(Флаг1 = Неопределено,Флаг2 = Неопределено,Флаг3 = Неопределено)

// 1 - Расходы, 2 - Статьи , 3 - Влияния
		
		Элементы.ДинСписок4.Видимость 	= Ложь;
		Элементы.ДинСписок44.Видимость	= Ложь; 
		Элементы.ДинСписок444.Видимость = Ложь; 
	
		Элементы.Расходы4.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Статьи4.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Влияния4.ЦветФона 	= Новый Цвет (252,250,235);
	
	Если Флаг1 = Истина Тогда
		Элементы.ДинСписок4.Видимость 	= Истина;
		Элементы.Расходы4.ЦветФона 	= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг2 = Истина Тогда
		Элементы.ДинСписок44.Видимость 	= Истина;
		Элементы.Статьи4.ЦветФона 	= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг3 = Истина Тогда
		Элементы.ДинСписок444.Видимость = Истина;
		Элементы.Влияния4.ЦветФона 	= Новый Цвет (210,160,6);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура Расходы5(Команда)
	КомандыСписовПодмена5(Истина,ложь,ложь);
КонецПроцедуры
&НаКлиенте
Процедура Статьи5(Команда)
	КомандыСписовПодмена5(ложь,Истина,ложь);
КонецПроцедуры

&НаКлиенте
Процедура Влияния5(Команда)
	КомандыСписовПодмена5(ложь,ложь,Истина);
КонецПроцедуры



&НаСервере
Функция КомандыСписовПодмена5(Флаг1 = Неопределено,Флаг2 = Неопределено,Флаг3 = Неопределено)

// 1 - Расходы, 2 - Статьи , 3 - Влияния
		
		Элементы.ДинСписок5.Видимость 	= Ложь;
		Элементы.ДинСписок55.Видимость	= Ложь; 
		Элементы.ДинСписок555.Видимость = Ложь; 
	
		Элементы.Расходы5.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Статьи5.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Влияния5.ЦветФона 	= Новый Цвет (252,250,235);
		
	Если Флаг1 = Истина Тогда
		Элементы.ДинСписок5.Видимость 	= Истина;
		Элементы.Расходы5.ЦветФона 		= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг2 = Истина Тогда
		Элементы.ДинСписок55.Видимость 	= Истина;
		Элементы.Статьи5.ЦветФона 		= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг3 = Истина Тогда
		Элементы.ДинСписок555.Видимость = Истина;
		Элементы.Влияния5.ЦветФона 		= Новый Цвет (210,160,6);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура Поступления6(Команда)
	КомандыСписовПодмена6(Истина,ложь,ложь);
КонецПроцедуры

&НаКлиенте
Процедура Менеджер6(Команда)
	КомандыСписовПодмена6(ложь,Истина,ложь);
КонецПроцедуры

&НаКлиенте
Процедура Счета6(Команда)
	КомандыСписовПодмена6(ложь,ложь,Истина);
КонецПроцедуры


&НаСервере
Функция КомандыСписовПодмена6(Флаг1 = Неопределено,Флаг2 = Неопределено,Флаг3 = Неопределено)

// 1 - Расходы, 2 - Статьи , 3 - Влияния
		
	
		Элементы.Поступления6.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Менеджер6.ЦветФона 	= Новый Цвет (252,250,235);
		Элементы.Счета6.ЦветФона 	= Новый Цвет (252,250,235);
		
	Если Флаг1 = Истина Тогда
		Элементы.ДинСписок6.Видимость 	= Истина;
		Элементы.ДинСписок6Менеджер.Видимость 	= Ложь;
		Элементы.ДинСписок6Счета.Видимость 	= Ложь;
		Элементы.Поступления6.ЦветФона 		= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг2 = Истина Тогда
		Элементы.ДинСписок6.Видимость 	= Ложь;
		Элементы.ДинСписок6Менеджер.Видимость 	= Истина;
		Элементы.ДинСписок6Счета.Видимость 	= Ложь;
		Элементы.Менеджер6.ЦветФона 		= Новый Цвет (210,160,6);
	ИначеЕСЛИ Флаг3 = Истина Тогда
		Элементы.ДинСписок6.Видимость 	= Ложь;
		Элементы.ДинСписок6Менеджер.Видимость 	= Ложь;
		Элементы.ДинСписок6Счета.Видимость 	= Истина;
		Элементы.Счета6.ЦветФона 		= Новый Цвет (210,160,6);
	КонецЕсли;

КонецФункции
#КонецОбласти  


&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ОбновитьСписки(); 
КонецПроцедуры

&НаСервере
Функция ПолучитьРодителяВидыРасходов_3()
	
	Родитель = Справочники.ВидыРасходов_3.НайтиПоКоду("000000001");
	Возврат Родитель ;

КонецФункции
&НаКлиенте
Процедура ОтделНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОчиститьКатегории();
	ОбновитьСписки(); 
	СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("Родитель", объект.Филиал);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Отдел");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;

КонецПроцедуры
&НаКлиенте
Функция ОчиститьКатегории()
	
	Объект.Категория1 = Неопределено;
	Объект.Категория2 = Неопределено;
	Объект.Категория3 = Неопределено;
	Объект.Категория4 = Неопределено;
	Объект.Категория5 = Неопределено;
	Объект.Категория6 = Неопределено; 
	Объект.СтатьяТМЦ  = Неопределено;  
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКонстантуДата1();
	
	Дата1 = Константы.ПериодСписокЦентРасходаДата1.Получить(); 
	Возврат Дата1; 

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКонстантуДата2();
	
	Дата2 = Константы.ПериодСписокЦентРасходаДата2.Получить(); 
	Возврат Дата2; 

КонецФункции

&НаСервере	
Функция ОбновитьСписки()
	
	Если   ЗначениеЗаполнено(Объект.Категория1) И ЗначениеЗаполнено (Период) Тогда 
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория1);
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания); 
		
		ДинСписок11.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория1);
		ДинСписок11.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок11.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);   
		
		ДинСписок111.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория1);
		ДинСписок111.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок111.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания); 
		
	Иначе 
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок1.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата()));  
		
		ДинСписок11.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок11.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок11.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата()));  
		
		ДинСписок111.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок111.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок111.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата())); 
		
	КонецЕсли; 
	
	Если   ЗначениеЗаполнено(Объект.Категория2) И ЗначениеЗаполнено (Период) и ЗначениеЗаполнено(Объект.СтатьяТМЦ) Тогда 
		 
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория2);
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);  
		
		
		ДинСписок22.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория2);
		ДинСписок22.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок22.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);  
		
		ДинСписок222.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория2);
		ДинСписок222.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок222.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);  
		
		
		ДинСписок2222.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок2222.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);  
		ДинСписок2222.Параметры.УстановитьЗначениеПараметра("Статья",Объект.СтатьяТМЦ);
		
	Иначе 
		
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок2.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата())); 
		
		
		ДинСписок22.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок22.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок22.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата()));
		
		ДинСписок222.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок222.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок222.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата())); 
		
	
		ДинСписок2222.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок2222.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата())); 
		ДинСписок2222.Параметры.УстановитьЗначениеПараметра("Статья",Неопределено);  
	КонецЕсли;
	
	Если   ЗначениеЗаполнено(Объект.Категория3) И ЗначениеЗаполнено (Период) Тогда 
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория3);
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);   
		
		ДинСписок33.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория3);
		ДинСписок33.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок33.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания); 
		
		ДинСписок333.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория3);
		ДинСписок333.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок333.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания); 
	Иначе 
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок3.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата()));  
		
		ДинСписок33.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок33.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок33.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата()));
		
		ДинСписок333.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок333.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок333.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата()));  
	КонецЕсли;
	
	Если   ЗначениеЗаполнено(Объект.Категория4) И ЗначениеЗаполнено (Период) Тогда 
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория4);
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);
		
		ДинСписок44.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория4);
		ДинСписок44.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок44.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);
		
		ДинСписок444.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория4);
		ДинСписок444.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок444.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);      

		Иначе 
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок4.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата()));  
		
		ДинСписок44.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок44.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок44.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата()));
		
		ДинСписок444.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок444.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок444.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата()));  
	КонецЕсли;
	
	Если   ЗначениеЗаполнено(Объект.Категория5) И ЗначениеЗаполнено (Период) Тогда 
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория5);
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания); 
		
		ДинСписок55.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория5);
		ДинСписок55.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок55.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);  
		
		ДинСписок555.Параметры.УстановитьЗначениеПараметра("Категория",Объект.Категория5);
		ДинСписок555.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок555.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);  

	Иначе 
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок5.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата())); 
		
		ДинСписок55.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок55.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок55.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата()));
		
		ДинСписок555.Параметры.УстановитьЗначениеПараметра("Категория",Неопределено);
		ДинСписок555.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок555.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата()));   
	КонецЕсли;
	
	Если   ЗначениеЗаполнено(Объект.Категория6) И ЗначениеЗаполнено (Период) Тогда 
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Отдел",Объект.Категория6);
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания); 
		
		ДинСписок6Менеджер.Параметры.УстановитьЗначениеПараметра("Отдел",Объект.Категория6);
		ДинСписок6Менеджер.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок6Менеджер.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания); 
		
		ДинСписок6Счета.Параметры.УстановитьЗначениеПараметра("Отдел",Объект.Категория6);
		ДинСписок6Счета.Параметры.УстановитьЗначениеПараметра("Дата1",Период.ДатаНачала);
		ДинСписок6Счета.Параметры.УстановитьЗначениеПараметра("Дата2",Период.ДатаОкончания);  

	Иначе 
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Отдел",Неопределено);
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок6.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата())); 
		
		ДинСписок6Менеджер.Параметры.УстановитьЗначениеПараметра("Отдел",Неопределено);
		ДинСписок6Менеджер.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок6Менеджер.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата())); 

		ДинСписок6Счета.Параметры.УстановитьЗначениеПараметра("Отдел",Неопределено);
		ДинСписок6Счета.Параметры.УстановитьЗначениеПараметра("Дата1",НачалоДня(ТекущаяДата()));
		ДинСписок6Счета.Параметры.УстановитьЗначениеПараметра("Дата2",КонецДня(ТекущаяДата())); 
	КонецЕсли;
	
	ОбновитьПодвалы(); 
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры


&НаКлиенте
Процедура ФилиалНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОчиститьКатегории(); 
	ОбновитьСписки(); 
	
	Объект.Отдел = Неопределено; 
	
	СтандартнаяОбработка = ЛОЖЬ;
    Родитель = ПолучитьРодителяВидыРасходов_3();
    Отбор = Новый Структура();
    Отбор.Вставить("Родитель", Родитель);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Филиал");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт

   //Дополнительные условия если необходимо
   Если ДопПараметры = "Филиал" тогда

    	Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Филиал = Значение ///Если Множественный Выбор - то вернется массив 
    
    ИНачеЕсли ДопПараметры = "Отдел" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Отдел = Значение; ///Если Множественный Выбор - то вернется массив
   		ПодтянутьВидРасхода3План (); 
     ИНачеЕсли ДопПараметры = "Категория" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория = Значение ///Если Множественный Выбор - то вернется массив
   
   ИНачеЕсли ДопПараметры = "Категория1" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория1 = Значение ///Если Множественный Выбор - то вернется массив
   
   ИНачеЕсли ДопПараметры = "Категория2" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория2 = Значение ///Если Множественный Выбор - то вернется массив
   
    
   ИначеЕсли ДопПараметры = "Категория3" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория3 = Значение ///Если Множественный Выбор - то вернется массив
   
   ИНачеЕсли ДопПараметры = "Категория4" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория4 = Значение ///Если Множественный Выбор - то вернется массив
   
   ИНачеЕсли ДопПараметры = "Категория5" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория5 = Значение ///Если Множественный Выбор - то вернется массив
   
   ИНачеЕсли ДопПараметры = "Категория6" тогда
		
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
    	Объект.Категория6 = Значение ///Если Множественный Выбор - то вернется массив
   КонецЕсли;
   
   ОбновитьСписки();
  
КонецПроцедуры

&НаКлиенте
Процедура Категория6ПриИзменении(Элемент)
	   ОбновитьСписки();
КонецПроцедуры


&НаСервере
Функция ПодтянутьВидРасхода3План ()
	объект.РасходПлан = Объект.Отдел.План; 
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Дата1 =	ПолучитьКонстантуДата1();
	Дата2 = ПолучитьКонстантуДата2();
	
	Если Дата1 < Дата(2011,1,1) ИЛИ Дата2 < Дата(2011,1,1) ТОГДА 
		
		Период.ДатаНачала = НачалоМесяца (ТекущаяДата());  
		Период.ДатаОкончания = КонецМесяца (ТекущаяДата()); 
	
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Данные за текущий месяц";
		Сообщение.Сообщить();
	ИНаче 
		Период.ДатаНачала		= Дата1;
		Период.ДатаОкончания 	= Дата2;
	КонецЕСли; 
	
		Элементы.ДинСписок1.Видимость = Истина;
		Элементы.ДинСписок11.Видимость = Ложь;  
		Элементы.ДинСписок111.Видимость = Ложь; 
	
		Элементы.ДинСписок2.Видимость = Истина;
		Элементы.ДинСписок22.Видимость = Ложь;  
		Элементы.ДинСписок222.Видимость = Ложь; 
		Элементы.ДинСписок2222.Видимость = Ложь; 	

		Элементы.ДинСписок3.Видимость = Истина;
		Элементы.ДинСписок33.Видимость = Ложь;  
		Элементы.ДинСписок333.Видимость = Ложь; 

		Элементы.ДинСписок4.Видимость = Истина;
		Элементы.ДинСписок44.Видимость = Ложь;  
		Элементы.ДинСписок444.Видимость = Ложь; 

		Элементы.ДинСписок5.Видимость = Истина;
		Элементы.ДинСписок55.Видимость = Ложь;  
		Элементы.ДинСписок555.Видимость = Ложь; 

		Элементы.ДинСписок6.Видимость = Истина;
		Элементы.ДинСписок6Менеджер.Видимость = Ложь;
		Элементы.ДинСписок6Счета.Видимость = Ложь;

	ОбновитьСписки();  
КонецПроцедуры




&НаКлиенте
Процедура Категория1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
//    Отбор.Вставить("Родитель", объект.Отдел);
    Отбор.Вставить("РодительРодитель", объект.Отдел);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория1");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;

КонецПроцедуры

&НаКлиенте
Процедура Категория2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("РодительРодитель", объект.Отдел);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория2");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

&НаКлиенте
Процедура Категория3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("РодительРодитель", объект.Отдел);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория3");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

&НаКлиенте
Процедура Категория4НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("РодительРодитель", объект.Отдел);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория4");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

&НаКлиенте
Процедура Категория5НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ЛОЖЬ;
    
    Отбор = Новый Структура();
    Отбор.Вставить("РодительРодитель", объект.Отдел);
    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    
    ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория5");
	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

//&НаКлиенте
//Процедура Категория6НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//		СтандартнаяОбработка = ЛОЖЬ;
//    
//    Отбор = Новый Структура();
////    Отбор.Вставить("Родитель", объект.Филиал);
//    Отбор.Вставить("ПометкаУдаления", ЛОЖЬ);
//    Отбор.Вставить("ЭтоГруппа", ЛОЖЬ);
//    Отбор.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
//    
//    ПараметрыФормы = Новый Структура();
//    ПараметрыФормы.Вставить("РежимВыбора", ИСТИНА);
//    ПараметрыФормы.Вставить("МножественныйВыбор", ЛОЖЬ);
//    ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", ИСТИНА);
//    ПараметрыФормы.Вставить("РазрешитьВыборКорня", ЛОЖЬ);
//    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
//    ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", ИСТИНА);
//    ПараметрыФормы.Вставить("ТолькоПросмотр", ЛОЖЬ);
//	ПараметрыФормы.Вставить("Отбор", Отбор);
//
//	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"Категория6");
//	Форм = ОткрытьФорму("Справочник.ВидыРасходов_3.Форма.ФормаВыбора",ПараметрыФормы,
//	ЭтаФорма, , , , ОбработкаВыбора);
//	Форм.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
//КонецПроцедуры

&НаКлиенте
Процедура ФОТПриИзменении(Элемент)
	ФОТПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ФОТПриИзмененииНаСервере()
	
	Объект.Зарплата = Объект.ФОТ.ЗПФакт;
	
КонецПроцедуры

#Область Подвалы

Функция ОбновитьПодвалы()
	Объект.РасходФакт = 0;
	Объект.ЗарплатаФакт = 0;  
	ЗаполнитьПодвалДинСписок1(); 
	ЗаполнитьПодвалДинСписок11(); 
	ЗаполнитьПодвалДинСписок2();
	ЗаполнитьПодвалДинСписок22(); 
	ЗаполнитьПодвалДинСписок3();
	ЗаполнитьПодвалДинСписок33(); 
	ЗаполнитьПодвалДинСписок4();
	ЗаполнитьПодвалДинСписок44(); 
	ЗаполнитьПодвалДинСписок5();
	ЗаполнитьПодвалДинСписок55(); 
	
	
	
	ЗаполнитьПодвалДинСписок111(); 
	ЗаполнитьПодвалДинСписок222(); 
	ЗаполнитьПодвалДинСписок2222();
	
	ЗаполнитьПодвалДинСписок333(); 
	ЗаполнитьПодвалДинСписок444(); 
	ЗаполнитьПодвалДинСписок555(); 
	
	ЗаполнитьПодвалДинСписок6Счета();
	ЗаполнитьПодвалДинСписок6Менеджер();
	ЗаполнитьПодвалДинСписок6();
КонецФункции

Процедура ЗаполнитьПодвалДинСписок1()
	
	Если ЗначениеЗаполнено(Объект.Категория1) ТОгда 
		План = Объект.Категория1.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок1.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок1.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок1Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок1Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	Объект.РасходФакт = Объект.РасходФакт + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");  
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок11()

	
	Если ЗначениеЗаполнено(Объект.Категория1) ТОгда 
		План = Объект.Категория1.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок11.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок11.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок11Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок11Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	 
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок22()
	
	Если ЗначениеЗаполнено(Объект.Категория2) ТОгда 
		План = Объект.Категория2.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок22.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок22.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок22Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок22Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	 
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок222()
	
	Если ЗначениеЗаполнено(Объект.Категория2) ТОгда 
		План = Объект.Категория2.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок222.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок222.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок222Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок222Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	 
КонецПроцедуры

Процедура ЗаполнитьПодвалДинСписок2222()
	
	Если ЗначениеЗаполнено(Объект.Категория2) И ЗначениеЗаполнено(объект.СтатьяТМЦ) ТОгда 
		План = Объект.Категория2.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок2222.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок2222.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок2222СуммаОстаток.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок2222СуммаОстаток.ТекстПодвала = Формат(Результат.Итог("СуммаОстаток"),"ЧДЦ=0; ЧН=-");
	
	 
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок33()

	
	Если ЗначениеЗаполнено(Объект.Категория3) ТОгда 
		План = Объект.Категория3.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок33.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок33.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок33Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок33Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	 
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок333()
	
	Если ЗначениеЗаполнено(Объект.Категория3) ТОгда 
		План = Объект.Категория3.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок333.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок333.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок333Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок333Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	 
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок44()
	
	Если ЗначениеЗаполнено(Объект.Категория4) ТОгда 
		План = Объект.Категория4.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок44.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок44.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок44Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок44Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	 
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок444()
	
	Если ЗначениеЗаполнено(Объект.Категория4) ТОгда 
		План = Объект.Категория4.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок444.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок444.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок444Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок444Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	 
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок55()
	
	Если ЗначениеЗаполнено(Объект.Категория5) ТОгда 
		План = Объект.Категория5.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок55.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок55.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок55Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок55Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	 
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок555()
	
	Если ЗначениеЗаполнено(Объект.Категория5) ТОгда 
		План = Объект.Категория5.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок555.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок555.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок555Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок555Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	 
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок2()
	
	Если ЗначениеЗаполнено(Объект.Категория1) ТОгда 
		
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок2.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок2.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок2Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок2Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");

	Объект.РасходФакт = Объект.РасходФакт + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");  
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок3()
	
	Если ЗначениеЗаполнено(Объект.Категория3) ТОгда 
		
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок3.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок3.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок3Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок3Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	Объект.РасходФакт = Объект.РасходФакт + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");  
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок4()
	
	Если ЗначениеЗаполнено(Объект.Категория4) ТОгда 
		
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок4.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок4.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок4Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок4Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");

	Объект.РасходФакт = Объект.РасходФакт + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-"); 
	Объект.ЗарплатаФакт = Объект.ЗарплатаФакт + + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");  
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок5()
	
	Если ЗначениеЗаполнено(Объект.Категория5) ТОгда 
		План = Объект.Категория1.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок5.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок5.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок5Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок5Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	Объект.РасходФакт = Объект.РасходФакт + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-"); 
	Объект.ЗарплатаФакт = Объект.ЗарплатаФакт + + Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");   
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок111()
	
	Если ЗначениеЗаполнено(Объект.Категория1) ТОгда 
		План = Объект.Категория1.Родитель.План; 
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок111.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок111.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок111Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок111Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	
	 
КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок6()

	Если ЗначениеЗаполнено(Объект.Категория6) ТОгда 
		
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок6.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок6.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок6Сумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок6Сумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	  

КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок6Менеджер()


	Если ЗначениеЗаполнено(Объект.Категория6) ТОгда 
		
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок6Менеджер.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок6Менеджер.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок6МенеджерСумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок6МенеджерКоличествоПриходовДС.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок6МенеджерСумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок6МенеджерКоличествоПриходовДС.ТекстПодвала = Формат(Результат.Итог("КоличествоПриходовДС"),"ЧДЦ=0; ЧН=-");  

КонецПроцедуры
Процедура ЗаполнитьПодвалДинСписок6Счета()

	Если ЗначениеЗаполнено(Объект.Категория6) ТОгда 
		
	Иначе
		 Возврат; 
	КонецЕсли; 
	
	
	Схема = Элементы.ДинСписок6Счета.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ДинСписок6Счета.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок6СчетаСумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ДинСписок6СчетаСумма.ТекстПодвала = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	  

КонецПроцедуры




#КонецОбласти


