
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// ++ obrv 05.10.18
	//Партии.Параметры.УстановитьЗначениеПараметра("Товар", Справочники.Номенклатура.НайтиПоКоду("0000001"));
	Партии.Параметры.УстановитьЗначениеПараметра("Товар", Справочники.Номенклатура.ПустаяСсылка());
	// -- obrv 05.10.18
	МинимальнаяЦена = 10000;
	
	//ДобавитьОстаткиПоРегионам();
	
	// ++ obrv 03.10.18
	ОбновитьСписки();	
	// -- obrv 03.10.18
	
	///+ГомзМА 13.09.2023
	МассивКатегорий = Новый Массив;
	МассивКатегорий.Добавить(Справочники.Категории.НайтиПоКоду("000000501"));
	МассивКатегорий.Добавить(Справочники.Категории.НайтиПоКоду("000000502"));
	
	НепроверенныеЦеныАвитоЧастник.Параметры.УстановитьЗначениеПараметра("Категории", МассивКатегорий);
	НепроверенныеЦеныАвитоЧастник.Параметры.УстановитьЗначениеПараметра("Стеллаж", Справочники.Стеллаж.НайтиПоКоду("000001072"));
	///-ГомзМА 13.09.2023
	//УстановитьОграничениеДинамическогоСписка(ЭтаФорма.Список, СтрРазделить("Код,Наименование,Артикул,НомерПроизводителя", ",", Ложь));	
	
	/// Комлев 06/06/24 +++
	Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоСкладу", ЗначениеЗаполнено(Склад));
	Список.Параметры.УстановитьЗначениеПараметра("Склад", Склад);
	/// Комлев 06/06/24 ---
	
	/// МазинЕС 19-08-2024 +++
	СписокНоменклатураАрхив.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоСкладу", ЗначениеЗаполнено(Склад));
	СписокНоменклатураАрхив.Параметры.УстановитьЗначениеПараметра("Склад", Склад);
	/// МазинЕС 19-08-2024 +++--
	
	/// Комлев 18/07/24 +++
	//Список.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДата());
	/// Комлев 18/07/24 ---
	

КонецПроцедуры




&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//список.Параметры.УстановитьЗначениеПараметра("Авито",Истина);
	Порядок=ЭтаФорма.Список.Порядок;
	Порядок.Элементы.Очистить();
	ЭлементПорядка = Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	ЭлементПорядка.РежимОтображения =  РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	ЭлементПорядка.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
	ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("Код"); // Поле, по которому будет упорядочивание
	ЭлементПорядка.Использование = Истина;
	// ++ obrv 01.12.18
	// р = УстСтроку();
	// Если р <> Ложь Тогда
	// 	Элементы.Список.ТекущаяСтрока=р;
	//КонецЕсли;
	// -- obrv 01.12.18
	Элементы.Группа3.Видимость=Ложь; 
	Если старыйпоиск() Тогда
		Элементы.Поиск.Видимость = Ложь;
		Элементы.Поиск1.Видимость = Ложь;
	КонецЕсли;
	
	///+ГомзМА 02.08.2023
	#Если МобильныйКлиент ИЛИ ВебКлиент Тогда
		УстановитьВидимостьДляМобильнойВерсии();
	#КонецЕсли
	///-ГомзМА 02.08.2023
	
	
КонецПроцедуры
&НаСервере

Функция старыйпоиск()
	Если пользователи.ТекущийПользователь().Наименование = "Каширин Владислав Александрович" или пользователи.ТекущийПользователь().Наименование = "Шишов Евгений Викторович" Тогда
		возврат Ложь;
	Иначе
		Возврат истина;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			//ОбработатьШтрихкоды(МенеджерОборудованияУТКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
		КонецЕсли;
	КонецЕсли;
	
	
	Если ИмяСобытия = "ОстаткиИзменение" Тогда
		Элементы.Партии.Обновить();
	ИначеЕсли ИмяСобытия = "Запись_МестоХранения" Тогда
		
		Элементы.Список.Обновить();
		Элементы.Партии.Обновить();
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	
	Отказ = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПоступлениеЗапчастей") Тогда
		// ++ obrv 26.01.18
		//Об = ВыбранноеЗначение.ПолучитьОбъект();
		
		Об = ПолучитьСвойстваДокумента(ВыбранноеЗначение);
		// -- obrv 26.01.18
		
		// ++ obrv 16.01.18
		//Если Об.Новые=Истина И Элементы.Список.ТекущаяСтрока.Состояние <> Перечисления.Состояние.Новый Тогда
		Если Об.Новые=Истина И Элементы.Список.ТекущиеДанные.Состояние <> ПредопределенноеЗначение("Перечисление.Состояние.Новый") Тогда
			// -- obrv 16.01.18	
			Сообщить("Нельзя добавить БУ деталь в накладную для новых");
			Возврат;
		КонецЕсли;
		// ++ obrv 16.01.18
		//Если Об.Новые=Ложь И Элементы.Список.ТекущаяСтрока.Состояние = Перечисления.Состояние.Новый Тогда
		Если Об.Новые=Ложь И Элементы.Список.ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.Состояние.Новый") Тогда
			// -- obrv 16.01.18	
			Сообщить("Нельзя добавить новую деталь в накладную для БУ");
			Возврат;
		КонецЕсли;
		ДобавитьВДокумент(ВыбранноеЗначение,Элементы.Список.ТекущаяСтрока, Отказ);
		Если НЕ Отказ Тогда
			// ++ obrv 26.01.18
			//ТоварСсылка = НайтиДок(Результат.Номер);
			//Если Не ТоварСсылка.Пустая() Тогда
			//	ТоварСсылка.ПолучитьФорму().ОткрытьМодально();
			//	УстановитьПараметр(Элементы.Список.ТекущиеДанные.Код);
			//КонецЕсли;
			
			ПоказатьЗначение(, ВыбранноеЗначение);
			ОбновитьОтборПартий();
			
			// -- obrv 26.01.18
		Иначе
			Сообщить("Такой номер не найден");
		КонецЕсли; 
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.Рас_Комплектовка") Тогда
		
		ДанныеЗаполнения = Новый Структура();
		ДанныеЗаполнения.Вставить("Номенклатура", Элементы.Партии.ТекущиеДанные.Товар);
		ДанныеЗаполнения.Вставить("Партия", Элементы.Партии.ТекущиеДанные.индкод);
		ДанныеЗаполнения.Вставить("Автомобиль", Элементы.Партии.ТекущиеДанные.машина);
		ДанныеЗаполнения.Вставить("Количество", Элементы.Партии.ТекущиеДанные.КолвоОстаток);
		ДанныеЗаполнения.Вставить("Цена", Элементы.Партии.ТекущиеДанные.цена);
		ДанныеЗаполнения.Вставить("Цена2", Элементы.Партии.ТекущиеДанные.наценкаФ);
		ДанныеЗаполнения.Вставить("Склад", Элементы.Партии.ТекущиеДанные.Склад);
		
		ДобавитьВРаскомплектовкуСерв(ВыбранноеЗначение, ДанныеЗаполнения, Отказ);
		
		Если Не Отказ Тогда
			// ++ obrv 26.01.18
			//ТоварСсылка = НайтиДокПродажа(Результат.Номер);
			//Если Не ТоварСсылка.Пустая() Тогда
			//	ТоварСсылка.ПолучитьФорму().ОткрытьМодально();
			//	УстановитьПараметр(Элементы.Список.ТекущиеДанные.Код);
			//КонецЕсли;
			ПоказатьЗначение(, ВыбранноеЗначение);
			ОбновитьОтборПартий();
			// -- obrv 26.01.18
		Иначе
			Сообщить("Такой номер не найден");
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПродажаЗапчастей") Тогда
		
		ДанныеЗаполнения = Новый Структура();
		ДанныеЗаполнения.Вставить("Номенклатура", Элементы.Партии.ТекущиеДанные.Товар);
		ДанныеЗаполнения.Вставить("Партия", Элементы.Партии.ТекущиеДанные.индкод);
		ДанныеЗаполнения.Вставить("Автомобиль", Элементы.Партии.ТекущиеДанные.машина);
		ДанныеЗаполнения.Вставить("Количество", Элементы.Партии.ТекущиеДанные.КолвоОстаток);
		ДанныеЗаполнения.Вставить("Цена", Элементы.Партии.ТекущиеДанные.цена);
		ДанныеЗаполнения.Вставить("Цена2", Элементы.Партии.ТекущиеДанные.наценкаФ);
		ДанныеЗаполнения.Вставить("Склад", Элементы.Партии.ТекущиеДанные.Склад);
		
		ДобавитьВПродажуСерв(ВыбранноеЗначение, ДанныеЗаполнения, Отказ);
		
		Если Не Отказ Тогда
			// ++ obrv 26.01.18
			//ТоварСсылка = НайтиДокПродажа(Результат.Номер);
			//Если Не ТоварСсылка.Пустая() Тогда
			//	ТоварСсылка.ПолучитьФорму().ОткрытьМодально();
			//	УстановитьПараметр(Элементы.Список.ТекущиеДанные.Код);
			//КонецЕсли;
			ПоказатьЗначение(, ВыбранноеЗначение);
			ОбновитьОтборПартий();
			// -- obrv 26.01.18
		Иначе
			Сообщить("Такой номер не найден");
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПредварительныйСчет") Тогда
		
		//Если Элементы.Список.ТекущаяСтрока.ЭтоНоваяЗапчасть = Ложь Тогда
		ДобавитьВПредСчетСерв(ВыбранноеЗначение,Элементы.Список.ТекущаяСтрока, Отказ);
		//КонецЕсли;
		
		Если Не Отказ Тогда
			// ++ obrv 26.01.18
			//ТоварСсылка = НайтиДокПредСчет(Результат.Номер);
			//Если Не ТоварСсылка.Пустая() Тогда
			//	ТоварСсылка.ПолучитьФорму().ОткрытьМодально();
			//	УстановитьПараметр(Элементы.Список.ТекущиеДанные.Код);
			//КонецЕсли;
			ПоказатьЗначение(, ВыбранноеЗначение);
			ОбновитьОтборПартий();
			// -- obrv 26.01.18
		Иначе
			Сообщить("Такой номер не найден");
		КонецЕсли;
	КонецЕсли;
	
	
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.РезервЗапчастей") Тогда
		
		ДобавитьВРезервСерв(ВыбранноеЗначение,Элементы.Список.ТекущаяСтрока, Элементы.Партии.ТекущиеДанные.КолвоОстаток,Элементы.Партии.ТекущиеДанные.Машина,Элементы.Партии.ТекущиеДанные.Цена, Отказ);
		
		Если НЕ Отказ Тогда
			// ++ obrv 26.01.18
			//ТоварСсылка = НайтиДокРезерв(Результат.Номер);
			//Если Не ТоварСсылка.Пустая() Тогда
			//	ТоварСсылка.ПолучитьФорму().ОткрытьМодально();
			//	УстановитьПараметр(Элементы.Список.ТекущиеДанные.Код);
			//КонецЕсли;
			ПоказатьЗначение(, ВыбранноеЗначение);
			ОбновитьОтборПартий();
			// -- obrv 26.01.18
		Иначе
			Сообщить("Такой номер не найден");
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		// ++ obrv 07.09.18
		//ДобавитьВСчетСерв(ВыбранноеЗначение,Элементы.Список.ТекущаяСтрока, Отказ);
		
		Партия = Новый Структура("Товар,машина,индкод,Склад,КолвоОстаток");
		ЗаполнитьЗначенияСвойств(Партия, Элементы.Партии.ТекущиеДанные);
		ДобавитьВПеремещениеНаСервере(ВыбранноеЗначение, Партия, Отказ);
		// -- obrv 07.09.18
		
		
		Если Не Отказ Тогда
			// ++ obrv 26.01.18
			//ТоварСсылка = НайтиДокПСчет(Результат.Номер);
			//Если Не ТоварСсылка.Пустая() Тогда
			//	ТоварСсылка.ПолучитьФорму().ОткрытьМодально();
			//	УстановитьПараметр(Элементы.Список.ТекущиеДанные.Код);
			//КонецЕсли;
			//ПоказатьЗначение(, ВыбранноеЗначение);
			
			Если НЕ РежимМножественнногоВыбора Тогда
				ПараметрыФормы = Новый Структура("НомерСтроки");
				ЗаполнитьЗначенияСвойств(ПараметрыФормы, Партия);
				ПараметрыФормы.Вставить("Ключ", ВыбранноеЗначение);
				ОткрытьФорму("Документ.ПеремещениеТоваров.ФормаОбъекта", ПараметрыФормы);
			Иначе
				Сообщить(СтрШаблон("Добавлено в строку %1", Партия.НомерСтроки));
			КонецЕсли;
			ОбновитьОтборПартий();
			// -- obrv 26.01.18
			//Иначе
			//  	Сообщить("Такой номер не найден");
		КонецЕсли;
	КонецЕсли;
	
	// ++ obrv 26.08.19
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ЗаказНаряд") Тогда
		
		Партия = Новый Структура("Товар,машина,индкод,Склад,КолвоОстаток");
		ЗаполнитьЗначенияСвойств(Партия, Элементы.Партии.ТекущиеДанные);
		ДобавитьВЗаказНарядНаСервере(ВыбранноеЗначение, Партия, Отказ);
		
		
		Если Не Отказ Тогда
			Если ПоследняяКоманда = "ДобавитьТоварВЗаказНаряд" Тогда
				ИмяТЧ = "Товары";
			ИначеЕсли ПоследняяКоманда = "ДобавитьМатериалВЗаказНаряд" Тогда
				ИмяТЧ = "Материалы";
			Иначе
				Возврат
			КонецЕсли;
			
			Если НЕ РежимМножественнногоВыбора Тогда
				ПараметрыФормы = Новый Структура(ИмяТЧ + "_НомерСтроки");
				ПараметрыФормы[ИмяТЧ + "_НомерСтроки"] = Партия.НомерСтроки;
				ПараметрыФормы.Вставить("Ключ", ВыбранноеЗначение);
				ОткрытьФорму("Документ.ЗаказНаряд.ФормаОбъекта", ПараметрыФормы);
			Иначе
				Сообщить(СтрШаблон("Добавлено ранее в строку %1", Партия.НомерСтроки));
			КонецЕсли;
			ОбновитьОтборПартий();
		КонецЕсли;
	КонецЕсли;
	// -- obrv 26.08.19
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		
		Если Элементы.Список.ТекущаяСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
			Партия = Новый Структура();
		Партия.Вставить("Номенклатура", Элементы.Список.ТекущаяСтрока);
		Партия.Вставить("Цена", Элементы.Список.ТекущиеДанные.РекомендованаяЦена);
		/// +++ добавить партию дин.списка партия в Заказклиента// если выполняется команда из контексного меню дин.списка Партия
		Если  ДобавитьПартиюВЗаказКлиента = истина тогда  
		Попытка
		Партия.Вставить("Партия", Элементы.Партии.ТекущиеДанные.индкод);
		Исключение 
		КонецПопытки;
		КонецЕсли;
		 // ---
		ДобавитьВЗаказКлиентаНаСервере(ВыбранноеЗначение, Партия, Отказ);
		
		
		Если Не Отказ Тогда
			Если НЕ РежимМножественнногоВыбора Тогда
				ПараметрыФормы = Новый Структура("Товары_НомерСтроки");
				ПараметрыФормы["Товары_НомерСтроки"] = Партия.НомерСтроки;
				ПараметрыФормы.Вставить("Ключ", ВыбранноеЗначение);
				ОткрытьФорму("Документ.ЗаказКлиента.ФормаОбъекта", ПараметрыФормы);
			Иначе
				Сообщить(СтрШаблон("Добавлено ранее в строку %1", Партия.НомерСтроки));
			КонецЕсли;
			ОбновитьОтборПартий();
		КонецЕсли;
		// +++ Сбосить вспомогательный реквизит формы // нужен для проставления при добавлении товара из номенклатуры в заказ клиента
		 ДобавитьПартиюВЗаказКлиента = Ложь; 
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ЗаявкаНаСборку") Тогда
		
		Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		Партия = Новый Структура();
		Партия.Вставить("Номенклатура", Элементы.Список.ТекущаяСтрока);
		//Партия.Вставить("Цена", Элементы.Список.ТекущиеДанные.РекомендованаяЦена);
		
		ДобавитьВРазнесениеНаСервере(ВыбранноеЗначение, Партия, Отказ);
		
		
		Если Не Отказ Тогда
			Если НЕ РежимМножественнногоВыбора Тогда
				ПараметрыФормы = Новый Структура("Товары_НомерСтроки");
				ПараметрыФормы["Товары_НомерСтроки"] = Партия.НомерСтроки;
				ПараметрыФормы.Вставить("Ключ", ВыбранноеЗначение);
				ОткрытьФорму("Документ.заявкаНаСборку.ФормаОбъекта", ПараметрыФормы);
			Иначе
				Сообщить(СтрШаблон("Добавлено ранее в строку %1", Партия.НомерСтроки));
			КонецЕсли;
			ОбновитьОтборПартий();
		КонецЕсли;

	КонецЕсли; 
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("справочникСсылка.Машины") Тогда
		
		Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		//Партия = Новый Структура();
		//Партия.Вставить("Номенклатура", Элементы.Список.ТекущаяСтрока);
		
		ОткрытьФорму("РегистрСведений.ИндНомер.ФормаЗаписи",Новый Структура("Ключ", УчестьДетальНаСервере(ВыбранноеЗначение,элементы.Список.ТекущиеДанные.ссылка)));
		ОбновитьОтборПартий();

	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("справочникСсылка.ПричиныСписания") Тогда
		
		Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		//Партия = Новый Структура();
		//Партия.Вставить("Номенклатура", Элементы.Список.ТекущаяСтрока);
		
		//ОткрытьФорму("РегистрСведений.ИндНомер.ФормаЗаписи",Новый Структура("Ключ", УчестьДетальНаСервере(ВыбранноеЗначение,элементы.Список.ТекущиеДанные.ссылка)));
		НашаДеталь = элементы.Партии.ТекущиеДанные;
		Причина    = ВыбранноеЗначение;
		ДокументСписания = ПереучестьДетальНаСервере(НашаДеталь,Причина);
		
		ОткрытьЗначениеАсинх("Товар списан в документ № " + ДокументСписания);
		
		ОбновитьОтборПартий();
		
	КонецЕсли;
	
	
	
КонецПроцедуры


&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ОбновитьСписки();
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	ОбновитьСписки();
	/// Комлев 06/06/24 +++
	Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоСкладу", ЗначениеЗаполнено(Склад));
	Список.Параметры.УстановитьЗначениеПараметра("Склад", Склад);
	/// Комлев 06/06/24 ---
	// +++ МазинЕС 19-08-2024
	СписокНоменклатураАрхив.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоСкладу", ЗначениеЗаполнено(Склад));
	СписокНоменклатураАрхив.Параметры.УстановитьЗначениеПараметра("Склад", Склад);
	//--- МазинЕС 19-08-2024
	/// Комлев 18/07/24 +++
	//Список.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДата());
	/// Комлев 18/07/24 ---
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьИзНомера(Команда)
	// Вставить содержимое обработчика.
	Поиск1();
	Если ПроверкаНаличия(Поиск) > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Текст = "ru = ""Запись в номенклатуре с таким артикулом уже существует. Добавить еще одну запись с таким номером?"";"
		+ " en = ""Запись с номенклатуре таким артикулом уже существует. Добавить еще одну запись с таким номером?""";
		Ответ = Вопрос(НСтр(Текст), Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	
	Результат = СоздатьИзКода();
	// ++ obrv 07.02.18
	//Если Результат <> Null Тогда
	//	ТоварСсылка = НайтиПоКод(Результат.Код);
	//	Если Не ТоварСсылка.Пустая() Тогда
	//		ТоварСсылка.ПолучитьФорму().Открыть();
	//		//Возврат;
	//	КонецЕсли;
	Если ЗначениеЗаполнено(Результат) Тогда
		ПоказатьЗначение(, Результат);
		// -- obrv 07.02.18
		
		Поиск1();
	Иначе
		Сообщить("Такой номер не найден");
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура Печать(Команда)
	
	ТабДокумент = ПечатьСервер();
	ТабДокумент.Показать();
	
	
КонецПроцедуры

&НаСервере
Функция ПечатьСервер()
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("Макет");
	ОбластьМакета = Макет.ПолучитьОбласть("шапка");
	ТабДокумент.Вывести(ОбластьМакета);
	строка =   Макет.ПолучитьОбласть("строка");
	ссс = Элементы.Список.ВыделенныеСтроки;
	Для Каждого стр Из ссс Цикл
		строка.Параметры.код = стр.Код;
		строка.Параметры.артикул = стр.Артикул;
		строка.Параметры.название = стр.Наименование;
		строка.Параметры.колво = табл(стр.Код);
		строка.Параметры.место = стр.МестоНаСкладе2;
		ТабДокумент.Вывести(строка);
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьСервер()


&НаКлиенте
Процедура ОткрытьСайт(Команда)
	/// Комлев 21/05/24 +++
	ОбщДействия.ОткрытьДетальНаСайтеСписком(ЭтаФорма.Элементы.Список.ТекущиеДанные.Артикул);
	/// Комлев 21/05/24 +++
КонецПроцедуры

&НаКлиенте
Процедура ФотоДетали(Команда)
	// ++ МазинЕС 01/07/2024 
	ХА = ЭтаФорма; 
	заза= ЭтаФорма.Элементы.Партии.ТекущиеДанные; 
	ОбщДействия.ОткрытьДетальНаСайтеWT10(ЭтаФорма.Элементы.Партии.ТекущиеДанные.индкод);
	// -- МазинЕС 01/07/2024 
КонецПроцедуры

&НаКлиенте
Процедура КарточкаТовараWT10(Команда)
	// ++ МазинЕС 05/08/2024 
	ХА = ЭтаФорма; 
	заза= ЭтаФорма.Элементы.Партии.ТекущиеДанные; 
	ОбщДействия.ОткрытьКарточкуТовараНаСайтеWT10(ЭтаФорма.Элементы.Список.ТекущиеДанные.Код);
	// -- МазинЕС 05/08/2024  
КонецПроцедуры



&НаКлиенте
Процедура ОткрытьСтарыйСайт(Команда)
	/// Комлев 21/05/24 +++
	ОбщДействия.ПоискКодаНаСтаромСайте(ЭтаФорма.Элементы.Список.ТекущиеДанные.Код);
	/// Комлев 21/05/24 +++
КонецПроцедуры


&НаКлиенте
Процедура КолонкаТэги(Команда)
	если ЭтаФорма.Элементы.ЕстьТэги.Видимость = истина тогда
		ЭтаФорма.Элементы.ЕстьТэги.Видимость = ложь;
	Иначе
		ЭтаФорма.Элементы.ЕстьТэги.Видимость = истина;
	КОнецЕсли
КонецПроцедуры

&НаКлиенте
Процедура КрупныйАгрегат(Команда)
	// Вставить содержимое обработчика.
	если ЭтаФорма.Элементы.КрупныйАгрегат.Видимость = истина тогда
		ЭтаФорма.Элементы.КрупныйАгрегат.Видимость = ложь;
	Иначе
		ЭтаФорма.Элементы.КрупныйАгрегат.Видимость = истина;
	КОнецЕсли
КонецПроцедуры

&НаКлиенте
Процедура bezPodkategorii(Команда)
	// Вставить содержимое обработчика.
	servBezPodkategorii();
КонецПроцедуры

&НаКлиенте
Процедура ДляДиректа(Команда)
	Элементы.Группа3.Видимость = НЕ(Элементы.Группа3.Видимость);		
КонецПроцедуры

&НаКлиенте
Процедура ОткудаМинусы(Команда)
	// Вставить содержимое обработчика.
	Результат = откудаминусыс(ЭтаФорма.Элементы.Список.ТекущиеДанные.Код);
	
	Результат.Показать();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПеремещение(Команда)
	
	ТекДанные = Элементы.Партии.ТекущиеДанные;
	
	ПараметрыПоиска = Новый Структура();
	ПараметрыПоиска.Вставить("Номенклатура", ТекДанные.Товар);
	ПараметрыПоиска.Вставить("Автомобиль", ТекДанные.Машина);
	ПараметрыПоиска.Вставить("Склад", ТекДанные.Склад);
	ПараметрыПоиска.Вставить("Партия", ТекДанные.ИндКод);
	
	ДокСсылка = ПолучитьПоследнееПеремещение(ПараметрыПоиска);
	Если НЕ ЗначениеЗаполнено(ДокСсылка) Тогда
		ПоказатьПредупреждение(, "Документ не найден");
		Возврат
	КонецЕсли;
	
	ПоказатьЗначение(, ДокСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиДанные(Команда)
	ТабДокумент = ВывестиДанныеСервер();
	ТабДокумент.Показать();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФайл(Команда)
	// Вставить содержимое обработчика.
	п2();
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьТекст(Команда)
	Перем ТекстСообщения;
	
	Отказ = Ложь;
	
	общЗаданияПоРасп.ОбновитьОдинТовар(ЭтаФорма.Элементы.Список.ТекущаяСтрока, ТекстСообщения, Отказ);
	
	Если ТекстСообщения <> Неопределено Тогда
		
		Картинка = ?(Отказ, БиблиотекаКартинок.Остановить, Неопределено);
		Ключ = Строка(ЭтаФорма.УникальныйИдентификатор) + "_" + ЭтаФорма.Элементы.Список.ТекущиеДанные.Код; 
		ПоказатьОповещениеПользователя(,, ТекстСообщения, Картинка,, Ключ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПродажу(Команда)
	// Вставить содержимое обработчика.
	Результат = 0;
	//Если Элементы.Список.ТекущиеДанные.Состояние = Перечисления.Состояние.Новый Тогда
	//	рез = Элементы.Партии.ТекущиеДанные.ПродНак;
	//Иначе
	
	///+ГомзМА 28.12.2022
	Результат = НайтиПоступлениеДокумента(Элементы.Партии.ТекущиеДанные.ИндКод);
	Если Результат = 0 Тогда
		Результат = НайтиПоступлениеДокументаДляСтаройФормы(Элементы.Партии.ТекущиеДанные.Машина, Элементы.Партии.ТекущиеДанные.Код);
	КонецЕсли;
	///-ГомзМА	28.12.2022
	
	//КонецЕсли;
	Если Результат <> 0 Тогда
		// ++ obrv 02.02.18
		//форма = рез.ПолучитьФорму();
		//форма.НоСтроки = НайтиНомСтрокиПоступление(Элементы.Партии.ТекущиеДанные.Машина,Элементы.Партии.ТекущиеДанные.Код);;
		//форма.ОткрытьМодально();
		
		НоСтроки = НайтиНомСтрокиПоступление(Элементы.Партии.ТекущиеДанные.Машина,Элементы.Партии.ТекущиеДанные.Код);
		ОткрытьФорму("Документ.ПоступлениеЗапчастей.Форма.ФормаДокумента", Новый Структура("Ключ,НоСтроки", Результат, НоСтроки), ЭтаФорма)
		// -- obrv 02.02.18
	КонецЕсли
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьСпецпредложение(Команда)
	// Вставить содержимое обработчика.
	Если ПроверитьСП(ЭтаФорма.Элементы.Список.ТекущиеДанные.Код) = Истина Тогда
		Сообщить("Такое спецпредложение уже существует");
	Иначе
		сп = СоздатьСП(ЭтаФорма.Элементы.Список.ТекущиеДанные.Код);
		сп.ПолучитьФорму().ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВСчет(Команда)
	// Вставить содержимое обработчика.
	ФормаСписка = ПолучитьФорму("Документ.ПеремещениеТоваров.ФормаВыбора");
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	Если Не ФормаСписка.Открыта() Тогда
		ФормаСписка.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьВСчетСерв(ВыбранноеЗначение, СсылкаНом, Отказ)
	Попытка
		Объект = ВыбранноеЗначение.ПолучитьОбъект();
		Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Строка = Объект.Товары.Добавить();
		Строка.Товар = СсылкаНом;
		Строка.Количество = 0;
		Строка.Цена = СсылкаНом.РекомендованаяЦена;
		
		Объект.Записать(РежимЗаписиДокумента.Запись);	
		
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		Объект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		
		
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьВРезерв(Команда)
	// Вставить содержимое обработчика.
	ФормаСписка = ПолучитьФорму("Документ.РезервЗапчастей.ФормаВыбора");
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	Если Не ФормаСписка.Открыта() Тогда
		ФормаСписка.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьВРезервСерв(ВыбранноеЗначение, СсылкаНом,Колво,Машина,Цена, Отказ = Ложь)
	
	Попытка
		Объект = ВыбранноеЗначение.ПолучитьОбъект();
		Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Строка = Объект.Таблица.Добавить();
		Строка.Товар = СсылкаНом;
		Строка.Количество = Колво;
		Строка.машина = Машина;
		Строка.Цена = Цена;
		Строка.цена1 = Цена;
		
		Объект.Записать(РежимЗаписиДокумента.Запись);	
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		Объект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВПродажу(Команда)
	// Вставить содержимое обработчика.
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("НовыеЗП", Ложь);
	ОткрытьФорму("Документ.ПродажаЗапчастей.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Процедура ДобавитьВПродажуСерв(ВыбранноеЗначение, ДанныеЗаполнения, Отказ = Ложь)
	
	Попытка
		Объект = ВыбранноеЗначение.ПолучитьОбъект();
		Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Строка = Объект.Таблица.Добавить();
		Строка.Товар = ДанныеЗаполнения.Номенклатура;
		Строка.Количество = ДанныеЗаполнения.Количество;
		Строка.машина = ДанныеЗаполнения.Автомобиль;
		//Строка.Комментарий = Машина.Наименование;
		Строка.Цена = ДанныеЗаполнения.цена2;
		Строка.цена1 = ДанныеЗаполнения.Цена;
		Строка.Партия = ДанныеЗаполнения.Партия;
		Строка.укод = Строка(Строка.Партия);
		//Строка.Партия = Справочники.ИндКод.ПолучитьПартиюПоКоду(укод, СсылкаНом, Неопределено);
		Строка.Склад = ДанныеЗаполнения.Склад;
		
		Объект.Записать(РежимЗаписиДокумента.Запись);	
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		Объект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ДобавитьВРаскомплектовкуСерв(ВыбранноеЗначение, ДанныеЗаполнения, Отказ = Ложь)
	
	Попытка
		Объект = ВыбранноеЗначение.ПолучитьОбъект();
		Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Строка = Объект.НоменклатураСписок.Добавить();
		Строка.Номенклатураспис = ДанныеЗаполнения.Номенклатура;
		Строка.Количество = ДанныеЗаполнения.Количество;
		Строка.Номенклатураспис = ДанныеЗаполнения.Автомобиль;
		//Строка.Комментарий = Машина.Наименование;
		//Строка.Цена = ДанныеЗаполнения.цена2;
		//Строка.цена1 = ДанныеЗаполнения.Цена;
		Строка.Партия = ДанныеЗаполнения.Партия;
		Строка.код = Строка(Строка.Партия);
		//Строка.Партия = Справочники.ИндКод.ПолучитьПартиюПоКоду(укод, СсылкаНом, Неопределено);
		Строка.Склад = ДанныеЗаполнения.Склад;
		
		Объект.Записать(РежимЗаписиДокумента.Запись);	
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		Объект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВПриход(Команда)
	// Вставить содержимое обработчика.
	П = Новый Структура;
	// ++ obrv 16.01.18
	//Если ЭтаФорма.Элементы.Список.ТекущиеДанные.Состояние = Перечисления.Состояние.Новый Тогда
	Если ЭтаФорма.Элементы.Список.ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.Состояние.Новый") Тогда
		// -- obrv 16.01.18	
		П.Вставить("НовыеЗП",Истина);
	Иначе
		П.Вставить("НовыеЗП",Ложь);
	КонецЕсли;
	ФормаСписка = ПолучитьФорму("Документ.ПоступлениеЗапчастей.ФормаВыбора",П);
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	// ++ obrv 16.01.18
	Если ЭтаФорма.Элементы.Список.ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.Состояние.Новый") Тогда
		//Если ЭтаФорма.Элементы.Список.ТекущиеДанные.Состояние = Перечисления.Состояние.Новый Тогда
		// -- obrv 16.01.18	
		ФормаСписка.НовыеЗП=Истина;
	Иначе
		ФормаСписка.НовыеЗП=Ложь;
	КонецЕсли;
	
	Если Не ФормаСписка.Открыта() Тогда
		ФормаСписка.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьВПредСчетСерв(ВыбранноеЗначение, СсылкаНом, Отказ = Ложь)
	
	Попытка
		Объект = ВыбранноеЗначение.ПолучитьОбъект();
		Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Строка = Объект.Таблица.Добавить();
		Строка.Товар = СсылкаНом;
		Строка.Количество = 1;
		Строка.Цена = СсылкаНом.РекомендованаяЦена;
		
		Объект.Записать(РежимЗаписиДокумента.Запись);	
		
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		Объект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		
		
	КонецПопытки;
	
КонецПроцедуры


&НаСервере
Функция ДобавитьВПродажуСервНов(ВыбранноеЗначение, СсылкаНом,Колво,Машина,Цена)
	
	Объект = ВыбранноеЗначение.ПолучитьОбъект();
	Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Строка = Объект.Таблица.Добавить();
	Строка.Товар = СсылкаНом;
	Строка.Количество = 1;
	Строка.машина = Машина;
	Строка.Цена = СсылкаНом.РекомендованаяЦена;
	Строка.цена1 = Цена;
	Объект.Записать(РежимЗаписиДокумента.Запись);
	Возврат Объект;
КонецФункции

&НаКлиенте
Процедура ДобавитьВПредварительныйСчет(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	ФормаСписка = ПолучитьФорму("Документ.ПредварительныйСчет.ФормаВыбора");
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	//Если ЭтаФорма.Элементы.Список.ТекущиеДанные.ЭтоНоваяЗапчасть = Истина Тогда
	//	ФормаСписка.НовыеЗП=Истина;
	//Иначе
	ФормаСписка.НовыеЗП=Ложь;
	//КонецЕсли;
	Если Не ФормаСписка.Открыта() Тогда
		ФормаСписка.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ДобавитьВДокумент(ВыбранноеЗначение, СсылкаНом, Отказ)
	Попытка
		Объект = ВыбранноеЗначение.ПолучитьОбъект();
		Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Строка = Объект.Таблица.Добавить();
		Строка.Товар = СсылкаНом;
		Строка.Ответственный = НайтиПользователя();
		// ++ obrv 27.02.18
		Строка.ДатаДобавления = ТекущаяДата();
		// -- obrv 27.02.18
		Объект.Записать(РежимЗаписиДокумента.Запись);	
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		Объект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВПеремещениеНаСервере(ДокументПеремещение, Партия, Отказ)
	
	
	ДокОбъект = ДокументПеремещение.ПолучитьОбъект();
	
	
	Если Партия.Склад <> ДокОбъект.СкладОтправитель Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Этот товар находится на складе [%1], а перемещение выполняется со склада [%2]",
		Партия.Склад,
		ДокОбъект.СкладОтправитель),
		,
		,
		,
		Отказ
		);
		Возврат	
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("Товар", Партия.Товар);
	ПараметрыОтбора.Вставить("Автомобиль", Партия.машина);
	ПараметрыОтбора.Вставить("Партия", Партия.индкод);
	НайденныеСтроки = ДокОбъект.Товары.НайтиСтроки(ПараметрыОтбора);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		НомерСтроки = НайденныеСтроки[0].НомерСтроки;
		//Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", НомерСтроки, "Товар");
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//	СтрШаблон("Эта партия уже добавлена (см. строку №%1)",
		//		НомерСтроки),
		//	ДокОбъект,
		//	Поле,
		//	"Объект"
		//);
		
		Партия.Вставить("НомерСтроки", НомерСтроки - 1);
		Возврат	
	КонецЕсли;
	
	НоваяСтрока = ДокОбъект.Товары.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыОтбора);
	НоваяСтрока.Количество = Партия.КолвоОстаток;
	
	Попытка
		
		ДокОбъект.Записать();
		Партия.Вставить("НомерСтроки", НоваяСтрока.НомерСтроки - 1);
		
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		ДокОбъект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		
	КонецПопытки;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВПеремещение(Команда)
	
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	
	РежимМножественнногоВыбора = Истина;
	ОткрытьФорму("Документ.ПеремещениеТоваров.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВПеремещениеИОткрыть(Команда)
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	
	РежимМножественнногоВыбора = Ложь;
	ОткрытьФорму("Документ.ПеремещениеТоваров.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры



&НаКлиенте
Процедура ДобавитьТоварВЗаказНаряд(Команда)
	
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	
	ПоследняяКоманда = Команда.Имя;
	ОткрытьФорму("Документ.ЗаказНаряд.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьМатериалВЗаказНаряд(Команда)
	
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	
	ПоследняяКоманда = Команда.Имя;
	ОткрытьФорму("Документ.ЗаказНаряд.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВЗаказНарядНаСервере(ДокументЗаказНаряд, Партия, Отказ)
	
	
	ДокОбъект = ДокументЗаказНаряд.ПолучитьОбъект();
	
	
	
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("Номенклатура", Партия.Товар);
	ПараметрыОтбора.Вставить("Автомобиль", Партия.машина);
	ПараметрыОтбора.Вставить("Партия", Партия.индкод);
	Если НЕ ЗначениеЗаполнено(ДокОбъект.Склад) Тогда
		ПараметрыОтбора.Вставить("Склад", Партия.Склад);
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Партия);
	
	Если ПоследняяКоманда = "ДобавитьТоварВЗаказНаряд" Тогда
		ИмяТЧ = "Товары";
	ИначеЕсли ПоследняяКоманда = "ДобавитьМатериалВЗаказНаряд" Тогда
		ИмяТЧ = "Материалы";
	Иначе
		Возврат
	КонецЕсли;
	
	НайденныеСтроки = ДокОбъект[ИмяТЧ].НайтиСтроки(ПараметрыОтбора);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		НомерСтроки = НайденныеСтроки[0].НомерСтроки;
		//Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", НомерСтроки, "Товар");
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//	СтрШаблон("Эта партия уже добавлена (см. строку №%1)",
		//		НомерСтроки),
		//	ДокОбъект,
		//	Поле,
		//	"Объект"
		//);
		
		Партия.Вставить("НомерСтроки", НомерСтроки - 1);
		Возврат	
	КонецЕсли;
	
	НоваяСтрока = ДокОбъект[ИмяТЧ].Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыОтбора);
	//дт_АвтосервисВызовСервера.РаботаПриИзменении(НоваяСтрока);
	дт_АвтосервисКлиентСервер.ОбработкаИзмененияСтроки(ДокОбъект, ИмяТЧ, НоваяСтрока);
	
	
	Попытка
		
		ДокОбъект.Записать();
		Партия.Вставить("НомерСтроки", НоваяСтрока.НомерСтроки - 1);
		
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		ДокОбъект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		
	КонецПопытки;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВЗаказКлиента(Команда)
	
	СостоянияВРаботе = Новый Массив();
	СостоянияВРаботе.Добавить(ПредопределенноеЗначение("Перечисление.дт_СостоянияЗаказовКлиента.Продажа"));
	СостоянияВРаботе.Добавить(ПредопределенноеЗначение("Перечисление.дт_СостоянияЗаказовКлиента.Ожидание"));
	
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	//ПараметрыФормы.Вставить("Отбор", Новый Структура("Состояние", СостоянияВРаботе));
	
	ОткрытьФорму("Документ.ЗаказКлиента.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьВЗаказКлиентаПартию(Команда)
	//++МазинЕС 02-07-2024
	ДобавитьПартиюВЗаказКлиента = истина; 
	СостоянияВРаботе = Новый Массив();
	СостоянияВРаботе.Добавить(ПредопределенноеЗначение("Перечисление.дт_СостоянияЗаказовКлиента.Продажа"));
	СостоянияВРаботе.Добавить(ПредопределенноеЗначение("Перечисление.дт_СостоянияЗаказовКлиента.Ожидание"));
	
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	//ПараметрыФормы.Вставить("Отбор", Новый Структура("Состояние", СостоянияВРаботе));
	
	ОткрытьФорму("Документ.ЗаказКлиента.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//++МазинЕС 02-07-2024 
	
КонецПроцедуры




&НаСервере
Процедура ДобавитьВЗаказКлиентаНаСервере(ДокументЗаказКлиента, Партия, Отказ)
	
	
	ДокОбъект = ДокументЗаказКлиента.ПолучитьОбъект();
	
	
	ПараметрыОтбора = Новый Структура("Номенклатура");
	ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Партия);
	
	НайденныеСтроки = ДокОбъект.Товары.НайтиСтроки(ПараметрыОтбора);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		НомерСтроки = НайденныеСтроки[0].НомерСтроки;
		Партия.Вставить("НомерСтроки", НомерСтроки - 1);
		Возврат	
	КонецЕсли;
	
	НоваяСтрока = ДокОбъект.Товары.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыОтбора);
	Попытка
	НоваяСтрока.Партия = Партия.Партия;
	исключение 
	КонецПопытки;
	НоваяСтрока.Количество = 1;
	
	//НоваяСтрока.Цена = Партия.Цена;
	//НоваяСтрока.Сумма = Партия.Цена;
	
	Попытка
		
		ДокОбъект.Записать();
		Партия.Вставить("НомерСтроки", НоваяСтрока.НомерСтроки - 1);
		
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		ДокОбъект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		
	КонецПопытки;
	
КонецПроцедуры



&НаКлиенте
Процедура ДобавитьВРазнесение(Команда)
	
	//СостоянияВРаботе = Новый Массив();
	//СостоянияВРаботе.Добавить(ПредопределенноеЗначение("Перечисление.дт_СостоянияЗаказовКлиента.Продажа"));
	//СостоянияВРаботе.Добавить(ПредопределенноеЗначение("Перечисление.дт_СостоянияЗаказовКлиента.Ожидание"));
	
	//ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	//ПараметрыФормы.Вставить("Отбор", Новый Структура("Состояние", СостоянияВРаботе));
	
	ОткрытьФорму("Документ.ЗаявкаНаСборку.ФормаВыбора", , ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
КонецПроцедуры


&НаСервере
Процедура ДобавитьВРазнесениеНаСервере(ДокументРазнесение, Партия, Отказ)
	
	
	ДокОбъект = ДокументРазнесение.ПолучитьОбъект();
	
	
	ПараметрыОтбора = Новый Структура("Номенклатура");
	
	ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Партия);
	
	НайденныеСтроки = ДокОбъект.Товары.НайтиСтроки(ПараметрыОтбора);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		НомерСтроки = НайденныеСтроки[0].НомерСтроки;
		Партия.Вставить("НомерСтроки", НомерСтроки - 1);
		Возврат	
	КонецЕсли;
	
	НоваяСтрока = ДокОбъект.Товары.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыОтбора);
	НоваяСтрока.Количество = 1;
	//НоваяСтрока.Цена = Партия.Цена;
	//НоваяСтрока.Сумма = Партия.Цена;
	
	Попытка
		
		ДокОбъект.Записать();
		Партия.Вставить("НомерСтроки", НоваяСтрока.НомерСтроки - 1);
		
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		ДокОбъект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);		
	КонецПопытки;
	
КонецПроцедуры



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьОстаткиПоРегионам() Экспорт
	
	ТекстЗапроса = Список.ТекстЗапроса;
	Фрагмент1 = "ИЗ";
	Индекс1 = СтрНайти(ТекстЗапроса, Фрагмент1);
	
	Фрагмент2 = "КАК СправочникНоменклатура";
	Индекс2 = СтрНайти(ТекстЗапроса, Фрагмент2) + СтрДлина(Фрагмент2);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Склады.Регион КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Склады.Регион.НаименованиеСокращенное ПОДОБНО """"
	|			ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(Склады.Регион)
	|		ИНАЧЕ Склады.Регион.НаименованиеСокращенное
	|	КОНЕЦ КАК Представление
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.ПоказыватьОстатки
	|	И НЕ Склады.ПометкаУдаления
	|	И НЕ Склады.Регион = ЗНАЧЕНИЕ(Справочник.Область.ПустаяСсылка)
	|СГРУППИРОВАТЬ ПО
	|	Склады.Регион,
	|	ВЫБОР
	|		КОГДА Склады.Регион.НаименованиеСокращенное ПОДОБНО """"
	|			ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(Склады.Регион)
	|		ИНАЧЕ Склады.Регион.НаименованиеСокращенное
	|	КОНЕЦ
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаРегионы  = РезультатЗапроса.Выгрузить();
	
	Если ТаблицаРегионы.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	Для Индекс = 0 По ТаблицаРегионы.Количество() - 1 Цикл
		
		ТекстЗапроса = Лев(ТекстЗапроса, Индекс1 - 1) 
		+ Символы.ПС + СтрШаблон(", ОстаткиПоРегионам%1.КолвоОстаток КАК Остаток%1", Индекс) + " " 
		+ Сред(ТекстЗапроса, Индекс1, Индекс2 - Индекс1 + 1)
		+ СтрШаблон(" ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки(, Склад.Регион = &Регион%1) КАК ОстаткиПоРегионам%1
		|ПО СправочникНоменклатура.Ссылка = ОстаткиПоРегионам%1.Товар", Индекс)
		+ Сред(ТекстЗапроса, Индекс2);
		
		Индекс1 = СтрНайти(ТекстЗапроса, Фрагмент1);
		Индекс2 = СтрНайти(ТекстЗапроса, Фрагмент2) + СтрДлина(Фрагмент2);
		
	КонецЦикла;
	
	Список.ТекстЗапроса = ТекстЗапроса;
	ДобавляемыеПоля = Новый Массив();
	Для Индекс = 0 По ТаблицаРегионы.Количество() - 1 Цикл
		
		Список.Параметры.УстановитьЗначениеПараметра(СтрШаблон("Регион%1", Индекс), ТаблицаРегионы[Индекс].Ссылка);
		
		ДобавляемыеПоля.Добавить(СтрШаблон("СписокОстаток%1", Индекс));
		
	КонецЦикла;
	
	// Добавим колонки в список
	дт_Формы.ДобавитьЭлементы(ЭтаФорма, Новый Структура("Список", СтрСоединить(ДобавляемыеПоля, ",")), "КолвоОстаток", "Список");
	
	// Установим заголовки
	Для Индекс = 0 По ТаблицаРегионы.Количество() - 1 Цикл
		
		Элемент = Элементы.Найти(СтрШаблон("СписокОстаток%1", Индекс));
		Если Элемент <> Неопределено Тогда
			Элемент.Заголовок = ТаблицаРегионы[Индекс].Представление;
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Фотографий(Команда)
	// Вставить содержимое обработчика.
	Сообщить("Фотография есть у "+КолвоФото()+" деталей");
	
КонецПроцедуры


&НаСервере
Процедура ДобавитьУсловиеПоСкладу(ТекстЗапроса, Запрос = Неопределено)
	
	// Добавим текст с местом хранения
	Если СтрНайти(ТекстЗапроса, "МестаХраненияНоменклатуры") = 0 Тогда
		
		// перед ИЗ вставить
		// 	МестаХраненияНоменклатуры.МестоХранения КАК МестоХранения
		Поз = СтрНайти(ТекстЗапроса, "ИЗ");
		ТекстЗапроса = Лев(ТекстЗапроса, Поз - 1) + ",
		|МестаХраненияНоменклатуры.МестоХранения КАК МестоХранения
		|" + Сред(ТекстЗапроса, Поз);
		
		
		// Если есть ГДЕ, то перед этим, если нет, то в конец
		// 
		Т = "
		|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|	МестаХранения.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(МестаХранения.МестоХранения) КАК МестоХранения
		|ИЗ
		|	РегистрСведений.дт_МестаХраненияНоменклатуры.СрезПоследних(, Склад = &Склад) КАК МестаХранения
		|
		|СГРУППИРОВАТЬ ПО
		|	МестаХранения.Номенклатура) КАК МестаХраненияНоменклатуры
		|ПО СправочникНоменклатура.Ссылка = МестаХраненияНоменклатуры.Номенклатура
		|";
		
		Поз = СтрНайти(ТекстЗапроса, "ГДЕ");
		Если Поз <> 0 Тогда
			ТекстЗапроса = Лев(ТекстЗапроса, Поз - 1) + Т + Сред(ТекстЗапроса, Поз);
		Иначе
			ТекстЗапроса = ТекстЗапроса + Т;
		КонецЕсли;
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(Склад) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"РегистрНакопления1.Остатки КАК",
		"РегистрНакопления1.Остатки(, Склад = &Склад) КАК"
		);
	КонецЕсли;
	
	
	
	//ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
	//	"дт_МестаХраненияНоменклатуры.СрезПоследних(, )",
	//	"дт_МестаХраненияНоменклатуры.СрезПоследних(, Склад = &Склад)"
	//);
	
	Если НЕ Запрос = Неопределено Тогда
		Если ЗначениеЗаполнено(Склад) Тогда
			Запрос.УстановитьПараметр("Склад", Склад);
		Иначе
			Запрос.УстановитьПараметр("Склад", дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьОсновнойСклад());
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДобавитьУсловиеПоСкладу()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервере
Функция ТекстЗапросаСписка()
	
	Результат = Список.ТекстЗапроса;
	
	Поз = СтрНайти(Результат, "ГДЕ",,3000);
	Если Поз <> 0  Тогда
		Результат = Лев(Результат, Поз - 1);
	КонецЕсли;
	
	Если Прав(Результат, 1) <> " "
		И Прав(Результат, 1) <> Символы.ПС Тогда
		
		Результат = Результат + " ";
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ТекстЗапросаСписка()


// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура УстановитьПараметрыСписка()
	
	СкладОтбор = Склад;
	
	Если НЕ ЗначениеЗаполнено(СкладОтбор) Тогда
		СкладОтбор = дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьОсновнойСклад();
	КонецЕсли;
	//список.Параметры.УстановитьЗначениеПараметра("Авито",Истина);
	
	Список.Параметры.УстановитьЗначениеПараметра("Склад", Склад);
	
	
	
	Партии.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоСкладу", ЗначениеЗаполнено(Склад));
	Партии.Параметры.УстановитьЗначениеПараметра("Склад", СкладОтбор);
	
	/// Комлев 18/07/24 +++
	//Список.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДата());
	/// Комлев 18/07/24 ---
	
КонецПроцедуры // УстановитьПараметрыСписка()


// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура ОбновитьСписки()
	
	ТекстЗапроса = Список.ТекстЗапроса;
	
	Если ЗначениеЗаполнено(Склад) Тогда
		
		ДобавитьУсловиеПоСкладу(ТекстЗапроса);
		
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"РегистрНакопления1.Остатки(, Склад = &Склад)",
		"РегистрНакопления1.Остатки"
		);
		//ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		//	"дт_МестаХраненияНоменклатуры.СрезПоследних(, Склад = &Склад)",
		//	"дт_МестаХраненияНоменклатуры.СрезПоследних(, )"
		//);
	КонецЕсли;
	
	ЭтоСкладТранзитный = Ложь;
	
	Если ЗначениеЗаполнено(Склад) Тогда
		ЭтоСкладТранзитный = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "ТипСклада") = Перечисления.дт_ТипыСкладов.ТранзитнаяЗона; 
	КонецЕсли;
	
	Если ЭтоСкладТранзитный Тогда
		
		ИзменитьТипСоединения(ТекстЗапроса, "ВНУТРЕННЕЕ", "РегистрНакопления1Остатки");
		
	Иначе	
		
		ИзменитьТипСоединения(ТекстЗапроса, "ЛЕВОЕ", "РегистрНакопления1Остатки");
		
	КонецЕсли;
	
	Список.ТекстЗапроса = ТекстЗапроса;
	
	УстановитьПараметрыСписка();	
	//ИтогиНаСервере();
	
КонецПроцедуры // ОбновитьСписок()

&НаСервере
Процедура ИтогиНаСервере()
	
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	
	//Получаем настройки пользователя (отборы, сортировки и т.п.)
	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	//Выводим динамический список в таблицу значений
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//ИтогиКоличества = Результат.Итог("КолвоОстаток");
	ИтогиОстаток = 0;
	КоличествоНоменклатуры = 0;
	Для каждого стр из Результат Цикл
		Если стр.колвоОстаток <> Null  тогда
			Если  НЕ стр.колвоОстаток < 0 Тогда
				ИтогиОстаток = ИтогиОстаток + стр.колвоОстаток;
				КоличествоНоменклатуры = КоличествоНоменклатуры + 1;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
	
	
КонецПроцедуры



&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьТипСоединения(ТекстЗапроса, Соединение, ИмяТаблицы) Экспорт
	
	Индекс = СтрНайти(ТекстЗапроса, "КАК " + ИмяТаблицы);
	
	Если Индекс = 0 Тогда
		Возврат
	КонецЕсли;
	
	Индекс = СтрНайти(ТекстЗапроса, "СОЕДИНЕНИЕ", НаправлениеПоиска.СКонца, Индекс);
	
	Если Индекс = 0 Тогда
		Возврат
	КонецЕсли;
	
	// до первого слова
	Индекс = Индекс - 1;
	Пока Сред(ТекстЗапроса, Индекс, 1) = " " Цикл
		Индекс = Индекс - 1; 
	КонецЦикла;
	
	// до начала слова
	ИндексКон = Индекс;
	Пока КодСимвола(Сред(ТекстЗапроса, Индекс, 1)) > 32 Цикл
		Индекс = Индекс - 1; 
	КонецЦикла;
	
	ТекстЗапроса = Лев(ТекстЗапроса, Индекс) + Соединение + Сред(ТекстЗапроса, ИндексКон + 1)
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если НЕ ЭтаФорма.ВладелецФормы = Неопределено Тогда
		Струк = Новый Структура;
		Струк.Вставить("Команда","ПравильныйПоиск");	
		Код = Элементы.Список.ТекущиеДанные.Код;
		Струк.Вставить("Код",Код);
		деталь = Элементы.Партии.ДанныеСтроки(Элементы.Партии.ТекущаяСтрока);
		Струк.Вставить("деталь",деталь);
		Струк.Вставить("машина",Элементы.Партии.ТекущиеДанные.Машина);
		Струк.Вставить("Цена",Элементы.Партии.ТекущиеДанные.Цена);
		Струк.Вставить("укод",Элементы.Партии.ТекущиеДанные.Код);
		Струк.Вставить("Партия",Элементы.Партии.ТекущиеДанные.индкод);
		Струк.Вставить("Склад",Элементы.Партии.ТекущиеДанные.Склад);
		Струк.Вставить("Товар",Элементы.Партии.ТекущиеДанные.Товар);
		Струк.Вставить("Количество",Элементы.Партии.ТекущиеДанные.КолвоОстаток);
		Струк.Вставить("Артикул",Элементы.Список.ТекущиеДанные.Артикул);
		Струк.Вставить("МестоХранения",Элементы.Партии.ТекущиеДанные.МестоХранения);
		Струк.Вставить("Номенклатура",Элементы.Партии.ТекущиеДанные.Товар);
		Струк.Вставить("РекЦена",?(Элементы.Партии.ТекущиеДанные.цена > 0,Элементы.Партии.ТекущиеДанные.цена,Элементы.Список.ТекущиеДанные.РекомендованаяЦена));
		Струк.Вставить("Продано",Элементы.Список.ТекущиеДанные.КолвоПродаж);
		Струк.Вставить("Остаток",Элементы.Список.ТекущиеДанные.КолвоОстаток);
		ФФФ = ЭтаФорма.ВладелецФормы;
		ОповеститьОВыборе(Струк);
	Иначе
		СтруктураЗаписи = Новый Структура("индкод",  ПолучитьиндКод(Элементы.Партии.ТекущиеДанные.индКод));
		МассивСтруктураЗаписи = Новый Массив;
		МассивСтруктураЗаписи.Добавить(СтруктураЗаписи);
		КлючЗаписи = Новый ("РегистрСведенийКлючЗаписи.ИндНомер", МассивСтруктураЗаписи);
		
		Параметрыформы = Новый Структура("Ключ", КлючЗаписи);                            
		ОткрытьФорму("РегистрСведений.ИндНомер.ФормаЗаписи", Параметрыформы);
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьиндКод(Код)
	Возврат Справочники.ИндКод.НайтиПоНаименованию(Код);
КонецФункции



&НаСервере
Функция ПолучитьПоследнееПеремещение(ПараметрыПоиска)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТоварыНаСкладах.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РегистрНакопления1.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			Склад = &Склад
	|				И машина = &Автомобиль
	|				И Товар = &Номенклатура
	|				И индкод = &Партия) КАК ТоварыНаСкладах
	|ГДЕ
	|	ТоварыНаСкладах.КолвоПриход > 0
	|	И НЕ ТоварыНаСкладах.Регистратор ССЫЛКА Документ.ПродажаЗапчастей
	|	И НЕ ТоварыНаСкладах.Регистратор ССЫЛКА Документ.ПоступлениеЗапчастей
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладах.Период УБЫВ";
	
	Запрос.УстановитьПараметр("Автомобиль", ПараметрыПоиска.Автомобиль);
	Запрос.УстановитьПараметр("Номенклатура", ПараметрыПоиска.Номенклатура);
	Запрос.УстановитьПараметр("Партия", ПараметрыПоиска.Партия);
	Запрос.УстановитьПараметр("Склад", ПараметрыПоиска.Склад);
	
	ВыгрузкаИзЗапроса = Запрос.Выполнить().Выгрузить();
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Результат = Неопределено;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Результат = ВыборкаДетальныеЗаписи.Регистратор;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции




&НаКлиенте
Процедура ОбновитьОтборПартий()
	ТекДанные = Элементы.Список.ТекущаяСтрока;
	
	//Номенклатура = ?(ТекДанные = Неопределено, Неопределено, ТекДанные.Номенклатура);
	
	Партии.Параметры.УстановитьЗначениеПараметра("Товар", ТекДанные);
	
КонецПроцедуры


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// ++ obrv 23.05.18
	//УстановитьПараметр(Элементы.Список.ТекущиеДанные.Код);
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		ОбновитьОтборПартий();
	КонецЕсли;
	// -- obrv 23.05.18
	
	// ++ obrv 16.01.18  Сергеев 06/03/2023
	//Если Элементы.Список.ТекущиеДанные.Состояние = Перечисления.Состояние.Новый Тогда
	//	Если НЕ Элементы.Список.ТекущиеДанные = Неопределено
	//		И Элементы.Список.ТекущиеДанные.Состояние = ПредопределенноеЗначение("Перечисление.Состояние.Новый") Тогда
	//	// -- obrv 16.01.18	
	//		Элементы.ПартиимашинаВинКод.Видимость = Ложь;
	//		Элементы.Партиимашина.Видимость = Ложь;
	////		Элементы.ПартииПоставшик.Видимость = Истина;
	////		Элементы.ПартииДатаНакладной.Видимость = Истина;
	////		Элементы.ПартииЦенаПоступления.Видимость = Истина;
	//	Иначе
	//		Элементы.ПартиимашинаВинКод.Видимость = Истина;
	//		Элементы.Партиимашина.Видимость = Истина;
	////		Элементы.ПартииПоставшик.Видимость = Ложь;
	////		Элементы.ПартииДатаНакладной.Видимость = Ложь;
	////		Элементы.ПартииЦенаПоступления.Видимость = Ложь;      
	//	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура Поиск(Команда)
	// Вставить содержимое обработчика.
	Если Часть  Тогда
		RegExp = Новый COMОбъект("VBScript.RegExp");
		
		RegExp.IgnoreCase = Ложь; //Игнорировать регистр
		RegExp.Global = Истина; //Поиск всех вхождений шаблона
		RegExp.MultiLine = Истина; //Многострочный режим
		
		RegExp.Pattern = "[^a-zA-Zа-яА-Я_0-9 ]";
		стр1=RegExp.Replace( Поиск,"");  
		
		ПоискПоЧасти(стр1);
	Иначе
		Поиск1();    
	КонецЕсли
КонецПроцедуры

&НаКлиенте 
Процедура Поиск1()
	RegExp = Новый COMОбъект("VBScript.RegExp");
	
	RegExp.IgnoreCase = Ложь; //Игнорировать регистр
	RegExp.Global = Истина; //Поиск всех вхождений шаблона
	RegExp.MultiLine = Истина; //Многострочный режим
	
	RegExp.Pattern = "[^a-zA-Zа-яА-Я_0-9 ]";
	стр1=RegExp.Replace( Поиск,"");  
	Номера = Новый Массив();
	НомВр = Новый Массив();
	Рез1 = РазбитьСтрокуНаМассивПодстрок(стр1," ");
	Для Каждого ном1 из Рез1 Цикл
		НомВр = НачатьПоиск2(ном1);
		для каждого ном2 из НомВр Цикл
			Номера.Добавить(ном2);
		КонецЦикла;
		Номера.Добавить(ном1);
	КонецЦикла;
	RegExp = Новый COMОбъект("VBScript.RegExp");
	//Фильтр(стр1, Номера);
	Фильтр(стр1, Рез1);            
	// ++ obrv 05.10.18
	СписокПриАктивизацииСтроки(Элементы.Список);
	// -- obrv 05.10.18
КонецПроцедуры

&НаСервере
Функция ПоискПоЧасти(Поиск1)
	ПоискПо = " ГДЕ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск+""" 
	| ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск+"%"" 
	| ИЛИ СправочникНоменклатура.Артикул ПОДОБНО ""%"+Поиск+"%"" 
	| ИЛИ СправочникНоменклатура.НомерПроизводителя ПОДОБНО ""%"+Поиск+"%""
	| ИЛИ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск1+"%""  
	| ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск1+"%"" 
	| ИЛИ СправочникНоменклатура.АртикулПоиск ПОДОБНО ""%"+Поиск1+"%"" 
	| ИЛИ СправочникНоменклатура.НомерПоиск ПОДОБНО ""%"+Поиск1+"%"" 
	| ИЛИ СправочникНоменклатура.Комплектность.Артикул ПОДОБНО ""%"+Поиск+"%""
	|  ИЛИ НомЗамены.НомерЗамены ПОДОБНО ""%"+Поиск+"%"" ИЛИ СправочникНоменклатура.Комплектность.НомерПоиск ПОДОБНО ""%"+Поиск1+"%""
	| ";
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| )
	| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| ЛЕВОЕ СОЕДИНЕНИЕ  Справочник.Номенклатура.НомераЗамен КАК НомЗамены ПО СправочникНоменклатура.Ссылка = НомЗамены.Ссылка
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар "+ ПоискПо;
	Запрос = Новый Запрос;
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка();
	// -- obrv 01.11.18
	
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1, Запрос);		
	// -- obrv 03.10.18
	Запрос.Текст = Текст1;
	Сообщить( Текст1);
	Результат = Запрос.Выполнить();
	Таблица2 = Результат.Выгрузить();
	Количество = Таблица2.Количество();
	Если Таблица2.Количество() < 1 Тогда
		ОчиститьПоиск();
		Сообщить("Номер не найден");
		возврат 0;
	КонецЕсли;
	Текст1 = "ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка,
	|	СправочникНоменклатура.ВерсияДанных,
	|	СправочникНоменклатура.ПометкаУдаления,
	|	СправочникНоменклатура.Предопределенный,
	|	СправочникНоменклатура.Код,
	|	СправочникНоменклатура.Наименование,
	|	СправочникНоменклатура.Артикул,
	|	СправочникНоменклатура.НомерПроизводителя,
	|	СправочникНоменклатура.МестоНаСкладе,
	|	СправочникНоменклатура.Бренд,
	|	СправочникНоменклатура.АртикулПоиск,
	|	СправочникНоменклатура.НомерПоиск,
	|	СправочникНоменклатура.Фото,
	|	СправочникНоменклатура.НаименованиеПолное,
	|	СправочникНоменклатура.РекомендованаяЦена,
	|   СправочникНоменклатура.Производитель,
	|   СправочникНоменклатура.Состояние,
	|	СправочникНоменклатура.ЦенаОригинала,
	|	СправочникНоменклатура.МестоНаСкладе2,
	|	СправочникНоменклатура.Комплектность.(
	|		Ссылка,
	|		НомерСтроки,
	|		Артикул,
	|		Наименование,
	|		Количество,
	|		Комментарий,
	|		НомерПоиск
	|	),
	|	РегистрНакопления1Остатки.КолвоОстаток,
	|   РезервОстатки.КолвоОстаток как КолвоОстаток1,
	|   СправочникНоменклатура.НаДиректе,
	|   СправочникНоменклатура.НаАвтолайне,
	|   СправочникНоменклатура.ЕстьТэги,
	|   СправочникНоменклатура.КрупныйАгрегат,
	|   СправочникНоменклатура.ЭтоНоваяЗапчасть,
	|   СправочникНоменклатура.РекомендованаяЦена,
	|   СправочникНоменклатура.ЦенаПроверена
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки 
	|		ПО СправочникНоменклатура.Ссылка =  РегистрНакопления1Остатки.Товар
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки 
	|	ПО СправочникНоменклатура.Ссылка = РезервОстатки.Товар ГДЕ ";
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка() + " ГДЕ ";
	// -- obrv 01.11.18
	
	номер = 0;
	Для Каждого строка из Таблица2 Цикл
		номер = номер + 1;
		Если номер<Количество Тогда 
			Текст1= Текст1 + "СправочникНоменклатура.Код = """+строка.код+""" ИЛИ ";	
		Иначе
			Текст1= Текст1 + "СправочникНоменклатура.Код = """+строка.код+""" ";
		КонецЕсли;
	КонецЦикла;	 
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1);
	// -- obrv 03.10.18
	Список.ТекстЗапроса = Текст1;
	// ++ obrv 03.10.18
	УстановитьПараметрыСписка();
	// -- obrv 03.10.18
	Сообщить( Текст1);
	
КонецФункции


&НаСервере
Функция Фильтр(Поиск1,Номера) Экспорт
	Перем а;
	Мас = РазбитьСтрокуНаМассивПодстрок(Поиск," ");
	Кол = Мас.Количество();
	Коды = Новый Массив();
	Запрос = Новый Запрос();
	ПоискПо = " ГДЕ ( СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск+""" ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск+"%"" ИЛИ СправочникНоменклатура.Артикул = """+Поиск+""" ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Поиск+"""
	| ИЛИ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск1+""" ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск1+"%"" ИЛИ СправочникНоменклатура.АртикулПоиск = """+Поиск1+""" ИЛИ СправочникНоменклатура.НомерПоиск = """+Поиск1+""" ИЛИ СправочникНоменклатура.Комплектность.Артикул= """+Поиск+"""  ИЛИ НомЗамены.НомерЗамены= """+Поиск+""" ИЛИ СправочникНоменклатура.Комплектность.НомерПоиск= """+Поиск1+"""
	| ";
	Если Кол > 1 Тогда
		а=0;
		ПоискПо = ПоискПо + " ИЛИ ( ";
		Пока а < Кол Цикл
			Если а = 0 Тогда
				ПоискПо = ПоискПо + " СправочникНоменклатура.Наименование ПОДОБНО ""%"+Мас[а]+"%""";
			Иначе
				ПоискПо = ПоискПо + " И СправочникНоменклатура.Наименование ПОДОБНО ""%"+Мас[а]+"%""";
			КонецЕсли;
			а = а + 1;
		КонецЦикла;
		ПоискПо = ПоискПо + " ) ";
	КонецЕсли;
	
	Если Кол > 1 Тогда
		а=0;
		Пока а < Кол Цикл
			ПоискПо = ПоискПо + " ИЛИ СправочникНоменклатура.Артикул = """+Мас[а]+"""
			|  ИЛИ СправочникНоменклатура.Код ПОДОБНО ""%"+Мас[а]+"""
			| ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Мас[а]+"""";
			а = а + 1;
		КонецЦикла;
	КонецЕсли;
	
	Номера = УдалитьПовторяющиесяЭлементыМассива(Номера);
	
	Номер1 = Номера.Количество();
	Номер2 = 0;
	Пока Номер2 < Номер1 Цикл
		ПоискПо = ПоискПо + " ИЛИ СправочникНоменклатура.Артикул = """+Номера[Номер2]+"""
		| ИЛИ НомЗамены.НомерЗамены= """+Номера[Номер2]+"""
		| ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Номера[Номер2]+"""
		| ИЛИ СправочникНоменклатура.Комплектность.Артикул= """+Номера[Номер2]+"""
		| ";
		Номер2 = Номер2 +1;
	КонецЦикла;
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| )
	| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| ЛЕВОЕ СОЕДИНЕНИЕ  Справочник.Номенклатура.НомераЗамен КАК НомЗамены ПО СправочникНоменклатура.Ссылка = НомЗамены.Ссылка
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар "+ ПоискПо;
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка() + "
	| ЛЕВОЕ СОЕДИНЕНИЕ  Справочник.Номенклатура.НомераЗамен КАК НомЗамены ПО СправочникНоменклатура.Ссылка = НомЗамены.Ссылка" + ПоискПо;
	// -- obrv 01.11.18
	
	Текст1 = Текст1 + " ) ";
	Запрос = Новый Запрос;
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1, Запрос);
	// -- obrv 03.10.18
	Запрос.Текст = Текст1;
	Если Поступление.Пустая() = Ложь Тогда
		Текст1 = Текст1 + " И РегистрНакопления1Остатки.машина = &Поступление";
		Запрос.Текст = Текст1;
		Запрос.УстановитьПараметр("Поступление",Поступление);
	КонецЕсли;
	Если podkategoria.Пустая() = Ложь Тогда 
		Текст1 = Текст1 + " И (СправочникНоменклатура.podkategoria = &podkat ИЛИ СправочникНоменклатура.ДопКат.подкат = &podkat2)";
		Запрос.Текст = Текст1;
		Запрос.УстановитьПараметр("podkat",podkategoria);
		Запрос.УстановитьПараметр("podkat2",podkategoria);
	Иначе
		Если kategoria.Пустая() = Ложь Тогда
			Если Тк = Истина Тогда
				Текст1 = Текст1 + " И ( СправочникНоменклатура.Подкатегория2 = &kat ИЛИ СправочникНоменклатура.ДопКат.кат2 = &kat)";
				Список.ТекстЗапроса= Текст1;
				// ++ obrv 03.10.18
				УстановитьПараметрыСписка();
				// -- obrv 03.10.18
				Список.Параметры.УстановитьЗначениеПараметра("kat",kategoria);
				
			Иначе
				кат = Новый Массив;
				кат.Добавить(kategoria);
				Текст1 = Текст1 + " И  ( ";
				Для Каждого стр Из kategoria.допкат Цикл
					Если кат.Найти(стр.ДопКатегория) = Неопределено Тогда
						кат.Добавить(стр.ДопКатегория);
					КонецЕсли;
					Для Каждого стр2 Из стр.ДопКатегория.допкат Цикл
						Если кат.Найти(стр2.ДопКатегория) = Неопределено Тогда
							кат.Добавить(стр2.ДопКатегория);
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				номер = 1;
				Для Каждого к Из кат Цикл
					Если номер = 1 Тогда
						Текст1 = Текст1 + "(СправочникНоменклатура.Подкатегория2 В ИЕРАРХИИ(&kat"+номер+") ИЛИ СправочникНоменклатура.ДопКат.кат2 В ИЕРАРХИИ(&kat"+номер+"))";
					Иначе
						Текст1 = Текст1 + " ИЛИ (СправочникНоменклатура.Подкатегория2 В ИЕРАРХИИ(&kat"+номер+") ИЛИ СправочникНоменклатура.ДопКат.кат2 В ИЕРАРХИИ(&kat"+номер+"))";
					КонецЕсли;
					номер = номер + 1;
				КонецЦикла;
				Текст1 = Текст1 + " ) ";
				номер = 1;
				Список.ТекстЗапроса= Текст1;
				// ++ obrv 03.10.18
				УстановитьПараметрыСписка();
				// -- obrv 03.10.18
				
				Для Каждого к Из кат Цикл
					Список.Параметры.УстановитьЗначениеПараметра("kat"+номер,к);
					номер = номер + 1;
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;  	
	КонецЕсли;
	Если нал = Истина Тогда
		Текст1 = Текст1 + " И РегистрНакопления1Остатки.КолвоОстаток > 0 ";
		Запрос.Текст = Текст1;	
	КонецЕсли;
	
	Коды = Новый Массив;
	// Скопировать параметры из динамического списка
	Для каждого Параметр Из Список.Параметры.Элементы Цикл
		Запрос.УстановитьПараметр(Параметр.Параметр, Параметр.Значение);
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Таблица2 = Результат.Выгрузить();
	Количество = Таблица2.Количество();
	Если Таблица2.Количество() < 1 Тогда
		ОчиститьПоиск();
		Сообщить("Номер не найден");
		возврат 0;
	КонецЕсли;
	рез2 = Новый Массив;
	Для каждого стр из Таблица2 Цикл
		Если рез2.Найти(стр.код) = Неопределено Тогда
			рез2.Добавить(стр.код);
		КонецЕсли;
	КонецЦикла;
	
	Текст1 = "ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка,
	|	СправочникНоменклатура.ВерсияДанных,
	|	СправочникНоменклатура.ПометкаУдаления,
	|	СправочникНоменклатура.Предопределенный,
	|	СправочникНоменклатура.Код,
	|	СправочникНоменклатура.Наименование,
	|	СправочникНоменклатура.Артикул,
	|	СправочникНоменклатура.НомерПроизводителя,
	|	СправочникНоменклатура.МестоНаСкладе,
	|	СправочникНоменклатура.Бренд,
	|	СправочникНоменклатура.АртикулПоиск,
	|	СправочникНоменклатура.НомерПоиск,
	|	СправочникНоменклатура.Фото,
	|	СправочникНоменклатура.НаименованиеПолное,
	|	СправочникНоменклатура.РекомендованаяЦена,
	|	СправочникНоменклатура.ЦенаОригинала,
	|   СправочникНоменклатура.Производитель,
	|   СправочникНоменклатура.Состояние,
	|	СправочникНоменклатура.МестоНаСкладе2,
	|	СправочникНоменклатура.Комплектность.(
	|		Ссылка,
	|		НомерСтроки,
	|		Артикул,
	|		Наименование,
	|		Количество,
	|		Комментарий,
	|		НомерПоиск
	|	),
	|	РегистрНакопления1Остатки.КолвоОстаток,
	|   РезервОстатки.КолвоОстаток как КолвоОстаток1,
	|   СправочникНоменклатура.НаДиректе,
	|   СправочникНоменклатура.НаАвтолайне,
	|   СправочникНоменклатура.ЕстьТэги,
	|   СправочникНоменклатура.КрупныйАгрегат ,
	|   СправочникНоменклатура.ЭтоНоваяЗапчасть,
	|   СправочникНоменклатура.РекомендованаяЦена,
	|   СправочникНоменклатура.DirectZapolneno,
	|   СправочникНоменклатура.ЦенаПроверена
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки 
	|		ПО СправочникНоменклатура.Ссылка =  РегистрНакопления1Остатки.Товар
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки 
	|	ПО СправочникНоменклатура.Ссылка = РезервОстатки.Товар ГДЕ ";
	
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка() + " ГДЕ ";
	// -- obrv 01.11.18
	
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1);
	// -- obrv 03.10.18
	номер = 0;
	Для Каждого строка из рез2 Цикл
		номер = номер + 1;
		Если номер<рез2.Количество() Тогда 
			Текст1= Текст1 + "СправочникНоменклатура.Код = """+строка+""" ИЛИ ";	
		Иначе
			Текст1= Текст1 + "СправочникНоменклатура.Код = """+строка+""" ";
		КонецЕсли;
	КонецЦикла;	 
	Список.ТекстЗапроса = Текст1;
	// ++ obrv 03.10.18
	УстановитьПараметрыСписка();
	// -- obrv 03.10.18
КонецФункции


&НаСервере
Функция НачатьПоиск2(Поиск1) Экспорт 
	// Вставить содержимое обработчика.
	ЭтоСкания = ЛОЖЬ;
	ЭтоЗамена = ЛОЖЬ;
	Запрос = Новый Запрос();
	Номера = Новый Массив();
	НомераВр = Новый Массив();
	Номера.Добавить(Поиск1);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НомераСкания.Ссылка,
	|	НомераСкания.Код КАК Код,
	|	НомераСкания.Наименование,
	|	НомераСкания.НомерСкания КАК НомерСкания,
	|	НомераСкания.НомерЗамена КАК НомерЗамена,
	|	НомераСкания.Представление
	|ИЗ
	|	Справочник.НомераСкания КАК НомераСкания
	|ГДЕ
	|	НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск 
	|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск1
	|	ИЛИ НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск2
	|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск3
	|УПОРЯДОЧИТЬ ПО Код";
	Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
	Запрос.УстановитьПараметр("ПарамПоиск1","%/"+Поиск+"/%");
	Запрос.УстановитьПараметр("ПарамПоиск2",Поиск1);
	Запрос.УстановитьПараметр("ПарамПоиск3","%/"+Поиск1+"/%");
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
	Иначе
		ЭтоСкания = Истина; 
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Номера.Добавить(Выборка.НомерСкания);
			НомераВр = РазбитьСтрокуНаМассивПодстрок(Выборка.НомерЗамена,"/");
			Номер1 = НомераВр.Количество();
			Номер2 = 0;
			Пока Номер2<Номер1 Цикл
				Если СтрДлина(НомераВр[Номер2]) > 3 Тогда
					Номера.Добавить(НомераВр[Номер2]);
				КонецЕсли;
				Номер2 = Номер2 + 1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НомераЗамен.Ссылка,
	|	НомераЗамен.ВерсияДанных,
	|	НомераЗамен.ПометкаУдаления,
	|	НомераЗамен.Предопределенный,
	|	НомераЗамен.Код,
	|	НомераЗамен.Наименование,
	|	НомераЗамен.СканияКод,
	|	НомераЗамен.НомерСкания,
	|	НомераЗамен.НомерПоиск,
	|	НомераЗамен.НомерПолный,
	|	НомераЗамен.Бренд,
	|	НомераЗамен.Представление
	|ИЗ
	|	Справочник.НомераЗамен КАК НомераЗамен
	|ГДЕ
	|	НомераЗамен.НомерСкания ПОДОБНО &ПарамПоиск
	|	ИЛИ НомераЗамен.НомерПолный ПОДОБНО &ПарамПоиск
	|	ИЛИ НомераЗамен.НомерСкания ПОДОБНО &ПарамПоиск1
	|	ИЛИ НомераЗамен.НомерПоиск ПОДОБНО &ПарамПоиск1";
	Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
	Запрос.УстановитьПараметр("ПарамПоиск1",Поиск1);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
	Иначе
		ЭтоЗамена = Истина; 
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Номера.Добавить(Выборка.НомерСкания);
		КонецЦикла;
	КонецЕсли;
	
	Если ЭтоЗамена ИЛИ ЭтоСкания Тогда
		
		ПоискПо = "";
		Номер1 = Номера.Количество();
		Номер2 = 0;
		Пока Номер2 < Номер1 Цикл
			ПоискПо = ПоискПо + " ИЛИ НомераЗамен.НомерСкания = """+Номера[Номер2]+"""";
			Номер2 = Номер2 +1;
		КонецЦикла;
		
		Запрос.Текст = 
		"ВЫБРАТЬ DISTINCT
		|	НомераЗамен.НомерСкания как НомерСкания,
		|	НомераЗамен.НомерПолный,
		|	НомераЗамен.НомерПоиск как НомерПоиск
		|ИЗ
		|	Справочник.НомераЗамен КАК НомераЗамен
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераСкания КАК НомераСкания
		|		ПО НомераЗамен.НомерСкания = НомераСкания.Код
		|ГДЕ
		|	НомераЗамен.НомерСкания ПОДОБНО &ПарамПоиск
		|			ИЛИ НомераЗамен.НомерПоиск ПОДОБНО &ПарамПоиск1 "+ПоискПо;
		Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
		Запрос.УстановитьПараметр("ПарамПоиск1",Поиск1);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			
		Иначе 
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Номера.Добавить(Выборка.НомерСкания);
				Номера.Добавить(Выборка.НомерПоиск);
			КонецЦикла;
		КонецЕсли;
		
		Если ЭтоСкания Тогда
			Запрос.Текст=
			"ВЫБРАТЬ
			|	НомераСкания.Ссылка,
			|	НомераСкания.Код КАК Код,
			|	НомераСкания.Наименование,
			|	НомераСкания.НомерСкания КАК НомерСкания,
			|	НомераСкания.НомерЗамена КАК НомерЗамена,
			|	НомераСкания.Представление
			|ИЗ
			|	Справочник.НомераСкания КАК НомераСкания
			|ГДЕ
			|	НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск 
			|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск1
			|	ИЛИ НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск1 
			|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск2
			|УПОРЯДОЧИТЬ ПО Код";
			Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
			Запрос.УстановитьПараметр("ПарамПоиск1","%/"+Поиск+"/%");
			Запрос.УстановитьПараметр("ПарамПоиск2",Поиск1);
			Запрос.УстановитьПараметр("ПарамПоиск3","%/"+Поиск1+"/%");
		Иначе
			ПоискПо = "";
			Номер1 = Номера.Количество();
			Номер2 = 0;
			Пока Номер2 < Номер1 Цикл
				ПоискПо = ПоискПо + " ИЛИ НомераСкания.НомерСкания = """+Номера[Номер2]+""" ИЛИ НомераСкания.НомерЗамена ПОДОБНО ""%/"+Номера[Номер2]+"/%""";
				Номер2 = Номер2 +1;
			КонецЦикла;
			
			Если ЭтоЗамена Тогда
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	НомераСкания.Ссылка,
				|	НомераСкания.Код КАК Код,
				|	НомераСкания.Наименование,
				|	НомераСкания.НомерСкания КАК НомерСкания,
				|	НомераСкания.НомерЗамена КАК НомерЗамена,
				|	НомераСкания.Представление
				|ИЗ
				|	Справочник.НомераСкания КАК НомераСкания
				|ГДЕ
				|	НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск 
				|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск1
				|	ИЛИ НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск2 
				|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск3" + ПоискПо;
				Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
				Запрос.УстановитьПараметр("ПарамПоиск1","%/"+Поиск+"/%");
				Запрос.УстановитьПараметр("ПарамПоиск2",Поиск1);
				Запрос.УстановитьПараметр("ПарамПоиск3","%/"+Поиск1+"/%");
			КонецЕсли;
		КонецЕсли;
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			
		Иначе 
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Номера.Добавить(Выборка.НомерСкания);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ВОЗВРАТ Номера; 	 
КонецФункции


&НаСервере
Функция РазбитьСтрокуНаМассивПодстрок(ИсходнаяСтрока,РазделительСтрок)
	СтрокаДляРазбора = ИсходнаяСтрока;
	СтрокаДляРазбора = СтрЗаменить(СтрокаДляРазбора, РазделительСтрок, Символы.ПС);
	МассивСтрок = новый Массив;
	КолвоСтрок = СтрЧислоСтрок(СтрокаДляРазбора);
	Для НомСтр = 1 По КолвоСтрок Цикл
		МассивСтрок.Добавить(СтрПолучитьСтроку(СтрокаДляРазбора, НомСтр));
	КонецЦикла;
	Возврат МассивСтрок;
КонецФункции

&НаСервере
Функция УдалитьПовторяющиесяЭлементыМассива(Массив) 
	ТекущийИндекс = 0; 
	ВсегоЭлементов = Массив.Количество(); 
	Пока ТекущийИндекс < ВсегоЭлементов Цикл 
		Индекс2 = ТекущийИндекс + 1; 
		Пока Индекс2 < ВсегоЭлементов Цикл 
			Если Массив[Индекс2] = Массив[ТекущийИндекс] Тогда 
				Массив.Удалить(Индекс2); 
				ВсегоЭлементов = ВсегоЭлементов - 1; 
			Иначе 
				Индекс2 = Индекс2 + 1; 
			КонецЕсли; 
		КонецЦикла; 
		ТекущийИндекс = ТекущийИндекс + 1; 
	КонецЦикла; 
	Возврат Массив; 
КонецФункции    

&НаКлиенте
Процедура очистить(Команда)
	// Вставить содержимое обработчика.
	ОчиститьПоиск();
	// ++ obrv 05.10.18
	СписокПриАктивизацииСтроки(Элементы.Список);	
	// -- obrv 05.10.18
КонецПроцедуры

&НаСервере
Процедура ОчиститьПоиск()
	Бренд = Справочники.Бренд.ПустаяСсылка();
	kategoria = Справочники.Категории.ПустаяСсылка();
	podkategoria = Справочники.Podkategorii.ПустаяСсылка();
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.МестоНаСкладе2,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.Фото,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	|   РезервОстатки.КолвоОстаток как КолвоОстаток1,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| ),
	|   СправочникНоменклатура.НаДиректе,
	|   СправочникНоменклатура.НаАвтолайне,
	|   СправочникНоменклатура.ЕстьТэги,
	|   СправочникНоменклатура.КрупныйАгрегат,
	|   СправочникНоменклатура.ЭтоНоваяЗапчасть,
	|   СправочникНоменклатура.РекомендованаяЦена,
	|   СправочникНоменклатура.DirectZapolneno,
	|   СправочникНоменклатура.Производитель,
	|   СправочникНоменклатура.Состояние,
	|   СправочникНоменклатура.ЦенаПроверена
	| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар 
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки 
	|	ПО СправочникНоменклатура.Ссылка = РезервОстатки.Товар ";
	
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка();
	// -- obrv 01.11.18
	
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1);
	// -- obrv 03.10.18
	Список.ТекстЗапроса= Текст1;
	// ++ obrv 03.10.18
	УстановитьПараметрыСписка();
	// -- obrv 03.10.18
	Поступление = Справочники.Машины.ПустаяСсылка();
	kategoria = Справочники.Категории.ПустаяСсылка();
	podkategoria = Справочники.Podkategorii.ПустаяСсылка();	
КонецПроцедуры


&НаСервере
Функция НайтиПоКод(Код)
	Возврат Справочники.Номенклатура.НайтиПоКоду(Код)
КонецФункции	

&НаСервере
Функция СоздатьИзКода()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НомераСкания.Наименование,
	|	НомераСкания.НомерСкания
	|ИЗ
	|	Справочник.НомераСкания КАК НомераСкания
	|ГДЕ
	|	НомераСкания.НомерСкания = &НомерСкания";
	Запрос.УстановитьПараметр("НомерСкания",Поиск);
	Результат = Запрос.Выполнить();
	Табл = Результат.Выгрузить();
	Наименование = "";
	Номер = "";
	Для Каждого Строка Из Табл Цикл
		Наименование = Строка.Наименование;
		Номер = Строка.НомерСкания;
	КонецЦикла;
	Если Наименование = "" Тогда
		Возврат Null;
	КонецЕсли;
	ЦенОр = 0;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЦенаОригинала.Цена
	|ИЗ
	|	Справочник.ЦенаОригинала КАК ЦенаОригинала
	|ГДЕ
	|	ЦенаОригинала.Артикул = &Артикул";
	Запрос.УстановитьПараметр("Артикул",Поиск);
	Результат = Запрос.Выполнить();
	Табл = Результат.Выгрузить();
	Для Каждого Строка Из Табл Цикл
		ЦенОр = Строка.Цена;
	КонецЦикла;
	об = Справочники.Номенклатура.СоздатьЭлемент();
	об.Артикул = Номер;
	об.АртикулПоиск = Номер;
	об.Бренд = Справочники.Бренд.НайтиПоНаименованию("Scania");
	об.МестоНаСкладе = "0";
	об.Наименование = Наименование;
	об.НомерПроизводителя = Номер;
	об.НомерПоиск = Номер;
	об.ЦенаОригинала = ЦенОр;
	об.ДатаСоздания = ТекущаяДата();
	об.КтоСоздал = НайтиПользователя();
	об.Записать();
	
	Возврат об.Ссылка;
КонецФункции




&НаСервереБезКонтекста
Функция ПолучитьСвойстваДокумента(ДокСсылка)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокСсылка, "Новые");
	
КонецФункции // ()

&НаСервере
Функция НайтиДок(Код)
	Возврат Документы.ПоступлениеЗапчастей.НайтиПоНомеру(Код);
КонецФункции	

&НаСервере
Функция ПроверкаНаличия(Поиск33)
	RegExp = Новый COMОбъект("VBScript.RegExp");
	
	RegExp.IgnoreCase = Ложь; //Игнорировать регистр
	RegExp.Global = Истина; //Поиск всех вхождений шаблона
	RegExp.MultiLine = Истина; //Многострочный режим
	
	RegExp.Pattern = "\W";
	RegExp.Pattern = "[^a-zA-Zа-яА-Я_0-9]";
	стр1=RegExp.Replace( Поиск33,"");  
	Номера = Новый Массив();
	Номера = НачатьПоиск2(стр1);
	RegExp = Новый COMОбъект("VBScript.RegExp");
	Возврат ПоискВнутренний(стр1, Номера);
	
КонецФункции

&НаСервере
Функция  ПоискВнутренний(Поиск1,Номера)
	Перем а;
	Мас = РазбитьСтрокуНаМассивПодстрок(Поиск," ");
	Кол = Мас.Количество();
	Коды = Новый Массив();
	Запрос = Новый Запрос();
	ПоискПо = " ГДЕ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск+""" ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск+"%"" ИЛИ СправочникНоменклатура.Артикул = """+Поиск+""" ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Поиск+"""
	| ИЛИ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск1+""" ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск1+"%"" ИЛИ СправочникНоменклатура.АртикулПоиск = """+Поиск1+""" ИЛИ СправочникНоменклатура.НомерПоиск = """+Поиск1+""" ИЛИ СправочникНоменклатура.Комплектность.Артикул= """+Поиск+""" ИЛИ СправочникНоменклатура.Комплектность.НомерПоиск= """+Поиск1+"""
	| ";
	Если Кол > 1 Тогда
		а=0;
		ПоискПо = ПоискПо + " ИЛИ ( ";
		Пока а < Кол Цикл
			Если а = 0 Тогда
				ПоискПо = ПоискПо + " СправочникНоменклатура.Наименование ПОДОБНО ""%"+Мас[а]+"%""";
			Иначе
				ПоискПо = ПоискПо + " И СправочникНоменклатура.Наименование ПОДОБНО ""%"+Мас[а]+"%""";
			КонецЕсли;
			а = а + 1;
		КонецЦикла;
		ПоискПо = ПоискПо + " ) ";
	КонецЕсли;
	
	Номера = УдалитьПовторяющиесяЭлементыМассива(Номера);
	
	Номер1 = Номера.Количество();
	Номер2 = 0;
	Пока Номер2 < Номер1 Цикл
		ПоискПо = ПоискПо + " ИЛИ СправочникНоменклатура.Артикул = """+Номера[Номер2]+""" ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Номера[Номер2]+""" ИЛИ СправочникНоменклатура.Комплектность.Артикул= """+Номера[Номер2]+"""
		| ";
		Номер2 = Номер2 +1;
	КонецЦикла;
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| )
	| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар "+ ПоискПо;
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка() + " " + ПоискПо;
	// -- obrv 01.11.18
	
	Запрос = Новый Запрос;
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1, Запрос);
	// -- obrv 03.10.18
	Запрос.Текст= Текст1;
	Результат = Запрос.Выполнить();
	Таблица = Результат.Выгрузить();
	Возврат Таблица.Количество();
КонецФункции




&НаСервере
Функция НайтиДокПродажа(Код)
	Возврат Документы.ПродажаЗапчастей.НайтиПоНомеру(Код);
КонецФункции

&НаСервере
Функция НайтиДокПредСчет(Код)
	Возврат Документы.ПредварительныйСчет.НайтиПоНомеру(Код);
КонецФункции


&НаСервере
Функция НайтиДокРезерв(Код)
	Возврат Документы.РезервЗапчастей.НайтиПоНомеру(Код);
КонецФункции



&НаСервере
Функция ПолучитьМакет(название)
	Возврат  Отчеты.Отчет1.ПолучитьМакет(название);
КонецФункции

&НаСервере
Функция табл(код)
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	РегистрНакопления1Остатки.КолвоОстаток
	|ИЗ
	|	РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|ГДЕ
	| РегистрНакопления1Остатки.Товар.Код = &Код";
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Запрос.Текст, Запрос);
	// -- obrv 03.10.18
	Запрос.УстановитьПараметр("Код",Код);
	результат = Запрос.Выполнить();
	табл = результат.Выгрузить();
	для каждого стр из табл цикл
		возврат стр.КолвоОстаток;
	КонецЦикла;
	Возврат 0;
КонецФункции


&НаСервере
Функция НайтиПользователя()
	// ++ obrv 16.01.18
	//Возврат Справочники.Пользователи.НайтиПоНаименованию(ПолноеИмяПользователя());
	Возврат ПользователиКлиентСервер.ТекущийПользователь();
	// -- obrv 16.01.18
КонецФункции


&НаСервере
Функция КолвоАвтолайн()
	запр = Новый Запрос;
	запр.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Номенклатура.НаАвтолайне) КАК НаАвтолайне
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.НаАвтолайне = ИСТИНА"  ;
	Возврат запр.Выполнить().Выгрузить().Итог("НаАвтолайне");
КонецФункции

&НаСервере
Функция КолвоФото()
	запр = Новый Запрос;
	запр.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Номенклатура.Фото) КАК Фото
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Фото = ИСТИНА"  ;
	Возврат запр.Выполнить().Выгрузить().Итог("Фото");
КонецФункции


&НаКлиенте
Процедура автолайн(Команда)
	Сообщить("Категория проставлена у "+КолвоАвтолайн()+" деталей");
КонецПроцедуры






&НаКлиенте
Процедура kategoriaПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	changeKat();
КонецПроцедуры

&НаСервере
Функция changeKat()
	Текст1 = 
	"ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка,
	|	СправочникНоменклатура.ВерсияДанных,
	|	СправочникНоменклатура.ПометкаУдаления,
	|	СправочникНоменклатура.Предопределенный,
	|	СправочникНоменклатура.Код,
	|	СправочникНоменклатура.Наименование,
	|	СправочникНоменклатура.Артикул,
	|	СправочникНоменклатура.НомерПроизводителя,
	|	СправочникНоменклатура.МестоНаСкладе,
	|	СправочникНоменклатура.МестоНаСкладе2,
	|	СправочникНоменклатура.Бренд,
	|	СправочникНоменклатура.АртикулПоиск,
	|	СправочникНоменклатура.НомерПоиск,
	|   СправочникНоменклатура.Производитель,
	|   СправочникНоменклатура.Состояние,
	|	СправочникНоменклатура.Фото,
	|	СправочникНоменклатура.НаименованиеПолное,
	|	РегистрНакопления1Остатки.КолвоОстаток,
	|	РезервОстатки.КолвоОстаток КАК КолвоОстаток1,
	|	СправочникНоменклатура.Комплектность.(
	|		Ссылка,
	|		НомерСтроки,
	|		Артикул,
	|		Наименование,
	|		Количество,
	|		Комментарий,
	|		НомерПоиск
	|	),
	|	СправочникНоменклатура.НаДиректе,
	|	СправочникНоменклатура.НаАвтолайне,
	|	СправочникНоменклатура.ЕстьТэги,
	|	СправочникНоменклатура.КрупныйАгрегат,
	|	СправочникНоменклатура.ЭтоНоваяЗапчасть,
	|	СправочникНоменклатура.РекомендованаяЦена,
	|	СправочникНоменклатура.DirectZapolneno,
	|   СправочникНоменклатура.ЦенаПроверена
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|		ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки
	|		ПО СправочникНоменклатура.Ссылка = РезервОстатки.Товар";
	Если нал = Истина Тогда
		толькоНал = " РегистрНакопления1Остатки.КолвоОстаток > 0 И ";
	КонецЕсли;
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка();
	// -- obrv 01.11.18
	
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1);
	// -- obrv 03.10.18
	Если kategoria.Пустая() = Ложь Тогда 
		Если Тк = Истина Тогда
			Текст1 = Текст1 + " ГДЕ "+ толькоНал +" ( СправочникНоменклатура.Подкатегория2 = &kat ИЛИ СправочникНоменклатура.ДопКат.кат2 = &kat)";
			Список.ТекстЗапроса= Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			Список.Параметры.УстановитьЗначениеПараметра("kat",kategoria);
			
		Иначе
			кат = Новый Массив;
			кат.Добавить(kategoria);
			Текст1 = Текст1 + " ГДЕ "+ толькоНал + " ( ";
			Для Каждого стр Из kategoria.допкат Цикл
				Если кат.Найти(стр.ДопКатегория) = Неопределено Тогда
					кат.Добавить(стр.ДопКатегория);
				КонецЕсли;
				Для Каждого стр2 Из стр.ДопКатегория.допкат Цикл
					Если кат.Найти(стр2.ДопКатегория) = Неопределено Тогда
						кат.Добавить(стр2.ДопКатегория);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			номер = 1;
			Для Каждого к Из кат Цикл
				Если номер = 1 Тогда
					Текст1 = Текст1 + "(СправочникНоменклатура.Подкатегория2 В ИЕРАРХИИ(&kat"+номер+") ИЛИ СправочникНоменклатура.ДопКат.кат2 В ИЕРАРХИИ(&kat"+номер+"))";
				Иначе
					Текст1 = Текст1 + " ИЛИ (СправочникНоменклатура.Подкатегория2 В ИЕРАРХИИ(&kat"+номер+") ИЛИ СправочникНоменклатура.ДопКат.кат2 В ИЕРАРХИИ(&kat"+номер+"))";
				КонецЕсли;
				номер = номер + 1;
			КонецЦикла;
			Текст1 = Текст1 + " ) ";
			номер = 1;
			Список.ТекстЗапроса= Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			
			Для Каждого к Из кат Цикл
				Список.Параметры.УстановитьЗначениеПараметра("kat"+номер,к);
				номер = номер + 1;
			КонецЦикла;
			
		КонецЕсли;
		
		Если безп = Истина Тогда
			Текст1 = Текст1 + " И СправочникНоменклатура.podkategoria = &ПС ";
			Список.ТекстЗапроса= Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			Список.Параметры.УстановитьЗначениеПараметра("ПС",Справочники.Podkategorii.ПустаяСсылка());
			
		КонецЕсли;
		
		Если Поступление.Пустая() = Ложь Тогда
			Текст1 = Текст1 + " И РегистрНакопления1Остатки.машина = &Поступление";
			Список.ТекстЗапроса= Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			Список.Параметры.УстановитьЗначениеПараметра("Поступление",Поступление);
		КонецЕсли;
	Иначе
		Список.ТекстЗапроса= Текст1;
		Если Поступление.Пустая() = Ложь Тогда
			Текст1 = Текст1 + " ГДЕ "+ толькоНал +" РегистрНакопления1Остатки.машина = &Поступление";
			Список.ТекстЗапроса= Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			Список.Параметры.УстановитьЗначениеПараметра("Поступление",Поступление);
		КонецЕсли;
	КонецЕсли;
	ObnTmppath();
КонецФункции

&НаСервере
Процедура ObnTmppath()
	TmpPath = "";
	Если kategoria <> Справочники.Категории.ПустаяСсылка() Тогда
		ccat =  kategoria;
		Пока ccat.Родитель <> Справочники.Категории.ПустаяСсылка() Цикл
			TmpPath = " - "+ccat.Наименование + TmpPath;
			ccat = ccat.Родитель;
		КонецЦикла;
		TmpPath = ccat.Наименование + TmpPath;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура podkategoriaПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	changePodKat();
КонецПроцедуры

&НаСервере
Функция changePodKat()
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.МестоНаСкладе2,
	|   СправочникНоменклатура.Производитель,
	|   СправочникНоменклатура.Состояние,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.Фото,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	|   РезервОстатки.КолвоОстаток как КолвоОстаток1,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| ),
	|   СправочникНоменклатура.НаДиректе,
	|   СправочникНоменклатура.НаАвтолайне,
	|   СправочникНоменклатура.ЕстьТэги,
	|   СправочникНоменклатура.КрупныйАгрегат,
	|   СправочникНоменклатура.ЭтоНоваяЗапчасть,
	|   СправочникНоменклатура.РекомендованаяЦена,
	|   СправочникНоменклатура.DirectZapolneno,
	|   СправочникНоменклатура.ЦенаПроверена
	| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар 
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки 
	|	ПО СправочникНоменклатура.Ссылка = РезервОстатки.Товар ";
	толькоНал = "";
	Если нал = Истина Тогда
		толькоНал = " РегистрНакопления1Остатки.КолвоОстаток > 0 И ";
	КонецЕсли;
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка();
	// -- obrv 01.11.18
	
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1);
	// -- obrv 03.10.18
	Если podkategoria.Пустая() = Ложь Тогда 
		Текст1 = Текст1 + " ГДЕ "+ толькоНал +" (СправочникНоменклатура.podkategoria = &podkat ИЛИ СправочникНоменклатура.ДопКат.подкат = &podkat2)"		;
		Список.ТекстЗапроса= Текст1;
		// ++ obrv 03.10.18
		УстановитьПараметрыСписка();
		// -- obrv 03.10.18
		Список.Параметры.УстановитьЗначениеПараметра("podkat",podkategoria);
		Список.Параметры.УстановитьЗначениеПараметра("podkat2",podkategoria);  
		Если Поступление.Пустая() = Ложь Тогда
			запрос = Новый Запрос;
			запрос.Текст = "ВЫБРАТЬ
			|	ПоступлениеЗапчастей.Таблица.(
			|		Товар.Код как КД
			|	)
			|ИЗ
			|	Документ.ПоступлениеЗапчастей КАК ПоступлениеЗапчастей
			|ГДЕ
			|	ПоступлениеЗапчастей.Машина = &Машина";
			запрос.УстановитьПараметр("Машина",Поступление);
			рез = запрос.Выполнить().Выгрузить();
			запр = "";
			номер = 0;
			Для Каждого строка из рез Цикл
				Для Каждого стр из строка.Таблица Цикл
					номер = номер + 1;
					Если номер = 1 Тогда 
						запр= запр + " СправочникНоменклатура.Код = """+стр.КД+""" ";	
					Иначе
						запр= запр + " ИЛИ СправочникНоменклатура.Код = """+стр.КД+""" ";
					КонецЕсли;
				КонецЦикла
			КонецЦикла;	
			Текст1 = Текст1 + " И ( " + запр + ")";
			Список.ТекстЗапроса= Текст1; 
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
		КонецЕсли;
	Иначе
		Если kategoria.Пустая() = Ложь Тогда 
			Текст1 = Текст1 + " ГДЕ "+ толькоНал +" СправочникНоменклатура.Категория = &kat"		;
			Список.ТекстЗапроса= Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			Список.Параметры.УстановитьЗначениеПараметра("kat",kategoria);
			Если Поступление.Пустая() = Ложь Тогда
				запрос = Новый Запрос;
				запрос.Текст = "ВЫБРАТЬ
				|	ПоступлениеЗапчастей.Таблица.(
				|		Товар.Код как КД
				|	)
				|ИЗ
				|	Документ.ПоступлениеЗапчастей КАК ПоступлениеЗапчастей
				|ГДЕ
				|	ПоступлениеЗапчастей.Машина = &Машина";
				запрос.УстановитьПараметр("Машина",Поступление);
				рез = запрос.Выполнить().Выгрузить();
				запр = "";
				номер = 0;
				Для Каждого строка из рез Цикл
					Для Каждого стр из строка.Таблица Цикл
						номер = номер + 1;
						Если номер = 1 Тогда 
							запр= запр + " СправочникНоменклатура.Код = """+стр.КД+""" ";	
						Иначе
							запр= запр + " ИЛИ СправочникНоменклатура.Код = """+стр.КД+""" ";
						КонецЕсли;
					КонецЦикла
				КонецЦикла;	
				Текст1 = Текст1 + " И ( " + запр + ")";
				Список.ТекстЗапроса= Текст1;
				// ++ obrv 03.10.18
				УстановитьПараметрыСписка();
				// -- obrv 03.10.18
				
			КонецЕсли;
		Иначе
			Список.ТекстЗапроса= Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			Если Поступление.Пустая() = Ложь Тогда
				запрос = Новый Запрос;
				запрос.Текст = "ВЫБРАТЬ
				|	ПоступлениеЗапчастей.Таблица.(
				|		Товар.Код как КД
				|	)
				|ИЗ
				|	Документ.ПоступлениеЗапчастей КАК ПоступлениеЗапчастей
				|ГДЕ
				|	ПоступлениеЗапчастей.Машина = &Машина";
				запрос.УстановитьПараметр("Машина",Поступление);
				рез = запрос.Выполнить().Выгрузить();
				запр = "";
				номер = 0;
				Для Каждого строка из рез Цикл
					Для Каждого стр из строка.Таблица Цикл    
						номер = номер + 1;
						Если номер = 1 Тогда 
							запр= запр + " СправочникНоменклатура.Код = """+стр.КД+""" ";	
						Иначе
							запр= запр + " ИЛИ СправочникНоменклатура.Код = """+стр.КД+""" ";
						КонецЕсли;
					КонецЦикла
				КонецЦикла;	
				Текст1 = Текст1 + " ГДЕ "+ толькоНал +запр;
				Список.ТекстЗапроса= Текст1;
				// ++ obrv 03.10.18
				УстановитьПараметрыСписка();
				// -- obrv 03.10.18
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
КонецФункции



&НаСервере
Функция servBezPodkategorii()
	
	Текст1 = 
	"ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка,
	|	СправочникНоменклатура.ВерсияДанных,
	|	СправочникНоменклатура.ПометкаУдаления,
	|	СправочникНоменклатура.Предопределенный,
	|   СправочникНоменклатура.Производитель,
	|   СправочникНоменклатура.Состояние,
	|	СправочникНоменклатура.Код,
	|	СправочникНоменклатура.Наименование,
	|	СправочникНоменклатура.Артикул,
	|	СправочникНоменклатура.НомерПроизводителя,
	|	СправочникНоменклатура.МестоНаСкладе,
	|	СправочникНоменклатура.Бренд,
	|	СправочникНоменклатура.АртикулПоиск,
	|	СправочникНоменклатура.НомерПоиск,
	|	СправочникНоменклатура.Фото,
	|	СправочникНоменклатура.НаименованиеПолное,
	|	РегистрНакопления1Остатки.КолвоОстаток,
	|	РезервОстатки.КолвоОстаток КАК КолвоОстаток1,
	|	СправочникНоменклатура.Комплектность.(
	|		Ссылка,
	|		НомерСтроки,
	|		Артикул,
	|		Наименование,
	|		Количество,
	|		Комментарий,
	|		НомерПоиск
	|	),
	|	СправочникНоменклатура.НаДиректе,
	|	СправочникНоменклатура.НаАвтолайне,
	|	СправочникНоменклатура.ЕстьТэги,
	|	СправочникНоменклатура.КрупныйАгрегат,
	|   СправочникНоменклатура.ЭтоНоваяЗапчасть,
	|   СправочникНоменклатура.РекомендованаяЦена,
	|   СправочникНоменклатура.DirectZapolneno,
	|   СправочникНоменклатура.ЦенаПроверена
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|		ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки
	|		ПО СправочникНоменклатура.Ссылка = РезервОстатки.Товар
	|ГДЕ
	|	СправочникНоменклатура.podkategoria = ЗНАЧЕНИЕ(Справочник.Podkategorii.ПустаяСсылка) и СправочникНоменклатура.Категория = &kat";
	
	// ++ obrv 01.11.18
	ТекстЗапроса = ТекстЗапросаСписка() + "
	|ГДЕ
	|	СправочникНоменклатура.podkategoria = ЗНАЧЕНИЕ(Справочник.Podkategorii.ПустаяСсылка) и СправочникНоменклатура.Категория = &kat";
	// -- obrv 01.11.18
	
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1);
	// -- obrv 03.10.18
	Список.ТекстЗапроса= Текст1;	
	// ++ obrv 03.10.18
	УстановитьПараметрыСписка();
	// -- obrv 03.10.18
	Список.Параметры.УстановитьЗначениеПараметра("kat",kategoria);
КонецФункции

&НаКлиенте
Процедура Бренд1ПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	changeБренд();
КонецПроцедуры

&НаСервере
Функция changeБренд()
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	|   СправочникНоменклатура.Производитель,
	|   СправочникНоменклатура.Состояние,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.МестоНаСкладе2,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.Фото,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	|   РезервОстатки.КолвоОстаток как КолвоОстаток1,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| ),
	|   СправочникНоменклатура.НаДиректе,
	|   СправочникНоменклатура.НаАвтолайне,
	|   СправочникНоменклатура.ЕстьТэги,
	|   СправочникНоменклатура.КрупныйАгрегат,
	|   СправочникНоменклатура.ЭтоНоваяЗапчасть,
	|   СправочникНоменклатура.РекомендованаяЦена,
	|   СправочникНоменклатура.DirectZapolneno,
	|   СправочникНоменклатура.ЦенаПроверена
	| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар 
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки 
	|	ПО СправочникНоменклатура.Ссылка = РезервОстатки.Товар ";
	толькоНал = "";
	Если нал = Истина Тогда
		толькоНал = " РегистрНакопления1Остатки.КолвоОстаток > 0 И ";
	КонецЕсли;
	
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка();
	// -- obrv 01.11.18
	
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1);
	// -- obrv 03.10.18
	
	Если Бренд.Пустая() = Ложь Тогда
		Текст1 = Текст1 + " ГДЕ "+ толькоНал +" СправочникНоменклатура.Бренд = &бренд "		;
		Список.ТекстЗапроса= Текст1;
		// ++ obrv 03.10.18
		УстановитьПараметрыСписка();
		// -- obrv 03.10.18
		Список.Параметры.УстановитьЗначениеПараметра("бренд",Бренд);
		Если podkategoria.Пустая() = Ложь Тогда 
			Текст1 = Текст1 + " И ( СправочникНоменклатура.podkategoria = &podkat ИЛИ СправочникНоменклатура.ДопКат.подкат = &podkat2) "		;
			Список.ТекстЗапроса= Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			Список.Параметры.УстановитьЗначениеПараметра("podkat",podkategoria);
			Список.Параметры.УстановитьЗначениеПараметра("podkat2",podkategoria);
		Иначе
			Если kategoria.Пустая() = Ложь Тогда 
				Текст1 = Текст1 + " И СправочникНоменклатура.Категория = &kat"		;
				Список.ТекстЗапроса= Текст1;
				// ++ obrv 03.10.18
				УстановитьПараметрыСписка();
				// -- obrv 03.10.18
				Список.Параметры.УстановитьЗначениеПараметра("kat",kategoria);
			КонецЕсли;  	
		КонецЕсли;
	Иначе
		Если podkategoria.Пустая() = Ложь Тогда 
			Текст1 = Текст1 + " ГДЕ "+ толькоНал +" (СправочникНоменклатура.podkategoria = &podkat ИЛИ СправочникНоменклатура.ДопКат.подкат = &podkat2) "		;
			Список.ТекстЗапроса= Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			Список.Параметры.УстановитьЗначениеПараметра("podkat",podkategoria);
			Список.Параметры.УстановитьЗначениеПараметра("podkat2",podkategoria);
		Иначе
			Если kategoria.Пустая() = Ложь Тогда 
				Текст1 = Текст1 + " ГДЕ СправочникНоменклатура.Категория = &kat"		;
				Список.ТекстЗапроса= Текст1;
				// ++ obrv 03.10.18
				УстановитьПараметрыСписка();
				// -- obrv 03.10.18
				Список.Параметры.УстановитьЗначениеПараметра("kat",kategoria);
			Иначе
				Список.ТекстЗапроса= Текст1;	
				// ++ obrv 03.10.18
				УстановитьПараметрыСписка();
				// -- obrv 03.10.18
			КонецЕсли;  	
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура налПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	налИзм();
	
	// ++ obrv 05.10.18
	СписокПриАктивизацииСтроки(Элементы.Список);	
	// -- obrv 05.10.18
КонецПроцедуры


&НаСервере
Процедура налИзм() 
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	|   СправочникНоменклатура.Производитель,
	|   СправочникНоменклатура.Состояние,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.МестоНаСкладе2,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.Фото,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	|   РезервОстатки.КолвоОстаток как КолвоОстаток1,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| ),
	|   СправочникНоменклатура.НаДиректе,
	|   СправочникНоменклатура.НаАвтолайне,
	|   СправочникНоменклатура.ЕстьТэги,
	|   СправочникНоменклатура.КрупныйАгрегат,
	|   СправочникНоменклатура.ЭтоНоваяЗапчасть,
	|   СправочникНоменклатура.РекомендованаяЦена,
	|   СправочникНоменклатура.DirectZapolneno,
	|   СправочникНоменклатура.ЦенаПроверена
	| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар 
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки 
	|	ПО СправочникНоменклатура.Ссылка = РезервОстатки.Товар ";
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка();
	// -- obrv 01.11.18
	
	
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1);
	// -- obrv 03.10.18
	
	Список.ТекстЗапроса= Текст1;
	// ++ obrv 03.10.18
	УстановитьПараметрыСписка();
	// -- obrv 03.10.18
	п=ложь;
	Если Бренд.Пустая() = Ложь ИЛИ podkategoria.Пустая() = Ложь ИЛИ  kategoria.Пустая() = Ложь ИЛИ нал = Истина Тогда
		Текст1 = Текст1 + " ГДЕ ";
		п=Истина;
	КонецЕсли;	
	Если Поступление.Пустая() = Ложь Тогда
		Если п = Истина Тогда
			Текст1 = Текст1 + " РегистрНакопления1Остатки.машина = &Поступление";
			п=Ложь;
		Иначе
			Текст1 = Текст1 + " И РегистрНакопления1Остатки.машина = &Поступление";
		КонецЕсли;
		Список.ТекстЗапроса = Текст1;
		// ++ obrv 03.10.18
		УстановитьПараметрыСписка();
		// -- obrv 03.10.18
		Список.Параметры.УстановитьЗначениеПараметра("Поступление",Поступление);
	КонецЕсли;
	Если podkategoria.Пустая() = Ложь Тогда 
		Если п = Истина Тогда
			Текст1 = Текст1 + " (СправочникНоменклатура.podkategoria = &podkat ИЛИ СправочникНоменклатура.ДопКат.подкат = &podkat2)"		;
			
			п=Ложь;
		Иначе
			Текст1 = Текст1 + " И (СправочникНоменклатура.podkategoria = &podkat ИЛИ СправочникНоменклатура.ДопКат.подкат = &podkat2)"		;
			
		КонецЕсли;
		
		Список.ТекстЗапроса = Текст1;
		// ++ obrv 03.10.18
		УстановитьПараметрыСписка();
		// -- obrv 03.10.18
		Список.Параметры.УстановитьЗначениеПараметра("podkat",podkategoria);
		Список.Параметры.УстановитьЗначениеПараметра("podkat2",podkategoria);
	Иначе
		Если kategoria.Пустая() = Ложь Тогда 
			Если п = Истина Тогда
				Текст1 = Текст1 + " СправочникНоменклатура.Подкатегория2 В ИЕРАРХИИ(&kat)"		; 
				п=Ложь;
			Иначе
				Текст1 = Текст1 + " И СправочникНоменклатура.Подкатегория2 В ИЕРАРХИИ(&kat)"		;
			КонецЕсли;  
			Список.ТекстЗапроса = Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			Список.Параметры.УстановитьЗначениеПараметра("kat",kategoria);
		КонецЕсли;  	
	КонецЕсли;
	Если нал = Истина Тогда
		Если п = Истина Тогда
			Текст1 = Текст1 + " РегистрНакопления1Остатки.КолвоОстаток > 0 "; 
			п=Ложь;
		Иначе
			Текст1 = Текст1 + " И РегистрНакопления1Остатки.КолвоОстаток > 0 ";
		КонецЕсли; 
		
		Список.ТекстЗапроса = Текст1;	
		// ++ obrv 03.10.18
		УстановитьПараметрыСписка();
		// -- obrv 03.10.18
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура UpdatePhoto(Команда)
	// Вставить содержимое обработчика.
	// Вставить содержимое обработчика.
	ссылка = "http://adm.nntr.ru/api/updateone?id1c="+ЭтаФорма.Элементы.Список.ТекущиеДанные.Код;
	ЗапуститьПриложение(ссылка);
	
КонецПроцедуры


&НаСервере
Функция УстСтроку()
	запр = Новый Запрос;
	запр.Текст = Список.ТекстЗапроса+" Упорядочить по СправочникНоменклатура.Код";
	р1 = запр.Выполнить().Выгрузить();
	Если р1.Количество() > 0 Тогда
		Возврат р1[р1.Количество()-1].Ссылка;
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаСервере
Функция НайтиПоступлениеДокументаДляСтаройФормы(Машина, Код)
	
	///+ГомзМА 28.12.2022
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПоступлениеЗапчастей.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеЗапчастей КАК ПоступлениеЗапчастей
	|ГДЕ
	|	ПоступлениеЗапчастей.Машина = &Машина
	|	И ПоступлениеЗапчастей.Таблица.Код = &Код
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка УБЫВ
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Машина", Машина);
	Запрос.УстановитьПараметр("Код", Код);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 0 Тогда
		Для Каждого СтрокаДок Из Результат Цикл
			Возврат СтрокаДок.Ссылка;
		КонецЦикла;
	Иначе	
		Возврат 0;
	КонецЕсли;
	///-ГомзМА 28.12.2022
	
КонецФункции


&НаСервере
Функция НайтиПоступлениеДокумента(Код)
	
	///+ГомзМА 28.12.2022
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПоступлениеЗапчастей.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеЗапчастей КАК ПоступлениеЗапчастей
	|ГДЕ
	|	ПоступлениеЗапчастей.Таблица.Партия = &Код";
	
	Запрос.УстановитьПараметр("Код", Код);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 0 Тогда
		Для Каждого СтрокаДок Из Результат Цикл
			Возврат СтрокаДок.Ссылка;
		КонецЦикла;
	Иначе	
		Возврат 0;
	КонецЕсли;
	///-ГомзМА 28.12.2022
	
КонецФункции

&НаСервере
Функция НайтиНомСтрокиПоступление(Машина, Код)
	//Товар = Справочники.Номенклатура.НайтиПоКоду(Код);
	запрос = Новый Запрос;
	запрос.Текст = "ВЫБРАТЬ
	|	ПоступлениеЗапчастей.Таблица.(
	|		НомерСтроки
	|	)
	|ИЗ
	|	Документ.ПоступлениеЗапчастей КАК ПоступлениеЗапчастей
	|ГДЕ
	|	ПоступлениеЗапчастей.Машина = &Машина
	|	И ПоступлениеЗапчастей.Таблица.Код = &Товар";
	запрос.УстановитьПараметр("Машина",Машина);
	запрос.УстановитьПараметр("Товар",Код);
	рез = запрос.Выполнить().Выгрузить();
	Для Каждого стр Из рез Цикл
		Для Каждого стр2 из стр.Таблица Цикл
			возврат стр2.НомерСтроки;
		КонецЦикла;
		
	КонецЦикла;
	возврат 0;
КонецФункции

&НаСервере
Функция ВывестиДанныеСервер()
	
	данные = ДанныеДляДиректа();
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("ДляДиректа");
	ОбластьМакета = Макет.ПолучитьОбласть("шапка");
	ТабДокумент.Вывести(ОбластьМакета);
	строка =   Макет.ПолучитьОбласть("строка");
	Для Каждого стр Из данные Цикл
		строка.Параметры.код = стр.Код;
		строка.Параметры.артикул = стр.Артикул;
		строка.Параметры.название = "";
		Если СтрДлина(стр.Наименование) >= 33 Тогда
			строка.Параметры.название = "## ";	
		КонецЕсли;
		строка.Параметры.название = строка.Параметры.название + стр.Наименование;
		строка.Параметры.цена = стр.РекомендованаяЦена;
		строка.Параметры.бренд = стр.Бренд;
		НомЗам = "/"+стр.Артикул+"/"+стр.НомерПроизводителя+"/";
		Для Каждого стрК Из стр.Комплектность Цикл
			НомЗам = НомЗам + стрК.Артикул+"/";	
		КонецЦикла;
		Для Каждого стрР Из стр.НомераЗамен Цикл
			НомЗам = НомЗам + стрР.НомерЗамены+"/";	
		КонецЦикла;
		строка.Параметры.слова = НомЗам;
		ТабДокумент.Вывести(строка);
	КонецЦикла;
	
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьСервер()



&НаСервере
Функция ДанныеДляДиректа()
	Текст1 = 
	"ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка,
	|	СправочникНоменклатура.ВерсияДанных,
	|	СправочникНоменклатура.ПометкаУдаления,
	|	СправочникНоменклатура.Предопределенный,
	|	СправочникНоменклатура.Код,
	|	СправочникНоменклатура.Наименование,
	|	СправочникНоменклатура.Артикул,
	|	СправочникНоменклатура.НомерПроизводителя,
	|	СправочникНоменклатура.МестоНаСкладе,
	|	СправочникНоменклатура.Бренд,
	|	СправочникНоменклатура.АртикулПоиск,
	|	СправочникНоменклатура.НомерПоиск,
	|	СправочникНоменклатура.НаименованиеПолное,
	|	РегистрНакопления1Остатки.КолвоОстаток,
	|	СправочникНоменклатура.Комплектность.(
	|		Ссылка,
	|		НомерСтроки,
	|		Артикул,
	|		Наименование,
	|		Количество,
	|		Комментарий,
	|		НомерПоиск,
	|		Ссылка КАК Ссылка1,
	|		НомерСтроки КАК НомерСтроки1,
	|		Артикул КАК Артикул1,
	|		Наименование КАК Наименование1,
	|		Количество КАК Количество1,
	|		Комментарий КАК Комментарий1,
	|		НомерПоиск КАК НомерПоиск1
	|	),
	|	СправочникНоменклатура.РекомендованаяЦена КАК РекомендованаяЦена,
	|	СправочникНоменклатура.НомераЗамен.(
	|		Ссылка,
	|		НомерСтроки,
	|		НомерЗамены
	|	)
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.НомераЗамен КАК НомЗамены
	|		ПО СправочникНоменклатура.Ссылка = НомЗамены.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|		ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар
	|ГДЕ
	|	СправочникНоменклатура.РекомендованаяЦена >= &минцена";
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка() + "
	|ГДЕ
	|	СправочникНоменклатура.РекомендованаяЦена >= &минцена";
	// -- obrv 01.11.18
	
	Запрос = Новый Запрос;
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1, Запрос);
	// -- obrv 03.10.18
	Запрос.Текст = Текст1;
	Запрос.УстановитьПараметр("минцена",МинимальнаяЦена);	
	зт = "";
	Если Бренд.Пустая() = Ложь Тогда
		зт = зт + " И СправочникНоменклатура.Бренд = &бренд";
		Запрос.УстановитьПараметр("бренд",Бренд);
	КонецЕсли;
	Если podkategoria.Пустая() = Ложь Тогда 
		зт = зт + " И (СправочникНоменклатура.podkategoria = &podkat ИЛИ СправочникНоменклатура.ДопКат.подкат = &podkat2)"		;
		Запрос.УстановитьПараметр("podkat",podkategoria);
		Запрос.УстановитьПараметр("podkat2",podkategoria);
	Иначе
		Если kategoria.Пустая() = Ложь Тогда 
			зт = зт + " И СправочникНоменклатура.Категория = &kat"		;
			Запрос.УстановитьПараметр("kat",kategoria);
		КонецЕсли;  	
	КонецЕсли;
	Если нал = Истина Тогда
		зт = зт + " И РегистрНакопления1Остатки.КолвоОстаток > 0 ";
		Запрос.Текст = Текст1;	
	КонецЕсли;
	Если СтрДлина(зт) > 1 Тогда
		Текст1 = Текст1 + зт;
	КонецЕсли;
	Текст1 = Текст1 + " УПОРЯДОЧИТЬ ПО РекомендованаяЦена УБЫВ";
	Запрос.Текст = Текст1;
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции


&НаКлиенте
Процедура ПоступлениеПриИзменении(Элемент)
	измПроизв();
КонецПроцедуры

&НаСервере
Процедура измПроизв()
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.МестоНаСкладе2,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.Фото,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	|   РезервОстатки.КолвоОстаток как КолвоОстаток1,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| ),
	|   СправочникНоменклатура.НаДиректе,
	|   СправочникНоменклатура.НаАвтолайне,
	|   СправочникНоменклатура.ЕстьТэги,
	|   СправочникНоменклатура.КрупныйАгрегат,
	|   СправочникНоменклатура.ЭтоНоваяЗапчасть,
	|   СправочникНоменклатура.РекомендованаяЦена,
	|   СправочникНоменклатура.DirectZapolneno,
	|   СправочникНоменклатура.ЦенаПроверена
	| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар 
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки 
	|	ПО СправочникНоменклатура.Ссылка = РезервОстатки.Товар ";
	
	
	// ++ obrv 01.11.18
	Текст1 = ТекстЗапросаСписка();
	// -- obrv 01.11.18
	
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Текст1);
	// -- obrv 03.10.18
	
	толькоНал = "";
	Если нал = Истина Тогда
		толькоНал = " РегистрНакопления1Остатки.КолвоОстаток > 0 И ";
	КонецЕсли;
	Если Поступление.Пустая() = Ложь Тогда
		Текст1 = Текст1 + " ГДЕ "+ толькоНал +" РегистрНакопления1Остатки.машина = &машина "		;
		Список.ТекстЗапроса= Текст1;
		// ++ obrv 03.10.18
		УстановитьПараметрыСписка();
		// -- obrv 03.10.18
		Список.Параметры.УстановитьЗначениеПараметра("машина",Поступление);
		Если podkategoria.Пустая() = Ложь Тогда 
			Текст1 = Текст1 + " И (СправочникНоменклатура.podkategoria = &podkat ИЛИ СправочникНоменклатура.ДопКат.подкат = &podkat2)"		;
			Список.ТекстЗапроса= Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			Список.Параметры.УстановитьЗначениеПараметра("podkat",podkategoria);
			Список.Параметры.УстановитьЗначениеПараметра("podkat2",podkategoria);
		Иначе
			Если kategoria.Пустая() = Ложь Тогда 
				Если Тк = Истина Тогда
					Текст1 = Текст1 + " И ( СправочникНоменклатура.Подкатегория2 = &kat ИЛИ СправочникНоменклатура.ДопКат.кат2 = &kat)";
					Список.ТекстЗапроса= Текст1;
					// ++ obrv 03.10.18
					УстановитьПараметрыСписка();
					// -- obrv 03.10.18
					Список.Параметры.УстановитьЗначениеПараметра("kat",kategoria);
					
				Иначе
					кат = Новый Массив;
					кат.Добавить(kategoria);
					Текст1 = Текст1 + " И  ( ";
					Для Каждого стр Из kategoria.допкат Цикл
						Если кат.Найти(стр.ДопКатегория) = Неопределено Тогда
							кат.Добавить(стр.ДопКатегория);
						КонецЕсли;
						Для Каждого стр2 Из стр.ДопКатегория.допкат Цикл
							Если кат.Найти(стр2.ДопКатегория) = Неопределено Тогда
								кат.Добавить(стр2.ДопКатегория);
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
					номер = 1;
					Для Каждого к Из кат Цикл
						Если номер = 1 Тогда
							Текст1 = Текст1 + "(СправочникНоменклатура.Подкатегория2 В ИЕРАРХИИ(&kat"+номер+") ИЛИ СправочникНоменклатура.ДопКат.кат2 В ИЕРАРХИИ(&kat"+номер+"))";
						Иначе
							Текст1 = Текст1 + " ИЛИ (СправочникНоменклатура.Подкатегория2 В ИЕРАРХИИ(&kat"+номер+") ИЛИ СправочникНоменклатура.ДопКат.кат2 В ИЕРАРХИИ(&kat"+номер+"))";
						КонецЕсли;
						номер = номер + 1;
					КонецЦикла;
					Текст1 = Текст1 + " ) ";
					номер = 1;
					Список.ТекстЗапроса= Текст1;
					// ++ obrv 03.10.18
					УстановитьПараметрыСписка();
					// -- obrv 03.10.18
					
					Для Каждого к Из кат Цикл
						Список.Параметры.УстановитьЗначениеПараметра("kat"+номер,к);
						номер = номер + 1;
					КонецЦикла;
					
				КонецЕсли;
			КонецЕсли;  	
		КонецЕсли;
	Иначе
		Если podkategoria.Пустая() = Ложь Тогда 
			Текст1 = Текст1 + " ГДЕ "+ толькоНал +" (СправочникНоменклатура.podkategoria = &podkat ИЛИ СправочникНоменклатура.ДопКат.подкат = &podkat2)"		;
			Список.ТекстЗапроса= Текст1;
			// ++ obrv 03.10.18
			УстановитьПараметрыСписка();
			// -- obrv 03.10.18
			Список.Параметры.УстановитьЗначениеПараметра("podkat",podkategoria);
			Список.Параметры.УстановитьЗначениеПараметра("podkat2",podkategoria);
		Иначе
			Если kategoria.Пустая() = Ложь Тогда 
				Если Тк = Истина Тогда
					Текст1 = Текст1 + " ГДЕ ( СправочникНоменклатура.Подкатегория2 = &kat ИЛИ СправочникНоменклатура.ДопКат.кат2 = &kat)";
					Список.ТекстЗапроса= Текст1;
					// ++ obrv 03.10.18
					УстановитьПараметрыСписка();
					// -- obrv 03.10.18
					Список.Параметры.УстановитьЗначениеПараметра("kat",kategoria);
					
				Иначе
					кат = Новый Массив;
					кат.Добавить(kategoria);
					Текст1 = Текст1 + " ГДЕ  ( ";
					Для Каждого стр Из kategoria.допкат Цикл
						Если кат.Найти(стр.ДопКатегория) = Неопределено Тогда
							кат.Добавить(стр.ДопКатегория);
						КонецЕсли;
						Для Каждого стр2 Из стр.ДопКатегория.допкат Цикл
							Если кат.Найти(стр2.ДопКатегория) = Неопределено Тогда
								кат.Добавить(стр2.ДопКатегория);
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
					номер = 1;
					Для Каждого к Из кат Цикл
						Если номер = 1 Тогда
							Текст1 = Текст1 + "(СправочникНоменклатура.Подкатегория2 В ИЕРАРХИИ(&kat"+номер+") ИЛИ СправочникНоменклатура.ДопКат.кат2 В ИЕРАРХИИ(&kat"+номер+"))";
						Иначе
							Текст1 = Текст1 + " ИЛИ (СправочникНоменклатура.Подкатегория2 В ИЕРАРХИИ(&kat"+номер+") ИЛИ СправочникНоменклатура.ДопКат.кат2 В ИЕРАРХИИ(&kat"+номер+"))";
						КонецЕсли;
						номер = номер + 1;
					КонецЦикла;
					Текст1 = Текст1 + " ) ";
					номер = 1;
					Список.ТекстЗапроса= Текст1;
					// ++ obrv 03.10.18
					УстановитьПараметрыСписка();
					// -- obrv 03.10.18
					
					Для Каждого к Из кат Цикл
						Список.Параметры.УстановитьЗначениеПараметра("kat"+номер,к);
						номер = номер + 1;
					КонецЦикла;
					
				КонецЕсли;
				
			Иначе
				Список.ТекстЗапроса= Текст1;	
				// ++ obrv 03.10.18
				УстановитьПараметрыСписка();
				// -- obrv 03.10.18
			КонецЕсли;  	
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры



&НаСервере
Функция ПроверитьСП(код)
	запрос = Новый Запрос;
	запрос.Текст = "ВЫБРАТЬ
	|	Спецпредложения.Код
	|ИЗ
	|	Справочник.Спецпредложения КАК Спецпредложения
	|ГДЕ
	|	Спецпредложения.Товар.Код = &Код";
	запрос.УстановитьПараметр("Код",код);
	колво = запрос.Выполнить().Выгрузить().Количество();
	Если колво > 0 Тогда
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаСервере
Функция СоздатьСП(код);
	Товар = Справочники.Номенклатура.НайтиПоКоду(код);
	сп = Справочники.Спецпредложения.СоздатьЭлемент();
	сп.Товар = Товар.Ссылка;
	сп.ДатаНачала = ТекущаяДата();
	сп.ДатаОкончания = ТекущаяДата();
	сп.Записать();
	
	Возврат сп.Ссылка;
КонецФункции


&НаСервере
Функция НайтиДокПСчет(Код)
	Возврат Документы.ПеремещениеТоваров.НайтиПоНомеру(Код);
КонецФункции


&НаСервере
Функция ПолучитьИнфо(код)
	запрос = Новый Запрос;
	Результат1 = новый Структура;
	запрос.Текст = 
	"ВЫБРАТЬ
	|	СправочникНоменклатура.Код,
	|	СправочникНоменклатура.Наименование,
	|	СправочникНоменклатура.Артикул,
	|	СправочникНоменклатура.НомерПроизводителя,
	|	СправочникНоменклатура.МестоНаСкладе2,
	|	РегистрНакопления1Остатки.КолвоОстаток,
	|	СправочникНоменклатура.Бренд,
	|	СправочникНоменклатура.Описание,
	|	СправочникНоменклатура.Ссылка,
	|	СправочникНоменклатура.Категория,
	|	СправочникНоменклатура.КрупныйАгрегат,
	|	СправочникНоменклатура.Видео,
	|	СправочникНоменклатура.РекомендованаяЦена,
	|	СправочникНоменклатура.НаСайтеТракДонор,
	|	СправочникНоменклатура.Производитель.Ссылка КАК произв1,
	|	СправочникНоменклатура.Вес,
	|	СправочникНоменклатура.Объем,
	|	СправочникНоменклатура.ЕстьТэги,
	|	СправочникНоменклатура.Диаметр,
	|	СправочникНоменклатура.ШагРезьбы,
	|	СправочникНоменклатура.Прочность,
	|	СправочникНоменклатура.ТипКрепеж,
	|	СправочникНоменклатура.Длина,
	|	СправочникНоменклатура.ВнутреннийДиаметр,
	|	СправочникНоменклатура.podkategoria,
	|	СправочникНоменклатура.Толщина,
	|	СправочникНоменклатура.Title,
	|	СправочникНоменклатура.длин,
	|	СправочникНоменклатура.шир,
	|	СправочникНоменклатура.выс,
	|	СправочникНоменклатура.ЭтоНоваяЗапчасть,
	|	СправочникНоменклатура.ЦенаПроверена
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|		ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар
	|ГДЕ
	|	СправочникНоменклатура.Код = &Код";
	
	// ++ obrv 01.11.18
	Запрос.Текст = ТекстЗапросаСписка() + "
	|ГДЕ
	|	СправочникНоменклатура.Код = &Код";
	// -- obrv 01.11.18
	
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Запрос.Текст, Запрос);
	// -- obrv 03.10.18
	запрос.УстановитьПараметр("Код",код);
	результат = запрос.Выполнить().Выгрузить();
	Для Каждого стр из результат Цикл
		Результат1.Вставить("Код",стр.Код);
		Результат1.Вставить("Наименование",стр.Наименование);
		Результат1.Вставить("Артикул",стр.Артикул);
		Результат1.Вставить("НомерПроизводителя",стр.НомерПроизводителя);
		Результат1.Вставить("Бренд",стр.Бренд);
		Результат1.Вставить("ЦенаПроверена",стр.ЦенаПроверена);
		Результат1.Вставить("КолвоОстаток",стр.КолвоОстаток);
		Результат1.Вставить("РекомендованаяЦена",стр.РекомендованаяЦена);
		Результат1.Вставить("РекомендованаяЦена",стр.РекомендованаяЦена);
		Результат1.Вставить("Title",стр.Title);
		Результат1.Вставить("Описание",стр.Описание);
		Возврат Результат1;
	КонецЦикла;
	Возврат Результат1;
КонецФункции


&НаСервере
Процедура п2()	 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправочникНоменклатура.Код,
	|	СправочникНоменклатура.Наименование,
	|	СправочникНоменклатура.Артикул,
	|	СправочникНоменклатура.НомерПроизводителя,
	|	СправочникНоменклатура.МестоНаСкладе2,
	|	РегистрНакопления1Остатки.КолвоОстаток,
	|	СправочникНоменклатура.Бренд,
	|	СправочникНоменклатура.Описание,
	|	СправочникНоменклатура.Ссылка,
	|	СправочникНоменклатура.Комплектность.(
	|		НомерПоиск,
	|		Артикул,
	|		Наименование,
	|		Количество,
	|		Предложение
	|	),
	|	СправочникНоменклатура.Категория,
	|	СправочникНоменклатура.КрупныйАгрегат,
	|	СправочникНоменклатура.НомераЗамен.(
	|		Ссылка,
	|		НомерСтроки,
	|		НомерЗамены
	|	),
	|	СправочникНоменклатура.Видео,
	|	СправочникНоменклатура.РекомендованаяЦена,
	|	СправочникНоменклатура.НаСайтеТракДонор,
	|	СправочникНоменклатура.Производитель.Ссылка КАК произв1,
	|	СправочникНоменклатура.Вес,
	|	СправочникНоменклатура.Объем,
	|	СправочникНоменклатура.ДляТэгов.(
	|		Ссылка,
	|		НомерСтроки,
	|		Реквизит1
	|	),
	|	СправочникНоменклатура.ЕстьТэги,
	|	СправочникНоменклатура.Диаметр,
	|	СправочникНоменклатура.ШагРезьбы,
	|	СправочникНоменклатура.Прочность,
	|	СправочникНоменклатура.ТипКрепеж,
	|	СправочникНоменклатура.Длина,
	|	СправочникНоменклатура.ВнутреннийДиаметр,
	|	СправочникНоменклатура.podkategoria,
	|	СправочникНоменклатура.Толщина,
	|	СправочникНоменклатура.Title,
	|	СправочникНоменклатура.Предложения.(
	|		Ссылка,
	|		НомерСтроки,
	|		Реквизит1
	|	),
	|	СправочникНоменклатура.длин,
	|	СправочникНоменклатура.шир,
	|	СправочникНоменклатура.выс,
	|	СправочникНоменклатура.ЭтоНоваяЗапчасть,
	|	СправочникНоменклатура.ЗапросыПоисковиков.(
	|		Ссылка,
	|		НомерСтроки,
	|		Название
	|	),
	|	СправочникНоменклатура.podkat2,
	|	СправочникНоменклатура.ДопКат.(
	|		Ссылка,
	|		НомерСтроки,
	|		кат,
	|		подкат,
	|		кат2
	|	),
	|	СправочникНоменклатура.Подкатегория2,
	|	СправочникНоменклатура.Ссылка КАК Ссылка1
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|		ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар";
	// ++ obrv 03.10.18
	ДобавитьУсловиеПоСкладу(Запрос.Текст, Запрос);
	// -- obrv 03.10.18
	результат = Запрос.Выполнить();
	таблица = результат.Выгрузить();
	Текст = Новый ЗаписьТекста("d:\Dropbox\Public\tmp.xml", КодировкаТекста.UTF8);
	док = "<?xml version='1.0' encoding='UTF-8'?><info><items>";
	Текст.ЗаписатьСтроку(док);
	
	Для Каждого номстрока из таблица Цикл
		//тмпоб = номстрока.Ссылка.ПолучитьОбъект();
		//тмпоб.изменено = ложь;
		//тмпоб.Записать();
		Компл = "";
		Компл2 = "";
		компл21 = "";
		запросП = "";
		Для Каждого кпл из номстрока.Комплектность Цикл
			Компл = Компл + "/"+кпл.НомерПоиск;
			компл21 = компл21 + "<komplitem><nomer>"+кпл.Артикул+"</nomer><name>"+кпл.Наименование+"</name><predl>"+кпл.Предложение.Код+"</predl><kolvo>"+кпл.Количество+"</kolvo></komplitem>";
		КонецЦикла;
		Для Каждого кпл из номстрока.НомераЗамен Цикл
			Компл = Компл + "/"+кпл.НомерЗамены;
		КонецЦикла;
		Для Каждого зпр из номстрока.ЗапросыПоисковиков Цикл
			запросП = запросП + зпр.Название + "/";
		КонецЦикла;
		Компл = Компл + "/";
		насайте = 0;
		Если номстрока.НаСайтеТракДонор = ИСТИНА Тогда
			насайте = 1
		КонецЕсли;
		допкат = "<dopkats>";
		Для Каждого дк из номстрока.ДопКат Цикл
			допкат = допкат + "<dop><kat2>"+дк.кат2.Код+"</kat2></dop>";
		КонецЦикла;
		допкат = допкат + "</dopkats>";
		крепеж = "<krep_info>";
		Если номстрока.Категория.код = "000000148" Тогда
			крепеж=крепеж + "<type>"+номстрока.ТипКрепеж+"</type><diametr>"+номстрока.Диаметр+"</diametr><shag>"+
			номстрока.ШагРезьбы+"</shag><dlina>"+номстрока.Длина+"</dlina><prochnost>"+номстрока.Прочность+
			"</prochnost><wd>"+номстрока.ВнутреннийДиаметр+"</wd><tol>"+номстрока.Толщина+"</tol>";
		КонецЕсли;
		крепеж=крепеж + "</krep_info>";
		цена = номстрока.РекомендованаяЦена;
		кагг = 0;
		Если номстрока.КрупныйАгрегат = Истина Тогда
			кагг = 1;
		КонецЕсли;
		ет = 0;
		Если номстрока.ЕстьТэги = Истина Тогда
			ет = 1;
		КонецЕсли;
		эт_н=0;
		Если номстрока.Состояние = Перечисления.Состояние.Новый Тогда
			эт_н=1;
		КонецЕсли;
		
		тд=0;		
		док2 =  "<item><id1c>"+номстрока.Код + "</id1c><name>"+номстрока.Наименование + "</name><title>"+номстрока.Title+"</title><oe>"+номстрока.Артикул + "</oe>
		| <analog>"+номстрока.НомерПроизводителя + "</analog><brend>"+номстрока.Бренд + "</brend><price>"+Формат(цена,"ЧРГ=;ЧРД=.;") + "</price>
		| <warehouse>"+номстрока.МестоНаСкладе2 + "</warehouse><kolvo>"+номстрока.КолвоОстаток + "</kolvo><kompl>"+Компл + "</kompl><kompl2>"+компл21 + "</kompl2>
		| <cat2>"+номстрока.Подкатегория2.Код + "</cat2><sitecat>"+номстрока.произв1 + "</sitecat><bigagg>"+кагг + "</bigagg><vidlink>"+номстрока.Видео + "</vidlink>
		| <pr_exp>"+номстрока.РекомендованаяЦена + "</pr_exp>
		| <weigth>"+номстрока.Вес+"</weigth><volume>"+номстрока.Объем+"</volume>
		| <ontd>"+насайте + "</ontd><partdescr>"+номстрока.Описание + "</partdescr>
		| <dlin>"+номстрока.длин+"</dlin><shir>"+номстрока.шир+"</shir><isnew>"+эт_н+"</isnew><vis>"+номстрока.выс+"</vis>
		| <zapros>"+запросП+"</zapros><hastags>"+ет+"</hastags>"+крепеж;
		
		Если номстрока.ЕстьТэги = Истина Тогда
			док2 = док2 + "<tags>";
			Для каждого тэг Из номстрока.ДляТэгов Цикл
				док2 = док2 + "<tag>"+тэг.Реквизит1.код+"</tag>";
			КонецЦикла;
			док2 = док2 + "</tags>";
		КонецЕсли;
		док2 = док2 + "<predlozenia>";
		Для каждого тэг Из номстрока.Предложения Цикл
			док2 = док2 + "<predl>"+тэг.Реквизит1.код+"</predl>";
		КонецЦикла;
		док2 = док2 + "</predlozenia>";
		док2 = док2 + допкат;
		док2 = док2 + "</item>";
		док2 = СтрЗаменить(док2,"&","&amp;");
		Текст.ЗаписатьСтроку(док2);
		
	КонецЦикла;
	док =  "</items>";
	Текст.ЗаписатьСтроку(док);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Категории.Код,
	|	Категории.Наименование,
	|	Категории.Порядок1,
	|	Категории.Родитель
	|ИЗ
	|	Справочник.Категории КАК Категории";
	рез1 = Запрос.Выполнить().Выгрузить();
	хмл = "<mainkats>";
	Для Каждого подкат из рез1 цикл
		If  подкат.Родитель = Справочники.Категории.ПустаяСсылка() Then
			хмл = хмл + "<kat><id>"+подкат.Код+"</id><name>"+подкат.Наименование+"</name><poryadok>"+Формат(подкат.Порядок1,"ЧРГ=;ЧРД=.;")+"</poryadok><parent>0</parent></kat>";
		Else
			хмл = хмл + "<kat><id>"+подкат.Код+"</id><name>"+подкат.Наименование+"</name><poryadok>"+Формат(подкат.Порядок1,"ЧРГ=;ЧРД=.;")+"</poryadok><parent>"+подкат.Родитель.Код+"</parent></kat>";
		EndIf;
	КонецЦикла;
	хмл = хмл + "</mainkats>";
	Текст.ЗаписатьСтроку(хмл);
	Текст.ЗаписатьСтроку("</info>");
	Текст.Закрыть();
	Текст = Новый ЧтениеТекста("d:\Dropbox\Public\tmp.xml", КодировкаТекста.UTF8);
	Стр = Текст.Прочитать();
	Попытка
		WinHttp = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
		WinHttp.Option(2,"utf-8");
		WinHttp.Open("POST","http://adm.nntr.ru/api/uploadhttp",0);
		WinHttp.SetRequestHeader("Accept-Language", "ru");
		WinHttp.SetRequestHeader("Accept-Charset","utf-8");
		WinHttp.setRequestHeader("Content-Language", "ru");
		WinHttp.setRequestHeader("Content-Charset", "utf-8");
		WinHttp.setRequestHeader("Content-type", "text/xml; charset=utf-8");
		WinHttp.SetTimeouts(600000,600000,600000,600000);
		ПараметрыПОСТ = Стр;
		WinHttp.Send(ПараметрыПОСТ);
		ТекстОтвета = WinHttp.ResponseText();
		Сообщить(ТекстОтвета);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура tmp1(Команда)
	// Вставить содержимое обработчика.
	// tmp2();
КонецПроцедуры

&НаСервере
Процедура tmp2()
	выборка = Справочники.Номенклатура.Выбрать();
	Пока выборка.Следующий() Цикл
		об = выборка.ПолучитьОбъект();
		об.
		об.Записать();
	КонецЦикла;
КонецПроцедуры	 

&НаКлиенте
Процедура ткПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	changeKat();
КонецПроцедуры



&НаСервере
Функция откудаминусыс(код)
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	|	РегистрНакопления1.Регистратор,
	|	РегистрНакопления1.ВидДвижения,
	|	РегистрНакопления1.машина,
	|	РегистрНакопления1.индкод,
	|	РегистрНакопления1.Колво
	|ИЗ
	|	РегистрНакопления.РегистрНакопления1 КАК РегистрНакопления1
	|ГДЕ
	|	РегистрНакопления1.Товар.Код = &Код";
	запрос.УстановитьПараметр("Код",код);			   
	Результат = запрос.Выполнить();
	ТД=Новый ТабличныйДокумент;
	ОбластьВывода=ТД.ПолучитьОбласть(1,1,1,Результат.Колонки.Количество());
	Для Счетчик=1 по Результат.Колонки.Количество() Цикл
		ОбластьЗаполнения=ОбластьВывода.Область(1,Счетчик,1,Счетчик);
		ОбластьЗаполнения.Параметр=Результат.Колонки.Получить(Счетчик-1).Имя;
		ОбластьЗаполнения.Заполнение=ТипЗаполненияОбластиТабличногоДокумента.Параметр
	КонецЦикла;
	Выборка=Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбластьВывода.Параметры.Заполнить(Выборка);
		ТД.Вывести(ОбластьВывода);
	КонецЦикла;
	возврат ТД;
КонецФункции

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ЭтаФорма.ВладелецФормы = Неопределено Тогда
		
	Иначе
		Струк = Новый Структура;
		Струк.Вставить("Команда","ПравильныйПоиск");	
		Код = Элементы.Список.ТекущиеДанные.Код;
		//Струк.Вставить("Склад",Элементы.Список.ТекущиеДанные.МестоХранения.Владелец);
		Струк.Вставить("МестоХранения",Элементы.Список.ТекущиеДанные.МестоХранения);
		Струк.Вставить("Номенклатура",Элементы.Список.ТекущиеДанные.Ссылка);
		Струк.Вставить("РекЦена",Элементы.Список.ТекущиеДанные.РекомендованаяЦена);
		Струк.Вставить("Продано",Элементы.Список.ТекущиеДанные.КолвоПродаж);
		Струк.Вставить("Остаток",Элементы.Список.ТекущиеДанные.КолвоОстаток);
		
		ФФФ = ЭтаФорма.ВладелецФормы;
		ОповеститьОВыборе(Струк);	
	КонецЕсли;
	
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимостьДляМобильнойВерсии()
	
	///+ГомзМА 02.08.2023
	Элементы.Код.Видимость 					= Истина;
	Элементы.МестоНаСкладе.Видимость 		= Истина;
	Элементы.Артикул.Видимость 				= Истина;
	Элементы.НомерПроизводителя.Видимость 	= Ложь;
	Элементы.Бренд.Видимость 				= Ложь;
	Элементы.Производитель.Видимость 		= Ложь;
	Элементы.Наименование.Видимость 		= Истина;
	Элементы.СостояниеЗаявки.Видимость 		= Ложь;
	Элементы.Серия.Видимость 				= Ложь;
	Элементы.КолвоПродаж.Видимость 			= Ложь;
	Элементы.КолвоОстаток.Видимость 		= Истина;
	Элементы.РекомендованаяЦена.Видимость 	= Ложь;
	Элементы.ЦенаПроверена.Видимость 		= Ложь;
	Элементы.ЦенаФиксирована.Видимость 		= Ложь;
	Элементы.Фото.Видимость 				= Истина;
	Элементы.Размеры.Видимость 				= Ложь;
	Элементы.ЕстьТэги.Видимость 			= Ложь;
	Элементы.НаАвтолайне.Видимость 			= Ложь;
	Элементы.DirectZapolneno.Видимость 		= Ложь;
	Элементы.НаДиректе.Видимость 			= Ложь;
	Элементы.КрупныйАгрегат.Видимость 		= Ложь;
	Элементы.Состояние.Видимость 			= Истина;
	Элементы.ГруппаВесРазмер.Видимость 		= Ложь; 
	///-ГомзМА 02.08.2023
	
	
КонецПроцедуры


&НаСервере
Процедура КоличествоДеталей()
	
	///+ГомзМА 19.10.2023
	Схема = Элементы.НепроверенныеЦеныАвитоЧастник.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.НепроверенныеЦеныАвитоЧастник.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	КоличествоДеталей = Результат.Количество();
	///-ГомзМА 19.10.2023
	
КонецПроцедуры

#КонецОбласти


#Область ДобавитьВыделенныеТовары

&НаКлиенте
Процедура ДобавитьВыделенныеСтроки(Команда)
	
	МассивНомеров 	= Новый Массив;
	МассивВозврата 	= Новый Массив;
	
	Для Каждого номер ИЗ Элементы.Партии.ВыделенныеСтроки Цикл
		МассивНомеров.Добавить(номер);	
	КонецЦикла;
	
	Для Каждого текСтр ИЗ МассивНомеров Цикл
		Элементы.Партии.ТекущаяСтрока = текСтр;
		МассивВозврата.Добавить(Элементы.Партии.ТекущиеДанные);	
	КонецЦикла;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Команда", "МножественныйВыбор"); 
	СтруктураВозврата.Вставить("МассивДанных", МассивВозврата);
	Код = Элементы.Список.ТекущиеДанные.Код;
	СтруктураВозврата.Вставить("Код",Код);
	Деталь = Элементы.Партии.ДанныеСтроки(Элементы.Партии.ТекущаяСтрока);
	СтруктураВозврата.Вставить("Деталь",Деталь);
	
	ОповеститьОВыборе(СтруктураВозврата);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСсылкуТовара(Код,Вид=1,Событие)
	Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ИндКод.Владелец КАК Владелец,
	|	ИндКод.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ИндКод КАК ИндКод
	|ГДЕ
	|	ИндКод.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Наименование",Код);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Если Вид = 1 тогда
		Возврат Выборка.Владелец.ссылка;
	Иначе
		Возврат Выборка.ссылка;
	КонецЕсли;
	Сообщить(Событие);
КонецФункции

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)	
	
	//Если Событие = "Штрихкод" Тогда
	Элементы.Список.ТекущаяСтрока =	ПолучитьСсылкуТовара(Данные,1,Событие);	
	Элементы.партии.ТекущаяСтрока =	ПолучитьСсылкуТовара(Данные,2,Событие);
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПартииПриИзменении(Элемент)
	//список.Параметры.УстановитьЗначениеПараметра("Авито",Истина);
	
	элементы.партии.Обновить(); 
	//ОбновитьОтборПартий();
КонецПроцедуры

&НаКлиенте
Процедура ПартииПриАктивизацииСтроки(Элемент)
	//список.Параметры.УстановитьЗначениеПараметра("Авито",Истина);
	
	//элементы.список.Обновить(); 
КонецПроцедуры

#КонецОбласти


&НаСервере
Функция ПереучестьДетальНаСервере(НашаДеталь,Причина)
	Отказ = Ложь;
	//Поступление = документы.ПоступлениеЗапчастей.НайтиПоНомеру("000003695");
	//Объектпоступления = документы.ПоступлениеЗапчастей.НайтиПоНомеру("000003695").ПолучитьОбъект();
	
	/// Комлев
	Списание  = ПолучитьДокументПоступления(НашаДеталь);
	Если Списание <> Неопределено Тогда
		Объектсписания = Списание.ПолучитьОбъект();
		Объектсписания.Дата = ТекущаяДата();
	
	
		НоваястрокаСписания = Объектсписания.Товары.Добавить(); 
	
		НоваястрокаСписания.Номенклатура = НашаДеталь.Товар;
		НоваястрокаСписания.Инициатор    = Пользователи.ТекущийПользователь();
		НоваястрокаСписания.Количество   = 1; 
		НоваястрокаСписания.Партия       = НашаДеталь.ИндКод;
		НоваястрокаСписания.Автомобиль   = НашаДеталь.Машина;
		НоваястрокаСписания.Количество   = 1; 
		НоваястрокаСписания.Комментарий   = Причина; 
	
		Объектсписания.Записать(РежимЗаписиДокумента.Проведение);
		Возврат Объектсписания.Номер;
		
	Иначе
		СписаниеНовыйДокумент = Документы.СписаниеЗапчастей.СоздатьДокумент();
		ЗаполнениеДокументов.Заполнить(СписаниеНовыйДокумент);
		//Мазин Дата документа стала с текущем временем, было на начало дня 
		СписаниеНовыйДокумент.Дата = ТекущаяДата();
		//Мазин
		СписаниеНовыйДокумент.Конвейер = Истина;
		СписаниеНовыйДокумент.Склад = НашаДеталь.Склад;
		СписаниеНовыйДокумент.Ответственный = Пользователи.ТекущийПользователь();
		
		НоваястрокаСписания = СписаниеНовыйДокумент.Товары.Добавить();
		НоваястрокаСписания.Номенклатура = НашаДеталь.Товар;
		НоваястрокаСписания.Инициатор    = Пользователи.ТекущийПользователь();
		НоваястрокаСписания.Количество   = 1; 
		НоваястрокаСписания.Партия       = НашаДеталь.ИндКод;
		НоваястрокаСписания.Автомобиль   = НашаДеталь.Машина;
		НоваястрокаСписания.Количество   = 1; 
		НоваястрокаСписания.Комментарий   = Причина; 
		
		СписаниеНовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		Возврат СписаниеНовыйДокумент.Номер;
	КонецЕсли;
	/// Комлев
КонецФункции

&НаКлиенте
Процедура ПереучестьДеталь(Команда)
	НашаДеталь = элементы.Партии.ТекущиеДанные;
	//	Если Не Элементы.Список.Размеры Тогда 
	//ДиалогСВопросом();
	//	Иначе
	ПараметрыОткрытия = Новый Структура();
	ОткрытьФорму("Справочник.ПричиныСписания.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
	
	//ПереучестьДетальНаСервере(НашаДеталь);	
	//КонецЕсли;
	
	
КонецПроцедуры 

&НаКлиенте
Процедура ДиалогСВопросом()
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса",
	ЭтотОбъект);	
	
	ПоказатьВопрос(Оповещение,
	"Деталь не имеет габаритов! Передайте деталь на измерение в отдел упаковки.",
	РежимДиалогаВопрос.ОК,
	0, // таймаут в секундах
	КодВозвратаДиалога.ок, // (необ.) кнопка по умолчанию
	"" // (необ.) заголовок
	);    
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ок Тогда 
		ПараметрыОткрытия = Новый Структура();
		ОткрытьФорму("Справочник.Машины.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьДокументПоступления(НашаДеталь)
	/// Комлев 
	Запрос = новый  Запрос;
	Запрос.Текст =   "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СписаниеЗапчастей.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СписаниеЗапчастей КАК СписаниеЗапчастей
	|ГДЕ
	|	СписаниеЗапчастей.Склад = &Склад
	|	И СписаниеЗапчастей.Ответственный = &Ответственный
	|	И НЕ СписаниеЗапчастей.ПометкаУдаления
	|СГРУППИРОВАТЬ ПО
	|	СписаниеЗапчастей.Ссылка
	|ИМЕЮЩИЕ
	|	(КОЛИЧЕСТВО(СписаниеЗапчастей.Товары.НомерСтроки) < 500
	|	ИЛИ СписаниеЗапчастей.Товары.НомерСтроки ЕСТЬ NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("Склад", НашаДеталь.Склад);
	Запрос.УстановитьПараметр("Ответственный", Пользователи.ТекущийПользователь());
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.Ссылка;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	/// Комлев
КонецФункции


&НаКлиенте
Процедура УчестьДеталь(Команда)
	//Волков ИО 09.02.24 ++
	Состояние = ПолучитьЗначениеРеквизитаДетали(Элементы.Список.ТекущиеДанные.Ссылка);
	//Перечисления.Состояние.Новый
	Если Состояние = 1 Тогда 
		Сообщить("Новые товары не учитываются на конвеере");
		Возврат; 
		
		//УчестьДетальНаСервере(ПолучитьПеремещение(Состояние), элементы.Список.ТекущиеДанные.ссылка);	
		//Перечисления.Состояние.Перекупка 
	ИначеЕсли  Состояние = 2 Тогда 
		Сообщить("Б/У товары не учитываются на конвеере");
		Возврат; 

		//УчестьДетальНаСервере(ПолучитьПеремещение(Состояние) ,элементы.Список.ТекущиеДанные.ссылка);	
	//Волков ИО 09.02.24 --	
	ИначеЕсли Не Элементы.Список.ТекущиеДанные.Размеры Тогда 
		
		ДиалогСВопросом();
		
	Иначе
		
		ПараметрыОткрытия = Новый Структура();
		ОткрытьФорму("Справочник.Машины.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры


Функция ПолучитьПеремещение(Состояние)
	//Волков ИО 09.02.24 ++
	Если  Состояние = 1 тогда 
		//Возвращаю "Новые запчасти"
		Возврат Справочники.Машины.НайтиПоКоду("000000008");
		
	Иначе 
		//Возвращаю P_Перекупка 
		Возврат Справочники.Машины.НайтиПоКоду("000000204");    
		
	КонецЕсли;
	//Волков ИО 09.02.24 --
КонецФункции


Функция ПолучитьЗначениеРеквизитаДетали(Ссылка)
	
	
	//Волков ИО 09.02.24 ++
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ  Первые 1
	|	Номенклатура.Состояние КАК Состояние
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Ссылка"; 
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	РезультатЗапроса.Следующий();
	
	Если РезультатЗапроса.Состояние = Перечисления.Состояние.Новый Тогда 
		
		Возврат 1;
		
	ИначеЕсли РезультатЗапроса.Состояние = Перечисления.Состояние.Перекупка Тогда 
		
		Возврат 2;  
		
	Иначе
		
		Возврат 3;
		
	КонецЕсли;
	
	//Волков ИО 09.02.24 --
КонецФункции

&НаСервере
функция УчестьДетальНаСервере(Машина,товар)
	
	Отказ = Ложь;
	
	ССылкаПоступления = ПолучитьДокументПоступленияДляКонвейера();
	
	Если СсылкаПоступления <> неопределено тогда
		Объектпоступления = ССылкаПоступления.ПолучитьОбъект();
		Объектпоступления.Записать();
	Иначе
		Объектпоступления  = Документы.ПоступлениеЗапчастей.СоздатьДокумент();
		//	Объектпоступления = НовоеПоступление.Ссылка.ПолучитьОбъект();
		Объектпоступления.Ответственный = Пользователи.ТекущийПользователь();
		Объектпоступления.Конвейер = Истина; 
		Объектпоступления.Состояние = Перечисления.дт_СостоянияПоступленияЗапчастей.Выполнено; 
		Объектпоступления.Склад = Справочники.Склады.НайтиПоКоду("000000002"); 
		Объектпоступления.дата = ТекущаяДата();
		Объектпоступления.Записать();
	КонецЕсли;
	НоваяСтрока = Объектпоступления.Таблица.Добавить();
	
	ДанныеЗаполнения = Новый Структура();
	ДанныеЗаполнения.Вставить("ДокументПоступления", Объектпоступления.Ссылка);
	ДанныеЗаполнения.Вставить("ДатаПоступления", Объектпоступления.Дата);
	ДанныеЗаполнения.Вставить("Номенклатура", товар);
	ДанныеЗаполнения.Вставить("Автомобиль", Машина);
	НоваяСтрока.Партия = Справочники.ИндКод.СоздатьНовыйЭлемент(ДанныеЗаполнения, Отказ);
	НоваяСтрока.Товар = товар; 
	НоваяСтрока.автомобиль = Машина;
	НоваяСтрока.Колво = 1;
	НоваяСтрока.Ответственный = НайтиПользователя();
	НоваяСтрока.ДатаДобавления = ТекущаяДата();
	
	Объектпоступления.Записать(РежимЗаписиДокумента.Проведение);
		// ++ МазинЕС 18-06-2024
	//Перевести все заявки со статусом "Ожидает приход" в которых есть товар из этого документа.
	ПоменятьСтатусЗаявкаКлиента(товар); 
	// -- МазинЕС 18-06-2024
	
	об = РегистрыСведений.ИндНомер.СоздатьМенеджерЗаписи();
	об.индкод = НоваяСтрока.Партия;
	об.Прочитать();
	об.Код = НоваяСтрока.Партия;
	
	об.Цена = товар.РекомендованаяЦена;
	об.Стеллаж = Справочники.Стеллаж.НайтиПоНаименованию("ANGAR");
	об.индкод = НоваяСтрока.Партия;
	об.Ответственный = НайтиПользователя();
	об.ДатаИзмененияКонвеера = ТекущаяДата(); 
	/// Комлев 03/09/24 +++ 
	об.Состояние = Товар.Состояние;
	/// Комлев 03/09/24 ---
	об.АвитоЧастник = Истина;
	Об.ЭтоНовыйИндКод 	= ИСТИНА; 
	Об.Машина			= Машина; 
	Об.Номенклатура		= товар;
	об.Записать();
	
	ЗначениеКлюча = Новый Структура;
	ЗначениеКлюча.Вставить("индкод", НоваяСтрока.Партия);
	Возврат РегистрыСведений.ИндНомер.СоздатьКлючЗаписи(ЗначениеКлюча);
	
КонецФункции
Процедура ПоменятьСтатусЗаявкаКлиента(товар)
/// Комлев 24/05/24 +++
//Перевести все заявки со статусом "Ожидает приход" в которых есть товар из этого документа.
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ЗаказКлиентаТовары.Ссылка
			|ИЗ
			|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
			|ГДЕ
			|	ЗаказКлиентаТовары.Ссылка.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.ОжидаетПриход)
			|	И ЗаказКлиентаТовары.Номенклатура В (&НоменклатураИзДокумента)";
	
		Запрос.УстановитьПараметр("НоменклатураИзДокумента", товар);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Попытка
			Заявка = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Заявка.Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Думает;
			Заявка.Записать();
			Исключение
			КонецПопытки;
		КонецЦикла;
/// Комлев 24/05/24 ---
		КонецПроцедуры

Функция ПолучитьДокументПоступленияДляКонвейера()
	Запрос = новый  Запрос;
	Запрос.Текст =   "ВЫБРАТЬ
	|	ПоступлениеЗапчастейТаблица.Ссылка КАК Ссылка,
	|	СУММА(ПоступлениеЗапчастейТаблица.Колво) КАК товар
	|ИЗ
	|	Документ.ПоступлениеЗапчастей.Таблица КАК ПоступлениеЗапчастейТаблица
	|ГДЕ
	|	ПоступлениеЗапчастейТаблица.Ссылка.Конвейер = Истина
	|	И ПоступлениеЗапчастейТаблица.Ссылка.Ответственный = &Ответственный
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеЗапчастейТаблица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоступлениеЗапчастейТаблица.Ссылка.Дата УБЫВ";
	Запрос.УстановитьПараметр("Ответственный",Пользователи.ТекущийПользователь());
	выборка = запрос.Выполнить().Выбрать();
	Если выборка.Количество() > 0 Тогда
		выборка.Следующий();
		Если Выборка.товар < 100 Тогда
			Возврат Выборка.ссылка; 
		Иначе  
			возврат неопределено;
		КонецЕсли;
		
	Иначе 
		возврат неопределено;
	КонецЕсли;
КонецФункции


&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	///+ГомзМА 06.09.2023
	Если ТекущаяСтраница = Элементы.СтраницаИндКодаДляПроверкиЦен Тогда
		КоличествоДеталей();
	КонецЕсли;
	///-ГомзМА 06.09.2023
	
КонецПроцедуры


&НаКлиенте
Процедура Печатьэтикетки(Команда)
	ТабДок = ПечатьэтикеткиСерв(элементы.Партии.ТекущиеДанные.ИндКод);
	
	// создадим коллекцию печатных форм, в которую надо будет добавить нужный нам табличный документ
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ПечатьэтикеткиСерв");
	// Добавляем в коллекцию (тип массив) сформированный Табличный документ
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
	// если требуется устанавливаем параметры печати
	КоллекцияПечатныхФорм[0].Экземпляров=1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "ПечатьэтикеткиСерв";  // используется для формирования имени файла при сохранении из общей формы печати документов
	// .. и выводим стандартной процедурой БСП
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Неопределено,ЭтаФорма);
	
КонецПроцедуры

Функция ПечатьэтикеткиСерв(Ссылка)
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = Справочники.Номенклатура.ПолучитьМакет("Этикетка");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИндКодc.Наименование КАК Наименование,
	|	ИндКодc.Владелец КАК Владелец,
	|	ВЫРАЗИТЬ(ИндКодc.Владелец.Наименование КАК СТРОКА(39)) КАК Название,
	|	ИндКодc.Владелец.МестоНаСкладе2 КАК ВладелецМестоНаСкладе2,
	|	ИндКодc.Владелец.Бренд КАК Бренд,
	|	ИндКодc.Владелец.НомерПроизводителя КАК НомерПроизводителя,
	|	ИндКодc.Владелец.Производитель КАК Производитель,
	|	ИндНомер.Стеллаж КАК Стеллаж
	|ИЗ
	|	РегистрСведений.ИндНомер КАК ИндНомер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИндКод КАК ИндКодc
	|		ПО ИндНомер.индкод = ИндКодc.Ссылка
	|ГДЕ
	|	ИндНомер.ИндКод = &Ссылка";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьМакета = Макет.ПолучитьОбласть("ШтрихКод");
	ТабДок.Очистить();  
	
	Штрихкод =  ГенераторШтрихКода.ПолучитьКомпонентуШтрихКодирования(""); 
	Штрихкод.Ширина = 250; 
	Штрихкод.Высота = 250;
	Штрихкод.ТипКода = 16;
	Штрихкод.УголПоворота = 0;
	Штрихкод.ЗначениеКода = Строка(Ссылка);
	Штрихкод.ПрозрачныйФон = Истина;
	Штрихкод.ОтображатьТекст = Ложь;
	
	ДвоичныйШтрихКод = штрихкод.ПолучитьШтрихКод();
	КартинкаШтрихКод = Новый Картинка(ДвоичныйШтрихКод,Истина);
	ФайлКартинки 			             = КартинкаШтрихКод;
	ОбластьМакета.Рисунки.QRКод.Картинка = КартинкаШтрихКод;
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		ОбластьМакета.Параметры.Название = Выборка.Название;
		ОбластьМакета.Параметры.Код = Выборка.Наименование;
		//ОбластьМакета.Параметры.Место = Выборка.Стеллаж;
	КонецЦикла;   
	
	ТабДок.АвтоМасштаб = Истина; 
	ТабДок.Вывести(ОбластьМакета);
	Возврат табдок; 
	
КонецФункции




&НаКлиенте
Процедура НепроверенныеЦеныАвитоЧастникПриИзменении(Элемент)
	
	///+ГомзМА 19.10.2023
	КоличествоДеталей();
	///-ГомзМА 19.10.2023
	
КонецПроцедуры


&НаКлиенте
Процедура РассчётОстатков(Команда)
	ИтогиНаСервере();
КонецПроцедуры





Процедура УстановитьОграничениеДинамическогоСписка(Список, РазрешенныеПоля) Экспорт
	
	Для Каждого ЭлементНастроек Из Список.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы Цикл
		Для Каждого ЭлементОтбора Из ЭлементНастроек.Отбор.Элементы Цикл
			РазрешенныеПоля.Добавить(Строка(ЭлементОтбора.ЛевоеЗначение));
		КонецЦикла;
	КонецЦикла;
	МассивПолей = Новый Массив;
	Для Каждого ЭлементСписка Из Список.КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.Элементы Цикл
		Если РазрешенныеПоля.Найти(Строка(ЭлементСписка.Поле)) = Неопределено ИЛИ ЭлементСписка.Папка Тогда
			МассивПолей.Добавить(Строка(ЭлементСписка.Поле));
		КонецЕсли;
	КонецЦикла;
	
	Список.УстановитьОграниченияИспользованияВГруппировке(МассивПолей);
	Список.УстановитьОграниченияИспользованияВОтборе(МассивПолей);
	Список.УстановитьОграниченияИспользованияВПорядке(МассивПолей);
	
КонецПроцедуры // УстановитьОграничениеДинамическогоСписка()


&НаКлиенте
Процедура ОткрытьДетальНаСайте(Команда)
	
	///+ГомзМА 20.12.2023
	ИндКод = ЭтаФорма.Элементы.Партии.ТекущиеДанные.индкод;
	ОбщДействия.ОткрытьДетальНаСайте(ИндКод);
	///-ГомзМА 20.12.2023
	
КонецПроцедуры


&НаСервере
Процедура КомандаДляМоегоПиздатогоПоискаНаСервере()
	ТекстЕбейшегоЗапросаСПоиском = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажаЗапчастейТаблица.Ссылка) КАК Ссылка,
	|	ПродажаЗапчастейТаблица.Товар КАК Товар
	|ПОМЕСТИТЬ ВТ_Продажи
	|ИЗ
	|	Документ.ПродажаЗапчастей.Таблица КАК ПродажаЗапчастейТаблица
	|СГРУППИРОВАТЬ ПО
	|	ПродажаЗапчастейТаблица.Товар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИндНомер.индкод.Владелец КАК Товар,
	|	СУММА(ВЫБОР
	|		КОГДА ИндНомер.ЕстьФото
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК КоличествоТоваровСФото
	|ПОМЕСТИТЬ ВТ_КоличествоФото
	|ИЗ
	|	РегистрСведений.ИндНомер КАК ИндНомер
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|		ПО ИндНомер.индкод = РегистрНакопления1Остатки.индкод
	|ГДЕ
	|	ИндНомер.ЕстьФото
	|	И РегистрНакопления1Остатки.КолвоОстаток > 0
	|СГРУППИРОВАТЬ ПО
	|	ИндНомер.индкод.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИндНомер.индкод.Владелец КАК индкодВладелец,
	|	МАКСИМУМ(ИндНомер.АвитоЧастник) КАК АвитоЧастник,
	|	ИндНомер.ЦенаПроверена КАК ЦенаПроверена,
	|	ИндНомер.Комментарий КАК Комментарий
	|ПОМЕСТИТЬ ВТ_Проверка
	|ИЗ
	|	РегистрСведений.ИндНомер КАК ИндНомер
	|СГРУППИРОВАТЬ ПО
	|	ИндНомер.индкод.Владелец,
	|	ИндНомер.ЦенаПроверена,
	|	ИндНомер.Комментарий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Поиск
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Код ПОДОБНО &наименование
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Наименование ПОДОБНО &наименование
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	(Номенклатура.Артикул ПОДОБНО &наименование
	|	ИЛИ Номенклатура.АртикулПоиск ПОДОБНО &наименование)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.НомерПроизводителя ПОДОБНО &наименование
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НоменклатураНомераЗамен.Ссылка
	|ИЗ
	|	Справочник.Номенклатура.НомераЗамен КАК НоменклатураНомераЗамен
	|ГДЕ
	|	НоменклатураНомераЗамен.НомерЗамены ПОДОБНО &наименование
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НоменклатураКомплектность.Ссылка
	|ИЗ
	|	Справочник.Номенклатура.Комплектность КАК НоменклатураКомплектность
	|ГДЕ
	|	(НоменклатураКомплектность.НомерПоиск ПОДОБНО &Наименование
	|	ИЛИ НоменклатураКомплектность.Наименование ПОДОБНО &Наименование
	|	ИЛИ НоменклатураКомплектность.Артикул ПОДОБНО &Наименование)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(дт_ЦеныНоменклатуры.Период) КАК Период,
	|	дт_ЦеныНоменклатуры.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ МаксПериод
	|ИЗ
	|	РегистрСведений.дт_ЦеныНоменклатуры КАК дт_ЦеныНоменклатуры
	|СГРУППИРОВАТЬ ПО
	|	дт_ЦеныНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	дт_ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(дт_ЦеныНоменклатуры.Цена) КАК Цена
	|ПОМЕСТИТЬ Актуальная
	|ИЗ
	|	РегистрСведений.дт_ЦеныНоменклатуры КАК дт_ЦеныНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксПериод КАК МаксПериод
	|		ПО (дт_ЦеныНоменклатуры.Период = МаксПериод.Период)
	|		И (дт_ЦеныНоменклатуры.Номенклатура = МаксПериод.Номенклатура)
	|СГРУППИРОВАТЬ ПО
	|	дт_ЦеныНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураПредложения.Ссылка,
	|	КОЛИЧЕСТВО(НоменклатураПредложения.НомерСтроки) КАК КоличествоЗаписей
	|ПОМЕСТИТЬ ВТ_Предложения
	|ИЗ
	|	Справочник.Номенклатура.Предложения КАК НоменклатураПредложения
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураПредложения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Ссылка,
	|	СправочникНоменклатура.ВерсияДанных КАК ВерсияДанных,
	|	СправочникНоменклатура.ПометкаУдаления КАК ПометкаУдаления,
	|	СправочникНоменклатура.Предопределенный КАК Предопределенный,
	|	СправочникНоменклатура.Код КАК Код,
	|	СправочникНоменклатура.Наименование КАК Наименование,
	|	СправочникНоменклатура.Артикул КАК Артикул,
	|	СправочникНоменклатура.НомерПроизводителя КАК НомерПроизводителя,
	|	СправочникНоменклатура.Производитель КАК Производитель,
	|	СправочникНоменклатура.Состояние КАК Состояние,
	|	СправочникНоменклатура.Бренд КАК Бренд,
	|	СправочникНоменклатура.Фото КАК Фото,
	|	СправочникНоменклатура.НаименованиеПолное КАК НаименованиеПолное,
	|	РегистрНакопления1Остатки.КолвоОстаток КАК КолвоОстаток,
	|	РезервОстатки.КолвоОстаток КАК КолвоОстаток1,
	|	СправочникНоменклатура.ЭтоНоваяЗапчасть КАК ЭтоНоваяЗапчасть,
	|	СправочникНоменклатура.РекомендованаяЦена КАК РекомендованаяЦена,
	|	СправочникНоменклатура.ЦенаПроверена КАК ЦенаПроверена,
	|	МестаХраненияНоменклатуры.МестоХранения КАК МестоХранения,
	|	СправочникНоменклатура.ЦенаФиксирована КАК ЦенаФиксирована,
	|	СправочникНоменклатура.Серия КАК Серия,
	|	СправочникНоменклатура.Вес КАК Вес,
	|	СправочникНоменклатура.Объем КАК Объем,
	|	СправочникНоменклатура.длин КАК длин,
	|	СправочникНоменклатура.шир КАК шир,
	|	СправочникНоменклатура.выс КАК выс,
	|	СправочникНоменклатура.Размеры КАК Размеры,
	|	СправочникНоменклатура.МинимальныйОстаток КАК МинимальныйОстаток,
	|	ВТ_Проверка.АвитоЧастник КАК АвитоЧастник,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_КоличествоФото.КоличествоТоваровСФото, 0) < ВЫБОР
	|			КОГДА СправочникНоменклатура.МинимальныйОстаток = 0
	|				ТОГДА 3
	|			ИНАЧЕ СправочникНоменклатура.МинимальныйОстаток
	|		КОНЕЦ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Витрина,
	|	ВТ_Продажи.Ссылка КАК КоличествоПродаж,
	|	ОКР(Актуальная.Цена, 0) КАК Цена,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_Предложения.КоличествоЗаписей, 0) > 0
	|			ТОГДА ""Заполнено""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Предложения
	|ИЗ
	|	ВТ_Поиск КАК ВТ_Поиск
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки(,
	|			НЕ &ЕстьОтборПоСкладу
	|			ИЛИ Склад = &Склад) КАК РегистрНакопления1Остатки
	|			ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Резерв.Остатки КАК РезервОстатки
	|			ПО СправочникНоменклатура.Ссылка = РезервОстатки.Товар
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				МестаХранения.Номенклатура КАК Номенклатура,
	|				МАКСИМУМ(МестаХранения.МестоХранения) КАК МестоХранения
	|			ИЗ
	|				РегистрСведений.дт_МестаХраненияНоменклатуры.СрезПоследних(, Склад = &Склад) КАК МестаХранения
	|			СГРУППИРОВАТЬ ПО
	|				МестаХранения.Номенклатура) КАК МестаХраненияНоменклатуры
	|			ПО СправочникНоменклатура.Ссылка = МестаХраненияНоменклатуры.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Проверка КАК ВТ_Проверка
	|			ПО СправочникНоменклатура.Ссылка = ВТ_Проверка.индкодВладелец
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоФото КАК ВТ_КоличествоФото
	|			ПО СправочникНоменклатура.Ссылка = ВТ_КоличествоФото.Товар
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Продажи КАК ВТ_Продажи
	|			ПО СправочникНоменклатура.Ссылка = ВТ_Продажи.Товар
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Предложения КАК ВТ_Предложения
	|			ПО ВТ_Предложения.Ссылка = СправочникНоменклатура.Ссылка
	|		ПО ВТ_Поиск.Ссылка = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Актуальная КАК Актуальная
	|		ПО ВТ_Поиск.Ссылка = Актуальная.Номенклатура
	|ГДЕ
	|	СправочникНоменклатура.ВАрхив = ЛОЖЬ";

	Список.ТекстЗапроса = ТекстЕбейшегоЗапросаСПоиском;
	Если СтрНайти(МойПиздатыйПоиск, "00") = 1 Тогда
		длина = СтрДлина(МойПиздатыйПоиск);
		Пока длина < 9 Цикл
			МойПиздатыйПоиск = "0" + МойПиздатыйПоиск;
			длина = длина + 1;
		КонецЦикла;
	КонецЕсли;
	Список.Параметры.УстановитьЗначениеПараметра("наименование", "%" + МойПиздатыйПоиск + "%");	
	
	
	/// Комлев 06/06/24 +++
	Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоСкладу", ЗначениеЗаполнено(Склад));
	Список.Параметры.УстановитьЗначениеПараметра("Склад", Склад);
	
	/// Комлев 06/06/24 ---
	
	/// Комлев 18/07/24 +++
	//Список.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДата());
	/// Комлев 18/07/24 ---
КонецПроцедуры


&НаКлиенте
Процедура КомандаДляМоегоПиздатогоПоиска(Команда)
	КомандаДляМоегоПиздатогоПоискаНаСервере();
КонецПроцедуры





&НаКлиенте
Процедура МойПиздатыйПоискПриИзменении(Элемент)
	КомандаДляМоегоПиздатогоПоискаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтменаРаспро(Команда)
	ОбщегоНазначенияВызовСервера.ОтменаРаспродажи();
	
	Элементы.Список.Обновить();

КонецПроцедуры



