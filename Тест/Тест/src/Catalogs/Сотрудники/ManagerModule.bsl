#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры


Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьРеквизиты(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка,
	|	Сотрудники.Наименование,
	|	Сотрудники.Фамилия,
	|	Сотрудники.Имя,
	|	Сотрудники.Отчество,
	|	Сотрудники.ДатаРождения,
	|	Сотрудники.ПаспортСерияНомер,
	|	Сотрудники.ПаспортКемВыдан,
	|	Сотрудники.ПаспортДатаВыдачи,
	|	Сотрудники.ПаспортКодПодразделения
	|ПОМЕСТИТЬ втСотрудники
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сотрудники.Фамилия,
	|	Сотрудники.Имя,
	|	Сотрудники.Отчество,
	|	Сотрудники.Наименование,
	|	Сотрудники.ПаспортСерияНомер,
	|	Сотрудники.ПаспортКемВыдан,
	|	Сотрудники.ПаспортДатаВыдачи,
	|	Сотрудники.ПаспортКодПодразделения,
	|	КИФактическийАдрес.Представление КАК ФактическийАдрес,
	|	КИТелефон.Представление КАК Телефоны,
	|	КИEmail.Представление КАК Email
	|ИЗ
	|	втСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники.КонтактнаяИнформация КАК КИФактическийАдрес
	|		ПО КИФактическийАдрес.Ссылка = Сотрудники.Ссылка
	|		И КИФактическийАдрес.Вид = &ВидКИ1
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники.КонтактнаяИнформация КАК КИТелефон
	|		ПО КИТелефон.Ссылка = Сотрудники.Ссылка
	|		И КИТелефон.Вид = &ВидКИ2
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники.КонтактнаяИнформация КАК КИEmail
	|		ПО КИEmail.Ссылка = Сотрудники.Ссылка
	|		И КИEmail.Вид = &ВидКИ3";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидКИ1", Справочники.ВидыКонтактнойИнформации.АдресСотрудникаФактический);
	Запрос.УстановитьПараметр("ВидКИ2", Справочники.ВидыКонтактнойИнформации.ТелефонСотрудникаЛичный);
	Запрос.УстановитьПараметр("ВидКИ3", Справочники.ВидыКонтактнойИнформации.EmailСотрудника);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат новый Структура();
	КонецЕсли;
	
	
	Результат = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РезультатЗапроса.Выгрузить()[0]);
	
	ФИО = Новый Массив();
	РеквизитыФИО = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Фамилия,Имя,Отчество");
	Для каждого Реквизит Из РеквизитыФИО Цикл
		Если ЗначениеЗаполнено(Результат[Реквизит]) Тогда
			ФИО.Добавить(Результат[Реквизит]);
		КонецЕсли;
	КонецЦикла;
	
	ФИО = СтрСоединить(ФИО, " ");
	
	Результат.Вставить("НаименованиеДляПечатныхФорм", ФИО);
	Результат.Вставить("НаименованиеПолное", ФИО);
	Результат.Вставить("ФамилияИнициалы", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИО));
	
	Результат.Вставить("Паспорт", 
		СтрШаблон("Паспорт %1 выдан %2 г. %3", 
			Результат.ПаспортСерияНомер,
			Формат(Результат.ПаспортДатаВыдачи, "ДЛФ=D;"),
			Результат.ПаспортКемВыдан
		)
	);
	
	
	Возврат Результат;
		
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли
// Процедура заполняет табличный документ для печати.
//
// Параметры:
//	ТабДок - ТабличныйДокумент - табличный документ для заполнения и печати.
//	Ссылка - Произвольный - содержит ссылку на объект, для которого вызвана команда печати.
Процедура ПечатьВсего(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(ПечатьВсего)
	Макет = Справочники.Сотрудники.ПолучитьМакет("ПечатьВсего");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Сотрудники.Фамилия,
		|	Сотрудники.Имя,
		|	Сотрудники.Отчество,
		|	Сотрудники.ДатаРождения,
		|	Сотрудники.Обязанности,
		|	Сотрудники.Руководитель,
		|	Сотрудники.МестоРаботы,
		|	Сотрудники.ДатаНачалаРаботы,
		|	Сотрудники.Тележка,
		|	Сотрудники.КонтактнаяИнформация.(
		|		Вид,
		|		НомерТелефона),
		|	Сотрудники.РолиWT10.(
		|		НомерСтроки,
		|		Роль)
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьКонтактнаяИнформацияШапка = Макет.ПолучитьОбласть("КонтактнаяИнформацияШапка");
	ОбластьКонтактнаяИнформация = Макет.ПолучитьОбласть("КонтактнаяИнформация");ОбластьРолиWT10Шапка = Макет.ПолучитьОбласть("РолиWT10Шапка");
	ОбластьРолиWT10 = Макет.ПолучитьОбласть("РолиWT10");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());	
		ТабДок.Вывести(ОбластьКонтактнаяИнформацияШапка);
		ВыборкаКонтактнаяИнформация = Выборка.КонтактнаяИнформация.Выбрать();
		Пока ВыборкаКонтактнаяИнформация.Следующий() Цикл
			ОбластьКонтактнаяИнформация.Параметры.Заполнить(ВыборкаКонтактнаяИнформация);
			ТабДок.Вывести(ОбластьКонтактнаяИнформация, ВыборкаКонтактнаяИнформация.Уровень());
		КонецЦикла;		ТабДок.Вывести(ОбластьРолиWT10Шапка);
		ВыборкаРолиWT10 = Выборка.РолиWT10.Выбрать();
		Пока ВыборкаРолиWT10.Следующий() Цикл
			ОбластьРолиWT10.Параметры.Заполнить(ВыборкаРолиWT10);
			ТабДок.Вывести(ОбластьРолиWT10, ВыборкаРолиWT10.Уровень());
		КонецЦикла;
		
		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);	
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры
