


&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.Контроль Тогда
	ОбработкаКонтроля(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	Иначе
	//ПоказатьЗначение(,элементы.Список.ТекущиеДанные.ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКонтроля(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)	
	//Нас интересует только событие нажатия на чекбокс
	
		
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			Если ТекущиеДанные.Контроль Тогда
				СнятьКонтроль(ТекущиеДанные.Ссылка);
			Иначе
				ПоставитьКонтроль(ТекущиеДанные.Ссылка);
			КонецЕсли;
		КонецЕсли;
		
		
	//Параметр в динамическом списке нужно обновить
	//Список.Параметры.УстановитьЗначениеПараметра("ВыбраннаяЗапись", ВыбраннаяЗапись);
	
	Элементы.Список.Обновить();
КонецПроцедуры


&НаСервере
Процедура СнятьКонтроль(Запись)
	Док = Запись.получитьОбъект();
	Док.контроль = Ложь;
	Док.Записать();
КонецПроцедуры

&НаСервере
Процедура ПоставитьКонтроль(Запись)
	Док = Запись.получитьОбъект();
	Док.контроль = Истина;
	Док.Записать();
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	//Список.Параметры.УстановитьЗначениеПараметра("ВидКИТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонСотрудникаЛичный);
	
	УстановитьУсловноеОформление();
	
	///+ГомзМА
	//Ограничение вывода информации по пользователям
	Если НЕ ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("дт_Зарплата")) И 
		 НЕ	ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("дт_ПолныеПрава")) И 
		 НЕ ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("Руководитель")) И 
		 НЕ	ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("дт_ИнвентарьИзменение")) И 
		 НЕ	ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("дт_Кадры")) Тогда
	
		ТекущийПользователь = Пользователи.ТекущийПользователь();                                                        
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Пользователь");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ТекущийПользователь;
		
		ТолькоПросмотр = Истина;
	КонецЕсли;
	///-ГомзМА
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьОтбор()

	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	//	Список, 
	//	"Действующий", 
	//	ИСТИНА, 
	//	ВидСравненияКомпоновкиДанных.Равно,
	//	, 
	//	РежимОтображения = 0
	//);
	
	Если РежимОтображения = 1 Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Недействителен", Истина);
		Список.Параметры.УстановитьЗначениеПараметра("Действителен", Ложь);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("Недействителен", Ложь);
		Список.Параметры.УстановитьЗначениеПараметра("Действителен", Ложь);
	КонецЕсли;
	
	
	ИтогиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РежимОтображенияПриИзменении(Элемент)
	ОбновитьОтбор();
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	//Элементы.СписокОклад.Видимость = Пользователи.РолиДоступны("ПолныеПрава,Дт_зарплата");
	Элементы.Оклад1.Видимость = Пользователи.РолиДоступны("ПолныеПрава,Дт_зарплата");
	// Действующий
	ЭлементУО = Список.УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
			"Должность", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьОтбор();

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры



&НаСервере
Процедура ИтогиНаСервере()
	
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	
	//Получаем настройки пользователя (отборы, сортировки и т.п.)
	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	//Выводим динамический список в таблицу значений
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//ИтогиКоличества = Результат.Итог("КолвоОстаток");
	КоличествоСотрудников = 0;
	Для каждого стр из Результат Цикл
				КоличествоСотрудников = КоличествоСотрудников + 1;
	
	КонецЦикла;


КонецПроцедуры


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);

	ИтогиНаСервере();
КонецПроцедуры

