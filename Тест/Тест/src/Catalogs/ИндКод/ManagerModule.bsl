#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьПартиюПоКоду(Код, Номенклатура, ДокументПоступления, Отказ = ложь) Экспорт

	эл = Неопределено;
	
	// Сначала ищем старую партию (без владельца)
	рез = Справочники.ИндКод.НайтиПоНаименованию(код,,, Справочники.Номенклатура.ПустаяСсылка());
	Если рез.Пустая() Тогда
		рез = Справочники.ИндКод.НайтиПоНаименованию(код,,, Номенклатура);
	КонецЕсли;
	
	Если ДокументПоступления <> Неопределено Тогда
		Если рез.Пустая() Тогда
			эл = Справочники.ИндКод.СоздатьЭлемент();
			эл.Владелец = Номенклатура;
			эл.Наименование = код;
			эл.ДатаПоступления = ДокументПоступления.Дата;
			эл.ДокументПоступления = ДокументПоступления.Ссылка;
		Иначе
			СвойстваПартии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(рез, "ДатаПоступления,Владелец,ДокументПоступления");
			Если СвойстваПартии.ДатаПоступления <> ДокументПоступления.Дата 
				ИЛИ НЕ ЗначениеЗаполнено(СвойстваПартии.Владелец)
				ИЛИ НЕ СвойстваПартии.ДокументПоступления = ДокументПоступления.Ссылка Тогда
				
				эл = рез.ПолучитьОбъект();
				эл.ДатаПоступления = ДокументПоступления.Дата;
				эл.Владелец = Номенклатура;
				эл.ДокументПоступления = ДокументПоступления.Ссылка;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если эл <> неопределено Тогда
	
		Попытка
		
			эл.Записать();	
		
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон("Не удалось записать партию %1. %2",
					эл,
					ОписаниеОшибки()),
				,
				,
				,
				Отказ
			);
				
		
		КонецПопытки;
		
		рез = эл.Ссылка;
		
	КонецЕсли;
	
	возврат рез;
	

КонецФункции // ПолучитьПартиюПоКоду()

Функция СоздатьНовыйЭлемент(ДанныеЗаполнения, Отказ) Экспорт
	
	Результат = Неопределено;
	
	КодНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения.Номенклатура, "Код");
	КодНоменклатуры = дт_ПрефиксацияКлиентСервер.НомерНаПечать(КодНоменклатуры);
	
	КодАвтомобиля = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения.Автомобиль, "КодМашины");
	
	// Получим свободный номер
	СвободныйНомер = ПолучитьСвободныйНомер(ДанныеЗаполнения.Номенклатура, КодАвтомобиля);
	
	КодНовый = "00" + Формат(КодНоменклатуры,"ЧЦ=10;ЧГ=0") + "_" + КодАвтомобиля + "_" + СвободныйНомер;
	
	Спр = Справочники.ИндКод.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(Спр, ДанныеЗаполнения);
	Спр.Владелец = ДанныеЗаполнения.Номенклатура;
	Спр.Наименование = КодНовый;
	
	Попытка
		Спр.Записать();
		Результат = Спр.Ссылка;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон("Не удалось записать партию %1. %2",
				Спр,
				ОписаниеОшибки()),
			,
			,
			,
			Отказ
		);
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьСвободныйНомер(Номенклатура, КодАвтомобиля) Экспорт
	
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	ИндКод.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ИндКод КАК ИндКод
	               |ГДЕ
	               |	ИндКод.Владелец = &Владелец
	               |	И ИндКод.Наименование ПОДОБНО &СтрокаПоиска";
	
	Запрос.УстановитьПараметр("Владелец", Номенклатура);
	Запрос.УстановитьПараметр("СтрокаПоиска", "%_" + КодАвтомобиля + "_%");
	
	Результат = запрос.Выполнить().Выгрузить().Количество() + 1;
	
	возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли