
&НаКлиенте
Процедура СписокОбязанностейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		СтандартнаяОбработка = Ложь;
	СсылкаДляОткрытия    = Элементы.СписокОбязанностей.ТекущиеДанные[СтрЗаменить(Поле.Имя,Элемент.имя,"")];
	ПараметрыФормы       = Новый Структура("Ключ", СсылкаДляОткрытия);
	Если ТипЗнч(СсылкаДляОткрытия)=тип("СправочникСсылка.Обязанности") Тогда
		ИмяФормыДокумента="Справочник.обязанности.Форма.Формаэлемента";
		//ИначеЕсли ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.КадровыйПриказ") Тогда
		//ИмяФормыДокумента="Документ.КадровыйПриказ.Форма.ФормаДокумента";
		//Возврат;
	КонецЕсли;
	
	ФормаДокумента = ПолучитьФорму(ИмяФормыДокумента, ПараметрыФормы);
	ФормаДокумента.Открыть();
КонецПроцедуры

#Область ОбработчикиСобытийФормы
&НаСервере
Функция ПолучитьДанныеКадровогоПриказа()
// ++ Мазин 15.05.24
  Запрос = Новый Запрос;
  Запрос.Текст =
  	"ВЫБРАТЬ
  	|	ДолжностиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
  	|	МАКСИМУМ(ДолжностиСотрудниковСрезПоследних.Регистратор.Дата) КАК РегистраторДата1
  	|ПОМЕСТИТЬ ВременнаяТаблица
  	|ИЗ
  	|	РегистрСведений.ДолжностиСотрудников.СрезПоследних КАК ДолжностиСотрудниковСрезПоследних
  	|СГРУППИРОВАТЬ ПО
  	|	ДолжностиСотрудниковСрезПоследних.Сотрудник
  	|;
  	|
  	|////////////////////////////////////////////////////////////////////////////////
  	|ВЫБРАТЬ
  	|	Сотрудники.Пользователь КАК Пользователь
  	|ИЗ
  	|	РегистрСведений.ДолжностиСотрудников.СрезПоследних КАК ДолжностиСотрудниковСрезПоследних
  	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблица КАК ВременнаяТаблица
  	|		ПО (ВременнаяТаблица.РегистраторДата1 = ДолжностиСотрудниковСрезПоследних.Регистратор.Дата)
  	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
  	|		ПО (ДолжностиСотрудниковСрезПоследних.Сотрудник = Сотрудники.Ссылка)
  	|ГДЕ
  	|	ДолжностиСотрудниковСрезПоследних.Подразделение = &Подразделение";
  
  Запрос.УстановитьПараметр("Подразделение",Объект.Ссылка );
  
  РезультатЗапроса = Запрос.Выполнить();
  
  ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
  ФИО = Новый Массив;
  Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
  ФИО.Добавить(ВыборкаДетальныеЗаписи.Пользователь); 	
  КонецЦикла;
  Возврат ФИО; 
 // -- Мазин 15.05.24
КонецФункции
&НаКлиенте
Процедура СравнитьРезультатЗапроса() 
// ++ Мазин 15.05.24
    ФИО = ПолучитьДанныеКадровогоПриказа(); 
    Для каждого Элемент Из ФИО Цикл 
          ФлагСовпадения = Ложь;
        Для каждого ЭлементСправочника Из Объект.Участники Цикл
            Если ЭлементСправочника.Сотрудник = Элемент Тогда 
                ФлагСовпадения = Истина;
                Прервать; 
            КонецЕсли;   	
        КонецЦикла;
        Если ФлагСовпадения = Ложь Тогда
            НоваяСтрока =Объект.Участники.Добавить(); 
			НоваяСтрока.Сотрудник = Элемент; 
        КонецЕсли;
    КонецЦикла; 
// -- Мазин 15.05.24
КонецПроцедуры
&НаСервере
Функция ОкладсотрудниковУправления ()
	//++Мазин 17.05.24
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(Подразделения.Оклад) КАК Оклад
		|ИЗ
		|	Справочник.Подразделения КАК Подразделения
		|ГДЕ
		|	Подразделения.Родитель = &Родитель";
	
	Запрос.УстановитьПараметр("Родитель", Объект.Родитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
	
	КонецЦикла;
		Если Подразделения.Родитель.Код = "000000105" Тогда 
		Объект.Оклад = ; 
	
	//--Мазин 17.05.24
КонецФункции
&НаКлиенте
Процедура ОбновитьСписокСотрудников(Команда)
//++Мазин 15.05.24
	
	Индекс = Объект.Участники.Количество() - 1;
	Пока Индекс >= 0 Цикл
    Объект.Участники.Удалить(Индекс);
    Индекс = Индекс - 1;
	КонецЦикла;
	СравнитьРезультатЗапроса(); 
	// -- Мазин 15.05.24
КонецПроцедуры
&НаСервере
Функция ОкладсотрудниковПодразделения ()
	//++Мазин 17.05.24
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДолжностиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(ДолжностиСотрудниковСрезПоследних.Регистратор.Дата) КАК РегистраторДата1
		|ПОМЕСТИТЬ ВременнаяТаблица
		|ИЗ
		|	РегистрСведений.ДолжностиСотрудников.СрезПоследних КАК ДолжностиСотрудниковСрезПоследних
		|СГРУППИРОВАТЬ ПО
		|	ДолжностиСотрудниковСрезПоследних.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(КадровыйПриказ.Оклад) КАК Оклад,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КадровыйПриказ.Сотрудник) КАК Сотрудник
		|ИЗ
		|	ВременнаяТаблица КАК ВременнаяТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КадровыйПриказ КАК КадровыйПриказ
		|		ПО (КадровыйПриказ.Дата = ВременнаяТаблица.РегистраторДата1)
		|ГДЕ
		|	КадровыйПриказ.Отдел = &Отдел";
	
	Запрос.УстановитьПараметр("Отдел", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Объект.Оклад = ВыборкаДетальныеЗаписи.Оклад; 
	КонецЦикла;
	//--Мазин 17.05.24
КонецФункции
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УправлениеФормой(ЭтаФорма);
	ОбновитьСписки();
	ОбновитьКоличествоОбязанностей();
	Получитькомпоненту(); 
	Элементы.QRКод.РазмерКартинки = РазмерКартинки.АвтоРазмер;
	//++Мазин 17-05-24
	ОкладсотрудниковПодразделения (); 
	//--Мазин 17-05-24
	//ПолучитьСуммуОкладов();
КонецПроцедуры

&НаСервере
Процедура Получитькомпоненту()
	ТекстОшибки = "";
	
	Штрихкод =  ГенераторШтрихКода.ПолучитьКомпонентуШтрихКодирования(ТекстОшибки); 
	Штрихкод.Ширина = 250; 
	Штрихкод.Высота = 250;
	Штрихкод.ТипКода = 16;
	Штрихкод.УголПоворота = 0;
	Штрихкод.ЗначениеКода = "{ ""id_doc"":"+ """" + Объект.Код + """" + ",""type"":" +" ""Отдел""}";
	Штрихкод.ПрозрачныйФон = Истина;
	Штрихкод.ОтображатьТекст = Ложь;
	
	ДвоичныйШтрихКод = штрихкод.ПолучитьШтрихКод();
	КартинкаШтрихКод = Новый Картинка(ДвоичныйШтрихКод,Истина);
	
	QRкод = ПоместитьВоВременноеХранилище(КартинкаШтрихКод,УникальныйИдентификатор);
	//возврат истина;
КонецПроцедуры

Процедура ОбновитьСписки()
	СписокДолжостей.Параметры.УстановитьЗначениеПараметра("Родитель", Объект.Ссылка);
	СписокОбязанностей.Параметры.УстановитьЗначениеПараметра("Отдел", Объект.Ссылка);
	СписокКадровыеПриказы.Параметры.УстановитьЗначениеПараметра("Отдел", Объект.Ссылка);
	СписокСотрудников.Параметры.УстановитьЗначениеПараметра("Родитель", Объект.Ссылка);
КонецПроцедуры
&НаСервере
Процедура ОбновитьКоличествоОбязанностей()
Для каждого стр из объект.Должности Цикл
Запрос = новый Запрос();
Запрос.Текст = "ВЫБРАТЬ
|	ПодразделенияДолжности.Должность,
|	КОЛИЧЕСТВО(ДолжностиПредприятияОбязанности.Обязанность) КАК Обязанность
|ИЗ
|	Справочник.ДолжностиПредприятия.Обязанности КАК ДолжностиПредприятияОбязанности
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подразделения.Должности КАК ПодразделенияДолжности
|		ПО ПодразделенияДолжности.должность = ДолжностиПредприятияОбязанности.ссылка
|ГДЕ
|	ПодразделенияДолжности.Должность = &Должность
|СГРУППИРОВАТЬ ПО
|	ПодразделенияДолжности.Должность";
запрос.УстановитьПараметр("Должность",стр.Должность );
//@skip-check query-in-loop
 Выборка = Запрос.Выполнить().Выбрать();
 Выборка.следующий();
 Стр.КоличествоОбязанностей = ВЫборка.Обязанность
КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьДолжности(Команда)
	Если ТумблерДолжностей Тогда
		Элементы.ПоказатьСкрытьДолжности.Заголовок = "Показать должности и сотрудников всех подотделов";
		Элементы.СписокДолжостей.Видимость = Ложь;
		Элементы.Должности1.Видимость = Истина;
		Элементы.Участники.Видимость = Истина;
		Элементы.СписокСотрудников.Видимость = Ложь;
		ТумблерДолжностей = Ложь;
	Иначе
		Элементы.ПоказатьСкрытьДолжности.Заголовок = "Показать должности и сотрудников этого отдела";
		Элементы.СписокДолжостей.Видимость = Истина;
		Элементы.Должности1.Видимость = Ложь;
		Элементы.Участники.Видимость = Ложь;
		Элементы.СписокСотрудников.Видимость = Истина;
		ТумблерДолжностей = Истина;
	КонецЕсли;	
ОбновитьСписки();
КонецПроцедуры


&НаКлиенте
Процедура ОБновитьОбязанности(Команда)
	ОбновитьКоличествоОбязанностей();
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭтоЦФОПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы



&НаКлиенте
Процедура УчастникиСотрудникОткрытие(Элемент, СтандартнаяОбработка)
	//УчастникиСотрудникОткрытиеНаСервере();
	ТекДанные = Элементы.Участники.ТекущиеДанные;
	СтандартнаяОбработка = Ложь;
	СсылкаДляОткрытия=УчастникиСотрудникОткрытиеНаСервере(ТекДанные.сотрудник);
	ПараметрыФормы = Новый Структура("Ключ", СсылкаДляОткрытия);
	//Если ТипЗнч(СсылкаДляОткрытия)=тип("справочникСсылка.Обязанности") Тогда
		ИмяФормыДокумента="справочник.сотрудники.Форма.ФормаЭлемента";
	//Иначе
	//	Возврат;
	//КонецЕсли;
	ФормаДокумента = ПолучитьФорму(ИмяФормыДокумента, ПараметрыФормы);
	ФормаДокумента.Открыть();
КонецПроцедуры

&НаСервере
Функция УчастникиСотрудникОткрытиеНаСервере(Юзер)
	Возврат Справочники.Сотрудники.НайтиПоРеквизиту("Пользователь",Юзер);
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	//Элементы.Город.Видимость = Объект.ЭтоЦФО;
	
КонецПроцедуры

&НаСервере
Процедура РассчётДохода()
	ПолучитьСуммуОкладов();
	Объект.Доход = (Константы.ВыручкаПредприятия.Получить() * (Объект.ПроценОтВыручки/100)) + Объект.оклад;
	Объект.Премия = (Константы.ВыручкаПредприятия.Получить() * (Объект.ПроценОтВыручки/100));
	Доход = (Константы.ВыручкаПредприятия.Получить() * (Объект.ПроценОтВыручки/100)) + Объект.оклад;
КонецПроцедуры

Процедура ПолучитьСуммуОкладов()
Запрос = новый Запрос();
Запрос.Текст = "ВЫБРАТЬ
|
|	КадровыйПриказ.Сотрудник КАК Сотрудник,
|	МАКСИМУМ(КадровыйПриказ.Дата) КАК ДатаДоговора
|ПОМЕСТИТЬ ВТ_ДолжностиПериод
|ИЗ
|	Документ.КадровыйПриказ КАК КадровыйПриказ
|ГДЕ
|	КадровыйПриказ.Отдел = &Отдел
|СГРУППИРОВАТЬ ПО
|	КадровыйПриказ.Сотрудник
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	КадровыйПриказ.Отдел КАК Отдел,
|	СУММА(КадровыйПриказ.Оклад) КАК Оклад
|ИЗ
|	Документ.КадровыйПриказ КАК КадровыйПриказ
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДолжностиПериод КАК ВТ_ДолжностиПериод
|		ПО КадровыйПриказ.Сотрудник = ВТ_ДолжностиПериод.Сотрудник
|		И (ВТ_ДолжностиПериод.ДатаДоговора = КадровыйПриказ.Дата)
|СГРУППИРОВАТЬ ПО
|	КадровыйПриказ.Отдел";
Запрос.УстановитьПараметр("Отдел",Объект.Ссылка );

Выборка = Запрос.Выполнить().Выбрать();

Выборка.Следующий();

Оклад = Выборка.Оклад;


КонецПроцедуры

&НаКлиенте
Процедура ПроценОтВыручкиПриИзменении(Элемент)
	РассчётДохода();
КонецПроцедуры
 
#КонецОбласти

