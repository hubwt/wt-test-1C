&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	
	
	СкладНН  = ПолучитьСклады().СкладНН;
	СкладМСК  = ПолучитьСклады().СкладМСК;
	СкладЕКБ  = ПолучитьСклады().СкладЕКБ;
	Для Каждого СтрокаТЧ Из Объект.ЗакупленныйТовар Цикл
		СтрокаТЧ.ОстаткиНН = ПолучитьОстаткиПоСкладам(СтрокаТЧ.Товар, СкладНН, Объект.Дата);
		СтрокаТЧ.ОстаткиМСК = ПолучитьОстаткиПоСкладам(СтрокаТЧ.Товар, СкладМСК, Объект.Дата);
		СтрокаТЧ.ОстаткиЕКБ = ПолучитьОстаткиПоСкладам(СтрокаТЧ.Товар, СкладЕКБ, Объект.Дата);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСклады()
	СкладНН  = Справочники.Склады.НайтиПоКоду("000000002");
	СкладМСК  = Справочники.Склады.НайтиПоКоду("000000005");	
	СкладЕКБ  = Справочники.Склады.НайтиПоКоду("000000008");
	
	СтруктураСклады = Новый Структура;
	СтруктураСклады.Вставить("СкладНН", СкладНН);
	СтруктураСклады.Вставить("СкладМСК", СкладМСК);
	СтруктураСклады.Вставить("СкладЕКБ", СкладЕКБ);
	
	Возврат СтруктураСклады;
КонецФункции
&НаСервереБезКонтекста
Функция ПолучитьОстаткиПоСкладам(Товар, Склад, ДатаДокумента)
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РегистрНакопления1Остатки.КолвоОстаток КАК Остаток
		|ИЗ
		|	РегистрНакопления.РегистрНакопления1.Остатки(&ДатаДокумента, Товар = &Товар
		|	И Склад = &Склад) КАК РегистрНакопления1Остатки";
	
	Запрос.УстановитьПараметр("Товар", Товар);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Остаток;
	КонецЦикла;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
//	ДокСсылка = ПриОткрытииНаСервере();
//	
//	Если ДокСсылка <> 0 Тогда
//		Отказ = Истина;
//		СсылкаНаЭлементСправочника = ДокСсылка;
//		ПараметрыФормы = Новый Структура("Ключ", СсылкаНаЭлементСправочника);
//		ОткрытьФорму("Документ.ЗаявкаЗакупкаТовара.Форма.ФормаДокумента", ПараметрыФормы);
//		//ОткрытьЗначение(ДокСсылка);     
//	КонецЕсли; 	

КонецПроцедуры

&НаСервере
Функция ПриОткрытииНаСервере()
//	Если  НЕ РеквизитФормыВЗначение("Объект").ЭтоНовый() Тогда
//		Возврат 0; //открывается уже существующий док
//	Иначе    
//		Запрос = Новый Запрос;
//		Запрос.Текст =  "ВЫБРАТЬ
//		|	ЗаявкаЗакупкаТовара.Ссылка КАК Ссылка
//		|ИЗ
//		|	Документ.ЗаявкаЗакупкаТовара КАК ЗаявкаЗакупкаТовара
//		|ГДЕ
//		|	ЗаявкаЗакупкаТовара.Основание = &Основание";
//		
//		Запрос.УстановитьПараметр("Основание", Объект.Основание);
//		Результат = Запрос.Выполнить();
//		Если Результат.Пустой() Тогда
//			Возврат 0; // документа нет
//		Иначе
//			Выборка = Результат.Выбрать();
//			Выборка.Следующий();
//			Возврат Выборка.Ссылка; //Возвращаем ссылку на существующий док
//		КонецЕсли;
//	КонецЕсли;
КонецФункции

&НаСервере
Функция ОбновитьСуммуДокумента()
	Объект.СуммаДокумента = Объект.ЗакупленныйТовар.Итог("Сумма")
КонецФункции

&НаКлиенте
Процедура ЗакупленныйТоварПриИзменении(Элемент)
	ОбновитьСуммуДокумента(); 
КонецПроцедуры

Функция ПолучитьСсылкуНаЗаявкаНаЗакупку()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявкаЗакупкаТовара.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗаявкаЗакупкаТовара КАК ЗаявкаЗакупкаТовара
		|ГДЕ
		|	ЗаявкаЗакупкаТовара.ЗаказНаряд = &ЗаказНаряд
		|	И ЗаявкаЗакупкаТовара.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ЗаказНаряд", Объект.Основание);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если 	РезультатЗапроса.Пустой() Тогда
			СсылкаЗаявкаНаЗакупку = Неопределено;
	Иначе 	
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			СсылкаЗаявкаНаЗакупку = Выборка.Ссылка; 
	КонецЕсли; 
	
	Возврат СсылкаЗаявкаНаЗакупку; 
	
КонецФункции 



