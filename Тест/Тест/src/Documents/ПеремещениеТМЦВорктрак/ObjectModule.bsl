
#Область ОбработчикиСобытийФормы

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();

	///+ГомзМА 21.06.2023
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТМЦВорктрак") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентарныеНомера.Ссылка КАК Ссылка,
		|	ИнвентарныеНомера.ДокументПоступления КАК ДокументПоступления,
		|	ИнвентарныеНомера.Владелец КАК Владелец,
		|	ИнвентарныеНомера.СерийныйНомер КАК СерийныйНомер
		|ИЗ
		|	Справочник.ИнвентарныеНомера КАК ИнвентарныеНомера
		|ГДЕ
		|	ИнвентарныеНомера.ДокументПоступления = &ДокументПоступления";
		
		Запрос.УстановитьПараметр("ДокументПоступления", ДанныеЗаполнения.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
		
		Пока РезультатЗапроса.Следующий() Цикл
			
			//Проверка на дубли в регистре накопления ДвижениеТМЦВорктрак
			Количество = РаботаСДокументамиТМЦВызовСервера.ПолучитьСуммуКоличестваЗадубленныхСтрок(РезультатЗапроса.ДокументПоступления, РезультатЗапроса.Ссылка);
						
			НоваяСтрока = СписокТМЦ.Добавить();
			НоваяСтрока.ИнвентарныйНомер 	= РезультатЗапроса.Ссылка;
			НоваяСтрока.ТМЦ 				= РезультатЗапроса.Владелец;
			НоваяСтрока.СерийныйНомер 		= РезультатЗапроса.СерийныйНомер;
			ДокументПоступленияТЧ = ПолучитьТабличнуюЧастьДокументаПоступление(РезультатЗапроса.Владелец, РезультатЗапроса.ДокументПоступления);
			
			Если ДокументПоступленияТЧ.ТипУчета = Перечисления.ТипУчетаТМЦ.УчестьПоштучно Тогда
				НоваяСтрока.Количество 			= 1;
				НоваяСтрока.Сумма 				= ДокументПоступленияТЧ.Цена;
			Иначе
				Если Количество = 0 Тогда
					НоваяСтрока.Количество 		= ДокументПоступленияТЧ.Количество;
				Иначе
					НоваяСтрока.Количество 		= Количество;
				КонецЕсли;
				НоваяСтрока.Сумма 				= ДокументПоступленияТЧ.Сумма;
			КонецЕсли;
			
			НоваяСтрока.Цена 					= ДокументПоступленияТЧ.Цена;
			НоваяСтрока.СкладСписания 			= ДокументПоступленияТЧ.Склад;
		КонецЦикла;
	КонецЕсли;
	///-ГомзМА 21.06.2023
	
КонецПроцедуры



Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	///+ГомзМА 18.04.2023
	Движения.ДвижениеТМЦВорктрак.Записывать = Истина;
		
		// регистр ДвижениеТМЦВорктрак Расход
		Для Каждого ТекСтрокаСписокТМЦ Из СписокТМЦ Цикл
			Движение 					= Движения.ДвижениеТМЦВорктрак.Добавить();
			Движение.ВидДвижения 		= ВидДвиженияНакопления.Расход;
			Движение.Период 	 		= Дата;
			Движение.ТМЦ 		 		= ТекСтрокаСписокТМЦ.ТМЦ;
			Движение.МестоХранения 		= ТекСтрокаСписокТМЦ.СкладСписания;
			Движение.ИнвентарныйНомер 	= ТекСтрокаСписокТМЦ.ИнвентарныйНомер;
			Движение.Количество 		= ТекСтрокаСписокТМЦ.Количество;
			Движение.Цена 				= ТекСтрокаСписокТМЦ.Цена;
		КонецЦикла;
		
		// регистр ДвижениеТМЦВорктрак Приход
		Для Каждого ТекСтрокаСписокТМЦ Из СписокТМЦ Цикл
			Движение 							= Движения.ДвижениеТМЦВорктрак.Добавить();
			Движение.ВидДвижения 			= ВидДвиженияНакопления.Приход;
			Движение.Период 					= Дата;
			Движение.ТМЦ 						= ТекСтрокаСписокТМЦ.ТМЦ;
			Движение.МестоХранения 		= ТекСтрокаСписокТМЦ.Склад;
			Движение.ИнвентарныйНомер 	= ТекСтрокаСписокТМЦ.ИнвентарныйНомер;
			Движение.Количество 			= ТекСтрокаСписокТМЦ.Количество;
			Движение.Цена 					= ТекСтрокаСписокТМЦ.Цена;
		КонецЦикла;
	
	Движения.Записать();
	
	Отказ = РегистрыНакопления.ДвижениеТМЦВорктрак.ЕстьОтрицательныеОстатки(Ссылка, Дата, ТекСтрокаСписокТМЦ.СкладСписания);
	///-ГомзМА 18.04.2023

			Движения.БюджетТМЦ.Записывать = Истина;	
			Для Каждого ТекСтрокаСписокТМЦ Из СписокТМЦ Цикл
					
					Движения.БюджетТМЦ.Записывать = Истина;						
					
					Структура = НайтиРасходТМЦ(ТекСтрокаСписокТМЦ.ИнвентарныйНомер,ТекСтрокаСписокТМЦ.Цена * ТекСтрокаСписокТМЦ.Количество,Ссылка);
					
					Движение 					= Движения.БюджетТМЦ.Добавить();
					//Измерения
					Движение.ВидДвижения 		= ВидДвиженияНакопления.Расход;
					Движение.Период				= ТекущаяДата(); 
					Движение.Регистратор		= Ссылка; 
					
					Движение.Статья				= Структура.Статья;
					Движение.Категрия			= Структура.Категрия;
					Движение.ВидыРасхода_3		= Структура.ВидыРасхода_3;
					Движение.Отдел				= Структура.Отдел;
					Движение.Филиал 			= Структура.Филиал;
					//Ресурсы
					Движение.ИнвентарныйНомер	= ТекСтрокаСписокТМЦ.ИнвентарныйНомер;
					Движение.Коментарий			= Структура.Коментарий;
					Движение.Расход				= Структура.Расход;
					Движение.Сумма				= (ТекСтрокаСписокТМЦ.Цена + ТекСтрокаСписокТМЦ.Доставка) * ТекСтрокаСписокТМЦ.Количество; 	 
					Движение.ТМЦ				= ТекСтрокаСписокТМЦ.ТМЦ;
					Движение.Количество			= ТекСтрокаСписокТМЦ.Количество;
					Движение.Цена				= ТекСтрокаСписокТМЦ.Цена;
					Движение.ДатаРасхода		= Структура.ДатаРасхода; 
					Движение.ДокРег				= Ссылка; 
					
					Движения.Записать();
					
			
		КонецЦикла;
			
		Для Каждого ТекСтрокаСписокТМЦ Из СписокТМЦ Цикл
				
			Структура = СписатьРасходСпоследненгоПеремещенияПоступления(ТекСтрокаСписокТМЦ.ИнвентарныйНомер);
			
			Если Структура.Расход <> Документы.Расходы.ПустаяСсылка() Тогда
				
				Движения.БюджетТМЦ.Записывать = Истина;
					
					Движение 					= Движения.БюджетТМЦ.Добавить();
					//Измерения
					Движение.ВидДвижения 		= ВидДвиженияНакопления.Приход;
					Движение.Период				= ТекущаяДата(); 
					Движение.Регистратор		= Ссылка; 
					
					Движение.Статья				= Статья;
					Движение.Категрия			= Категория;
					Движение.ВидыРасхода_3		= ВидыРасхода_3;
					Движение.Отдел				= Отдел;
					Движение.Филиал 			= Филиал;
					//Ресурсы
					Движение.ИнвентарныйНомер	= ТекСтрокаСписокТМЦ.ИнвентарныйНомер;
					Движение.Коментарий			= Структура.Коментарий;
					Движение.Расход				= Структура.Расход;
					Движение.Сумма				= (ТекСтрокаСписокТМЦ.Цена + ТекСтрокаСписокТМЦ.Доставка) * ТекСтрокаСписокТМЦ.Количество;	 
					Движение.ТМЦ				= ТекСтрокаСписокТМЦ.ТМЦ;
					Движение.Количество			= ТекСтрокаСписокТМЦ.Количество;
					Движение.Цена				= ТекСтрокаСписокТМЦ.Цена;
					Движение.ДатаРасхода		= Структура.ДатаРасхода;
					Движение.ДокРег				= Ссылка;  
			
			КонецЕсли; 
		
		КонецЦикла;

/// --- Запись в регистр БюджетТМЦ (МазинЕС)
 			
КонецПроцедуры

Функция НайтиРасходТМЦ(ИнвентарныйНомер,Сумма,ДокРег)

Структура= Новый Структура(); 

Запрос = Новый Запрос;
Запрос.Текст =
	"ВЫБРАТЬ 
	
	|	БюджетТМЦ.Расход
	
	|ИЗ
	|	РегистрНакопления.БюджетТМЦ КАК БюджетТМЦ
	|ГДЕ
	|	БюджетТМЦ.ИнвентарныйНомер = &ИнвентарныйНомер
	|	И БюджетТМЦ.ДокРег ССЫЛКА Документ.ПоступлениеТМЦВорктрак";

Запрос.УстановитьПараметр("ИнвентарныйНомер", ИнвентарныйНомер); 


РезультатЗапроса = Запрос.Выполнить();

ЕСЛИ НЕ РезультатЗапроса.Пустой() Тогда

			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			РасходПоступления = ВыборкаДетальныеЗаписи.Расход; 
			
		КонецЦикла;
		
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	БюджетТМЦОстатки.Расход КАК Расход,
			|	БюджетТМЦОстатки.СуммаОстаток КАК СуммаОстаток
			|ИЗ
			|	РегистрНакопления.БюджетТМЦ.Остатки(, ДокРег <> &ДокРег) КАК БюджетТМЦОстатки
			|ГДЕ
			|	БюджетТМЦОстатки.Статья.Код = ""000000837""
			|	И БюджетТМЦОстатки.ДатаРасхода <> ДАТАВРЕМЯ(1, 1, 1)
			|	И БюджетТМЦОстатки.Расход = &Расход
			|   И БюджетТМЦОстатки.ИнвентарныйНомер = &ИнвентарныйНомер";
		
		Запрос.УстановитьПараметр("Расход", РасходПоступления);
		Запрос.УстановитьПараметр("ДокРег", ДокРег);
		Запрос.УстановитьПараметр("ИнвентарныйНомер", ИнвентарныйНомер);
		
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		СуммаОстаток = 0; 
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СуммаОстаток = ВыборкаДетальныеЗаписи.СуммаОстаток; 
		КонецЦикла;
				
			Если СуммаОстаток - Сумма >= 0 Тогда	
				
				Запрос = Новый Запрос;
				Запрос.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	БюджетТМЦ.ИнвентарныйНомер,
				|	БюджетТМЦ.Период КАК Период,
				|	БюджетТМЦ.Расход,
				|	БюджетТМЦ.Коментарий,
				|	БюджетТМЦ.Статья,
				|	БюджетТМЦ.Категрия,
				|	БюджетТМЦ.ВидыРасхода_3,
				|	БюджетТМЦ.Отдел,
				|	БюджетТМЦ.Филиал,
				|	БюджетТМЦ.ДатаРасхода,
				|	БюджетТМЦ.ДокРег
				|ИЗ
				|	РегистрНакопления.БюджетТМЦ КАК БюджетТМЦ
				|ГДЕ
				|	БюджетТМЦ.ИнвентарныйНомер = &ИнвентарныйНомер
				|И БюджетТМЦ.ДокРег ССЫЛКА Документ.ПоступлениеТМЦВорктрак
				|
				|УПОРЯДОЧИТЬ ПО
				|	Период УБЫВ";
			
			Запрос.УстановитьПараметр("ИнвентарныйНомер", ИнвентарныйНомер);
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			 
			
			Структура.Вставить("Расход",Документы.Расходы.ПустаяСсылка());
			Структура.Вставить("ДатаРасхода",'20010101'); // Произвольная дата
			Структура.Вставить("Коментарий","");
			
			Структура.Вставить("Статья",		Справочники.ВидыРасходов_3.ПустаяСсылка());
			Структура.Вставить("Категрия",		Справочники.ВидыРасходов_3.ПустаяСсылка());
			Структура.Вставить("ВидыРасхода_3",	Справочники.ВидыРасходов_3.ПустаяСсылка());
			Структура.Вставить("Отдел",			Справочники.ВидыРасходов_3.ПустаяСсылка());
			Структура.Вставить("Филиал",		Справочники.ВидыРасходов_3.ПустаяСсылка());
			Структура.Вставить("ДокРег",		Документы.ПоступлениеТМЦВорктрак.ПустаяСсылка());
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Структура.Вставить("Расход",		ВыборкаДетальныеЗаписи.Расход );
				Структура.Вставить("ДатаРасхода",	ВыборкаДетальныеЗаписи.ДатаРасхода);
				Структура.Вставить("Коментарий",	ВыборкаДетальныеЗаписи.Коментарий);
				
				Структура.Вставить("Статья",		ВыборкаДетальныеЗаписи.Статья);
				Структура.Вставить("Категрия",		ВыборкаДетальныеЗаписи.Категрия);
				Структура.Вставить("ВидыРасхода_3",	ВыборкаДетальныеЗаписи.ВидыРасхода_3);
				Структура.Вставить("Отдел",			ВыборкаДетальныеЗаписи.Отдел);
				Структура.Вставить("Филиал",		ВыборкаДетальныеЗаписи.Филиал);
				Структура.Вставить("ДокРег",		ВыборкаДетальныеЗаписи.ДокРег);
			КонецЦикла;
					
			Возврат Структура;
			
		Иначе 
				
			Структура = СписатьРасходСпоследненгоПеремещенияПоступления(ИнвентарныйНомер); 
		
			Возврат Структура; 
		КонецЕСли; 

Иначе 
			Структура.Вставить("Расход",Документы.Расходы.ПустаяСсылка());
			Структура.Вставить("ДатаРасхода",'20010101'); // Произвольная дата
			Структура.Вставить("Коментарий","");
			
			Структура.Вставить("Статья",		Справочники.ВидыРасходов_3.ПустаяСсылка());
			Структура.Вставить("Категрия",		Справочники.ВидыРасходов_3.ПустаяСсылка());
			Структура.Вставить("ВидыРасхода_3",	Справочники.ВидыРасходов_3.ПустаяСсылка());
			Структура.Вставить("Отдел",			Справочники.ВидыРасходов_3.ПустаяСсылка());
			Структура.Вставить("Филиал",		Справочники.ВидыРасходов_3.ПустаяСсылка());
			Структура.Вставить("ДокРег",		Документы.ПоступлениеТМЦВорктрак.ПустаяСсылка());
			Возврат Структура;
КонецЕсли;

КонецФункции	

Функция СписатьРасходСпоследненгоПеремещенияПоступления(ИнвентарныйНомер)
	
	Структура = НОвый Структура(); 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	БюджетТМЦ.ИнвентарныйНомер,
		|	БюджетТМЦ.Период КАК Период,
		|	БюджетТМЦ.Расход,
		|	БюджетТМЦ.Коментарий,
		|	БюджетТМЦ.Статья,
		|	БюджетТМЦ.Категрия,
		|	БюджетТМЦ.ВидыРасхода_3,
		|	БюджетТМЦ.Отдел,
		|	БюджетТМЦ.Филиал,
		|	БюджетТМЦ.ДатаРасхода,
		|	БюджетТМЦ.ДокРег
		|ИЗ
		|	РегистрНакопления.БюджетТМЦ КАК БюджетТМЦ
		|ГДЕ
		|	БюджетТМЦ.ИнвентарныйНомер = &ИнвентарныйНомер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("ИнвентарныйНомер", ИнвентарныйНомер);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	 
	
	Структура.Вставить("Расход",Документы.Расходы.ПустаяСсылка());
	Структура.Вставить("ДатаРасхода",'20010101'); // Произвольная дата
	Структура.Вставить("Коментарий","");
	
	Структура.Вставить("Статья",		Справочники.ВидыРасходов_3.ПустаяСсылка());
	Структура.Вставить("Категрия",		Справочники.ВидыРасходов_3.ПустаяСсылка());
	Структура.Вставить("ВидыРасхода_3",	Справочники.ВидыРасходов_3.ПустаяСсылка());
	Структура.Вставить("Отдел",			Справочники.ВидыРасходов_3.ПустаяСсылка());
	Структура.Вставить("Филиал",		Справочники.ВидыРасходов_3.ПустаяСсылка());
	Структура.Вставить("ДокРег",		Документы.ПоступлениеТМЦВорктрак.ПустаяСсылка());
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Структура.Вставить("Расход",		ВыборкаДетальныеЗаписи.Расход );
		Структура.Вставить("ДатаРасхода",	ВыборкаДетальныеЗаписи.ДатаРасхода);
		Структура.Вставить("Коментарий",	ВыборкаДетальныеЗаписи.Коментарий);
		
		Структура.Вставить("Статья",		ВыборкаДетальныеЗаписи.Статья);
		Структура.Вставить("Категрия",		ВыборкаДетальныеЗаписи.Категрия);
		Структура.Вставить("ВидыРасхода_3",	ВыборкаДетальныеЗаписи.ВидыРасхода_3);
		Структура.Вставить("Отдел",			ВыборкаДетальныеЗаписи.Отдел);
		Структура.Вставить("Филиал",		ВыборкаДетальныеЗаписи.Филиал);
		Структура.Вставить("ДокРег",		ВыборкаДетальныеЗаписи.ДокРег);
	КонецЦикла;
			
	Возврат Структура;
КонецФункции


Функция ПроверкаСписанияССчетаТМЦ(ИнвентарныйНомер)
Запрос = Новый Запрос;
Запрос.Текст =
	"ВЫБРАТЬ 
	
	|	БюджетТМЦ.Расход
	
	|ИЗ
	|	РегистрНакопления.БюджетТМЦ КАК БюджетТМЦ
	|ГДЕ
	|	БюджетТМЦ.ИнвентарныйНомер = &ИнвентарныйНомер
	|	И БюджетТМЦ.ДокРег ССЫЛКА Документ.ПоступлениеТМЦВорктрак";

Запрос.УстановитьПараметр("ИнвентарныйНомер", ИнвентарныйНомер); 


РезультатЗапроса = Запрос.Выполнить();
СуммаОстаток = 0;
ЕСЛИ НЕ РезультатЗапроса.Пустой() Тогда

			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			РасходПоступления = ВыборкаДетальныеЗаписи.Расход; 
			
		КонецЦикла;
		
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	БюджетТМЦОстатки.Расход КАК Расход,
			|	ЕСТЬNULL(БюджетТМЦОстатки.СуммаОстаток,0) КАК СуммаОстаток
			|ИЗ
			|	РегистрНакопления.БюджетТМЦ.Остатки(,) КАК БюджетТМЦОстатки
			|ГДЕ
			|	БюджетТМЦОстатки.Статья.Код = ""000000837""
			|	И БюджетТМЦОстатки.ДатаРасхода <> ДАТАВРЕМЯ(1, 1, 1)
			|	И БюджетТМЦОстатки.Расход = &Расход";
		
		Запрос.УстановитьПараметр("Расход", РасходПоступления);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		СуммаОстаток = 0; 
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СуммаОстаток = ВыборкаДетальныеЗаписи.СуммаОстаток; 
		КонецЦикла;
	КонецЕсли; 

Возврат СуммаОстаток; 
КонецФункции	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	///+ГомзМА 27.04.2023
	СуммаДокумента = СписокТМЦ.Итог("Сумма");
	///-ГомзМА 27.04.2023
		
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы



#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьТабличнуюЧастьДокументаПоступление(ТМЦ, ДокументПоступления)
	
	///+ГомзМА 21.06.2023
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТМЦВорктракСписокТМЦ.Количество КАК Количество,
		|	ПоступлениеТМЦВорктракСписокТМЦ.ТипУчета КАК ТипУчета,
		|	ПоступлениеТМЦВорктракСписокТМЦ.Цена КАК Цена,
		|	ПоступлениеТМЦВорктракСписокТМЦ.Сумма КАК Сумма,
		|	ПоступлениеТМЦВорктракСписокТМЦ.Склад КАК Склад
		|ИЗ
		|	Документ.ПоступлениеТМЦВорктрак.СписокТМЦ КАК ПоступлениеТМЦВорктракСписокТМЦ
		|ГДЕ
		|	ПоступлениеТМЦВорктракСписокТМЦ.ТМЦ = &ТМЦ
		|	И ПоступлениеТМЦВорктракСписокТМЦ.Ссылка.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("ТМЦ", 	ТМЦ);
	Запрос.УстановитьПараметр("Ссылка", ДокументПоступления);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	РезультатЗапроса.Следующий();
	
	Возврат РезультатЗапроса;
	///-ГомзМА 21.06.2023


КонецФункции // ПолучитьТабличнуюЧастьДокументаПоступление()

//&НаСервере
//Функция ПолучитьСуммуКоличестваЗадубленныхСтрок(ДокументПоступления, ИнвентарныйНомер)

//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	ДвижениеТМЦВорктрак.Регистратор КАК Регистратор,
//		|	ДвижениеТМЦВорктрак.ИнвентарныйНомер КАК ИнвентарныйНомер,
//		|	ДвижениеТМЦВорктрак.Количество КАК Количество
//		|ИЗ
//		|	РегистрНакопления.ДвижениеТМЦВорктрак КАК ДвижениеТМЦВорктрак
//		|ГДЕ
//		|	ДвижениеТМЦВорктрак.ИнвентарныйНомер = &ИнвентарныйНомер
//		|	И ДвижениеТМЦВорктрак.Регистратор = &ДокументПоступления";
//	
//	Запрос.УстановитьПараметр("ИнвентарныйНомер", 		ИнвентарныйНомер);
//	Запрос.УстановитьПараметр("ДокументПоступления", 	ДокументПоступления); 
//	
//	РезультатЗапроса = Запрос.Выполнить().Выбрать();
//	
//	Результат = 0;
//	Если РезультатЗапроса.Количество() > 1 Тогда
//		Пока РезультатЗапроса.Следующий() Цикл
//			Результат = Результат + РезультатЗапроса.Количество;	
//		КонецЦикла;
//		Возврат Результат;
//	Иначе
//		Возврат Результат;
//	КонецЕсли;


//КонецФункции // ПолучитьСуммуКоличестваЗадубленныхСтрок()


#КонецОбласти



