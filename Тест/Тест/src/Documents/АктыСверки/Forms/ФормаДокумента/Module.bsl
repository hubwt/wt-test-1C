
&НаСервере
Процедура ЗаполнитьНаСервере()
	запрос = новый запрос;
	Запрос.Текст ="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриходДенегНаСчет.Ссылка КАК Ссылка,
	|	ЕстьNULL(ПриходДенегНаСчет.СуммаДокумента, 0) КАК СуммаДокумента,
	|	ПриходДенегНаСчет.Дата КАК Дата
	|ИЗ
	|	Документ.ПриходДенегНаСчет КАК ПриходДенегНаСчет
	|ГДЕ
	|	ПриходДенегНаСчет.Контрагент = &Контрагент
	|	И ПриходДенегНаСчет.Организация = &Организация
	|	И ПриходДенегНаСчет.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПродажаЗапчастей.Ссылка,
	|	ЕстьNULL(ПродажаЗапчастей.ИтогоРекв, 0),
	|	ПродажаЗапчастей.Дата
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|ГДЕ
	|	ПродажаЗапчастей.НомерУПД <> """"
	|	И ПродажаЗапчастей.Клиент = &Контрагент
	|	И ПродажаЗапчастей.Организация = &Организация
	|	И ПродажаЗапчастей.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеДоходы.Ссылка,
	|	ЕстьNULL(ПрочиеДоходы.СуммаПлатежа, 0),
	|	ПрочиеДоходы.Дата
	|ИЗ
	|	Документ.ПрочиеДоходы КАК ПрочиеДоходы
	|ГДЕ
	|	ПрочиеДоходы.Клиент = &Контрагент
	|	И ПрочиеДоходы.Счет.Владелец = &Организация
	|	И ПрочиеДоходы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расходы.Ссылка,
	|	ЕстьNULL(Расходы.Сумма, 0),
	|	Расходы.Дата
	|ИЗ
	|	Документ.Расходы КАК Расходы
	|ГДЕ
	|	Расходы.Организация = &Организация
	|	И Расходы.Контрагент = &Контрагент
	|	И Расходы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Расходы.ВидРасхода В (&ВидРасхода)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	Запрос.УстановитьПараметр("Контрагент",Объект.Контрагент);
	
	Запрос.УстановитьПараметр("ДатаНачала",Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",Объект.ДатаОкончания);
	МассивРасходов = Новый массив;
	МассивРасходов.Добавить(Справочники.ВидыРасходов.НайтиПоКоду("000000041"));
	МассивРасходов.Добавить(Справочники.ВидыРасходов.НайтиПоКоду("000000083"));
	Запрос.УстановитьПараметр("ВидРасхода",МассивРасходов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Кредит = 0;
	Дебет = 0;
	Объект.Сверка.Очистить();
	Пока выборка.Следующий() Цикл
		     НовСтрока = Объект.Сверка.Добавить();
			 Если Типзнч(Выборка.ссылка) = Тип("ДокументСсылка.ПриходДенегНаСчет") или Типзнч(Выборка.ссылка) = Тип("ДокументСсылка.ПрочиеДоходы") Тогда
				 Новстрока.Дата = Выборка.Дата;
		         Новстрока.ОбъектРасчётов = Выборка.Ссылка;
		         Новстрока.Дебет = Выборка.СуммаДокумента;
			     Дебет = Дебет + Выборка.СуммаДокумента;
			 Иначе
				 Новстрока.Дата = Выборка.Дата;
		         Новстрока.ОбъектРасчётов = Выборка.Ссылка;
		         Новстрока.Кредит = Выборка.СуммаДокумента;
			     Кредит = Кредит + Выборка.СуммаДокумента;
			 КонецЕсли;
	 
		//Если Выборка.СуммаДокумента > 0 Тогда
		//НовСтрока = Объект.Сверка.Добавить();
		//
		//Новстрока.Дата = Выборка.Дата;
		//Новстрока.ОбъектРасчётов = Выборка.Ссылка;
		//Новстрока.Кредит = Выборка.СуммаДокумента;
		//Кредит = Кредит + Выборка.СуммаДокумента;
		//КонецЕсли;
		//НовСтрока = Объект.Сверка.Добавить();
		//Новстрока.Дата = Выборка.Дата;
		//Новстрока.ОбъектРасчётов = Выборка.Ссылка;
		//Если Выборка.СуммаДокумента > 0 Тогда
		//	Новстрока.Дебет = Выборка.СделкаИтогоРекв;
		//	Дебет = Дебет + Выборка.СделкаИтогоРекв;
		//Иначе
		//	Новстрока.Дебет = Выборка.СделкаСуммаДокумента;
		//	Дебет = Дебет + Выборка.СделкаСуммаДокумента;
		//КонецЕсли;
		
		//Новстрока.Комментарий = Выборка.Дата;	
	КонецЦикла;
	ДОлг = Дебет - Кредит;
	Если долг > 0 тогда
		Объект.НашДолг = долг;
	ИначеЕсли долг < 0 Тогда
		Объект.ДолгКонтрагента = (долг - долг*2); 
	КонецЕсли;
	
		
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ВыводНаПечать(Команда)
	ТабДок = Печать(Объект.ссылка,1);
	
	// создадим коллекцию печатных форм, в которую надо будет добавить нужный нам табличный документ
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("Печать");
	// Добавляем в коллекцию (тип массив) сформированный Табличный документ
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
	// если требуется устанавливаем параметры печати
	КоллекцияПечатныхФорм[0].Экземпляров=1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "Печать";  // используется для формирования имени файла при сохранении из общей формы печати документов
	// .. и выводим стандартной процедурой БСП
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Неопределено,ЭтаФорма);
	
КонецПроцедуры

Функция Печать(Ссылка,ВидМакета = 1)
Табдок= Новый ТабличныйДокумент;

Если ВидМакета = 1 тогда
		Макет = Документы.АктыСверки.ПолучитьМакет("Печать");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктыСверки.Дата,
	|	АктыСверки.ДатаНачала,
	|	АктыСверки.ДатаОкончания,
	|	АктыСверки.ДолгКонтрагента,
	|	АктыСверки.Контрагент,
	|	АктыСверки.НашДолг,
	|	АктыСверки.Номер,
	|	АктыСверки.Организация,
	|	АктыСверки.Сверка.(
	|		НомерСтроки,
	|		Дата,
	|		ОбъектРасчётов,
	|		Дебет,
	|		Кредит
	|	)
	|ИЗ
	|	Документ.АктыСверки КАК АктыСверки
	|ГДЕ
	|	АктыСверки.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСверкаШапка = Макет.ПолучитьОбласть("СверкаШапка");
	ОбластьСверка = Макет.ПолучитьОбласть("Сверка");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьСверкаШапка);
		ВыборкаСверка = Выборка.Сверка.Выбрать();
		Пока ВыборкаСверка.Следующий() Цикл
			ОбластьСверка.Параметры.Заполнить(ВыборкаСверка);
			ТабДок.Вывести(ОбластьСверка, ВыборкаСверка.Уровень());
		КонецЦикла;

		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	ТабДок.Автомасштаб=истина;
	Возврат ТабДок;
КонецФункции

