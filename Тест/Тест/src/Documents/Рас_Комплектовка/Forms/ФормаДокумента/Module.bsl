
&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	СостояниеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СостояниеПриИзмененииНаСервере()
	
	///+ГомзМА 12.04.2024
	Если Элементы.Состояние = Перечисления.СостояниеКомплектовки.ВРаботе Тогда
		Элементы.ДатаНачала = ТекущаяДатаСеанса();
	ИначеЕсли Элементы.Состояние = Перечисления.СостояниеКомплектовки.Выполнено Тогда
		Элементы.ДатаОкончания = ТекущаяДатаСеанса();
	КонецЕсли;
	///-ГомзМА 12.04.2024
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыСписокРаботаПриИзменении(Элемент)
	
	///+ГомзМА 14.08.2023
	ТекущаяСтрока = Элементы.РаботыСписок.ТекущиеДанные;
	РаботаПриИзменении(ТекущаяСтрока, Истина);
	///-ГомзМА 14.08.2023
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если объект.Ссылка.Пустая() тогда
		Объект.Склад = Справочники.Склады.НайтиПоКоду("000000002");
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура ЗаполнитьПартии(Команда)	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НЕ Записать() Тогда
			Возврат
		КонецЕсли;
	КонецЕслИ;
	
	ЗаполнитьПартииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПартию(Команда)	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НЕ Записать() Тогда
			Возврат
		КонецЕсли;
	КонецЕслИ;
	
	ЗаполнитьПартиюНаСервере();
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьПартииНаСервере(Отказ = Ложь)
	
	ДанныеЗаполнения = Новый Структура();
	ДанныеЗаполнения.Вставить("ДокументПоступления", Объект.Ссылка);
	ДанныеЗаполнения.Вставить("ДатаПоступления", Объект.Дата);
	
	Для каждого СтрокаТаблицы Из Объект.НоменклатураСписок Цикл
		
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Партия) Тогда
			
			ДанныеЗаполнения.Вставить("Номенклатура", СтрокаТаблицы.номенклатураспис);
			ДанныеЗаполнения.Вставить("Автомобиль", СтрокаТаблицы.Автомобиль);
			СтрокаТаблицы.Партия = Справочники.ИндКод.СоздатьНовыйЭлемент(ДанныеЗаполнения, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПартиюНаСервере(Отказ = Ложь)
	
	ДанныеЗаполнения = Новый Структура();
	ДанныеЗаполнения.Вставить("ДокументПоступления", Объект.Ссылка);
	ДанныеЗаполнения.Вставить("ДатаПоступления", Объект.Дата);
	
		Если Не ЗначениеЗаполнено(Объект.Инкод) Тогда
			
			ДанныеЗаполнения.Вставить("Номенклатура", Объект.номенклатура);
			ДанныеЗаполнения.Вставить("Автомобиль", Объект.Машина);
			Объект.Инкод = Справочники.ИндКод.СоздатьНовыйЭлемент(ДанныеЗаполнения, Отказ);
			
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатураНоменклатураПриИзменении(Элемент)
	ТекСтрока = Элементы.СписокНоменклатура.ТекущиеДанные;
	
	СвойстваСтроки = Новый Структура();
	СвойстваСтроки.Вставить("Дата", Объект.Дата);
	СвойстваСтроки.Вставить("Склад", Объект.Склад);
	СвойстваСтроки.Вставить("Номенклатура", ТекСтрока.номенклатураспис);
	
	СписокНоменклатураНоменклатураПриИзмененииСервер(СвойстваСтроки);
	
	ЗаполнитьЗначенияСвойств(ТекСтрока, СвойстваСтроки, "Место");
	
	
	///+ГомзМА 23.03.2023
	ТекСтрока.Комментарий = ПолучитьКомментарийИзРегистра(ТекСтрока.Автомобиль, ТекСтрока.Номенклатураспис, ТекСтрока.Партия);	
	///-ГомзМА 23.03.2023
	
КонецПроцедуры

&НаСервере
Процедура СписокНоменклатураНоменклатураПриИзмененииСервер(ДанныеЗаполнения)
	ДанныеЗаполнения.Вставить("Место", дт_АдресноеХранение.ПолучитьГруппуМестХранения(ДанныеЗаполнения));	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	УстановкаИндКодов();
	
	///+ГомзМА 23.03.2023
	Объект.Комментарий = ПолучитьКомментарийИзРегистра(Объект.Машина, Объект.Номенклатура, Объект.Инкод);	
	///-ГомзМА 23.03.2023

КонецПроцедуры



&НаКлиенте
Процедура СписокНоменклатураПриИзменении(Элемент)
	ТекСтрока = Элементы.СписокНоменклатура.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ТекСтрока.Автомобиль) И объект.Направление  Тогда
		ТекСтрока.Автомобиль = Объект.Машина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекСтрока.Склад) И объект.Направление  Тогда
		ТекСтрока.Склад      = Объект.Склад;
	КонецЕсли;
	Элементы.СписокНоменклатура.ТекущиеДанные.Место = ПолучитьМестоХранения(Элементы.СписокНоменклатура.ТекущиеДанные.Номенклатураспис, 
	Элементы.СписокНоменклатура.ТекущиеДанные.Склад);


	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКомментарийИзРегистра(Машина, Товар, индкод)

	///+ГомзМА 23.03.2023
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Комментарии.Машина КАК Машина,
	|	Комментарии.Товар КАК Товар,
	|	Комментарии.индкод КАК индкод,
	|	Комментарии.Комментарий КАК Комментарий
	|ИЗ
	|	РегистрСведений.Комментарии КАК Комментарии
	|ГДЕ
	|	Комментарии.Машина 	 = &Машина
	|	И Комментарии.Товар  = &Товар
	|	И Комментарии.индкод = &индкод";
	
	Запрос.УстановитьПараметр("Машина", Машина);
	Запрос.УстановитьПараметр("Товар",  Товар);
	Запрос.УстановитьПараметр("индкод", индкод);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Количество() = 0 Тогда
		Комментарий = "";
		Возврат Комментарий;
	Иначе
		РезультатЗапроса.Следующий();
		Комментарий = РезультатЗапроса.Комментарий;
		Возврат Комментарий;
	КонецЕсли;
	///-ГомзМА 23.03.2023

КонецФункции // ПолучитьКомментарийИзРегистра()



	&НаСервере
Функция ПолучитьМестоХранения(Номенклатура, Склад)
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		Результат = дт_АдресноеХранение.ПолучитьМестоХранения(Новый Структура("Дата,Склад,Номенклатура", Объект.Дата, Склад, Номенклатура));
	Иначе
		Результат = Неопределено;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


&НаКлиенте
Процедура НаправлениеПриИзменении(Элемент)
	НастройкиВидимости();
КонецПроцедуры

Процедура НастройкиВидимости()
	элементы.СписокНоменклатураЗаполнитьПартии.Видимость = объект.Направление;
	элементы.СписокНоменклатураДобавить.Видимость =  Не объект.Направление;
	Элементы.ФормаЗаполнитьПартию.Видимость = Не Объект.направление;
	Элементы.Полная.Видимость = Объект.направление;
КонецПроцедуры


&НаСервере  
Процедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт
	ДобавлениеЗапчасти(Значение);    
КонецПроцедуры


&НаКлиенте
Процедура Добавить(Команда)
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"ПодборРеализации");
	ОткрытьФорму("Справочник.Номенклатура.ФормаСписка", ПараметрыОткрытия, ЭтаФорма,,,,ОбработкаВыбора);
	
КонецПроцедуры

&НаСервере
Процедура  ДобавлениеЗапчасти(ДанныеЗаполнения)
	Строка = Объект.НоменклатураСписок.Добавить();
	Строка.номенклатураспис = ДанныеЗаполнения.Товар;
		
	Строка.Автомобиль = ДанныеЗаполнения.машина;
//	Строка.код = ДанныеЗаполнения.укод;
	Строка.Партия = ДанныеЗаполнения.Партия;
	Строка.Склад = ДанныеЗаполнения.Склад;
	Строка.ДатаДобавления = ТекущаяДата();
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

Процедура УстановкаИндКодов()
	ЗапросКодов = Новый Запрос;
	ЗапросКодов.Текст = 
	"ВЫБРАТЬ
	|	ИндКод.Ссылка КАК Ссылка,
	|	ИндКод.Наименование КАК Представление
	|ИЗ
	|	Справочник.ИндКод КАК ИндКод
	|ГДЕ
	|	ИндКод.Владелец = &Владелец
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	ЗапросКодов.УстановитьПараметр("Владелец",Объект.Номенклатура);
	ВыборкаДетальныеЗаписиКодов = ЗапросКодов.Выполнить().Выбрать();
	Элементы.Инкод.СписокВыбора.Очистить();
	Пока ВыборкаДетальныеЗаписиКодов.Следующий() Цикл	
		Элементы.Инкод.СписокВыбора.Добавить(ВыборкаДетальныеЗаписиКодов.Ссылка, ВыборкаДетальныеЗаписиКодов.Представление);	
	КонецЦикла;

КонецПроцедуры



&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НастройкиВидимости();
	ПолучитьИндНомер();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРаботуВНаряд(Команда)
	ПараметрыФормы = Новый Структура("РежимВыбора",Истина);
	
	
	Форма = ПолучитьФорму("Документ.ЗаказНаряд.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	ВыбранныйДокумент = Форма.ОткрытьМодально();
	
	Если ВыбранныйДокумент = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	
	ТекДанные = Элементы.РаботыСписок.ТекущиеДанные ;
	
	
ДобавитьРаботуВНарядНаСервере(ВыбранныйДокумент, 
								ТекДанные.Работа,  
								ТекДанные.Количество, 	
								ТекДанные.Нормочас, 
								ТекДанные.Цена, 
								ТекДанные.Сумма,
								ТекДанные.СкидкаСумма,
								ТекДанные.СуммаВсего,
								ТекДанные.Содержание,
								ТекДанные.ИдентификаторСтроки,
								ТекДанные.ВремяФакт,
								ТекДанные.ВремяПлан,
								ТекДанные.СуммаНалог,
								ТекДанные.Ответственный
								);
								

								
		Сообщить("" + ВыбранныйДокумент + "изменен.");
КонецПроцедуры

&НаСервере
Процедура ДобавитьРаботуВНарядНаСервере(ВыбранныйДокумент, 
	                                     Работа, 
	                                     Количество, 
	                                     Нормочас, 
	                                     Цена, 
	                                     Сумма,
	                                     СкидкаСумма,
										 СуммаВсего,
										 Содержание,
										 ИдентификаторСтроки,
										 ВремяФакт,
										 ВремяПлан,
										 СуммаНалог,
										 Ответственный
										  )
	
	
	ДокументДляИзменения = ВыбранныйДокумент.ПолучитьОбъект();
	
	СтрокаТЧ = ДокументДляИзменения.Работы.Добавить();
	
	СтрокаТЧ.Работа = Работа;
	СтрокаТЧ.Количество = Количество;
	СтрокаТЧ.Нормочас = Нормочас;
	СтрокаТЧ.Цена = Цена;
	СтрокаТЧ.Сумма = Сумма;
	СтрокаТЧ.СкидкаСумма = СкидкаСумма;
	СтрокаТЧ.СуммаВсего = СуммаВсего;
	СтрокаТЧ.Содержание = Содержание;
	СтрокаТЧ.ИдентификаторСтроки = Новый УникальныйИдентификатор();;
	СтрокаТЧ.ВремяФакт = ВремяФакт;
	СтрокаТЧ.ВремяПлан = ВремяПлан;
	СтрокаТЧ.СуммаНалог = СуммаНалог;
	
	
	
	СтрокаТЧОтветственные = ДокументДляИзменения.Ответственные.Добавить();
	СтрокаТЧОтветственные.Сотрудник = Ответственный;

	
	
	
	СтрокаТЧИсп = ДокументДляИзменения.Исполнители.Добавить();
	СтрокаТЧИсп.Исполнитель = Ответственный;
	СтрокаТЧИсп.ИдентификаторСтрокиРодитель = СтрокаТЧ.ИдентификаторСтроки;
	
	ДокументДляИзменения.Записать();
КонецПроцедуры




&НаСервере
Функция ПечатьНаСервере(Ссылка, ВидМакета = 1)
	
	///+ГомзМА 10.02.2023 (Задача №000002578 от 25.01.2023)
	ТабДок = Новый ТабличныйДокумент;
	Если ВидМакета = 1 Тогда
		Макет = Документы.Рас_Комплектовка.ПолучитьМакет("Печать");
	ИначеЕсли  ВидМакета = 2 Тогда
		Макет = Документы.Рас_Комплектовка.ПолучитьМакет("ПечатьЗаявкаНаВосстановление");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Номер КАК Номер,
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Дата КАК Дата,
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Ответственный КАК Ответственный,
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Номенклатура КАК Номенклатура,
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Номенклатура.МестоНаСкладе2 КАК НоменклатураМестоНаСкладе2,
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Машина КАК Машина,
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Склад КАК Склад,
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Инкод КАК Инкод,
	|	Рас_КомплектовкаНоменклатураСписок.НомерСтроки КАК НомерСтроки,
	|	Рас_КомплектовкаНоменклатураСписок.Номенклатураспис.Артикул КАК НоменклатурасписАртикул,
	|	Рас_КомплектовкаНоменклатураСписок.Номенклатураспис.Код КАК НоменклатурасписКод,
	|	Рас_КомплектовкаНоменклатураСписок.Партия КАК Партия,
	|	Рас_КомплектовкаНоменклатураСписок.Номенклатураспис КАК Номенклатураспис,
	|	Рас_КомплектовкаНоменклатураСписок.Номенклатураспис.Бренд КАК НоменклатурасписБренд,
	|	Рас_КомплектовкаНоменклатураСписок.Количество КАК Количество,
	|	Рас_КомплектовкаНоменклатураСписок.Автомобиль КАК Автомобиль,
	|	Рас_КомплектовкаНоменклатураСписок.Склад КАК СкладТЧ,
	|	Рас_КомплектовкаНоменклатураСписок.ДатаДобавления КАК ДатаДобавления,
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Ссылка КАК СсылкаНаДокумент,
	|	Рас_КомплектовкаНоменклатураСписок.Номенклатураспис.МестоНаСкладе2 КАК НоменклатурасписМестоНаСкладеТЧ,
	|	Рас_КомплектовкаНоменклатураСписок.Номенклатураспис.НомерПроизводителя КАК НоменклатурасписНомерПроизводителя,
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Номенклатура.Код КАК НоменклатураКод,
	|	Рас_КомплектовкаНоменклатураСписок.Комментарий КАК КомментарийТЧ,
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.Рас_Комплектовка.НоменклатураСписок КАК Рас_КомплектовкаНоменклатураСписок
	|ГДЕ
	|	Рас_КомплектовкаНоменклатураСписок.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	ВыборкаЗапрос = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ОбластьЗаголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ОбластьШапкаТЧ = Макет.ПолучитьОбласть("ОбластьШапкаТЧ");
	ОбластьТЧ = Макет.ПолучитьОбласть("ОбластьТЧ");
	ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
	ТабДок.Очистить();
	
	ВыборкаЗапрос.Следующий();
	
	ОбластьЗаголовок.Параметры.Заполнить(ВыборкаЗапрос);
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ОбластьШапка.Параметры.Заполнить(ВыборкаЗапрос);
	ТабДок.Вывести(ОбластьШапка, ВыборкаЗапрос.Уровень());
		
	ТабДок.Вывести(ОбластьШапкаТЧ);
	
	ОбластьТЧ.Параметры.Заполнить(ВыборкаЗапрос);
	ТабДок.Вывести(ОбластьТЧ);
	
	Пока ВыборкаЗапрос.Следующий() Цикл	
		ОбластьТЧ.Параметры.Заполнить(ВыборкаЗапрос);
		ТабДок.Вывести(ОбластьТЧ);
	КонецЦикла;
	
	ТабДок.Вывести(ОбластьПодвал);
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	Возврат ТабДок;
	///-ГомзМА 10.02.2023 (Задача №000002578 от 25.01.2023)
	
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	
	///+ГомзМА 10.02.2023 (Задача №000002578 от 25.01.2023)
	ТабДок = ПечатьНаСервере(Объект.Ссылка, 1);
	
	// создадим коллекцию печатных форм, в которую надо будет добавить нужный нам табличный документ
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("Печать");
	// Добавляем в коллекцию (тип массив) сформированный Табличный документ
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
	// если требуется устанавливаем параметры печати
	КоллекцияПечатныхФорм[0].Экземпляров = 1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "Печать";  // используется для формирования имени файла при сохранении из общей формы печати документов
	// .. и выводим стандартной процедурой БСП
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Неопределено, ЭтаФорма);
	///-ГомзМА 10.02.2023 (Задача №000002578 от 25.01.2023)
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗаявкаНаВосстановление(Команда)
	
	///+ГомзМА 14.02.2023 (Задача №000002721 от 14.02.2023)
	ТабДок = ПечатьНаСервере(Объект.Ссылка, 2);
	
	// создадим коллекцию печатных форм, в которую надо будет добавить нужный нам табличный документ
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ПечатьЗаявкаНаВосстановление");
	// Добавляем в коллекцию (тип массив) сформированный Табличный документ
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
	// если требуется устанавливаем параметры печати
	КоллекцияПечатныхФорм[0].Экземпляров=1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "ПечатьЗаявкаНаВосстановление";  // используется для формирования имени файла при сохранении из общей формы печати документов
	// .. и выводим стандартной процедурой БСП
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Неопределено,ЭтаФорма);
	///-ГомзМА 14.02.2023 (Задача №000002721 от 14.02.2023)
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатураАвтомобильПриИзменении(Элемент)
	
	///+ГомзМА 23.03.2023
	ТекСтрока = Элементы.СписокНоменклатура.ТекущиеДанные;
	ТекСтрока.Комментарий = ПолучитьКомментарийИзРегистра(ТекСтрока.Автомобиль, ТекСтрока.Номенклатураспис, ТекСтрока.Партия);	
	///-ГомзМА 23.03.2023
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатураПартияПриИзменении(Элемент)
	
	///+ГомзМА 23.03.2023
	ТекСтрока = Элементы.СписокНоменклатура.ТекущиеДанные;
	СписокНоменклатураПартияПриИзмененииСервер(ТекСтрока.НомерСтроки)
	///-ГомзМА 23.03.2023
	
КонецПроцедуры

&НаСервере
Процедура СписокНоменклатураПартияПриИзмененииСервер(ТекСтрока)
   
	НашаСтрока = объект.НоменклатураСписок[ТекСтрока-1];
	ДанныеПоИнкоду 		   = ПолучитьДанныеПоИнкоду(НашаСтрока.партия);
	НашаСтрока.Номенклатураспис = ДанныеПоИнкоду.Товар;
	НашаСтрока.Автомобиль       = ДанныеПоИнкоду.машина;
	НашаСтрока.Склад		    = ДанныеПоИнкоду.Склад;
	НашаСтрока.Комментарий      = ПолучитьКомментарийИзРегистра(НашаСтрока.Автомобиль, НашаСтрока.Номенклатураспис, НашаСтрока.Партия);	
КонецПроцедуры

	
&НаКлиенте
Процедура МашинаПриИзменении(Элемент)
	
	///+ГомзМА 23.03.2023
	Объект.Комментарий = ПолучитьКомментарийИзРегистра(Объект.Машина, Объект.Номенклатура, Объект.Инкод);	
	///-ГомзМА 23.03.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ИнкодПриИзменении(Элемент)
	
	///+ГомзМА 16.08.2023
	ИнкодПриИзмененииНаСервере();
	///-ГомзМА 16.08.2023
	
	///+ГомзМА 23.03.2023
	Объект.Комментарий = ПолучитьКомментарийИзРегистра(Объект.Машина, Объект.Номенклатура, Объект.Инкод);	
	///-ГомзМА 23.03.2023
	
КонецПроцедуры

&НаСервере
Процедура ИнкодПриИзмененииНаСервере()

	///+ГомзМА 16.08.2023
	Если Объект.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() И
		 Объект.Машина = Справочники.Машины.ПустаяСсылка() Тогда
			ДанныеПоИнкоду 		= ПолучитьДанныеПоИнкоду(Объект.Инкод);
			Объект.Номенклатура = ДанныеПоИнкоду.Товар;
			Объект.Машина 		= ДанныеПоИнкоду.машина;
	КонецЕсли;
	///-ГомзМА 16.08.2023
   ПолучитьИндНомер();
КонецПроцедуры 

&НаСервере
Функция ПолучитьИндНомер() 
	Запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	ИндНомер.Цена КАК Цена,
	               |	ИндНомер.Состояние КАК Состояние
	               |ИЗ
	               |	РегистрСведений.ИндНомер КАК ИндНомер
	               |ГДЕ
	               |	ИндНомер.индкод = &индкод";
	Запрос.УстановитьПараметр("индкод",Объект.Инкод);
	Выборка = запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		Выборка.Следующий();
		Цена   = Выборка.цена;
		Статус = выборка.состояние;
	Иначе
		
		
	КонецЕсли;
	
	
КонецФункции


&НаСервере
Функция ПолучитьДанныеПоИнкоду(Индкод)

	///+ГомзМА 16.08.2023
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрНакопления1Остатки.Товар КАК Товар,
		|	РегистрНакопления1Остатки.машина КАК машина,
		|	РегистрНакопления1Остатки.Склад КАК Склад
		|ИЗ
		|	РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
		|ГДЕ
		|	РегистрНакопления1Остатки.индкод = &индкод";
	
	Запрос.УстановитьПараметр("индкод",Индкод);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	РезультатЗапроса.Следующий();
	
	Возврат РезультатЗапроса;
	///-ГомзМА 16.08.2023

КонецФункции // ПолучитьДанныеПоИнкоду()


&НаКлиенте
Процедура РассчитатьСуммуДокумента()

	///+ГомзМА 14.08.2023
	ТекДанные = Элементы.РаботыСписок.ТекущиеДанные;
	ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;
	///-ГомзМА 14.08.2023

КонецПроцедуры

&НаКлиенте
Процедура РаботыСписокКоличествоПриИзменении(Элемент)
	
	///+ГомзМА 14.08.2023
	ОбработкаИзмененияСтроки("РаботыСписок");
	///-ГомзМА 14.08.2023
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыСписокЦенаПриИзменении(Элемент)

	///+ГомзМА 14.08.2023
	ОбработкаИзмененияСтроки("РаботыСписок");
	///-ГомзМА 14.08.2023
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаПриИзменении(ТекущаяСтрока, ЗаполнитьНормуВремени = Ложь) Экспорт
	
	///+ГомзМА 14.08.2023
	СтруктураСтроки = Новый Структура("Работа,Цена,Нормочас,Количество,ВремяПлан");
	ЗаполнитьЗначенияСвойств(СтруктураСтроки, ТекущаяСтрока);

	//СтруктураСтроки.Вставить("ТипНаценки", Объект.ТипНаценки);
	
	дт_АвтосервисВызовСервера.РаботаПриИзменении(СтруктураСтроки, ЗаполнитьНормуВремени);
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки,, "Работа");
	
	ОбработкаИзмененияСтроки("РаботыСписок",, ТекущаяСтрока);
	///-ГомзМА 14.08.2023
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаИзмененияСтроки(ИмяТабличнойЧасти, Поле = Неопределено, ДанныеСтроки = Неопределено)
	
	///+ГомзМА 14.08.2023
	ТекДанные = ?(ДанныеСтроки = Неопределено, Элементы[ИмяТабличнойЧасти].ТекущиеДанные, ДанныеСтроки);
	Если Поле = "Нормочас" Тогда
		ТекДанные.Нормочас = дт_ОбщегоНазначенияКлиентСервер.ВремяСтрВЧасы(ТекДанные.НормочасСек);
		ТекДанные.ВремяПлан = ТекДанные.Нормочас * ТекДанные.Количество;
	КонецЕсли;
	дт_АвтосервисКлиентСервер.ОбработкаИзмененияСтроки(Объект, ИмяТабличнойЧасти, ТекДанные, Поле);
	
	Если ИмяТабличнойЧасти = "Работы" Тогда
		ТекДанные.НормочасСек = дт_ОбщегоНазначенияКлиентСервер.ФорматВремени(ТекДанные.Нормочас);
		ТекДанные.ВремяПланСек = дт_ОбщегоНазначенияКлиентСервер.ФорматВремени(ТекДанные.ВремяПлан);
	КонецЕсли;
	
	
	//ВключитьВСтоимость = ВключитьРасходникиВСтоимость();
	///ОбновитьСуммуДокумента(ЭтаФорма);//, ВключитьВСтоимость);
	///-ГомзМА 14.08.2023

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	///+ГомзМА 15.08.2023
	//Если Объект.ДетальПродана Тогда
	//	Элементы.НадписьПродана.Видимость = Истина;
	//КонецЕсли;
	///-ГомзМА 15.08.2023
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатураПриАктивизацииСтроки(Элемент)

КонецПроцедуры


Процедура ОбновитьВремяФактВРодительскойСтроке()
	
	// Обновить ВремяФактСек в родительской ТЧ
	СтрокиРаботы = Объект.РаботыСписок.НайтиСтроки(Новый Структура("ИдентификаторСтроки", Элементы.Исполнители.ОтборСтрок.ИдентификаторСтрокиРодитель));
	Для каждого СтрокаРаботы Из СтрокиРаботы Цикл
		СтрокаРаботы.ВремяФакт = дт_ОбщегоНазначенияКлиентСервер.ФорматВремени(СтрокаРаботы.ВремяФакт);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеИсполнителей(Корректировать, Отказ = Ложь)
	
	Если Объект.Исполнители.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	ИмяГлавнойТабличнойЧасти = "РаботыСписок";
	ИмяПодчиненнойТабличнойЧасти = "Исполнители";
	
	Если Корректировать Тогда
		
		ИсполнителиШаблон = Новый Массив();
		// найдем первую строку с исполнителями
		Для каждого СтрокаТаблицы Из Объект[ИмяГлавнойТабличнойЧасти] Цикл
			
			ЗначениеОтбора = СтрокаТаблицы.ИдентификаторСтроки;
			СтрокиИсполнители = Объект[ИмяПодчиненнойТабличнойЧасти].НайтиСтроки(Новый Структура("ИдентификаторСтрокиРодитель", ЗначениеОтбора));
			
			Если СтрокиИсполнители.Количество() <> 0 Тогда
				
				Для каждого СтрокаИсполнитель Из СтрокиИсполнители Цикл
					ИсполнителиШаблон.Добавить(СтрокаИсполнитель.Исполнитель);	
				КонецЦикла;
				
				Прервать;
				
			КонецЕсли;
			
			
		КонецЦикла; 
		
		Если ИсполнителиШаблон.Количество() = 0 Тогда
			ПоказатьОповещениеПользователя(,,"Нет данных об исполнителях в первой строке");
			Возврат
		КонецЕсли;
	КонецЕсли;	
	
	Для каждого СтрокаТаблицы Из Объект[ИмяГлавнойТабличнойЧасти] Цикл
		
		ЗначениеОтбора = СтрокаТаблицы.ИдентификаторСтроки;
		СтрокиИсполнители = Объект[ИмяПодчиненнойТабличнойЧасти].НайтиСтроки(Новый Структура("ИдентификаторСтрокиРодитель", ЗначениеОтбора));
		
		Если СтрокиИсполнители.Количество() = 0 Тогда
			
			Если Корректировать Тогда
				
				Для каждого Исполнитель Из ИсполнителиШаблон Цикл
					
					НоваяСтрока = Объект[ИмяПодчиненнойТабличнойЧасти].Добавить();
					НоваяСтрока.Исполнитель = Исполнитель;
					НоваяСтрока.ИдентификаторСтрокиРодитель = ЗначениеОтбора;
					
				КонецЦикла;
				
			Иначе
				
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяГлавнойТабличнойЧасти, СтрокаТаблицы.НомерСтроки, "НомерСтроки");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон("Не заполнены исполнители в строке %1 таблицы %2",
				СтрокаТаблицы.НомерСтроки,
				ИмяГлавнойТабличнойЧасти),
				,
				Поле,
				"Объект",
				Отказ
				);
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Отказ И НЕ Корректировать Тогда
		//Оповещение = Новый ОписаниеОповещения("ЗаполнитьИсполнителейПоПервойСтроке", ЭтаФорма);
		//ПоказатьВопрос(Оповещение, "Заполнить исполнителей по данным первой строки?", РежимДиалогаВопрос.ДаНет); 
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеИсполнителей()

&НаКлиенте
Процедура РаботыСписокНормочасПриИзменении(Элемент)
		ТекДанныеИсполнители = Элементы.Исполнители.ТекущиеДанные;
	ТекДанныеРаботы = Элементы.РаботыСписок.ТекущиеДанные;
	Если ТекДанныеИсполнители <> Неопределено Тогда
		ИсполнителиПроцентПриИзмененииНаСервере(ТекДанныеИсполнители.ВремяФакт, ТекДанныеИсполнители.Процент, ТекДанныеРаботы.Нормочас, ТекДанныеИсполнители.ВремяФактСек, ТекДанныеРаботы.Количество);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИсполнителиПроцентПриИзмененииНаСервере(ВремяНорм, Процент, Нормочас, ВремяНормСек, Количество)
	
	///+ГомзМА 03.10.2023
	ВремяНорм 		= Процент * (Нормочас * Количество) / 100;
	ВремяНормСек 	= '00010101' + ВремяНорм * 60 * 60;
	///-ГомзМА 03.10.2023
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыСписокПриАктивизацииСтроки(Элемент)
			дт_СвязанныеТабличныеЧастиКлиент.ОбновитьОтборСтрокПодчиненнойТабличнойЧасти(
	ЭтаФорма,
	Элемент, 
	"Исполнители"
	);

КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	дт_СвязанныеТабличныеЧастиКлиент.ПередОкончаниемРедактированияПодчиненнойТабличнойЧасти(
	ЭтаФорма,
	Элемент, 
	НоваяСтрока, 
	ОтменаРедактирования, 
	Отказ, 
	"РаботыСписок"
	);

КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
		дт_СвязанныеТабличныеЧастиКлиент.ПередНачаломДобавленияПодчиненнойТабличнойЧасти(ЭтаФорма, 
	Элемент, 
	Отказ, 
	Копирование, 
	Родитель, 
	Группа, 
	Параметр, 
	"РаботыСписок"
	);

КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
		Если НоваяСтрока Тогда
		
		дт_СвязанныеТабличныеЧастиКлиент.ПриИзмененииСуммыПодчиненнойТабличнойЧасти(
		ЭтаФорма,
		Элемент, 
		Новый Структура("ВремяФакт", "ВремяФактПодытог"), 
		"РаботыСписок"
		);
		
	КонецЕсли;
	
	ОбновитьВремяФактВРодительскойСтроке();

КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПослеУдаления(Элемент)
		дт_СвязанныеТабличныеЧастиКлиент.ПриИзмененииСуммыПодчиненнойТабличнойЧасти(
	ЭтаФорма,
	Элемент, 
	Новый Структура("ВремяФакт", "ВремяФактПодытог"), 
	"РаботыСписок"
	);
	ОбновитьВремяФактВРодительскойСтроке();
КонецПроцедуры

&НаКлиенте
Процедура РаботыСписокПередУдалением(Элемент, Отказ)
	дт_СвязанныеТабличныеЧастиКлиент.ПередУдалениемСтрокиГлавнойТабличнойЧасти(
	ЭтаФорма,
	Элемент,
	"Исполнители",
	Отказ
	);

КонецПроцедуры

&НаКлиенте
Процедура РаботыСписокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
		дт_СвязанныеТабличныеЧастиКлиент.ПриНачалеРедактированияCтрокиГлавнойТабличнойЧасти(
	ЭтаФорма,
	Элемент,
	НоваяСтрока,
	Копирование,
	"Исполнители"
	);
КонецПроцедуры

&НаКлиенте
Процедура РаботыСписокПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
		дт_СвязанныеТабличныеЧастиКлиент.ПередОкончаниемРедактированияГлавнойТабличнойЧасти(
	ЭтаФорма,
	Элемент,
	НоваяСтрока,
	ОтменаРедактирования,
	Отказ,
	"Исполнители"
	);
КонецПроцедуры



