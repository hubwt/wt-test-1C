
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	///+ГомзМА 07.07.2023
	//РассчитатьСуммуДокумента();
	///-ГомзМА 07.07.2023
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	///+ГомзМА 10.07.2023
	//ПередЗаписьюНаСервере();
	///-ГомзМА 10.07.2023
	
КонецПроцедуры


&НаКлиенте
Процедура ДатаОбращенияКлиентаПриИзменении(Элемент)
	
	///+ГомзМА 10.07.2023
	Объект.ВремяРешенияПроблемы = (НачалоДня(ТекущаяДата()) - НачалоДня(Объект.ДатаОбращенияКлиента)) / 86400 + 1;
	///-ГомзМА 10.07.2023
	
КонецПроцедуры



&НаКлиенте
Процедура ТаблицаТоварыПриИзменении(Элемент)
	
	///+ГомзМА 07.07.2023
	//РассчитатьСуммуДокумента();
	///-ГомзМА 07.07.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРаботыПриИзменении(Элемент)
	
	///+ГомзМА 07.07.2023
	//РассчитатьСуммуДокумента();
	///-ГомзМА 07.07.2023
	
КонецПроцедуры



&НаКлиенте
Процедура ТаблицаРаботыКоличествоПриИзменении(Элемент)
	
	///+ГомзМА 10.07.2023
	//РассчитатьСуммуРаботы();
	///+ГомзМА 10.07.2023
	
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаРаботыЦенаПриИзменении(Элемент)
	
	///+ГомзМА 10.07.2023
	//РассчитатьСуммуРаботы();
	///+ГомзМА 10.07.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРаботыСуммаНалогПриИзменении(Элемент)
	
	///+ГомзМА 10.07.2023
	//РассчитатьСуммуРаботы();
	///+ГомзМА 10.07.2023
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
СтатусПриИзмененииНаСервере();
	
КонецПроцедуры



&НаКлиенте
Процедура ТаблицаРаботыРаботаПриИзменении(Элемент)
	
	///+ГомзМА 10.07.2023
	ТекущаяСтрока = Элементы.Работы.ТекущиеДанные;
	РаботаПриИзменении(ТекущаяСтрока, Истина);
	///-ГомзМА 10.07.2023
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаПриИзменении(ТекущаяСтрока, ЗаполнитьНормуВремени = Ложь) Экспорт
	
	///+ГомзМА 11.07.2023
	СтруктураСтроки = Новый Структура("Работа,Цена,Нормочас,Количество,ВремяПлан");
	ЗаполнитьЗначенияСвойств(СтруктураСтроки, ТекущаяСтрока);

	//СтруктураСтроки.Вставить("ТипНаценки", Объект.ТипНаценки);
	
	дт_АвтосервисВызовСервера.РаботаПриИзменении(СтруктураСтроки, ЗаполнитьНормуВремени);
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки,, "Работа");
	
	ОбработкаИзмененияСтроки("Работы",, ТекущаяСтрока);
	///-ГомзМА 11.07.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоварыПартияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	///+ГомзМА 11.07.2023
	ПартияНачалоВыбора("Товары", ДанныеВыбора, СтандартнаяОбработка);
	///-ГомзМА 11.07.2023
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы
	
#КонецОбласти



#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПередЗаписьюНаСервере()
	
	///+ГомзМА 10.07.2023
	Если (НЕ ЗначениеЗаполнено(Объект.ВремяРешенияПроблемы) ИЛИ Объект.ВремяРешенияПроблемы = 0) И Объект.Статус = Перечисления.СтатусыГарантийногоСлучая.ВРаботе Тогда
		Объект.ВремяРешенияПроблемы = (НачалоДня(ТекущаяДатаСеанса()) - НачалоДня(Объект.ДатаОбращенияКлиента)) / 86400 + 1;	
	КонецЕсли;
	///-ГомзМА 10.07.2023
	
КонецПроцедуры


&НаСервере
Процедура РассчитатьСуммуДокумента()

	///+ГомзМА 07.07.2023
	//Объект.СуммаДокумента = Объект.ТаблицаРаботы.Итог("СуммаВсего") + Объект.ТаблицаТовары.Итог("СуммаВсего");
	///-ГомзМА 07.07.2023

КонецПроцедуры



&НаКлиенте
Процедура РассчитатьСуммуРаботы()
	
	///+ГомзМА 10.07.2023
	ТекДанные = Элементы.Работы.ТекущиеДанные;
	ТекДанные.Сумма = ТекДанные.Цена * ТекДанные.Количество;
	ТекДанные.СуммаВсего = ТекДанные.Сумма + ТекДанные.СуммаНалог;
	///-ГомзМА 10.07.2023
	
КонецПроцедуры


&НаСервере
Процедура СтатусПриИзмененииНаСервере()
	
///+ГомзМА 10.07.2023
Если Объект.Статус = Перечисления.СтатусыГарантийногоСлучая.Выполнено Тогда
	Объект.ДатаЗакрытияГарантийногоСлучая = ТекущаяДатаСеанса();
КонецЕсли;
///-ГомзМА 10.07.2023
	
КонецПроцедуры


&НаСервере
Процедура ТаблицаРаботыРаботаПриИзмененииНаСервере(Работа)

	///+ГомзМА 11.07.2023

	///-ГомзМА 11.07.2023

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаИзмененияСтроки(ИмяТабличнойЧасти, Поле = Неопределено, ДанныеСтроки = Неопределено)
	
	///+ГомзМА 11.07.2023
	ТекДанные = ?(ДанныеСтроки = Неопределено, Элементы[ИмяТабличнойЧасти].ТекущиеДанные, ДанныеСтроки);
	Если Поле = "Нормочас" Тогда
		ТекДанные.Нормочас = дт_ОбщегоНазначенияКлиентСервер.ВремяСтрВЧасы(ТекДанные.НормочасСек);
		ТекДанные.ВремяПлан = ТекДанные.Нормочас * ТекДанные.Количество;
	КонецЕсли;
	дт_АвтосервисКлиентСервер.ОбработкаИзмененияСтроки(Объект, ИмяТабличнойЧасти, ТекДанные, Поле);
	
	Если ИмяТабличнойЧасти = "Работы" Тогда
		ТекДанные.НормочасСек = дт_ОбщегоНазначенияКлиентСервер.ФорматВремени(ТекДанные.Нормочас);
		ТекДанные.ВремяПланСек = дт_ОбщегоНазначенияКлиентСервер.ФорматВремени(ТекДанные.ВремяПлан);
	КонецЕсли;
	
	//ВключитьВСтоимость = ВключитьРасходникиВСтоимость();
	ОбновитьСуммуДокумента(ЭтаФорма);//, ВключитьВСтоимость);
	///-ГомзМА 11.07.2023

КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСуммуДокумента(Форма);//, ВключитьВСтоимость = Истина)

	///+ГомзМА 11.07.2023
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	СуммаРаботы = Объект.Работы.Итог("СуммаВсего");
	СуммаТовары = Объект.Товары.Итог("СуммаВсего");
	//СуммаТМЦ 	= Объект.ТМЦ.Итог("Сумма");
	//СуммаТоварыНаКомиссии = Объект.ТоварыНаКомиссии.Итог("СуммаВсего");
	СуммаБезТоваровНаКомиссии = СуммаРаботы + СуммаТовары;
	//СуммаВсего = СуммаБезТоваровНаКомиссии + СуммаТоварыНаКомиссии;
	ФорматСуммы = "ЧДЦ=2; ЧН=0; ЧГ=3,0";
	
	/////+ГомзМА 11.05.2023
	////ВключитьВСтоимость = ВключитьРасходникиВСтоимость();
	//
	//Если ВключитьВСтоимость Тогда
	//	Форма.Элементы.СуммаДокумента.Заголовок = Формат(СуммаБезТоваровНаКомиссии + СуммаТМЦ, ФорматСуммы);
	//Иначе
	//	Форма.Элементы.СуммаДокумента.Заголовок = Формат(СуммаБезТоваровНаКомиссии, ФорматСуммы);
	//КонецЕсли;
	/////-ГомзМА 11.05.2023
	
	//Элементы.ДекорацияВремяПлан.Заголовок = СтрШаблон("Время нормированное %1", 
	//	дт_ОбщегоНазначенияКлиентСервер.ФорматВремени(Объект.Работы.Итог("ВремяПлан"))
	//);
	//	
	//Элементы.ДекорацияВремяФакт.Заголовок = СтрШаблон("Время фактическое %1", 
	//	дт_ОбщегоНазначенияКлиентСервер.ФорматВремени(Объект.Работы.Итог("ВремяФакт"))
	//);
	//
	РаботыФОТ = Объект.Работы.Итог("ВремяПлан") * дт_АвтосервисВызовСервера.ПолучитьСтавкуПоРаботам(Объект.Дата);
	//Элементы.ДекорацияРаботыФОТ.Заголовок = СтрШаблон("ФОТ: %1", Формат(РаботыФОТ, ФорматСуммы));	
КонецПроцедуры // ОбновитьСуммуДокумента()


&НаКлиенте
Процедура ПартияНачалоВыбора(ИмяТаблицы, ДанныеВыбора, СтандартнаяОбработка)

	///+ГомзМА 11.07.2023
	СтандартнаяОбработка = Ложь;
	
	ТекДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
	
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("Владелец", ТекДанные.Номенклатура);
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("ДатаОстатков", Объект.Дата);
	//ПараметрыОткрытия.Вставить("Склад", ?(ЗначениеЗаполнено(ТекДанные.Склад), ТекДанные.Склад, Объект.Склад));
	ПараметрыОткрытия.Вставить("Склад", ТекДанные.Склад);
	ПараметрыОткрытия.Вставить("ТекущаяСтрока", ТекДанные.Партия);
	ПараметрыОткрытия.Вставить("Отбор", ПараметрыОтбора);
	
	
	ОткрытьФорму("Справочник.ИндКод.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор); 
	///-ГомзМА 11.07.2023

КонецПроцедуры // ПартияНачалоВыбора()

&НаСервере
Функция ПечатьТоварыНаСервере()
	
	///+ГомзМА 13.10.2023
	ТабДок = Новый ТабличныйДокумент;
	Макет = Документы.ФиксацияГарантийногоСлучая.ПолучитьМакет("ПечатьТоваров");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.Ссылка КАК Ссылка,
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.Номер КАК Номер,
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.Дата КАК Дата,
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.Клиент КАК Клиент,
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.ДатаОбращенияКлиента КАК ДатаОбращенияКлиента,
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.Проект КАК Проект,
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.НаименованиеПроблемы КАК НаименованиеПроблемы,
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.Статус КАК Статус,
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.ДатаЗакрытияГарантийногоСлучая КАК ДатаЗакрытияГарантийногоСлучая,
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.ВремяРешенияПроблемы КАК ВремяРешенияПроблемы,
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	ФиксацияГарантийногоСлучаяТовары.НомерСтроки КАК НомерСтроки,
	|	ФиксацияГарантийногоСлучаяТовары.Номенклатура КАК Номенклатура,
	|	ФиксацияГарантийногоСлучаяТовары.Номенклатура.Код КАК Код,
	|	ФиксацияГарантийногоСлучаяТовары.Номенклатура.Артикул КАК Артикул,
	|	ФиксацияГарантийногоСлучаяТовары.Номенклатура.НомерПроизводителя КАК НомерПроизводителя,
	|	ФиксацияГарантийногоСлучаяТовары.Партия КАК Партия,
	|	ФиксацияГарантийногоСлучаяТовары.Количество КАК Количество,
	|	ФиксацияГарантийногоСлучаяТовары.Цена КАК Цена,
	|	ФиксацияГарантийногоСлучаяТовары.Автомобиль КАК Автомобиль,
	|	ФиксацияГарантийногоСлучаяТовары.Сумма КАК СуммаПродажи,
	|	ФиксацияГарантийногоСлучаяТовары.СуммаВсего КАК СуммаВсего
	|ИЗ
	|	Документ.ФиксацияГарантийногоСлучая.Товары КАК ФиксацияГарантийногоСлучаяТовары
	|ГДЕ
	|	ФиксацияГарантийногоСлучаяТовары.Ссылка.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	ВыборкаЗапрос = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок  = Макет.ПолучитьОбласть("ОбластьЗаголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ОбластьШапкаТЧ = Макет.ПолучитьОбласть("ОбластьШапкаТЧ");
	ОбластьТЧ = Макет.ПолучитьОбласть("ОбластьТЧ");
	ТабДок.Очистить();
	
	ВыборкаЗапрос.Следующий();
	
	ОбластьЗаголовок.Параметры.Заполнить(ВыборкаЗапрос);
	ТабДок.Вывести(ОбластьЗаголовок, ВыборкаЗапрос.Уровень());
	
	ОбластьШапка.Параметры.Заполнить(ВыборкаЗапрос);
	ТабДок.Вывести(ОбластьШапка, ВыборкаЗапрос.Уровень());
	
	ТабДок.Вывести(ОбластьШапкаТЧ);
	
	ОбластьТЧ.Параметры.Заполнить(ВыборкаЗапрос);
	ТабДок.Вывести(ОбластьТЧ, ВыборкаЗапрос.Уровень());
	
	Пока ВыборкаЗапрос.Следующий() Цикл
		ОбластьТЧ.Параметры.Заполнить(ВыборкаЗапрос);
		ТабДок.Вывести(ОбластьТЧ, ВыборкаЗапрос.Уровень());
	КонецЦикла;
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	Возврат ТабДок;
	///-ГомзМА 13.10.2023
	
КонецФункции

&НаКлиенте
Процедура ПечатьТовары(Команда)

	///+ГомзМА 13.10.2023 
	ТабДок = ПечатьТоварыНаСервере();
	
	// создадим коллекцию печатных форм, в которую надо будет добавить нужный нам табличный документ
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ПечатьТоваров");
	// Добавляем в коллекцию (тип массив) сформированный Табличный документ
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
	// если требуется устанавливаем параметры печати
	КоллекцияПечатныхФорм[0].Экземпляров = 1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "ПечатьТоваров";  // используется для формирования имени файла при сохранении из общей формы печати документов
	// .. и выводим стандартной процедурой БСП
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Неопределено, ЭтаФорма);
	///-ГомзМА 13.10.2023
	
КонецПроцедуры




#КонецОбласти


















