#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение
Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	НомераТаблиц = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	НомераТаблиц = Новый Структура;

	Запрос.Текст =
		ТекстЗапросаТопливоВБаках(НомераТаблиц)
		+ ТекстЗапросаСписанныеТовары(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		Таблица =  Результат[НомерТаблицы.Значение].Выгрузить();
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Таблица);
	КонецЦикла;

	Возврат ПараметрыПроведения;

КонецФункции


Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.БакОтправитель КАК БакОтправитель,
	|	Реквизиты.БакПолучатель КАК БакПолучатель,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Номенклатура КАК Номенклатура,
	|	Реквизиты.Количество КАК Количество
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ПеремещениеТоплива КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.БакОтправитель КАК БакОтправитель,
	|	Реквизиты.БакПолучатель КАК БакПолучатель,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Количество КАК Количество
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()


Функция ТекстЗапросаТопливоВБаках(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаТопливоВБаках", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.БакОтправитель КАК Автомобиль,
	|	Реквизиты.Количество КАК Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещенияТоплива.БакСклад), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещенияТоплива.БакБак))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Реквизиты.Дата,
	|	Реквизиты.БакПолучатель,
	|	Реквизиты.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещенияТоплива.БакБак)";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

Функция ТекстЗапросаСписанныеТовары(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаСписанныеТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Номенклатура КАК Товар,
	|	Реквизиты.Количество КАК Колво,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещенияТоплива.СкладБак) 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Реквизиты.Дата,
	|	Реквизиты.Склад,
	|	Реквизиты.Номенклатура,
	|	Реквизиты.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|ГДЕ
	|	Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПеремещенияТоплива.БакСклад)";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()


// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтрольТопливоВБаках(ДокументОбъект, ПараметрыПроведения, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	
	//СтруктураВременныеТаблицы = ПараметрыПроведения.ТаблицаЗапланированныеОтгрузки;
	СтруктураВременныеТаблицы = ПараметрыПроведения.ДляПроведения.СтруктураВременныеТаблицы;
	
		
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДвиженияТовары.Автомобиль КАК Автомобиль,
	|	ВЫБОР
	|		КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДвиженияТовары.Количество
	|		ИНАЧЕ -ДвиженияТовары.Количество
	|	КОНЕЦ КАК КоличествоИзменение
	|ПОМЕСТИТЬ ВТ_ДвиженияТовары
	|ИЗ
	|	&ДвиженияТовары КАК ДвиженияТовары
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДвиженияТовары.Количество
	|			ИНАЧЕ -ДвиженияТовары.Количество
	|		КОНЕЦ < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияТовары.Автомобиль КАК Автомобиль,
	|	ДвиженияТовары.КоличествоИзменение КАК КоличествоИзменение,
	|	ТоварыОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	ВТ_ДвиженияТовары КАК ДвиженияТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТопливоВБаках.Остатки(&МоментКонтроля, ) КАК ТоварыОстатки
	|		ПО ДвиженияТовары.Автомобиль = ТоварыОстатки.Автомобиль
	|ГДЕ
	|	ЕСТЬNULL(ТоварыОстатки.КоличествоОстаток, 0) < 0";
	
	//Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	ТаблицаИсточник = ПараметрыПроведения.ТаблицыДляДвижений["ТаблицаТопливоВБаках"];
	Запрос.УстановитьПараметр("МоментКонтроля", ПараметрыПроведения.ДляПроведения.МоментКонтроля);
	Запрос.УстановитьПараметр("ДвиженияТовары", ТаблицаИсточник);
	
	РезультатЗапроса = Запрос.Выполнить();
	// Отрицательный остаток по счету
	Если НЕ РезультатЗапроса.Пустой() Тогда
		//ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Поле = "Количество";
			
			ТекстСообщения = СтрШаблон(
				"Количество топлива превышает остаток в баке %1. Нехватка: %2", 
				Выборка.Автомобиль,
				//Выборка.КоличествоИзменение, 
				-Выборка.Количество);
			
			
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект" , Отказ);
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры // ВыполнитьКонтроль()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтрольТоварыНаСкладах(ДокументОбъект, ПараметрыПроведения, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	
	//СтруктураВременныеТаблицы = ПараметрыПроведения.ТаблицаЗапланированныеОтгрузки;
	СтруктураВременныеТаблицы = ПараметрыПроведения.ДляПроведения.СтруктураВременныеТаблицы;
	
		
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДвиженияТовары.Склад КАК Склад,
	|	ДвиженияТовары.Товар КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДвиженияТовары.Колво
	|		ИНАЧЕ -ДвиженияТовары.Колво
	|	КОНЕЦ КАК КоличествоИзменение
	|ПОМЕСТИТЬ ВТ_ДвиженияТовары
	|ИЗ
	|	&ДвиженияТовары КАК ДвиженияТовары
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДвиженияТовары.Колво
	|			ИНАЧЕ -ДвиженияТовары.Колво
	|		КОНЕЦ < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияТовары.Номенклатура) КАК НоменклатураПредставление,
	|	ДвиженияТовары.Склад КАК Склад,
	|	ДвиженияТовары.Номенклатура КАК Товар,
	|	ДвиженияТовары.КоличествоИзменение КАК КоличествоИзменение,
	|	ТоварыОстатки.КолвоОстаток КАК Количество
	|ИЗ
	|	ВТ_ДвиженияТовары КАК ДвиженияТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки(&МоментКонтроля, ) КАК ТоварыОстатки
	|		ПО ДвиженияТовары.Номенклатура = ТоварыОстатки.Товар
	|			И ДвиженияТовары.Склад = ТоварыОстатки.Склад
	|ГДЕ
	|	ЕСТЬNULL(ТоварыОстатки.КолвоОстаток, 0) < 0";
	
	//Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	ТаблицаИсточник = ПараметрыПроведения.ТаблицыДляДвижений.ТаблицаСписанныеТовары;
	Запрос.УстановитьПараметр("МоментКонтроля", ПараметрыПроведения.ДляПроведения.МоментКонтроля);
	Запрос.УстановитьПараметр("ДвиженияТовары", ТаблицаИсточник);
	
	РезультатЗапроса = Запрос.Выполнить();
	// Отрицательный остаток по счету
	Если НЕ РезультатЗапроса.Пустой() Тогда
		//ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			
			Поле = "Количество";
			
			ТекстСообщения = СтрШаблон(
				"Количество товара %1 превышает остаток по складу %2. Нехватка: %3", 
				Выборка.НоменклатураПредставление,
				Выборка.Склад,
				//Выборка.КоличествоИзменение, 
				-Выборка.Количество);
			
			
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры // ВыполнитьКонтроль()

#КонецОбласти 




#Область Печать
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//
	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказНаряд") Тогда
	//	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗаказНаряд", "Перемещение товаров", 
	//		ПечатьЗаказНаряд(МассивОбъектов, ОбъектыПечати),,"Документ.ЗаказНаряд.ПФ_MXL_ЗаказНаряд");
	//КонецЕсли;
	
	//ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
	//	КоллекцияПечатныхФорм,
	//	ОбъектыПечати,
	//	ПараметрыВывода);
	
КонецПроцедуры



#КонецОбласти 



#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли