#Область ОбработчикиСобытий
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды) 
	//Комлев АА 11/12/24 +++ 
	Если Не НомерУПДЗаполнен(ПараметрКоманды) Тогда
		Сообщить("НомерУпд не заполнен.");
		Возврат;
	КонецЕсли;
	ОбъектыПечати = Новый СписокЗначений;
	ОбъектыПечати.Добавить(ПараметрКоманды);

	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(ПараметрКоманды);

	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);  // выбор каталога
	ДиалогВыбораФайла.Заголовок = "Выберите каталог!";
	ДиалогВыбораФайла.ПолноеИмяФайла = ДиалогВыбораФайла.Каталог;
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Каталог = ДиалогВыбораФайла.Каталог;
		Адрес =  СоздатьXMLФайл(Каталог, МассивСсылок);
		ДвоичныеДанные  =  ПолучитьИзВременногоХранилища(Адрес);
		ДвоичныеДанные.Записать(Каталог + "/" + "Продажа" + СтрРазделить(строка(ПараметрКоманды), " ")[1]
			+ СтрРазделить(строка(ПараметрКоманды), " ")[2] + СтрРазделить(строка(ПараметрКоманды), " ")[3] + ".xml");
		УдалитьИзВременногоХранилища(Адрес);
	КонецЕсли;
	Сообщить("Файл сохранен.");
	//Комлев АА 11/12/24 ---	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СформироватьТабДок(Знач ОбъектПечати, МассивСсылок) 
	//Комлев АА 11/12/24 +++ 
	ПараметрыПечати = Новый Структура;
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивСсылок);
	ТабДок = Обработки.ПечатьОбщихФорм.СформироватьПечатнуюФормуУПД(СтруктураТипов, ОбъектПечати, ПараметрыПечати);
	Возврат ТабДок;	
	//Комлев АА 11/12/24 ---
КонецФункции

&НаСервере
Функция НомерУПДЗаполнен(СсылкаНаПродажу)
//Комлев АА 11/12/24 +++ 
	Если ЗначениеЗаполнено(СсылкаНаПродажу.НомерУПД) Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

//Комлев АА 11/12/24 ---
КонецФункции

&НаСервере
Функция СоздатьXMLФайл(Каталог, МассивСсылок)
	//Комлев АА 11/12/24 +++ 
	Результат = Документы.ПродажаЗапчастей.ПолучитьДанныеДляПечатнойФормыУПД(Новый Структура, МассивСсылок);

	ДанныеПечати        = Результат.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = Результат.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ДанныеПечати.Следующий() Цикл
		ЗаписьXML = Новый ЗаписьXML;
		ИмяВремФайла = ПолучитьИмяВременногоФайла("xml");

		ЗаписьXML.ОткрытьФайл(ИмяВремФайла, "UTF-8");
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		// Начало документа
		ЗаписьXML.ЗаписатьНачалоЭлемента("Файл");
		ЗаписьXML.ЗаписатьАтрибут("ИдФайл", "ON_NSCHFDOPPR_2HE-Rec_2HE-Sen_20200101_12345");
		ЗаписьXML.ЗаписатьАтрибут("ВерсПрог", "hedo");
		ЗаписьXML.ЗаписатьАтрибут("ВерсФорм", "5.01");
		
		// Элемент СвУчДокОбор
		ЗаписьXML.ЗаписатьНачалоЭлемента("СвУчДокОбор");
		ЗаписьXML.ЗаписатьАтрибут("ИдОтпр", "2HE-Sen");
		ЗаписьXML.ЗаписатьАтрибут("ИдПол", "2HE-Rec");
		
		// Элемент СвОЭДОтпр
		ЗаписьXML.ЗаписатьНачалоЭлемента("СвОЭДОтпр");
		ЗаписьXML.ЗаписатьАтрибут("НаимОрг", "АО ПФ СКБ Контур");
		ЗаписьXML.ЗаписатьАтрибут("ИННЮЛ", "6663003127");
		ЗаписьXML.ЗаписатьАтрибут("ИдЭДО", "2HE");
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СвОЭДОтпр

		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СвУчДокОбор
		
		// Элемент Документ
		ЗаписьXML.ЗаписатьНачалоЭлемента("Документ");
		ЗаписьXML.ЗаписатьАтрибут("КНД", "1115131");
		ЗаписьXML.ЗаписатьАтрибут("ВремИнфПр", "00.00.00");
		ЗаписьXML.ЗаписатьАтрибут("ДатаИнфПр", СтрРазделить(ДанныеПечати.Дата, " ")[0]);
		ЗаписьXML.ЗаписатьАтрибут("НаимЭконСубСост", ДанныеПечати.Грузоотправитель.ПолноеНаименование);
		ЗаписьXML.ЗаписатьАтрибут("Функция", "СЧФДОП");
		ЗаписьXML.ЗаписатьАтрибут("ПоФактХЖ",
			"Документ об отгрузке товаров (выполнении работ), передачe имущественных прав (документ об оказании услуг)");
		ЗаписьXML.ЗаписатьАтрибут("НаимДокОпр",
			"Счет-фактура и документ об отгрузке товаров (выполнении работ), передачe имущественных прав (документ об оказании услуг)");
		
		// Элемент СвСчФакт
		ЗаписьXML.ЗаписатьНачалоЭлемента("СвСчФакт");
		ЗаписьXML.ЗаписатьАтрибут("НомерСчФ", НомерСчетаФактурыНаПечать(ДанныеПечати.Номер,
			ДанныеПечати.ИндексПодразделения));
		ЗаписьXML.ЗаписатьАтрибут("ДатаСчФ", СтрРазделить(ДанныеПечати.Дата, " ")[0]);
		ЗаписьXML.ЗаписатьАтрибут("КодОКВ", ДанныеПечати.ВалютаКод);
		
		// Элемент СвПрод
		ЗаписьXML.ЗаписатьНачалоЭлемента("СвПрод");
		ЗаписьXML.ЗаписатьНачалоЭлемента("ИдСв");
		ЗаписьXML.ЗаписатьНачалоЭлемента("СвЮЛУч");
		ЗаписьXML.ЗаписатьАтрибут("НаимОрг", ДанныеПечати.Грузоотправитель.ПолноеНаименование);
		ЗаписьXML.ЗаписатьАтрибут("ИННЮЛ", ДанныеПечати.Грузоотправитель.ИНН);
		ЗаписьXML.ЗаписатьАтрибут("КПП", ДанныеПечати.Грузоотправитель.КПП);
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СвЮЛУч
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ИдСв
		
		// Элемент Адрес
		ЗаписьXML.ЗаписатьНачалоЭлемента("Адрес");
		ЗаписьXML.ЗаписатьНачалоЭлемента("АдрИнф");
		ЗаписьXML.ЗаписатьАтрибут("КодСтр", ДанныеПечати.СтранаРегистрации.Код);
		ЗаписьXML.ЗаписатьАтрибут("АдрТекст", ДанныеПечати.Грузоотправитель.Адрес);
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем АдрИнф
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем Адрес
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СвПрод
		
		// Элемент ГрузОт
		ЗаписьXML.ЗаписатьНачалоЭлемента("ГрузОт");
		ЗаписьXML.ЗаписатьНачалоЭлемента("ОнЖе");
		ЗаписьXML.ЗаписатьТекст("он же");
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ОнЖе
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ГрузОт
		
		// Элемент ГрузПолуч
		ЗаписьXML.ЗаписатьНачалоЭлемента("ГрузПолуч");
		ЗаписьXML.ЗаписатьНачалоЭлемента("ИдСв");
		ЗаписьXML.ЗаписатьНачалоЭлемента("СвЮЛУч");
		ЗаписьXML.ЗаписатьАтрибут("НаимОрг", ДанныеПечати.Грузополучатель.ПолноеНаименование);
		ЗаписьXML.ЗаписатьАтрибут("ИННЮЛ", ДанныеПечати.Грузополучатель.ИНН);
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СвЮЛУч
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ИдСв
		
		// Элемент Адрес
		ЗаписьXML.ЗаписатьНачалоЭлемента("Адрес");
		ЗаписьXML.ЗаписатьНачалоЭлемента("АдрИнф");
		ЗаписьXML.ЗаписатьАтрибут("КодСтр", ДанныеПечати.СтранаРегистрации.Код);
		ЗаписьXML.ЗаписатьАтрибут("АдрТекст", ДанныеПечати.Грузополучатель.ФактическийАдрес);
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем АдрИнф
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем Адрес
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ГрузПолуч
		
		// Элемент СвПокуп
		ЗаписьXML.ЗаписатьНачалоЭлемента("СвПокуп");
		ЗаписьXML.ЗаписатьНачалоЭлемента("ИдСв");
		ЗаписьXML.ЗаписатьНачалоЭлемента("СвЮЛУч");

		НаименованиеГрузополучателя = "";
		Если ДанныеПечати.Грузополучатель.ТипКлиента = Перечисления.дт_ТипыКлиентов.ЮрЛицо Тогда
			НаименованиеГрузополучателя = ДанныеПечати.Грузополучатель.ПолноеНаименование;
		Иначе
			НаименованиеГрузополучателя = ДанныеПечати.Грузополучатель.Наименование;
		КонецЕсли;
		ЗаписьXML.ЗаписатьАтрибут("НаимОрг", НаименованиеГрузополучателя);
		ЗаписьXML.ЗаписатьАтрибут("ИННЮЛ", ДанныеПечати.Грузополучатель.ИНН);
		ЗаписьXML.ЗаписатьАтрибут("КПП", ДанныеПечати.Грузополучатель.КПП);
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СвЮЛУч
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ИдСв
		
		// Элемент Адрес
		ЗаписьXML.ЗаписатьНачалоЭлемента("Адрес");
		ЗаписьXML.ЗаписатьНачалоЭлемента("АдрИнф");
		ЗаписьXML.ЗаписатьАтрибут("КодСтр", ДанныеПечати.СтранаРегистрации.Код);
		ЗаписьXML.ЗаписатьАтрибут("АдрТекст", ДанныеПечати.Грузополучатель.ЮридическийАдрес);
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем АдрИнф
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем Адрес
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СвПокуп
		
		// Элемент ДокПодтвОтгр
		ЗаписьXML.ЗаписатьНачалоЭлемента("ДокПодтвОтгр");
		ЗаписьXML.ЗаписатьАтрибут("НаимДокОтгр", "УПД");   // Лев(ДанныеПечати.ПредставлениеСтроки5а, 7)
		ЗаписьXML.ЗаписатьАтрибут("НомДокОтгр", НомерСчетаФактурыНаПечать(ДанныеПечати.Номер,
			ДанныеПечати.ИндексПодразделения));
		ЗаписьXML.ЗаписатьАтрибут("ДатаДокОтгр", СтрРазделить(ДанныеПечати.Дата, " ")[0]);
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ДокПодтвОтгр

		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СвСчФакт
		
		// Элемент ТаблСчФакт
		ЗаписьXML.ЗаписатьНачалоЭлемента("ТаблСчФакт");   
		////////////////////////////////////////////////////////////////////////////////////////////////////// Тч Товары   
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);

		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		СуммаСНДСВсего = 0.00;
		СуммаБезНДСВсего = 0.00;
		СуммаНалогаВсего = 0.00;
		СтавкаНДС = "";
		СуммаНДС = "";
		Если ДанныеПечати.Грузополучатель.ТипКлиента = Перечисления.дт_ТипыКлиентов.ЮрЛицо Тогда
			СтавкаНДС = Строка(ДанныеПечати.Грузоотправитель.Налог) + "%";
			СуммаНДС = Строка(СтрокаТовары.СуммаНДС);
		Иначе
			СтавкаНДС  = "без НДС";
			СуммаНДС = "без НДС";
		КонецЕсли;

		Пока СтрокаТовары.Следующий() Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("СведТов");
			ЗаписьXML.ЗаписатьАтрибут("НомСтр", Строка(СтрокаТовары.НомерСтроки));
			ЗаписьXML.ЗаписатьАтрибут("НаимТов", СтрокаТовары.НоменклатураНаименование);
			ЗаписьXML.ЗаписатьАтрибут("ОКЕИ_Тов", СтрокаТовары.ЕдиницаИзмеренияКод);
			ЗаписьXML.ЗаписатьАтрибут("КолТов", Строка(СтрокаТовары.Количество));
			ЗаписьXML.ЗаписатьАтрибут("ЦенаТов", СтрЗаменить(Формат(СтрокаТовары.Цена, "ЧДЦ=2; ЧРГ=.; ЧГ=0"), ",", "."));
			ЗаписьXML.ЗаписатьАтрибут("СтТовБезНДС", СтрЗаменить(Формат(СтрокаТовары.СуммаБезНДС,
				"ЧДЦ=2; ЧРГ=.; ЧГ=0"), ",", "."));
			ЗаписьXML.ЗаписатьАтрибут("НалСт", СтавкаНДС);
			ЗаписьXML.ЗаписатьАтрибут("СтТовУчНал", СтрЗаменить(Формат(СтрокаТовары.СуммаСНДС, "ЧДЦ=2; ЧРГ=.; ЧГ=0"),
				",", "."));
			
			// Элемент Акциз
			ЗаписьXML.ЗаписатьНачалоЭлемента("Акциз");
			ЗаписьXML.ЗаписатьНачалоЭлемента("БезАкциз");
			ЗаписьXML.ЗаписатьТекст("без акциза");
			ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем БезАкциз
			ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем Акциз
			
			// Элемент СумНал
			ЗаписьXML.ЗаписатьНачалоЭлемента("СумНал");
			ЗаписьXML.ЗаписатьНачалоЭлемента("СумНал");
			ЗаписьXML.ЗаписатьТекст(СуммаНДС);
			ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СумНал
			ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СумНал
			
			// Элемент ДопСведТов
			ЗаписьXML.ЗаписатьНачалоЭлемента("ДопСведТов");
			ЗаписьXML.ЗаписатьАтрибут("КодТов", СтрокаТовары.НоменклатураКод);
			ЗаписьXML.ЗаписатьАтрибут("НаимЕдИзм", СтрокаТовары.ЕдиницаИзмеренияНаименование);
			ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ДопСведТов

			ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СведТов
			СуммаСНДСВсего = СуммаСНДСВсего + СтрокаТовары.СуммаСНДС;
			СуммаБезНДСВсего = СуммаБезНДСВсего + СтрокаТовары.СуммаБезНДС;
			СуммаНалогаВсего = СуммаНалогаВсего + СтрокаТовары.СуммаНДС;
		КонецЦикла;    
		// КоецЦиклаТовары
		
		// Элемент ВсегоОпл
		ЗаписьXML.ЗаписатьНачалоЭлемента("ВсегоОпл");
		ЗаписьXML.ЗаписатьАтрибут("СтТовБезНДСВсего", СтрЗаменить(Формат(СуммаБезНДСВсего, "ЧДЦ=2; ЧРГ=.; ЧГ=0"), ",",
			"."));
		ЗаписьXML.ЗаписатьАтрибут("СтТовУчНалВсего", СтрЗаменить(Формат(СуммаСНДСВсего, "ЧДЦ=2; ЧРГ=.; ЧГ=0"), ",",
			"."));
		
		// Элемент СумНалВсего
		ЗаписьXML.ЗаписатьНачалоЭлемента("СумНалВсего");
		ЗаписьXML.ЗаписатьНачалоЭлемента("СумНал");
		ЗаписьXML.ЗаписатьТекст(?(СтрЗаменить(Формат(СуммаНалогаВсего, "ЧДЦ=2; ЧРГ=.; ЧГ=0"), ",", ".") <> "",
			СтрЗаменить(Формат(СуммаНалогаВсего, "ЧДЦ=2; ЧРГ=.; ЧГ=0"), ",", "."), "без НДС"));
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СумНал
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СумНалВсего

		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ВсегоОпл
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ТаблСчФакт
		
		// Элемент СвПродПер
		ЗаписьXML.ЗаписатьНачалоЭлемента("СвПродПер");
		ЗаписьXML.ЗаписатьНачалоЭлемента("СвПер");
		ЗаписьXML.ЗаписатьАтрибут("СодОпер", "Товары переданы, работы выполнены, услуги оказаны в полном объеме");
		ЗаписьXML.ЗаписатьАтрибут("ДатаПер", СтрРазделить(ДанныеПечати.Дата, " ")[0]);
		
		// Элемент ОснПер
		ЗаписьXML.ЗаписатьНачалоЭлемента("ОснПер");
		ЗаписьXML.ЗаписатьАтрибут("НаимОсн", "Без документа-основания");
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ОснПер
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СвПер
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем СвПродПер
		
		// Элемент Подписант
		ЗаписьXML.ЗаписатьНачалоЭлемента("Подписант");
		ЗаписьXML.ЗаписатьАтрибут("ОблПолн", "6");
		ЗаписьXML.ЗаписатьАтрибут("Статус", "4");
		ЗаписьXML.ЗаписатьАтрибут("ОснПолн", " ");
		
		// Элемент ЮЛ   
		ЗаписьXML.ЗаписатьНачалоЭлемента("ЮЛ");
		ЗаписьXML.ЗаписатьАтрибут("ИННЮЛ", ДанныеПечати.Грузоотправитель.ИНН);

		Должность = "";
		Если ДанныеПечати.Грузоотправитель = Справочники.Организация.НайтиПоКоду("000000004") Тогда
			Должность = "Генеральный директор";
		ИначеЕсли ДанныеПечати.Грузоотправитель.ЮрФизЛицо = Перечисления.дт_ТипыКлиентов.ЮрЛицо
			И Не ДанныеПечати.Грузоотправитель = Справочники.Организация.НайтиПоКоду("000000004") Тогда
			Должность = "Директор";
		Иначе
			Должность = "Индивидуальный предприниматель";
		КонецЕсли;
		ЗаписьXML.ЗаписатьАтрибут("Должн", Должность);
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо.Фамилия КАК Фамилия,
		|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо.Имя КАК Имя,
		|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо.Отчество КАК Отчество
		|ИЗ
		|	Справочник.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
		|ГДЕ
		|	ОтветственныеЛицаОрганизаций.Владелец.Ссылка = &Ссылка
		|	И ОтветственныеЛицаОрганизаций.ЭтоРуководитель";

		Запрос.УстановитьПараметр("Ссылка", ДанныеПечати.Грузоотправитель);

		РезультатЗапроса = Запрос.Выполнить();

		Выборка = РезультатЗапроса.Выбрать();

		Выборка.Следующий();
		
		// Элемент ФИО
		ЗаписьXML.ЗаписатьНачалоЭлемента("ФИО");
		ЗаписьXML.ЗаписатьАтрибут("Фамилия", Строка(Выборка.Фамилия));
		ЗаписьXML.ЗаписатьАтрибут("Имя", Строка(Выборка.Имя));
		ЗаписьXML.ЗаписатьАтрибут("Отчество", Строка(Выборка.Отчество));
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ФИО
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем ЮЛ
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем Подписант

		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем Документ
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Закрываем Файл  

		ЗаписьXML.Закрыть(); // Закрываем файл  
	КонецЦикла;
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВремФайла);
	Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
	Возврат Адрес;
	//Комлев АА 11/12/24 +++
КонецФункции

Функция НомерСчетаФактурыНаПечать(Номер, ИндексПодразделения, УдалитьПользовательскийПрефикс = Истина)
	//Комлев АА 11/12/24 +++
	НомерНаПечать = "";

	Если Номер <> Неопределено Тогда

		НомерНаПечать = дт_ПрефиксацияКлиентСервер.НомерНаПечать(Номер, Ложь, УдалитьПользовательскийПрефикс);

		ПозицияРазделителя = СтрНайти(НомерНаПечать, "-");
		Префикс = Лев(НомерНаПечать, ПозицияРазделителя);
		НомерБезПрефикса = Сред(НомерНаПечать, ПозицияРазделителя + 1);

		Если Лев(НомерБезПрефикса, 1) = "И" Тогда
			НомерНаПечать = Префикс + Сред(НомерБезПрефикса, 2);
		КонецЕсли;
		Если ЗначениеЗаполнено(ИндексПодразделения) Тогда
			НомерНаПечать = НомерНаПечать + "/" + ИндексПодразделения;
		КонецЕсли;

	КонецЕсли;

	Возврат НомерНаПечать;
	//Комлев АА 11/12/24 +++

КонецФункции

#КонецОбласти