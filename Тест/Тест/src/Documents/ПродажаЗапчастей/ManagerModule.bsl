#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс




// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Счет на оплату
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Счет";
	КомандаПечати.Представление = НСтр("ru = 'Счет на оплату'");
	КомандаПечати.Порядок = 20;
	КомандаПечати.ДополнительныеПараметры.Вставить("СПечатью", Ложь);
	КомандаПечати.СписокФорм = "ФормаДокумента";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
		КомандаПечати, 
		"Основание",
		Документы.ПредварительныйСчет.ПустаяСсылка(),
		ВидСравнения.НеРавно
	);
	
	// Счет на оплату
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Счет";
	КомандаПечати.Представление = НСтр("ru = 'Счет на оплату (с печатью)'");
	КомандаПечати.Порядок = 25;
	КомандаПечати.ДополнительныеПараметры.Вставить("СПечатью", Истина);
	КомандаПечати.СписокФорм = "ФормаДокумента";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
		КомандаПечати, 
		"Основание",
		Документы.ПредварительныйСчет.ПустаяСсылка(),
		ВидСравнения.НеРавно
	);
	
	// Товарный чек
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТоварнаяНакладная1";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная1'");
	КомандаПечати.Порядок = 35;
	КомандаПечати.ДополнительныеПараметры.Вставить("СПечатью", Истина);
	КомандаПечати.СписокФорм = "ФормаДокумента";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
		КомандаПечати, 
		"Основание",
		Документы.ПредварительныйСчет.ПустаяСсылка(),
		ВидСравнения.НеРавно
	);
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "ТОРГ12";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Не Пользователи.РолиДоступны("дт_ПечатьНепроведенныхДокументов");
	КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Истина);
	КомандаПечати.Порядок = 30;
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
		КомандаПечати, 
		"ТоварнаяНакладная",
		"",
		ВидСравнения.НеРавно
	);
	
	
	
	// Товарная накладная без услуг (ТОРГ-12)
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	//КомандаПечати.Идентификатор = "ТОРГ12";
	//КомандаПечати.Представление = НСтр("ru = 'Товарная накладная без услуг (ТОРГ-12)'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Ложь);
	//КомандаПечати.Порядок = 18;
	
	
	// Универсальный передаточный документ (УПД)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "УПД";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Не Пользователи.РолиДоступны("дт_ПечатьНепроведенныхДокументов");
	КомандаПечати.Порядок = 40;
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
		КомандаПечати, 
		"НомерУПД",
		"",
		ВидСравнения.НеРавно
	);
	
	
	// Универсальный передаточный документ (УПД) с печатью
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "УПД";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД) с печатью'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Не Пользователи.РолиДоступны("дт_ПечатьНепроведенныхДокументов");
	КомандаПечати.Порядок = 41;
	КомандаПечати.ДополнительныеПараметры.Вставить("СПечатью", Истина);
	
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
		КомандаПечати, 
		"НомерУПД",
		"",
		ВидСравнения.НеРавно
	);
	
	// Счет на оплату в Microsoft Word.
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "СчетНаОплату(MSWord)";
	//КомандаПечати.Представление = НСтр("ru = 'Счет на оплату в Microsoft Word'");
	//КомандаПечати.Картинка = БиблиотекаКартинок.ФорматWord2007;
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//КомандаПечати.Обработчик = "_ДемоСтандартныеПодсистемыКлиент.ПечатьСчетовНаОплатуПокупателю";
	//КомандаПечати.ТребуетсяРасширениеРаботыСФайлами = Истина;
	
	// Счет на оплату
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТоварныйЧекИНарядНаДоставку";
	КомандаПечати.Представление = НСтр("ru = 'Комплект: Товарный чек и наряд на доставку'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Не Пользователи.РолиДоступны("дт_ПечатьНепроведенныхДокументов");
	КомандаПечати.Порядок = 100;
	КомандаПечати.СписокФорм = "ФормаДокумента";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
		КомандаПечати, 
		"ЕстьДоставка",
		Истина,
		ВидСравнения.Равно
	);
	
	// Товарно-транспортная накладная (1-Т)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьТТН";
	КомандаПечати.Идентификатор = "ТТН";
	КомандаПечати.Представление = НСтр("ru = 'Товарно-транспортная накладная (1-Т)'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары";	
	КомандаПечати.Порядок = 110; 
	
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	//КомандаПечати.Идентификатор = "ВыдачаТовара";
	//КомандаПечати.Представление = НСтр("ru = 'ВыдачаТовара'");
	////КомандаПечати.Обработчик    = "УправлениеПечатьюКлиент.ВыполнитьКомандуПечати";
	////КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая,ФормаДокументаТовары";	
	//КомандаПечати.Порядок = 10;


	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// описание печатной формы
	ВыводитьПлатежныеРеквизиты = Истина;
	Если ПараметрыПечати.Свойство("ВыводитьПлатежныеРеквизиты") Тогда
		ВыводитьПлатежныеРеквизиты = ПараметрыПечати.ВыводитьПлатежныеРеквизиты;
	КонецЕсли;
	
	СПечатью = Ложь;
	Если ПараметрыПечати.Свойство("СПечатью") Тогда
		СПечатью = ПараметрыПечати.СПечатью;
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Счет") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"Счет", НСтр("ru = 'Счет'"),
						ПечатьСчетаЗаказа(МассивОбъектов, ОбъектыПечати, "Счет", ВыводитьПлатежныеРеквизиты, СПечатью)
						);
	КонецЕсли;
	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТоварныйЧекИНарядНаДоставку") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ТоварныйЧекИНарядНаДоставку", НСтр("ru = 'Товарный чек и наряд на доставку'"),
						ПечатьТоварныйЧекИНарядНаДоставку(МассивОбъектов, ОбъектыПечати)
						);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать



#Область Печать_Счет
	
// Процедура печати документа.
//
// Параметры:
//  МассивОбъектов - Массив - объекты, по которым требуется сформировать печатную форму;
//  ОбъектыПечати  - СписокЗначений - разметка табличных документов по печатаемым объектам:
//   * Значение      - ЛюбаяСсылка - печатаемый объект;
//   * Представление - Строка - имя области, соответствующее объекту.
//  ИмяМакета      - Строка - "Счет" или "Заказ".
//  ВыводитьПлатежныеРеквизиты - Булево - если Истина, выводит шапку с платежными реквизитами в счете.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьСчетаЗаказа(МассивОбъектов, ОбъектыПечати, ИмяМакета = "Счет", ВыводитьПлатежныеРеквизиты = Истина, СПечатью = Ложь) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(Док.Основание КАК Документ.ПредварительныйСчет) КАК СчетНаОплату
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК Док
	|ГДЕ
	|	Док.Ссылка В(&МассивОбъектов)
	|	И ВЫРАЗИТЬ(Док.Основание КАК Документ.ПредварительныйСчет) <> ЗНАЧЕНИЕ(Документ.ПредварительныйСчет.ПустаяСсылка)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивСчетов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СчетНаОплату");
	
	Возврат Документы.ПредварительныйСчет.ПечатьСчетаЗаказа(МассивСчетов, ОбъектыПечати, ИмяМакета, ВыводитьПлатежныеРеквизиты, СПечатью);
	
КонецФункции

#КонецОбласти

#Область Печать_ТОРГ12
	
// Функция получает данные для формирования печатной формы ТОРГ - 12
//
Функция ПолучитьДанныеДляПечатнойФормыТОРГ12(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Дата КАК Дата,
	|	ДанныеДокументов.Руководитель               КАК Руководитель,
	|	ДанныеДокументов.Организация КАК Организация,
	|	&ВалютаРегл               КАК Валюта
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегл", дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Запрос.Выполнить();
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	Если ПараметрыПечати.Свойство("ВыводитьГТД") Тогда
		ПараметрыЗаполнения.ВключаяНомераГТД = ПараметрыПечати.ВыводитьГТД;
	КонецЕсли;
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	//ПродажиСервер.ПоместитьВременнуюТаблицуКоэффициентыУпаковок(МенеджерВременныхТаблиц, "РеализацияТоваровУслугТаблицаТоваров");
	ОтветственныеЛицаСервер.дт_СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПродажаЗапчастей.Клиент КАК Клиент,
	|	МАКСИМУМ(БанковскиеСчета.Ссылка) КАК БанковскийСчет
	|ПОМЕСТИТЬ ВТ_БанковскиеСчетаКонтрагентов
	|ИЗ
	|	ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|			ПО (ПродажаЗапчастей.Клиент = (ВЫРАЗИТЬ(БанковскиеСчета.Владелец КАК Справочник.Клиенты)))
	|		ПО ДанныеДокументов.Ссылка = ПродажаЗапчастей.Ссылка
	|ГДЕ
	|	НЕ БанковскиеСчета.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажаЗапчастей.Клиент
	|;
	|
//	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.ТоварнаяНакладная КАК Номер,
	|	РеализацияТоваровУслуг.ДатаТоварнойНакладной КАК Дата,
	|	РеализацияТоваровУслуг.Клиент КАК Партнер,
	|	РеализацияТоваровУслуг.Клиент КАК Контрагент,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК ГлавныйБухгалтер,
	|	РеализацияТоваровУслуг.Организация.БукваВНакладной КАК Префикс,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Кладовщик,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьКладовщика,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.БезДоговора
	|			ТОГДА РеализацияТоваровУслуг.Основание
	|		ИНАЧЕ РеализацияТоваровУслуг.ДоговорКонтрагента
	|	КОНЕЦ КАК Основание,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА РеализацияТоваровУслуг.БезДоговора
	|				ТОГДА РеализацияТоваровУслуг.Основание.Дата
	|			ИНАЧЕ РеализацияТоваровУслуг.ДоговорКонтрагента.ДатаДоговора
	|		КОНЕЦ, ДАТАВРЕМЯ(1, 1, 1)) КАК ОснованиеДата,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА РеализацияТоваровУслуг.БезДоговора
	|				ТОГДА РеализацияТоваровУслуг.Основание.Номер
	|			ИНАЧЕ РеализацияТоваровУслуг.ДоговорКонтрагента.НомерДоговора
	|		КОНЕЦ, """") КАК ОснованиеНомер,
	|	РеализацияТоваровУслуг.Клиент КАК Грузополучатель,
	|	РеализацияТоваровУслуг.Организация КАК Грузоотправитель,
	|	РеализацияТоваровУслуг.Организация.ОсновнойБанковскийСчет КАК БанковскийСчетОрганизации,
	|	ЕСТЬNULL(ВТ_БанковскиеСчетаКонтрагентов.БанковскийСчет, ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)) КАК БанковскийСчетКонтрагента,
	|	РеализацияТоваровУслуг.Организация.ОсновнойБанковскийСчет КАК БанковскийСчетГрузоотправителя,
	|	РеализацияТоваровУслуг.Клиент.Страна2 КАК СтранаРегистрации,
	|	"""" КАК БанковскийСчетГрузополучателя,
	|	"""" КАК АдресДоставки,
	|	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслуг.СтранаПолучения) КАК СтранаДоставки,
	|	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслуг.РегионПолучения) КАК РегионДоставки,
	|	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслуг.ГородПолучения) КАК ГородДоставки,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ДанныеДокументов.Валюта КАК Валюта,
	|	"""" КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЛицо,
	|	&ЕдиницаИзмеренияВеса КАК ЕдиницаИзмеренияВеса
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК РеализацияТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО РеализацияТоваровУслуг.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БанковскиеСчетаКонтрагентов КАК ВТ_БанковскиеСчетаКонтрагентов
	|		ПО РеализацияТоваровУслуг.Клиент = ВТ_БанковскиеСчетаКонтрагентов.Клиент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО РеализацияТоваровУслуг.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТоваров.ЭтоСобственноеПроизводство
	|				И &ИспользоватьНаименованияПоставщиков И ПродажаЗапчастей.ДатаТоварнойНакладной >= &ДатаНачалаУчетаНаименованийПоставщиков
	|			ТОГДА ТаблицаТоваров.НаименованиеПоставщика
	|		КОГДА НЕ ТаблицаТоваров.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ТаблицаТоваров.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ТаблицаТоваров.Номенклатура.Наименование КАК НоменклатураНаименованиеКраткое,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|				ИЛИ ПродажаЗапчастей.ДатаТоварнойНакладной < &ДатаНачалаНовыхФорм
	|			ТОГДА ТаблицаТоваров.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	ТаблицаТоваров.ЭтоСобственноеПроизводство КАК ЭтоСобственноеПроизводство,
	|	ТаблицаТоваров.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваров.Упаковка КАК ЕдиницаИзмерения,
	|	""шт"" КАК ЕдиницаИзмеренияНаименование,
	|	""796"" КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	"""" КАК ХарактеристикаНаименование,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	"""" КАК УпаковкаНаименование,
	|	"""" КАК ВидУпаковки,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	"""" КАК СтранаПроисхождения,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	1 КАК КоличествоМест,
	|	1 КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	0 КАК МассаНетто,
	|	0 КАК МассаБрутто,
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтрокиНаборы,
	|	НЕ ТаблицаТоваров.ЭтоНеВозвратнаяТара КАК ЭтоВозвратнаяТара
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|		ПО ТаблицаТоваров.Ссылка = ПродажаЗапчастей.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("ИспользоватьНаименованияПоставщиков", ПолучитьФункциональнуюОпцию("дт_ИспользоватьНаименованияПоставщиков"));
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНаименованийПоставщиков", дт_ОбщегоНазначенияВызовСервераПовтИсп.ДатаНачалаУчетаНаименованийПоставщиков());
	Запрос.УстановитьПараметр("ДатаНачалаНовыхФорм", ФормированиеПечатныхФорм.ДатаНачалаПримененияФормСАртикуломВНаименовании());
	Запрос.УстановитьПараметр("ВыводитьУслуги",                  ПараметрыПечати.ВыводитьУслуги);
	Запрос.УстановитьПараметр("КолонкаКодов",                    КолонкаКодов);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияВеса",            "кг");
	//Запрос.УстановитьПараметр("ЗаполненаЕдиницаИзмеренияВеса",   ЗначениеЗаполнено(Константы.ЕдиницаИзмеренияВеса.Получить()));
	//Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения",
	//	Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить() ИЛИ ПараметрыЗаполнения.ВключаяНомераГТД);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[МассивРезультатов.Количество() - 2];
	РезультатПоТабличнойЧасти = МассивРезультатов[МассивРезультатов.Количество() - 1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	Запрос.УстановитьПараметр("ВключаяНомераГТД",               ПараметрыЗаполнения.ВключаяНомераГТД);
	Запрос.УстановитьПараметр("ПустаяГТД",                      Неопределено);
	Запрос.УстановитьПараметр("СтавкаНДС",						дт_ОбщегоНазначенияВызовСервераПовтИсп.СтавкаНДСПоУмолчанию());	
	Запрос.УстановитьПараметр("ДатаНачалаИспользованияОсновнойСтавки", дт_ОбщегоНазначенияВызовСервераПовтИсп.ДатаНачалаИспользованияОсновнойСтавкиНДС());
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Товар КАК Номенклатура,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Количество КАК КоличествоУпаковок,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(СпрОрганизации.ЕстьУчетНДС, ИСТИНА)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * &ТекстСтавкаНДС / (100 + &ТекстСтавкаНДС) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ТаблицаДокумента.Сумма - ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * &ТекстСтавкаНДС / (100 + &ТекстСтавкаНДС) КАК ЧИСЛО(15,
	|		2)) КАК СуммаБезНДС,
	|	ТаблицаДокумента.Сумма КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Партия = ЗНАЧЕНИЕ(Справочник.ИндКод.ПустаяСсылка)
	|			ТОГДА ИндКод.Ссылка
	|		ИНАЧЕ ТаблицаДокумента.Партия
	|	КОНЕЦ КАК Партия
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ПродажаЗапчастей.Таблица КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаДанныхДокументов.Ссылка
	|		И НЕ ТаблицаДокумента.Отменено
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организация КАК СпрОрганизации
	|		ПО ТаблицаДокумента.Ссылка.Организация = СпрОрганизации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИндКод КАК ИндКод
	|		ПО ТаблицаДокумента.укод = ИндКод.Наименование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Ссылка КАК Ссылка,
	|	МИНИМУМ(ВТ_Товары.НомерСтроки) КАК НомерСтроки,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_Товары.Количество) КАК Количество,
	|	СУММА(ВТ_Товары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	ВТ_Товары.Цена КАК Цена,
	|	ВТ_Товары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВТ_Товары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВТ_Товары.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ВТ_Товары.СуммаСНДС) КАК СуммаСНДС,
	|	ВТ_Товары.Партия КАК Партия
	|ПОМЕСТИТЬ ВТ_ТоварыГр
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.Ссылка,
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Цена,
	|	ВТ_Товары.СтавкаНДС,
	|	ВТ_Товары.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТоварыГр.Ссылка.Дата КАК Дата,
	|	ВТ_ТоварыГр.Номенклатура КАК Номенклатура,
	|	ВТ_ТоварыГр.Партия КАК Партия,
	|	ВТ_ТоварыГр.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДатыСрезов
	|ИЗ
	|	ВТ_ТоварыГр КАК ВТ_ТоварыГр
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТоварыГр.Ссылка.Дата,
	|	ВТ_ТоварыГр.Номенклатура,
	|	ВТ_ТоварыГр.Партия,
	|	ВТ_ТоварыГр.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыСрезов.Дата КАК Дата,
	|	ДатыСрезов.Номенклатура КАК Номенклатура,
	|	ДатыСрезов.Партия КАК Партия,
	|	МАКСИМУМ(дт_НоменклатураПоставщиков.Период) КАК Период,
	|	ДатыСрезов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПериодыСрезов
	|ИЗ
	|	ДатыСрезов КАК ДатыСрезов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.дт_НоменклатураПоставщиков КАК дт_НоменклатураПоставщиков
	|		ПО ДатыСрезов.Дата >= дт_НоменклатураПоставщиков.Период
	|		И ДатыСрезов.Номенклатура = дт_НоменклатураПоставщиков.Номенклатура
	|		И ДатыСрезов.Партия = дт_НоменклатураПоставщиков.Партия
	|СГРУППИРОВАТЬ ПО
	|	ДатыСрезов.Дата,
	|	ДатыСрезов.Номенклатура,
	|	ДатыСрезов.Партия,
	|	ДатыСрезов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыСрезов.Ссылка КАК Ссылка,
	|	ПериодыСрезов.Номенклатура КАК Номенклатура,
	|	ПериодыСрезов.Партия КАК Партия,
	|	НоменклатураПоставщиков.Наименование КАК Наименование
	|ПОМЕСТИТЬ ВТ_НаименованияПоставщиков
	|ИЗ
	|	ПериодыСрезов КАК ПериодыСрезов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.дт_НоменклатураПоставщиков КАК НоменклатураПоставщиков
	|		ПО ПериодыСрезов.Номенклатура = НоменклатураПоставщиков.Номенклатура
	|		И ПериодыСрезов.Партия = НоменклатураПоставщиков.Партия
	|		И ПериодыСрезов.Период = НоменклатураПоставщиков.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	СУММА(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаДокумента.Количество) КАК Количество,
	|	СУММА(ТаблицаДокумента.Количество) КАК КоличествоУпаковок,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаДокумента.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаДокумента.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДокумента.СуммаСНДС) КАК СуммаСНДС,
	|	ЕСТЬNULL(ВТ_НаименованияПоставщиков.Наименование, """") КАК НаименованиеПоставщика,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Партия.ДокументПоступления.Поставшик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСобственноеПроизводство
	|ПОМЕСТИТЬ РеализацияТоваровУслугТаблицаТоваровГр
	|ИЗ
	|	ВТ_ТоварыГр КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НаименованияПоставщиков КАК ВТ_НаименованияПоставщиков
	|		ПО ТаблицаДокумента.Ссылка = ВТ_НаименованияПоставщиков.Ссылка
	|		И ТаблицаДокумента.Номенклатура = ВТ_НаименованияПоставщиков.Номенклатура
	|		И ТаблицаДокумента.Партия = ВТ_НаименованияПоставщиков.Партия
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.Цена,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Партия.ДокументПоступления.Поставшик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВТ_НаименованияПоставщиков.Наименование, """")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(СпрНоменклатура.КодТНВЭД, """") КАК КодТНВЭД,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
	|	"""" КАК Серия,
	|	&ПустаяГТД КАК НомерГТД,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Количество КАК КоличествоУпаковок,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаСНДС КАК СуммаСНДС,
	|	ИСТИНА КАК ЭтоТовар,
	|	ИСТИНА КАК ЭтоНеВозвратнаяТара,
	|	ЛОЖЬ КАК ВернутьМногооборотнуюТару,
	|	НЕОПРЕДЕЛЕНО КАК Упаковка,
	|	ТаблицаДокумента.НаименованиеПоставщика КАК НаименованиеПоставщика,
	|	ТаблицаДокумента.ЭтоСобственноеПроизводство КАК ЭтоСобственноеПроизводство
	|ПОМЕСТИТЬ РеализацияТоваровУслугТаблицаТоваров
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваровГр КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТаблицаДокумента.Номенклатура = СпрНоменклатура.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	
	ТекстСтавкаНДС = 
	"ВЫБОР
	|	КОГДА НЕ ЕСТЬNULL(СпрОрганизации.ЕстьУчетНДС, ИСТИНА)
	|		ТОГДА 0
	|	КОГДА ТаблицаДокумента.Ссылка.Дата < &ДатаНачалаИспользованияОсновнойСтавки
	|		ТОГДА 18
	|		ИНАЧЕ &СтавкаНДС
	|	КОНЕЦ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СтавкаНДС", ТекстСтавкаНДС); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстСтавкаНДС", ТекстСтавкаНДС); 
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти


#Область Печать_УПД
	

Функция ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Дата КАК Дата,
	|	ДанныеДокументов.НомерУПД КАК НомерУПД,
	|	ДанныеДокументов.ДатаУПД КАК ДатаУПД,
	|	&ВалютаРегл КАК Валюта,
	|	ДанныеДокументов.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &СПечатью
	|			ТОГДА &ОсновноеОтветственноеЛицо
	|		ИНАЧЕ ДанныеДокументов.Руководитель
	|	КОНЕЦ КАК Руководитель
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	СПечатью = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыПечати, "СПечатью", Ложь); 
	ОсновноеОтветственноеЛицо = Неопределено;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегл", дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Запрос.УстановитьПараметр("СПечатью", СПечатью);
	Запрос.УстановитьПараметр("ОсновноеОтветственноеЛицо", ОсновноеОтветственноеЛицо);
	
	Запрос.Выполнить();
	
	// Если выводится печать, то указываем только осноного ответстственного, независимо от подписанта, 
	//	указанного в документе
	Если СПечатью Тогда
			
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	*
		|ИЗ
		|	ТаблицаДанныхДокументов КАК ДанныеДокументов";


		ДанныеДокументов = Запрос.Выполнить().Выгрузить();
		Для каждого СтрокаТаблицы Из ДанныеДокументов Цикл
			СтрокаТаблицы.Руководитель = дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьОсновноеОтветственноеЛицоОрганизации(СтрокаТаблицы.Организация, СтрокаТаблицы.ДатаУПД); 
		КонецЦикла;
		
		Запрос.Текст = 
		"УНИЧТОЖИТЬ ТаблицаДанныхДокументов;
		|ВЫБРАТЬ
		|	ДанныеДокументов.Ссылка КАК Ссылка,
		|	ДанныеДокументов.Дата КАК Дата,
		|	ДанныеДокументов.НомерУПД КАК НомерУПД,
		|	ДанныеДокументов.ДатаУПД КАК ДатаУПД,
		|	ДанныеДокументов.Валюта КАК Валюта,
		|	ДанныеДокументов.Организация КАК Организация,
		|	ДанныеДокументов.Руководитель КАК Руководитель
		|ПОМЕСТИТЬ ТаблицаДанныхДокументов
		|ИЗ
		|	&ДанныеДокументов КАК ДанныеДокументов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";
		
		Запрос.УстановитьПараметр("ДанныеДокументов", ДанныеДокументов);
		Запрос.Выполнить();
		
	КонецЕсли;	
	
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	ПараметрыЗаполнения.ВключаяНомераГТД = Истина;
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	//ПродажиСервер.ПоместитьВременнуюТаблицуДанныхПоставщика(МенеджерВременныхТаблиц);
	ОтветственныеЛицаСервер.дт_СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	СформироватьВТПорядковыеНомераТаблицыТоваровИПредставления5а(МенеджерВременныхТаблиц, ПараметрыПечати);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	1 КАК СтатусУПД,
	|	ДанныеДокумента.НомерУПД КАК Номер,
	|	ДанныеДокумента.ДатаУПД КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	"""" КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ДанныеДокумента.Клиент КАК Партнер,
	|	ДанныеДокумента.Клиент КАК Контрагент,
	|	ДанныеДокумента.Организация.ЕстьУчетНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.БукваВНакладной КАК Префикс,
	|	0 КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК ГлавныйБухгалтер,
	|	ДанныеДокумента.Клиент КАК Грузополучатель,
	|	ДанныеДокумента.Организация КАК Грузоотправитель,
	|	ДанныеДокумента.Организация.КПП КАК КПППоставщика,
	|	ДанныеДокумента.Клиент.КПП КАК КПППокупателя,
	|	ДанныеДокумента.Клиент.Страна2 КАК СтранаРегистрации,
	|	"""" КАК АдресДоставки,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.СтранаПолучения) КАК СтранаДоставки,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.РегионПолучения) КАК РегионДоставки,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.ГородПолучения) КАК ГородДоставки,
	|	ДанныеДокументов.Валюта КАК Валюта,
	|	ДанныеДокументов.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокументов.Валюта.Код КАК ВалютаКод,
	|	ЛОЖЬ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.БезДоговора
	|			ТОГДА ДанныеДокумента.Основание
	|		ИНАЧЕ ДанныеДокумента.ДоговорКонтрагента
	|	КОНЕЦ КАК Основание,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА ДанныеДокумента.БезДоговора
	|			ТОГДА ДанныеДокумента.Основание.Дата
	|		ИНАЧЕ ДанныеДокумента.ДоговорКонтрагента.ДатаДоговора
	|	КОНЕЦ, ДАТАВРЕМЯ(1, 1, 1)) КАК ОснованиеДата,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА ДанныеДокумента.БезДоговора
	|			ТОГДА ДанныеДокумента.Основание.Номер
	|		ИНАЧЕ ДанныеДокумента.ДоговорКонтрагента.НомерДоговора
	|	КОНЕЦ, """") КАК ОснованиеНомер,
	|	"""" КАК ДоверенностьНомер,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЛицо,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Кладовщик,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьКладовщика,
	|	ПредставленияСтрок5а.ПредставлениеСтроки5а КАК ПредставлениеСтроки5а,
	|	ДанныеДокумента.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.дт_ТипыКлиентов.ИП) КАК ЭтоИП
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредставленияСтрок5а КАК ПредставленияСтрок5а
	|		ПО ДанныеДокумента.Ссылка = ПредставленияСтрок5а.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТоваров.ЭтоСобственноеПроизводство
	|		И &ИспользоватьНаименованияПоставщиков
	|		И (ПродажаЗапчастей.ДатаУПД >= &ДатаНачалаУчетаНаименованийПоставщиков)
	|			ТОГДА ТаблицаТоваров.НаименованиеПоставщика
	|		КОГДА НЕ ТаблицаТоваров.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ТаблицаТоваров.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ТаблицаТоваров.Номенклатура.Наименование КАК НоменклатураНаименованиеКраткое,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|		ИЛИ ПродажаЗапчастей.ДатаУПД < &ДатаНачалаНовыхФорм
	|			ТОГДА ТаблицаТоваров.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	ТаблицаТоваров.ЭтоСобственноеПроизводство КАК ЭтоСобственноеПроизводство,
	|	ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТоваров.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТоваров.Упаковка КАК ЕдиницаИзмерения,
	|	""шт"" КАК ЕдиницаИзмеренияНаименование,
	|	""796"" КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	"""" КАК ХарактеристикаНаименование,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	"""" КАК УпаковкаНаименование,
	|	"""" КАК ВидУпаковки,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	"""" КАК СтранаПроисхождения,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	1 КАК КоличествоМест,
	|	1 КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	0 КАК МассаНетто,
	|	0 КАК МассаБрутто,
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	НЕ ТаблицаТоваров.ЭтоНеВозвратнаяТара КАК ЭтоВозвратнаяТара
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|		ПО ТаблицаТоваров.Ссылка = ПродажаЗапчастей.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|ПО
	|	Ссылка";
	
	
	Запрос.УстановитьПараметр("ИспользоватьНаименованияПоставщиков", ПолучитьФункциональнуюОпцию("дт_ИспользоватьНаименованияПоставщиков"));
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНаименованийПоставщиков", дт_ОбщегоНазначенияВызовСервераПовтИсп.ДатаНачалаУчетаНаименованийПоставщиков());
	Запрос.УстановитьПараметр("ДатаНачалаНовыхФорм", ФормированиеПечатныхФорм.ДатаНачалаПримененияФормСАртикуломВНаименовании());
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	//Запрос.УстановитьПараметр("ВыводитьУслуги",                  ПараметрыПечати.ВыводитьУслуги);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияВеса",            "кг");
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[МассивРезультатов.Количество() - 2];
	РезультатПоТабличнойЧасти = МассивРезультатов[МассивРезультатов.Количество() - 1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Процедура СформироватьВТПорядковыеНомераТаблицыТоваровИПредставления5а(МенеджерВременныхТаблиц, ПараметрыПечати)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугТаблицаТоваров.НомерСтроки,
	|	РеализацияТоваровУслугТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаДанныхДокументов.НомерУПД КАК Номер,
	|	ТаблицаДанныхДокументов.ДатаУПД КАК Дата
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК РеализацияТоваровУслугТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
	|		ПО ТаблицаДанныхДокументов.Ссылка = РеализацияТоваровУслугТаблицаТоваров.Ссылка
	|ИТОГИ
	|ПО
	|	Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ПредставленияСтрок5а = ПолучитьПредставленияСтроки5а(РезультатЗапроса);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ПредставленияСтрок5а
	|ИЗ
	|	&ПредставленияСтрок5а КАК ПредставленияСтрок5а
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("ПредставленияСтрок5а", ПредставленияСтрок5а);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПолучитьПредставленияСтроки5а(РезультатЗапроса)

	Результат = Новый ТаблицаЗначений();
	Результат.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ДокументСсылка.ПродажаЗапчастей"));
	Результат.Колонки.Добавить("ПредставлениеСтроки5а", ОбщегоНазначения.ОписаниеТипаСтрока(60));
	
	ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСсылка.Следующий() Цикл
		
		Выборка = ВыборкаСсылка.Выбрать();
		
		ПредставлениеДокумента = "";
		Если Выборка.Следующий() Тогда
			ПредставлениеДокумента = СтрШаблон("№ %1 от %2", 
			дт_ПрефиксацияКлиентСервер.НомерНаПечать(Выборка.Номер), 
			Формат(Выборка.Дата, "ДЛФ=D;")
			);
		КонецЕсли;
		
		НоваяСтрока = Результат.Добавить();
		НоваяСтрока.Ссылка = ВыборкаСсылка.Ссылка; 
		
		Если ВыборкаСсылка.Ссылка.Дата < '20241001' Тогда
			
			НоваяСтрока.ПредставлениеСтроки5а = СтрШаблон("№ п/п %1 %2",
			?(Выборка.Количество() > 1, СтрШаблон("1-%1", Выборка.Количество()), "1"),
			ПредставлениеДокумента
			);
			
		Иначе
			НоваяСтрока.ПредставлениеСтроки5а = СтрШаблон("Универсальный передаточный документ, %1", ПредставлениеДокумента);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область Печать_ТоварныйЧекИНаряд
// Процедура печати документа.
//
// Параметры:
//  МассивОбъектов - Массив - объекты, по которым требуется сформировать печатную форму;
//  ОбъектыПечати  - СписокЗначений - разметка табличных документов по печатаемым объектам:
//   * Значение      - ЛюбаяСсылка - печатаемый объект;
//   * Представление - Строка - имя области, соответствующее объекту.
//  ИмяМакета      - Строка - "Счет" или "Заказ".
//  ВыводитьПлатежныеРеквизиты - Булево - если Истина, выводит шапку с платежными реквизитами в счете.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьТоварныйЧекИНарядНаДоставку(МассивОбъектов, ОбъектыПечати) Экспорт
	
	Запрос = Новый Запрос();
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	&ВалютаРегл               				КАК Валюта,
	|	ДанныеДокументов.Организация          КАК Организация
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегл", дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Запрос.Выполнить();
	
	
	ПоместитьВременнуюТаблицуТоваров(Запрос.МенеджерВременныхТаблиц);

	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПродажаЗапчастейОтветственные.Ссылка,
	|	МАКСИМУМ(ПродажаЗапчастейОтветственные.Сотрудник) КАК Сотрудник,
	|	ПродажаЗапчастейОтветственные.Роль
	|ПОМЕСТИТь втОтветственныеРоли
	|ИЗ
	|	Документ.ПродажаЗапчастей.Ответственные КАК ПродажаЗапчастейОтветственные
	|ГДЕ
	|	ПродажаЗапчастейОтветственные.Ссылка В (&МассивОбъектов)
	|СГРУППИРОВАТЬ ПО
	|	ПродажаЗапчастейОтветственные.Ссылка,
	|	ПродажаЗапчастейОтветственные.Роль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПродажаЗапчастей.Клиент КАК Контрагент,
	|	ПродажаЗапчастей.Организация КАК Организация,
	|	ПродажаЗапчастей.ГородОтправки КАК ГородОтправки,
	|	ПродажаЗапчастей.СтранаПолучения КАК СтранаДоставки,
	|	ПродажаЗапчастей.РегионПолучения КАК РегионДоставки,
	|	ПродажаЗапчастей.ГородПолучения КАК ГородДоставки,
	|	ПродажаЗапчастей.Номер КАК Номер,
	|	ПродажаЗапчастей.Дата КАК Дата,
	|	&ВалютаРегл КАК ВалютаДокумента,
	|	ПродажаЗапчастей.Комментарий КАК Комментарий,
	|	ПродажаЗапчастей.ТранспортнаяКомпания.Наименование КАК тк,
	|	ПродажаЗапчастей.Организация.ОтКогоДоставка КАК ОтКого,
	|	ПродажаЗапчастей.КоммДост КАК КоммДост,
	|	ПродажаЗапчастей.Ссылка КАК Ссылка,
	|	ПродажаЗапчастей.АртикулВНазвании КАК АртикулВНазвании,
	|	ПродажаЗапчастей.КтоПродал КАК Продавец,
	|	Сборщики.Сотрудник КАК Сборщик,
	|	Упаковщики.Сотрудник КАК Упаковщик
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОтветственныеРоли КАК Сборщики
	|		ПО Сборщики.Ссылка = ПродажаЗапчастей.Ссылка
	|		И Сборщики.Роль = ЗНАЧЕНИЕ(Перечисление.дт_РолиВПродаже.Сборщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОтветственныеРоли КАК Упаковщики
	|		ПО Упаковщики.Ссылка = ПродажаЗапчастей.Ссылка
	|		И Упаковщики.Роль = ЗНАЧЕНИЕ(Перечисление.дт_РолиВПродаже.Упаковщик)
	|ГДЕ
	|	ПродажаЗапчастей.Ссылка В (&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК Н,
	|	ТаблицаТоваров.Номенклатура.Код КАК ТоварКод,
	|	ЕСТЬNULL(ТаблицаТоваров.Номенклатура.Артикул, """") КАК Артикул,
	|	ТаблицаТоваров.Номенклатура.Состояние КАК Состояние,
	|	ТаблицаТоваров.Номенклатура КАК Товар,
	|	ТаблицаТоваров.Цена КАК Цена,
	|	ТаблицаТоваров.Количество КАК колво,
	|	ТаблицаТоваров.СуммаСНДС КАК Сумма,
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.Партия КАК Код,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТоваров.ЭтоСобственноеПроизводство
	|		И &ИспользоватьНаименованияПоставщиков
	|		И ПродажаЗапчастей.Дата >= &ДатаНачалаУчетаНаименованийПоставщиков
	|			ТОГДА ТаблицаТоваров.НаименованиеПоставщика
	|		КОГДА НЕ ТаблицаТоваров.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(ТаблицаТоваров.Номенклатура.НаименованиеПолное, """")
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаТоваров.Номенклатура.Наименование, """")
	|	КОНЕЦ КАК Наименование
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|		ПО ТаблицаТоваров.Ссылка = ПродажаЗапчастей.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Н
	|ИТОГИ
	|ПО
	|	Ссылка";
	
	
	Запрос.УстановитьПараметр("ИспользоватьНаименованияПоставщиков", ПолучитьФункциональнуюОпцию("дт_ИспользоватьНаименованияПоставщиков"));
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНаименованийПоставщиков", дт_ОбщегоНазначенияВызовСервераПовтИсп.ДатаНачалаУчетаНаименованийПоставщиков());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	РезультатПоШапке = РезультатЗапроса[РезультатЗапроса.Количество() - 2];
	РезультатПоТабличнойЧасти = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокументНаряд = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ТоварныйЧек_НарядНаДоставку";
	
	МакетНакладная = УправлениеПечатью.МакетПечатнойФормы("Документ.ПродажаЗапчастей.ТоварнаяНакладная1");
	МакетНаряд = УправлениеПечатью.МакетПечатнойФормы("Документ.ПродажаЗапчастей.НарядДоставка");
	
	ДанныеПечати      	= РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		СведенияОПродавце = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата);
		
		ПараметрыДоп = Новый Структура();
		ПараметрыДоп.Вставить("НомерДокумента", ДанныеПечати.Номер);
		ПараметрыДоп.Вставить("ДатаДокумента", Формат(ДанныеПечати.Дата, "ДЛФ=D"));
		
		//ПараметрыДоп.Вставить("ТекстЗаголовка", СтрШаблон("Товарный чек № %1 от %2", ДанныеПечати.Номер, Формат(ДанныеПечати.Дата, "ДЛФ=D")));
		
		ПараметрыДоп.Вставить("ОрганизацияНаименование", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПродавце, "ПолноеНаименование"));
		ПараметрыДоп.Вставить("ОрганизацияРеквизиты",		ПредставлениеДляПечати(СведенияОПродавце));
		
		ПараметрыДоп.Вставить("ПокупательНаименование",	ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование"));
		ПараметрыДоп.Вставить("ПокупательРеквизиты",		ПредставлениеДляПечати(СведенияОПокупателе));
		
		ПараметрыДоп.Вставить("Заголовок", СтрШаблон("Наряд на доставку №%1Р", ДанныеПечати.Номер));
		ПараметрыДоп.Вставить("куда", ФормированиеПечатныхФорм.АдресДоставки(ДанныеПечати, Истина, "/") + Символы.ПС + ДанныеПечати.КоммДост);
		
		Если НЕ ОбщегоНазначенияУТКлиентСервер.ЭтоЧастноеЛицо(СведенияОПокупателе.ЮрФизЛицо) Тогда
			ПараметрыДоп.Вставить("п1", "Название Компании:");
			ПараметрыДоп.Вставить("п2", "ИНН:");
			ПараметрыДоп.Вставить("зп2", СведенияОПокупателе.ИНН);
		Иначе
			ПараметрыДоп.Вставить("п1", "ФИО:");
			ПараметрыДоп.Вставить("п2", "Паспорт/Прописка:");
			ПараметрыДоп.Вставить("зп2", СведенияОПокупателе.Паспорт + " " + СведенияОПокупателе.Прописка);
		КонецЕсли;
		ПараметрыДоп.Вставить("п3", "Телефон:");
		ПараметрыДоп.Вставить("зп1", СведенияОПокупателе.ПолноеНаименование);
		ПараметрыДоп.Вставить("зп3", СведенияОПокупателе.Телефоны);
		
		// Товарный чек. Шапка
		ОбластьШапка = МакетНакладная.ПолучитьОбласть("Заголовок");
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
		ОбластьШапка.Параметры.Заполнить(ПараметрыДоп);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		
		// Наряд на доставку
		ОбластьШапка = МакетНаряд.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
		ОбластьШапка.Параметры.Заполнить(ПараметрыДоп);
		ТабличныйДокументНаряд.Вывести(ОбластьШапка);
		
		СуммаНакладной = 0;
		// Товарный чек. Табличная часть
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.Сбросить();
		Если ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда

			ОбластьСтрока = МакетНакладная.ПолучитьОбласть("Заголовок2");
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			ОбластьСтрока = МакетНакладная.ПолучитьОбласть("Шапка");
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			ОбластьСтрока = МакетНакладная.ПолучитьОбласть("Строка");
			ОбластьСтрокаНаряд = МакетНаряд.ПолучитьОбласть("Строка");
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			КоличествоСтрок = СтрокаТовары.Количество();
			НомерСтроки = 0;
			Пока СтрокаТовары.Следующий() Цикл
				НомерСтроки = НомерСтроки + 1;
				
				ДопПараметры = Новый Структура();
				ДопПараметры.Вставить("Наименование", СтрокаТовары.Наименование);
				ДопПараметры.Вставить("Название", СтрокаТовары.Наименование);
				
				Если ДанныеПечати.АртикулВНазвании Тогда
					
					ДопПараметры.Вставить("Наименование", СтрокаТовары.Артикул  + " " + СтрокаТовары.Наименование);
					ДопПараметры.Вставить("Название", СтрокаТовары.Артикул + " " + СтрокаТовары.Наименование);
					
				КонецЕсли;
				
				
				ОбластьСтрока.Параметры.Заполнить(СтрокаТовары);
				ОбластьСтрока.Параметры.Заполнить(ДопПараметры);
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
				ОбластьСтрокаНаряд.Параметры.Заполнить(СтрокаТовары);
				ОбластьСтрокаНаряд.Параметры.Заполнить(ДопПараметры);
				
				
				ТабличныйДокументНаряд.Вывести(ОбластьСтрокаНаряд);
				
				СуммаНакладной = СуммаНакладной + СтрокаТовары.Сумма;
				
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыПодвала = Новый Структура();
		ПараметрыПодвала.Вставить("КоличествоСтрок", НомерСтроки);
		ПараметрыПодвала.Вставить("СуммаИтого", Формат(СуммаНакладной, "ЧДЦ=2; ЧГ=3,0"));
		ПараметрыПодвала.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаНакладной, ДанныеПечати.ВалютаДокумента));
		
		ПараметрыПодвала.Вставить("ПродавецФИО", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ДанныеПечати.Продавец));
		ПараметрыПодвала.Вставить("СборщикФИО", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ДанныеПечати.Сборщик));
		ПараметрыПодвала.Вставить("УпаковщикФИО", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ДанныеПечати.Упаковщик));
		
		//ПараметрыДоп.Вставить("Прописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаНакладной, ДанныеПечати.ВалютаДокумента));
		//ПараметрыДоп.Вставить("ИтогоСумма", СтрШаблон("%1 руб.", Формат(СуммаНакладной ,"ЧДЦ=2; ЧГ=3,0")));
		
		ОбластьПодвал = МакетНакладная.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
		ОбластьПодвал.Параметры.Заполнить(ПараметрыПодвала);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		
		ОбластьРазделитель = МакетНакладная.ПолучитьОбласть("Разделитель");
		ТабличныйДокумент.Вывести(ОбластьРазделитель);
		//ОбластьПодвалНаряд = МакетНаряд.ПолучитьОбласть("Подвал");
		//ОбластьПодвалНаряд.Параметры.Заполнить(ДанныеПечати);
		//ОбластьПодвалНаряд.Параметры.Заполнить(ПараметрыДоп);
		//ТабличныйДокументНаряд.Вывести(ОбластьПодвалНаряд);
			
		ТабличныйДокумент.Вывести(ТабличныйДокументНаряд);

		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
	КонецЦикла;
	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПредставлениеДляПечати(СведенияКонтрагента)

	ПоляПредставления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ФактическийАдрес,ИНН,Телефоны,EMail");
	
	
	Представление = "";
	Для каждого Поле Из ПоляПредставления Цикл
	
		ЗначениеПоля =  ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияКонтрагента, Поле);
		Если НЕ ПустаяСтрока(ЗначениеПоля) Тогда
			Представление = Представление + ЗначениеПоля + Символы.ПС;
		КонецЕсли;
	
	КонецЦикла;
	СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(Представление);
	
	Возврат Представление;

КонецФункции // ПредставлениеДляПечати()

	
#КонецОбласти


#Область Печать_ТТН
// Функция выполняет расчет рублевых сумм для вывода таблиц документа на печать
//
Функция ПодготовитьТаблицуДокументаДляПечати(ВыборкаСтрок, ТаблицаПоТоварам)

	ТаблицаПоТоварам.Очистить();

//	ВалютаРегламентированногоУчета   = дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
//	МассивРаспределения = Новый Массив;

//	СуммаВзаиморасчетов 	= 0;
//	СуммаВзаиморасчетовНДС 	= 0;
	ПерваяСтрокаДокумента 	= Истина;
//	СуммаВключаетНДС 		= Неопределено;
//	РасчетыВУсловныхЕдиницах= Неопределено;
//	ДатаДокумента			= Неопределено;

	Пока ВыборкаСтрок.Следующий() Цикл
		
		СтрокаТаблицы = ТаблицаПоТоварам.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыборкаСтрок);
		
		Если ПерваяСтрокаДокумента Тогда

//			СуммаВключаетНДС 			= ВыборкаСтрок.СуммаВключаетНДС;
//			РасчетыВУсловныхЕдиницах 	= ВыборкаСтрок.РасчетыВУсловныхЕдиницах;
//			ДатаДокумента				= ВыборкаСтрок.ДатаДокумента;
//			
//			НуженПересчетВРубли = Ложь;
			
			//Если ВыборкаСтрок.Проведен 
			//	И (ВыборкаСтрок.РасчетыВУсловныхЕдиницах
			//	ИЛИ (ВыборкаСтрок.ВалютаДокумента <> ВалютаРегламентированногоУчета И ВыборкаСтрок.ДатаДокумента >= '20090101000000')) Тогда
			//	НуженПересчетВРубли = Истина;
			//КонецЕсли;
			
			ПерваяСтрокаДокумента = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаПоТоварам;

КонецФункции


// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыТТН()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РеализацияТоваровУслугТовары.Товар) КАК Количество
	|ПОМЕСТИТЬ КоличествоТоваров
	|ИЗ
	|	Документ.ПродажаЗапчастей.Таблица КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка В (&МассивДокументов)
	|	И (НЕ РеализацияТоваровУслугТовары.Отменено)
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.Клиент КАК Грузополучатель,
	|	РеализацияТоваровУслуг.Организация КАК Грузоотправитель,
	|	РеализацияТоваровУслуг.Организация КАК Перевозчик,
	|	РеализацияТоваровУслуг.Организация.ОсновнойБанковскийСчет КАК БанковскийСчетОрганизации,
	|	РеализацияТоваровУслуг.Клиент КАК Покупатель,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.СтранаПолучения.Наименование ЕСТЬ NULL
	|		И РеализацияТоваровУслуг.РегионПолучения.Наименование ЕСТЬ NULL
	|		И РеализацияТоваровУслуг.ГородПолучения.Наименование ЕСТЬ NULL
	|			ТОГДА РеализацияТоваровУслуг.Клиент.ФактическийАдрес
	|		ИНАЧЕ ЕСТЬNULL(РеализацияТоваровУслуг.СтранаПолучения.Наименование, """") + "", "" +
	|			ЕСТЬNULL(РеализацияТоваровУслуг.РегионПолучения.Наименование, """") + "", "" +
	|			ЕСТЬNULL(РеализацияТоваровУслуг.ГородПолучения.Наименование, """")
	|	КОНЕЦ КАК АдресДоставки,
	|	РеализацияТоваровУслуг.Клиент КАК Контрагент,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента.Представление КАК Основание,
	|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
	|	1 КАК Курс,
	|	1 КАК Кратность,
	|	ИСТИНА КАК ЦенаВключаетНДС,
	|	ЕСТЬNULL(КоличествоТоваров.Количество, 0) КАК КоличествоНаименований,
	|	РеализацияТоваровУслуг.Организация.ФИО КАК Руководитель,
	|	РеализацияТоваровУслуг.Организация.РуководительДолжность КАК ДолжностьРуководителя,
	|	РеализацияТоваровУслуг.Организация.ФИО КАК ГлавныйБухгалтер,
	|	"""" КАК ЗаРуководителяНаОсновании,
	|	"""" КАК ЗаГлавногоБухгалтераНаОсновании,
	|	РеализацияТоваровУслуг.ОтветственныйКладовщик КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЧерезКого,
	|	"""" КАК КраткоеНаименованиеГруза,
	|	"""" КАК СопроводительныеДокументы,
	|	"""" КАК Водитель,
	|	"""" КАК ВодительскоеУдостоверение,
	|	"""" КАК МаркаАвтомобиля,
	|	"""" КАК РегистрационныйЗнакАвтомобиля
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоТоваров КАК КоличествоТоваров
	|		ПО РеализацияТоваровУслуг.Ссылка = КоличествоТоваров.Ссылка
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В (&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.НомерСтроки КАК НомерСтроки,
	|	РеализацияТоваровУслуг.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслуг.ТоварНаименование КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.ТоварКод КАК ТоварКод,
	|	РеализацияТоваровУслуг.Артикул КАК Артикул,
	|	РеализацияТоваровУслуг.Количество КАК Количество,
	|	РеализацияТоваровУслуг.КоличествоМест КАК КоличествоМест,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаНаименование КАК БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаКодПоОКЕИ КАК БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.ВидУпаковки КАК ВидУпаковки,
	|	РеализацияТоваровУслуг.Коэффициент КАК Коэффициент,
	|	РеализацияТоваровУслуг.КоличествоВОдномМесте КАК КоличествоВОдномМесте,
	|	РеализацияТоваровУслуг.Цена КАК Цена,
	|	РеализацияТоваровУслуг.Сумма КАК Сумма,
	|	РеализацияТоваровУслуг.СуммаНДС КАК СуммаНДС,
	|	РеализацияТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияТоваровУслуг.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара,
	|	РеализацияТоваровУслуг.КоэффициентПерерасчета КАК КоэффициентПерерасчета,
	|	РеализацияТоваровУслуг.Весовой КАК Весовой
	|ПОМЕСТИТЬ ВТ_ТаблицаПоТоварам
	|ИЗ
	|	&ТаблицаПоТоварам КАК РеализацияТоваровУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	МИНИМУМ(РеализацияТоваровУслуг.НомерСтроки) КАК НомерСтроки,
	|	РеализацияТоваровУслуг.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслуг.ТоварНаименование КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.ТоварКод КАК ТоварКод,
	|	РеализацияТоваровУслуг.Артикул КАК Артикул,
	|	СУММА(РеализацияТоваровУслуг.Количество) КАК Количество,
	|	СУММА(РеализацияТоваровУслуг.КоличествоМест) КАК КоличествоМест,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаНаименование КАК БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаКодПоОКЕИ КАК БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.ВидУпаковки КАК ВидУпаковки,
	|	РеализацияТоваровУслуг.Коэффициент КАК Коэффициент,
	|	РеализацияТоваровУслуг.КоличествоВОдномМесте КАК КоличествоВОдномМесте,
	|	РеализацияТоваровУслуг.Цена КАК Цена,
	|	СУММА(РеализацияТоваровУслуг.Сумма) КАК Сумма,
	|	СУММА(РеализацияТоваровУслуг.СуммаНДС) КАК СуммаНДС,
	|	РеализацияТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияТоваровУслуг.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара,
	|	РеализацияТоваровУслуг.КоэффициентПерерасчета КАК КоэффициентПерерасчета,
	|	РеализацияТоваровУслуг.Весовой КАК Весовой
	|ИЗ
	|	ВТ_ТаблицаПоТоварам КАК РеализацияТоваровУслуг
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Номенклатура,
	|	РеализацияТоваровУслуг.ТоварНаименование,
	|	РеализацияТоваровУслуг.ТоварКод,
	|	РеализацияТоваровУслуг.Артикул,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.ВидУпаковки,
	|	РеализацияТоваровУслуг.Коэффициент,
	|	РеализацияТоваровУслуг.КоличествоВОдномМесте,
	|	РеализацияТоваровУслуг.Цена,
	|	РеализацияТоваровУслуг.СтавкаНДС,
	|	РеализацияТоваровУслуг.ЭтоВозвратнаяТара,
	|	РеализацияТоваровУслуг.КоэффициентПерерасчета,
	|	РеализацияТоваровУслуг.Весовой
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|ПО
	|	Ссылка";
		
	Возврат ТекстЗапроса;

КонецФункции

// Получить данные объектов для печати ТТН
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// Возвращаемое значение:
//  Структура с данными объектов для печати ТТН.
//
Функция ПолучитьДанныеДляПечатнойФормыТТН(МассивОбъектов) Экспорт
	
	ВалютаРегламентированногоУчета = дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", "Артикул");
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("СтавкаНДС",						дт_ОбщегоНазначенияВызовСервераПовтИсп.СтавкаНДСПоУмолчанию());	
	Запрос.УстановитьПараметр("ДатаНачалаИспользованияОсновнойСтавки", дт_ОбщегоНазначенияВызовСервераПовтИсп.ДатаНачалаИспользованияОсновнойСтавкиНДС());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Ссылка.Дата КАК ДатаДокумента,
	|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
	|	ЛОЖЬ КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ТаблицаДокумента.Ссылка.Проведен, ЛОЖЬ) КАК Проведен,
	|	ИСТИНА КАК СуммаВключаетНДС,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Товар КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Товар.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ТаблицаДокумента.Товар.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.Товар.НаименованиеПолное КАК СТРОКА(200))
	|	КОНЕЦ КАК ТоварНаименование,
	|	ТаблицаДокумента.Товар.Код КАК ТоварКод,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ""Артикул""
	|			ТОГДА ТаблицаДокумента.Товар.Артикул
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Артикул,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Количество КАК КоличествоМест,
	|	""шт."" КАК БазоваяЕдиницаНаименование,
	|	648 КАК БазоваяЕдиницаКодПоОКЕИ,
	|	""шт."" КАК ВидУпаковки,
	|	1 КАК Коэффициент,
	|	1 КАК КоличествоВОдномМесте,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * &ТекстСтавкаНДС / (100 + &ТекстСтавкаНДС) КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(СпрОрганизации.ЕстьУчетНДС, ИСТИНА)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара,
	|	1 КАК КоэффициентПерерасчета,
	|	ЛОЖЬ КАК Весовой
	|ИЗ
	|	Документ.ПродажаЗапчастей.Таблица КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организация КАК СпрОрганизации
	|		ПО ТаблицаДокумента.Ссылка.Организация = СпрОрганизации.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(&МассивДокументов)
	|	И (НЕ ТаблицаДокумента.Отменено)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(РасчетыВУсловныхЕдиницах),
	|	МАКСИМУМ(Проведен),
	|	МАКСИМУМ(СуммаВключаетНДС)
	|ПО
	|	Ссылка";

	
	ТекстСтавкаНДС = 
	"ВЫБОР
	|	КОГДА НЕ ЕСТЬNULL(СпрОрганизации.ЕстьУчетНДС, ИСТИНА)
	|		ТОГДА 0
	|	КОГДА ТаблицаДокумента.Ссылка.Дата < &ДатаНачалаИспользованияОсновнойСтавки
	|		ТОГДА 18
	|		ИНАЧЕ &СтавкаНДС
	|	КОНЕЦ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СтавкаНДС", ТекстСтавкаНДС); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстСтавкаНДС", ТекстСтавкаНДС); 
	
	РезультатЗапросаТЧ = Запрос.Выполнить();
	ВыборкаПоРегистраторам = РезультатЗапросаТЧ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОписаниеТиповЧисло15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	
	ТаблицаПоТоварам = Новый ТаблицаЗначений;
	КолонкиЗапроса = РезультатЗапросаТЧ.Колонки;
	Для Каждого Колонка Из КолонкиЗапроса Цикл
		ТаблицаПоТоварам.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
	КонецЦикла;
	ТаблицаПоТоварам.Колонки.Добавить("СуммаБезНДС", 				ОписаниеТиповЧисло15_2);
	ТаблицаПоТоварам.Колонки.Добавить("СуммаРублевая", 				ОписаниеТиповЧисло15_2);
	
	ТаблицаПоТоварамДоп  = ТаблицаПоТоварам.СкопироватьКолонки();
	
	Пока ВыборкаПоРегистраторам.Следующий() Цикл 
		
		ВыборкаСтрок = ВыборкаПоРегистраторам.Выбрать();
		ТаблицаПоТоварамДоп.Очистить();
		
		ТаблицаПоТоварамДоп = ПодготовитьТаблицуДокументаДляПечати(ВыборкаСтрок, ТаблицаПоТоварамДоп);
	
		// Копируем в общую таблицу
		Для Каждого СтрокаТовар Из ТаблицаПоТоварамДоп Цикл
			НоваяСтрока = ТаблицаПоТоварам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовар);
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТаблицаПоТоварам", ТаблицаПоТоварам);
	
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыТТН();
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[3];
	
	СтруктураДанныхДляПечати 	= Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

	
#КонецОбласти


#КонецОбласти

#Область ОбработчикиСобытий

#Область Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	НомераТаблиц = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(Реквизиты.Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Склад", Реквизиты.Склад);
	
	НомераТаблиц = Новый Структура;

	Запрос.Текст =
		ТекстЗапросаСписанныеТовары(НомераТаблиц)
		+ ТекстЗапросаПродажи(НомераТаблиц)
		+ ТекстЗапросаТоварыОрганизаций(НомераТаблиц)
		+ ТекстЗапросаПродажиСебестоимость(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		Таблица =  Результат[НомерТаблицы.Значение].Выгрузить();
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Таблица);
	КонецЦикла;

	Возврат ПараметрыПроведения;

КонецФункции

Функция ПодготовитьПараметрыПроведенияСклад(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	НомераТаблиц = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокументаДляСклада(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(Реквизиты.Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Склад", Реквизиты.Склад);
	
	НомераТаблиц = Новый Структура;

	Запрос.Текст =
		ТекстЗапросаСписанныеТовары(НомераТаблиц)
		+ ТекстЗапросаПродажи(НомераТаблиц)
		+ ТекстЗапросаТоварыОрганизаций(НомераТаблиц)
		+ ТекстЗапросаПродажиСебестоимость(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		Таблица =  Результат[НомерТаблицы.Значение].Выгрузить();
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Таблица);
	КонецЦикла;

	Возврат ПараметрыПроведения;

КонецФункции



Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.КтоПродал КАК КтоПродал,
	|	Реквизиты.КтоПродал.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.КтоПродал КАК КтоПродал,
	|	Реквизиты.Подразделение КАК Подразделение
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

Функция ТекстЗапросаРеквизитыДокументаДляСклада(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.ДатаСписания КАК Дата,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.КтоПродал КАК КтоПродал,
	|	Реквизиты.КтоПродал.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.КтоПродал КАК КтоПродал,
	|	Реквизиты.Подразделение КАК Подразделение
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()



Функция ТекстЗапросаСписанныеТовары(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСписанныеТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Товар КАК Номенклатура,
	|	Товары.Количество КАК Количество,
	|	Товары.Цена КАК Цена,
	|	Товары.машина КАК Автомобиль,
	|	Товары.Склад КАК Склад,
	|	Товары.Сумма КАК Сумма,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Товары.Партия = ЗНАЧЕНИЕ(Справочник.ИндКод.ПустаяСсылка)
	|				ТОГДА ЕСТЬNULL(ИндКодс.Ссылка, ЗНАЧЕНИЕ(Справочник.индкод.ПустаяСсылка))
	|			ИНАЧЕ Товары.Партия
	|		КОНЕЦ) КАК Партия,
	|	ИндНомер.Стеллаж КАК Стеллаж
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ПродажаЗапчастей.Таблица КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИндКод КАК ИндКодс
	|		ПО Товары.укод = ИндКодс.Наименование
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК ИндНомер
	|		ПО Товары.Партия = ИндНомер.индкод
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.СтатусТовара
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.НомерСтроки,
	|	Товары.Товар,
	|	Товары.Склад,
	|	Товары.Количество,
	|	Товары.Цена,
	|	Товары.Сумма,
	|	Товары.машина,
	|	ИндНомер.Стеллаж
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Реквизиты.Дата КАК Период,
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВТ_Товары.Склад КАК Склад,
	|	ВТ_Товары.Номенклатура КАК Товар,
	|	ВТ_Товары.Количество КАК Колво,
	|	ВТ_Товары.Автомобиль КАК машина,
	|	ВТ_Товары.Партия КАК индкод
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

Функция ТекстЗапросаПродажи(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПродажи", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.КтоПродал КАК Менеджер,
	|	ВТ_Товары.Автомобиль КАК Автомобиль,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВТ_Товары.Цена КАК Цена,
	|	ВТ_Товары.Сумма КАК Сумма,
	|	Реквизиты.Подразделение КАК Подразделение
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

Функция ТекстЗапросаТоварыОрганизаций(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаТоварыГр", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ТоварыСебестоимость", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаТоварыОрганизаций", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ВТ_Товары.НомерСтроки) КАК НомерСтроки,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Склад КАК Склад,
	|	ВТ_Товары.Партия КАК Партия,
	|	СУММА(ВТ_Товары.Количество) КАК Количество,
	|	ВТ_Товары.Автомобиль КАК Автомобиль
	|ПОМЕСТИТЬ ВТ_ТоварыГр
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Склад,
	|	ВТ_Товары.Партия,
	|	ВТ_Товары.Автомобиль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Автомобиль КАК Автомобиль,
	|	ВТ_Товары.Партия КАК Партия,
	|	ВТ_Товары.Склад КАК Склад,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизацийОстатки.КоличествоОстаток > ВТ_Товары.Количество
	|			ТОГДА ВЫРАЗИТЬ(ТоварыОрганизацийОстатки.СтоимостьОстаток * ВТ_Товары.Количество / ТоварыОрганизацийОстатки.КоличествоОстаток КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ТоварыОрганизацийОстатки.СтоимостьОстаток
	|	КОНЕЦ КАК Стоимость
	|ПОМЕСТИТЬ ВТ_ТоварыСебестоимость
	|ИЗ
	|	ВТ_ТоварыГр КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(
	|				&МоментВремени,
	|					 (Склад, Номенклатура, Партия) В
	|						(ВЫБРАТЬ
	|							ВТ_ТоварыГр.Склад,
	|							ВТ_ТоварыГр.Номенклатура,
	|							ВТ_ТоварыГр.Партия
	|						ИЗ
	|							ВТ_ТоварыГр)) КАК ТоварыОрганизацийОстатки
	|		ПО ВТ_Товары.Номенклатура = ТоварыОрганизацийОстатки.Номенклатура
	|			И ВТ_Товары.Склад = ТоварыОрганизацийОстатки.Склад
	|			И ВТ_Товары.Партия = ТоварыОрганизацийОстатки.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	ВТ_Товары.Склад КАК Склад,
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Партия КАК Партия,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВТ_Товары.Стоимость КАК Стоимость
	|ИЗ
	|	ВТ_ТоварыСебестоимость КАК ВТ_Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты 
	|	ПО ИСТИНА";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

Функция ТекстЗапросаПродажиСебестоимость(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаПродажиСебестоимость", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВТ_Товары.Автомобиль КАК Автомобиль,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВТ_Товары.Стоимость КАК Стоимость
	|ИЗ
	|	ВТ_ТоварыСебестоимость КАК ВТ_Товары,
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументОбъект, ПараметрыПроведения, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	
	//СтруктураВременныеТаблицы = ПараметрыПроведения.ТаблицаЗапланированныеОтгрузки;
	СтруктураВременныеТаблицы = ПараметрыПроведения.ДляПроведения.СтруктураВременныеТаблицы;
	
		
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДвиженияТовары.Склад КАК Склад,
	|	ДвиженияТовары.Товар КАК Номенклатура,
	|	ДвиженияТовары.машина КАК Автомобиль,
	|	ДвиженияТовары.индкод КАК Партия,
	|	ВЫБОР
	|		КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДвиженияТовары.Колво
	|		ИНАЧЕ -ДвиженияТовары.Колво
	|	КОНЕЦ КАК КоличествоИзменение,
	|	ДвиженияТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ДвиженияТовары
	|ИЗ
	|	&ДвиженияТовары КАК ДвиженияТовары
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДвиженияТовары.Колво
	|			ИНАЧЕ -ДвиженияТовары.Колво
	|		КОНЕЦ < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияТовары.Номенклатура) КАК НоменклатураПредставление,
	|	ДвиженияТовары.Склад КАК Склад,
	|	ДвиженияТовары.Номенклатура КАК Товар,
	|	ДвиженияТовары.Автомобиль КАК Автомобиль,
	|	ДвиженияТовары.Партия КАК индкод,
	|	ДвиженияТовары.КоличествоИзменение КАК КоличествоИзменение,
	|	ДвиженияТовары.НомерСтроки КАК НомерСтроки,
	|	ТоварыОстатки.КолвоОстаток КАК Количество
	|ИЗ
	|	ВТ_ДвиженияТовары КАК ДвиженияТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки(&МоментКонтроля, ) КАК ТоварыОстатки
	|		ПО ДвиженияТовары.Номенклатура = ТоварыОстатки.Товар
	|			И ДвиженияТовары.Склад = ТоварыОстатки.Склад
	|			И ДвиженияТовары.Автомобиль = ТоварыОстатки.машина
	|			И ДвиженияТовары.Партия = ТоварыОстатки.индкод
	|ГДЕ
	|	ЕСТЬNULL(ТоварыОстатки.КолвоОстаток, 0) < 0";
	
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	ТаблицаИсточник = ПараметрыПроведения.ТаблицыДляДвижений.ТаблицаСписанныеТовары;
	Запрос.УстановитьПараметр("МоментКонтроля", ТекущаяДатаСеанса() + 1);//ПараметрыПроведения.ДляПроведения.МоментКонтроля);
	Запрос.УстановитьПараметр("ДвиженияТовары", ТаблицаИсточник);
	
	РезультатЗапроса = Запрос.Выполнить();
	// Отрицательный остаток по счету
	Если НЕ РезультатЗапроса.Пустой() Тогда
		//ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			// определим индекс строки табличной части для отображения баллона
			ПараметрыПоискаСтроки = Новый Структура("Склад,Товар,индкод");
			ЗаполнитьЗначенияСвойств(ПараметрыПоискаСтроки, Выборка);
			СтрокиТабличнойЧасти = ТаблицаИсточник.НайтиСтроки(ПараметрыПоискаСтроки);
			
			Поле = "";
			НомерСтроки = 0;
			
			Если СтрокиТабличнойЧасти.Количество() <> 0 Тогда
				
				НомерСтроки = СтрокиТабличнойЧасти[0].НомерСтроки;
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Таблица", НомерСтроки, "Количество");
				
			КонецЕсли;
			
			ТекстСообщения = СтрШаблон(
				"Строка %1: Количество товара %2 (код %3) превышает остаток по складу %4. Нехватка: %5", 
				НомерСтроки, 
				Выборка.НоменклатураПредставление,
				Выборка.индкод,
				Выборка.Склад,
				//Выборка.КоличествоИзменение, 
				-Выборка.Количество);
			
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект");
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры // ВыполнитьКонтроль()


	
#КонецОбласти


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли






