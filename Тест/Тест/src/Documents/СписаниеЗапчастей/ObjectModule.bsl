
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс



#КонецОбласти

#Область ОбработчикиСобытий
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	

	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ДополнительныеСвойства.Вставить("ЭтоНовый",                    ЭтоНовый()); 
	ДополнительныеСвойства.Вставить("ДатаДокументаСдвинутаВперед", Ложь); 
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	
	ПараметрыПроведения = Документы.СписаниеЗапчастей.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	дт_ОбщегоНазначения.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	дт_Склад.ПодготовитьНаборыЗаписей(ЭтотОбъект);
	дт_СебестоимостьТоваров.ПодготовитьНаборыЗаписей(ЭтотОбъект);
	
	// Формирование движений
	дт_Склад.ОтразитьДвижения(ПараметрыПроведения, Движения, Отказ);
	дт_СебестоимостьТоваров.ОтразитьДвижения(ПараметрыПроведения, Движения, Отказ);
	
	Движения.Записать();
	
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСписанныеТовары", ПараметрыПроведения.ТаблицаСписанныеТовары);
	ДополнительныеСвойства.ДляПроведения.МоментКонтроля = Новый Граница(МоментВремени(), ВидГраницы.Включая);
	
	// Контроль отрицательных остаткок по регистрам накопления (только в рамках Д_Доработок)
	Документы.СписаниеЗапчастей.ВыполнитьКонтроль(ЭтотОбъект, ДополнительныеСвойства, Отказ);
	
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаСборку") Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Док.Проект,
			|	Док.Склад КАК Склад,
			|	Док.Ответственный КАК Ответственный,
			|	Док.Инициатор КАК Инициатор,
			|	Док.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ втШапка
			|ИЗ
			|	Документ.ЗаявкаНаСборку КАК Док
			|ГДЕ
			|	Док.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Товары.Ссылка КАК Ссылка,
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Автомобиль КАК Автомобиль,
			|	Товары.Партия КАК Партия,
			|	Товары.Количество КАК Количество
			|ПОМЕСТИТЬ втТовары
			|ИЗ
			|	Документ.ЗаявкаНаСборку.Товары КАК Товары
			|ГДЕ
			|	Товары.Ссылка = &Ссылка
			|	И Товары.Списать
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Док.Проект,
			|	Док.Склад КАК Склад,
			|	Док.Ссылка КАК Основание
			|ИЗ
			|	втШапка КАК Док
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Автомобиль КАК Автомобиль,
			|	Товары.Партия КАК Партия,
			|	Товары.Количество КАК Количество,
			|	втШапка.Инициатор
			|ИЗ
			|	втТовары КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ втШапка КАК втШапка
			|		ПО втШапка.Ссылка = Товары.Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	Товары.НомерСтроки";
		
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		Шапка = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РезультатЗапроса[2].Выгрузить()[0]);
		
		ЗаполнениеДокументов.Заполнить(ЭтотОбъект, Шапка);
		
		Товары.Загрузить(РезультатЗапроса[3].Выгрузить());
		
	КонецЕсли;	
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
КонецПроцедуры



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли