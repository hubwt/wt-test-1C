#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Заполнение
// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти


#Область Проведение
Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	НомераТаблиц = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(ТекущаяДата(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Склад", Реквизиты.СкладОтправитель);
	
	НомераТаблиц = Новый Структура;

	Запрос.Текст =
		ТекстЗапросаСписанныеТовары(НомераТаблиц)
		+ ТекстЗапросаТоварыОрганизаций(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		Таблица =  Результат[НомерТаблицы.Значение].Выгрузить();
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Таблица);
	КонецЦикла;

	Возврат ПараметрыПроведения;

КонецФункции


Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Ответственный КАК Ответственный,
	|	Реквизиты.Организация КАК Организация,
	|	ЕСТЬNULL(ЗаявкаНаСборку.СкладТранзитный, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК СкладТранзитный
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.СписаниеЗапчастей КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаСборку КАК ЗаявкаНаСборку
	|		ПО Реквизиты.Основание = ЗаявкаНаСборку.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Склад КАК СкладОтправитель,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Ответственный КАК Ответственный,
	|	Реквизиты.СкладТранзитный
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()


Функция ТекстЗапросаСписанныеТовары(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСписанныеТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Количество КАК Количество,
	|	Товары.Автомобиль КАК Автомобиль,
	|	Товары.Партия КАК Партия
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.СписаниеЗапчастей.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Реквизиты.СкладТранзитный <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			ТОГДА Реквизиты.СкладТранзитный
	|		ИНАЧЕ Реквизиты.Склад
	|	КОНЕЦ КАК Склад,
	|	ВТ_Товары.Номенклатура КАК Товар,
	|	ВТ_Товары.Количество КАК Колво,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВТ_Товары.Автомобиль КАК машина,
	|	ВЫБОР
	|		КОГДА Реквизиты.СкладТранзитный <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ИндКод.ПустаяСсылка)
	|		ИНАЧЕ ВТ_Товары.Партия
	|	КОНЕЦ индкод
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

Функция ТекстЗапросаТоварыОрганизаций(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаТоварыГр", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаТоварыСебестоимость", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаТоварыОрганизаций", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ВТ_Товары.НомерСтроки) КАК НомерСтроки,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Партия КАК Партия,
	|	СУММА(ВТ_Товары.Количество) КАК Количество,
	|	ВТ_Товары.Автомобиль КАК Автомобиль
	|ПОМЕСТИТЬ ВТ_ТоварыГр
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Партия,
	|	ВТ_Товары.Автомобиль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Автомобиль КАК Автомобиль,
	|	ВТ_Товары.Партия КАК Партия,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизацийОстатки.КоличествоОстаток > ВТ_Товары.Количество
	|			ТОГДА ВЫРАЗИТЬ(ТоварыОрганизацийОстатки.СтоимостьОстаток * ВТ_Товары.Количество / ТоварыОрганизацийОстатки.КоличествоОстаток КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ТоварыОрганизацийОстатки.СтоимостьОстаток
	|	КОНЕЦ КАК Стоимость
	|ПОМЕСТИТЬ ВТ_ТоварыСебестоимость
	|ИЗ
	|	ВТ_ТоварыГр КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(
	|				&МоментВремени,
	|				Организация = &Организация
	|					И Склад = &Склад
	|					И (Номенклатура, Партия) В
	|						(ВЫБРАТЬ
	|							ВТ_ТоварыГр.Номенклатура,
	|							ВТ_ТоварыГр.Партия
	|						ИЗ
	|							ВТ_ТоварыГр)) КАК ТоварыОрганизацийОстатки
	|		ПО ВТ_Товары.Номенклатура = ТоварыОрганизацийОстатки.Номенклатура
	|			И ВТ_Товары.Партия = ТоварыОрганизацийОстатки.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад,
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Партия КАК Партия,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВТ_Товары.Стоимость КАК Стоимость
	|ИЗ
	|	ВТ_ТоварыСебестоимость КАК ВТ_Товары,
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + дт_ОбщегоНазначенияВызовСервераПовтИсп.ТекстРазделителяЗапросовПакета();
	

КонецФункции // ТекстЗапросаРеквизиты()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументОбъект, ПараметрыПроведения, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	
	//СтруктураВременныеТаблицы = ПараметрыПроведения.ТаблицаЗапланированныеОтгрузки;
	СтруктураВременныеТаблицы = ПараметрыПроведения.ДляПроведения.СтруктураВременныеТаблицы;
	
		
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДвиженияТовары.Склад КАК Склад,
	|	ДвиженияТовары.Товар КАК Номенклатура,
	|	ДвиженияТовары.машина КАК Автомобиль,
	|	ДвиженияТовары.индкод КАК Партия,
	|	ВЫБОР
	|		КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДвиженияТовары.Колво
	|		ИНАЧЕ -ДвиженияТовары.Колво
	|	КОНЕЦ КАК КоличествоИзменение,
	|	ДвиженияТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ДвиженияТовары
	|ИЗ
	|	&ДвиженияТовары КАК ДвиженияТовары
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДвиженияТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДвиженияТовары.Колво
	|			ИНАЧЕ -ДвиженияТовары.Колво
	|		КОНЕЦ < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияТовары.Номенклатура) КАК НоменклатураПредставление,
	|	ДвиженияТовары.Склад КАК Склад,
	|	ДвиженияТовары.Номенклатура КАК Товар,
	|	ДвиженияТовары.Автомобиль КАК Автомобиль,
	|	ДвиженияТовары.Партия КАК индкод,
	|	ДвиженияТовары.КоличествоИзменение КАК КоличествоИзменение,
	|	ДвиженияТовары.НомерСтроки КАК НомерСтроки,
	|	ТоварыОстатки.КолвоОстаток КАК Количество
	|ИЗ
	|	ВТ_ДвиженияТовары КАК ДвиженияТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки(&МоментКонтроля, ) КАК ТоварыОстатки
	|		ПО ДвиженияТовары.Номенклатура = ТоварыОстатки.Товар
	|			И ДвиженияТовары.Склад = ТоварыОстатки.Склад
	|			И ДвиженияТовары.Автомобиль = ТоварыОстатки.машина
	|			И ДвиженияТовары.Партия = ТоварыОстатки.индкод
	|ГДЕ
	|	ЕСТЬNULL(ТоварыОстатки.КолвоОстаток, 0) < 0";
	
	//Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	ТаблицаИсточник = ПараметрыПроведения.ТаблицыДляДвижений.ТаблицаСписанныеТовары;
	Запрос.УстановитьПараметр("МоментКонтроля",ТекущаяДата() + 1);  
	// ПараметрыПроведения.ДляПроведения.МоментКонтроля // ТекущаяДата() + 1
	Запрос.УстановитьПараметр("ДвиженияТовары", ТаблицаИсточник);
	
	РезультатЗапроса = Запрос.Выполнить();
	// Отрицательный остаток по счету
	Если НЕ РезультатЗапроса.Пустой() Тогда
		//ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			// определим индекс строки табличной части для отображения баллона
			ПараметрыПоискаСтроки = Новый Структура("Товар,индкод");
			ЗаполнитьЗначенияСвойств(ПараметрыПоискаСтроки, Выборка);
			СтрокиТабличнойЧасти = ТаблицаИсточник.НайтиСтроки(ПараметрыПоискаСтроки);
			
			Поле = "";
			НомерСтроки = 0;
			
			Если СтрокиТабличнойЧасти.Количество() <> 0 Тогда
				
				НомерСтроки = СтрокиТабличнойЧасти[0].НомерСтроки;
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", НомерСтроки, "Количество");
				
			КонецЕсли;
			
			ТекстСообщения = СтрШаблон(
				"Строка %1: Количество товара %2 (код %3) превышает остаток по складу %4. Нехватка: %5", 
				НомерСтроки, 
				Выборка.НоменклатураПредставление,
				Выборка.индкод,
				Выборка.Склад,
				//Выборка.КоличествоИзменение, 
				-Выборка.Количество);
			
			
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры // ВыполнитьКонтроль()


#КонецОбласти 




#Область Печать
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктСписания";
	КомандаПечати.Представление = НСтр("ru = 'Акт списания ТМЦ'");
	КомандаПечати.Порядок = 10;
	
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСписания") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктСписания", "Акт списания ТМЦ", 
			ПечатьАктСписания(МассивОбъектов, ОбъектыПечати, "АктСписания"),,"Документ.СписаниеЗапчастей.ПФ_MXL_АктСписания");
	КонецЕсли;
	
	//ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
	//	КоллекцияПечатныхФорм,
	//	ОбъектыПечати,
	//	ПараметрыВывода);
	
КонецПроцедуры


// Процедура печати документа.
//
// Параметры:
//  МассивОбъектов - Массив - объекты, по которым требуется сформировать печатную форму;
//  ОбъектыПечати  - СписокЗначений - разметка табличных документов по печатаемым объектам:
//   * Значение      - ЛюбаяСсылка - печатаемый объект;
//   * Представление - Строка - имя области, соответствующее объекту.
//  ИмяМакета      - Строка - "Счет" или "Заказ".
//  ВыводитьПлатежныеРеквизиты - Булево - если Истина, выводит шапку с платежными реквизитами в счете.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьАктСписания(МассивОбъектов, ОбъектыПечати, ИмяМакета) Экспорт
	
	ЭтоНарядНаСборку = ИмяМакета = "НарядНаСборку";
	ДанныеПечати = ПолучитьДанныеПечатиПечатьАктСписания(МассивОбъектов, ЭтоНарядНаСборку);
	
	Шапка      	= ДанныеПечати.Шапка;
	ВыборкаПоТоварам = ДанныеПечати.Товары;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "СписаниеТМЦ_" + ИмяМакета;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеЗапчастей.ПФ_MXL_" + ИмяМакета);
	
	ФорматДаты = "ДФ=dd.MM.yyyy";
	
	Пока Шапка.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Ссылка", Шапка.Ссылка);
		ВыборкаПоТоварам.Сбросить();
		Если НЕ ВыборкаПоТоварам.НайтиСледующий(СтруктураПоиска) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В документе %1 отсутствуют товары. Печать не требуется'"),
				Шапка.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				Шапка.Ссылка);
			Продолжить;
		КонецЕсли;
		
		
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		
		ДанныеПечатиДоп = Новый Структура();
		ДанныеПечатиДоп.Вставить("ДатаДокумента", Формат(Шапка.ДатаДокумента, ФорматДаты));
		ДанныеПечатиДоп.Вставить("Ответственный", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.Ответственный));
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиДоп);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		
		// Таблица
		ДанныеПечатиСтрокаДоп = Новый Структура();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		СтрокаТовары = ВыборкаПоТоварам.Выбрать();
		Пока СтрокаТовары.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
		
			ДанныеПечатиСтрокаДоп.Вставить("ИнициаторФИО", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаТовары.Инициатор));
			ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСтрокаДоп);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиДоп);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции


Функция ПолучитьДанныеПечатиПечатьАктСписания(МассивОбъектов, ЭтоНарядНаСборку = Ложь)

	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Номер КАК НомерДокумента,
	|	Док.Дата КАК ДатаДокумента,
	|	Док.Склад КАК Склад,
	|	ЕСТЬNULL(Док.Ответственный.Представление, """") КАК Ответственный
	|ИЗ
	|	Документ.СписаниеЗапчастей КАК Док
	|ГДЕ
	|	Док.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Док.МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТЧТовары.НомерСтроки КАК НомерСтроки,
	|	ТЧТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ ТЧТовары.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ТЧТовары.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ТЧТовары.Номенклатура.Наименование
	|	КОНЕЦ КАК ТоварНаименование,
	|	ТЧТовары.Номенклатура.Артикул КАК ТоварАртикул,
	|	ТЧТовары.Номенклатура.Код КАК ТоварКод,
	|	ТЧТовары.Номенклатура.Производитель КАК ТоварПроизводитель,
	|	ТЧТовары.Количество КАК Количество,
	|	ТЧТовары.Ссылка КАК Ссылка,
	|	ТЧТовары.Партия.Представление КАК ПартияПредставление,
	|	ТЧТовары.Инициатор КАК Инициатор,
	|	ТЧТовары.Комментарий КАК Комментарий,
	|	Док.Склад КАК Склад
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.СписаниеЗапчастей.Товары КАК ТЧТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗапчастей КАК Док
	|		ПО ТЧТовары.Ссылка = Док.Ссылка
	|ГДЕ
	|	ТЧТовары.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВТ_Товары.Номенклатура КАК Товар,
	|	ВТ_Товары.ТоварНаименование КАК ТоварНаименование,
	|	ВТ_Товары.ТоварАртикул КАК ТоварАртикул,
	|	ВТ_Товары.ТоварКод КАК ТоварКод,
	|	ВТ_Товары.ТоварПроизводитель КАК ТоварПроизводитель,
	|	ВТ_Товары.Количество КАК Количество,
	|	0 КАК Цена,
	|	0 КАК Сумма,
	|	""шт.""  КАК ЕдиницаИзмерения,
	|	ВТ_Товары.ПартияПредставление КАК ПартияПредставление,
	|	МестаХранения.МестоХранения КАК МестоХранения,
	|	ВТ_Товары.Инициатор КАК Инициатор,
	|	ВТ_Товары.Комментарий КАК Комментарий,
	|	ВТ_Товары.Ссылка КАК Ссылка
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дт_МестаХраненияНоменклатуры.СрезПоследних КАК МестаХранения
	|		ПО ВТ_Товары.Номенклатура = МестаХранения.Номенклатура
	|			И ВТ_Товары.Склад = МестаХранения.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	" + ?(ЭтоНарядНаСборку, "МестоХранения", "НомерСтроки") + "
	|АВТОУПОРЯДОЧИВАНИЕ
	|ИТОГИ ПО
	|	Ссылка";
	
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Шапка      	= РезультатЗапроса[0].Выбрать();
	ВыборкаПоТоварам = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Возврат Новый Структура("Шапка,Товары",
		Шапка,
		ВыборкаПоТоварам);
		
КонецФункции // ПолучитьДанныеПечатиПеремещениеТоваров()




#КонецОбласти 



#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли