#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс


#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приказ";
	КомандаПечати.Представление = НСтр("ru = 'Приказ'");
	КомандаПечати.Порядок = 10;
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приказ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Приказ", "Приказ", 
			ПечатьПриказ(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры


Функция ПечатьПриказ(МассивОбъектов, ОбъектыПечати) Экспорт
	
	
	УстановитьПривилегированныйРежим(Истина);
	
	//ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приказ";
	
	Макет = ПолучитьМакет("ПФ_MXL_Приказ");	
	
	ДанныеДляПечати = ПолучитьДанныеДляПечати(МассивОбъектов);
	
	
	ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаСотрудники = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		

		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаСотрудники.Сбросить();
		
		ЕстьСотрудники = ВыборкаСотрудники.НайтиСледующий(СтруктураПоиска);


		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		ДопПараметры = Новый Структура();	
		//ДопПараметры.Вставить("Дата", Формат(ДанныеПечати.Дата, "ДЛФ=D;"));
		ДопПараметры.Вставить("Организация", "Компания ВоркТрак");//ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм"));
		ДопПараметры.Вставить("Ответственный", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Ответственный));
		//ДопПараметры.Вставить("Статус", ?(ДанныеПечати.Действующий, "Действующий", "Утративший силу"));
		ДопПараметры.Вставить("Статус", ДанныеПечати.СостояниеПриказа);
		ДопПараметры.Вставить("Ответственность", ДанныеПечати.Ответственность);
		ДопПараметры.Вставить("НомерИсходящий", дт_ПрефиксацияКлиентСервер.НомерНаПечать(ДанныеПечати.НомерИсходящий));
//		ДопПараметры.Вставить("Цель", ДанныеПечати.Цель);
//		ДопПараметры.Вставить("Описание", ДанныеПечати.Описание);
		
	

		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.Заполнить(ДопПараметры);
		
	Штрихкод =  ГенераторШтрихКода.ПолучитьКомпонентуШтрихКодирования(""); 
	Штрихкод.Ширина = 180; 
	Штрихкод.Высота = 180;
	Штрихкод.ТипКода = 16;
	Штрихкод.УголПоворота = 0;
	Штрихкод.ЗначениеКода = "{ ""id_doc"":"+ Строка(ДанныеПечати.Номер) + ",""type"":" +" ""Приказ""}";
	Штрихкод.ПрозрачныйФон = Истина;
	Штрихкод.ОтображатьТекст = Ложь;
	
	ДвоичныйШтрихКод = штрихкод.ПолучитьШтрихКод();
	КартинкаШтрихКод = Новый Картинка(ДвоичныйШтрихКод,Истина);
	//ФайлКартинки 			             = КартинкаШтрихКод;
	ОбластьМакета.Рисунки.D1.Картинка = КартинкаШтрихКод;
	
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ПараметрыПодвала = Новый Структура;
		
		ПараметрыПодвала.Вставить("Дедлайн", ДанныеПечати.ДатаСдачи);
		ПараметрыПодвала.Вставить("Ответственный", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Контролёр.пользователь.наименование));		
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалШапки");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.Заполнить(ПараметрыПодвала);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Страница 2
		//ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//ОбластьМакета = Макет.ПолучитьОбласть("ШапкаПриложение");
		//ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		//ОбластьМакета.Параметры.Заполнить(ДопПараметры);
		//ТабличныйДокумент.Вывести(ОбластьМакета);
		//
		//Если ЕстьСотрудники Тогда
		//			
		//	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		//	СтрокаВыборки = ВыборкаСотрудники.Выбрать();
		//	
		//	ДопПараметрыСтрока = Новый Структура();
		//			
		//	Пока СтрокаВыборки.Следующий() Цикл
		//		
		//		ДопПараметрыСтрока.Вставить("ФИО", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(СтрокаВыборки.Сотрудник));
		//		ОбластьМакета.Параметры.Заполнить(ДопПараметрыСтрока);
		//		ТабличныйДокумент.Вывести(ОбластьМакета);
		//		
		//	КонецЦикла;
		//	
		//КонецЕсли;
		
		// Дополняем бланк до конца страницы пустыми строками
		//ОбластьСтрокаПустая = Макет.ПолучитьОбласть("СтрокаПустая");
		//Макеты = Новый Массив();
		//Макеты.Добавить(ОбластьСтрокаПустая);
		
		//НомерСтроки = 0;
		//Пока ТабличныйДокумент.ПроверитьВывод(Макеты) Цикл
		//	ТабличныйДокумент.Вывести(ОбластьСтрокаПустая);
		//	НомерСтроки = НомерСтроки + 1;
		//КонецЦикла;	
		
		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
	
КонецФункции

Функция ПолучитьДанныеДляПечати(МассивОбъектов)

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Номер КАК Номер,
	|	Док.Дата КАК Дата,
	|	Док.Описание,
	|	Док.Подразделение,
	|	Док.Город,
	|	Док.Действующий,
	|	Док.Заголовок,
	|	Док.НомерИсходящий,
	|	Док.Цель,
	|	Док.ТипПриказа,
	|	Док.Ответственный,
	|	Док.Организация,
	|	Док.Контролёр,
	|	Док.ДатаСдачи,
	|	Док.Ответственность,
	|	Док.СостояниеПриказа
	|ИЗ
	|	Документ.Приказ КАК Док
	|ГДЕ
	|	Док.Ссылка В (&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриказСотрудники.Сотрудник КАК Сотрудник,
	|	ПриказСотрудники.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.Приказ.Сотрудники КАК ПриказСотрудники
	|ГДЕ
	|	ПриказСотрудники.Ссылка В (&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник
	|АВТОУПОРЯДОЧИВАНИЕ
	|ИТОГИ
	|ПО
	|	Ссылка";
	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Рез = Новый Структура();
	Рез.Вставить("РезультатПоШапке", РезультатЗапроса[0]);
	Рез.Вставить("РезультатПоТабличнойЧасти", РезультатЗапроса[1]);
	
	Возврат Рез;

КонецФункции // ПолучитьДанныеДляПечати()

#КонецОбласти



#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли