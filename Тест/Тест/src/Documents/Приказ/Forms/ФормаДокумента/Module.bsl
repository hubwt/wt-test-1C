#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	///+ГомзМА 04.07.2023
	Если НЕ ЗначениеЗаполнено(Объект.Номер) Тогда
		ПоследнийНомерДоговора = ПолучитьПоследнийНомерДокумента();
		
		ПоследнийНомерДоговора = СтрЗаменить(ПоследнийНомерДоговора, " ", "");
		ПоследнийНомерДоговора = СокрЛП(ПоследнийНомерДоговора);
		КоличествоСимволовНомера = СтрДлина(ПоследнийНомерДоговора);
		Если Число(Прав(ПоследнийНомерДоговора, 4)) < Год(ТекущаяДатаСеанса()) Тогда
			ПоследнийНомерДоговора = 0;
			ТекущийГод = Число(Год(ТекущаяДатаСеанса()));
			ТекущийГод = Формат(ТекущийГод, "ЧГ=");
			
			Объект.Номер = СтрШаблон("%1/%2", ПоследнийНомерДоговора + 1, ТекущийГод);	
		Иначе		
			ПоследнийНомерДоговора = Число(Лев(ПоследнийНомерДоговора, КоличествоСимволовНомера - 5));
			ТекущийГод = Число(Год(ТекущаяДатаСеанса()));
			ТекущийГод = Формат(ТекущийГод, "ЧГ=");
			
			Объект.Номер = СтрШаблон("%1/%2", ПоследнийНомерДоговора + 1, ТекущийГод); 
		КонецЕсли;
	КонецЕсли;

	
	//QRКод = "";
	// Проверка = ГенераторШтрихКодаКлиент.УстановитьКомпонентуШтрихКодирования("");
	Получитькомпоненту(); 
	Элементы.QRКод.РазмерКартинки = РазмерКартинки.АвтоРазмер;
	
	
	
КонецПроцедуры 
 
&НаСервере
Процедура Получитькомпоненту()
	ТекстОшибки = "";
	
	Штрихкод =  ГенераторШтрихКода.ПолучитьКомпонентуШтрихКодирования(ТекстОшибки); 
	Штрихкод.Ширина = 250; 
	Штрихкод.Высота = 250;
	Штрихкод.ТипКода = 16;
	Штрихкод.УголПоворота = 0;
	Штрихкод.ЗначениеКода = "{ ""id_doc"":"+ """" + Объект.Номер + """" + ",""type"":" +" ""Приказ""}";
	Штрихкод.ПрозрачныйФон = Истина;
	Штрихкод.ОтображатьТекст = Ложь;
	
	ДвоичныйШтрихКод = штрихкод.ПолучитьШтрихКод();
	КартинкаШтрихКод = Новый Картинка(ДвоичныйШтрихКод,Истина);
	
	QRкод = ПоместитьВоВременноеХранилище(КартинкаШтрихКод,УникальныйИдентификатор);
	//возврат истина;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
    РаботаСФайламиКлиент.ПоказатьПодтверждениеЗакрытияФормыСФайлами(ЭтотОбъект, Отказ, ЗавершениеРаботы, Объект.Ссылка);
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры




#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Сотрудники



&НаКлиенте
Процедура СотрудникиСотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	ПараметрыОткрытия.Вставить("ТекущаяСтрока", Элементы.Сотрудники.ТекущиеДанные.Сотрудник);
	ОткрытьФорму("Справочник.Сотрудники.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.Сотрудники.Форма.ФормаВыбора" Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
			Для Индекс = 0 По ВыбранноеЗначение.Количество() - 1 Цикл
				
				НоваяСтрока = ?(Индекс = 0, Элементы.Сотрудники.ТекущиеДанные, Объект.Сотрудники.Добавить());
				НоваяСтрока.Сотрудник = ВыбранноеЗначение[Индекс];
				
			КонецЦикла;
			
		Иначе
			Элементы.Сотрудники.ТекущиеДанные.Сотрудник = ВыбранноеЗначение;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры





#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьПоследнийНомерДокумента()

	///+ГомзМА 04.07.2023
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Приказ.Номер КАК Номер,
		|	Приказ.Дата КАК Дата
		|ИЗ
		|	Документ.Приказ КАК Приказ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	РезультатЗапроса.Следующий();
	
	Возврат РезультатЗапроса.Номер;
	///-ГомзМА 04.07.2023


КонецФункции // ПолучитьПоследнийНомерДокумента()


#КонецОбласти