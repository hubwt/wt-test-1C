#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗадачаЗаявка";
	КомандаПечати.Представление = НСтр("ru = 'Заявка на выполнение задачи'");
	КомандаПечати.Порядок = 10;
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
//Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

//	Макет = Документы.Задача.ПолучитьМакет("ПечатьПоПроектам");
//	Запрос = Новый Запрос;
//	Запрос.Текст =
//	"ВЫБРАТЬ
//	|	Задача.Дата КАК Дата,
//	|	Задача.Наименование КАК Наименование,
//	|	Задача.Статус КАК Статус,
//	|	Задача.Проект КАК Проект,
//	|	Задача.Исполнитель КАК Исполнитель,
//	|	Задача.Ответственный КАК Ответственный,
//	|	Задача.СтатусАвтора КАК СтатусАвтора,
//	|	Задача.Номер КАК Номер,
//	|	Задача.Ссылка КАК Ссылка
//	|ИЗ
//	|	Документ.Задача КАК Задача
//	|ГДЕ
//	|	Задача.Ссылка В(&Ссылка)";
//	
//	Запрос.УстановитьПараметр("Ссылка", ОбъектыПечати.Ссылка);
//	Выборка = Запрос.Выполнить().Выбрать();

//	ТабДок = Новый ТабличныйДокумент;
//	
//	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
//	Шапка = Макет.ПолучитьОбласть("Шапка");
//	ТЧ = Макет.ПолучитьОбласть("ТЧ");
//	ТабДок.Очистить();
//	
//	ВставлятьРазделительСтраниц = Ложь;
//	
//	ТабДок.Вывести(ОбластьЗаголовок);
//	
//	Пока Выборка.Следующий() Цикл
//		Если ВставлятьРазделительСтраниц Тогда
//			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
//		КонецЕсли;

//		Шапка.Параметры.Заполнить(Выборка);
//		ТабДок.Вывести(Шапка, Выборка.Уровень());
//		
//		ТЧ.Параметры.Заполнить(Выборка);
//		ТабДок.Вывести(ТЧ, Выборка.Уровень());

//	КонецЦикла;
//	
//	ВставлятьРазделительСтраниц = Истина;
//	
//КонецПроцедуры


Функция ПечатьЗадача(МассивОбъектов, ОбъектыПечати) Экспорт
	
	
	УстановитьПривилегированныйРежим(Истина);
	
	//ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Задача";
	
	Макет = ПолучитьМакет("ПФ_MXL_ЗадачаЗаявка");	
	
	ДанныеДляПечати = ПолучитьДанныеДляПечати(МассивОбъектов);
	
	
	ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДопПараметры = Новый Структура();	
		ДопПараметры.Вставить("Дата", Формат(ДанныеПечати.Дата, "ДЛФ=D;"));
		ДопПараметры.Вставить("Инициатор", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Ответственный));
		ДопПараметры.Вставить("Исполнитель", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Исполнитель));
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.Заполнить(ДопПараметры);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.Заполнить(ДопПараметры);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		// Дополняем бланк до конца страницы пустыми строками
		ОбластьСтрокаПустая = Макет.ПолучитьОбласть("СтрокаПустая");
		Макеты = Новый Массив();
		Макеты.Добавить(ОбластьСтрокаПустая);
		Макеты.Добавить(ОбластьПодвал);
		
		НомерСтроки = 0;
		Пока ТабличныйДокумент.ПроверитьВывод(Макеты) Цикл
			ТабличныйДокумент.Вывести(ОбластьСтрокаПустая);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;	
		
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
		ОбластьПодвал.Параметры.Заполнить(ДопПараметры);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
	
КонецФункции

Функция ПолучитьДанныеДляПечати(МассивОбъектов)

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Номер КАК Номер,
	|	Док.Дата КАК Дата,
	|	Док.Наименование,
	|	Док.Описание,
	|	Док.Ответственный,
	|	Док.Исполнитель,
	|	Док.Подразделение
	|ИЗ
	|	Документ.Задача КАК Док
	|ГДЕ
	|	Док.Ссылка В (&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Рез = Новый Структура();
	Рез.Вставить("РезультатПоШапке", РезультатЗапроса[0]);
	
	Возврат Рез;

КонецФункции // ПолучитьДанныеДляПечати()

#КонецОбласти


#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли




