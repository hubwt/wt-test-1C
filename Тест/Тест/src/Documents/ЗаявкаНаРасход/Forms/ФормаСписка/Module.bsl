#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//Видимость по ролям
	///+ГомзМА 30.08.2023
	Если ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("ПомощникБухгалтера")) Тогда
		//УстановитьВидимостьПомощникуБухгалтера();
	ИначеЕсли НЕ Пользователи.РолиДоступны("ПолныеПрава,дт_Зарплата,дт_БанковскиеСчета")  Тогда
		УстановитьВидимость();
	КонецЕсли;
	//
	УстановитьУсловноеОформление();
	
	Если ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("ПолныеПрава")) Тогда
		Элементы.УстановитьЗП.Видимость = Истина;
	КонецЕсли;
	
	// ++ МазинЕС 10-07-24 
	Пользователь =ПользователиИнформационнойБазы.ТекущийПользователь().ПолноеИмя;
	СсылкаПодьзователь = Справочники.Сотрудники.НайтиПоНаименованию(Пользователь); 
	
	//000000208 Панькина, 000000240 Мазин
	Если СсылкаПодьзователь.Код = "000000208"  Тогда
		Элементы.ПланируемыйРасход.Видимость = Истина;
	Иначе
		Элементы.ПланируемыйРасход.Видимость = Ложь;
	КонецЕсли;
	// -- МазинЕС 10-07-24
КонецПроцедуры

Процедура УстановитьВидимость()
	////Видно только те заявки, где пользователь выступает инициатором
	//ТекстЗапроса 		= Список.ТекстЗапроса;
	//Если не пользователи.РолиДоступны("Москва") тогда
	//	Пользователь 		= Пользователи.ТекущийПользователь(); 
	//	ТекстЗапроса 	 	= ТекстЗапроса + " ГДЕ Док.Инициатор.Пользователь = &Пользователь ИЛИ Док.ВидРасхода в (&ВидРасхода)";
	//	Список.ТекстЗапроса = ТекстЗапроса;
	//	Список.Параметры.УстановитьЗначениеПараметра("Пользователь",Пользователь);
	//	Массиврасходов = новый массив;
	//	Массиврасходов.Добавить(справочники.ВидыРасходов.НайтиПоКоду("000000008"));//ХОЗ РАСХОДЫ
	//	Массиврасходов.Добавить(справочники.ВидыРасходов.НайтиПоКоду("000000017"));//Стройка
	//	Массиврасходов.Добавить(справочники.ВидыРасходов.НайтиПоКоду("000000006"));//Инструмент
	//	Массиврасходов.Добавить(справочники.ВидыРасходов.НайтиПоКоду("000000169"));//Расходники-Малярка
	//	Массиврасходов.Добавить(справочники.ВидыРасходов.НайтиПоКоду("000000003"));//ОФИС (техника, мебель, канцтовары)
	//	
	//	Список.Параметры.УстановитьЗначениеПараметра("ВидРасхода",Массиврасходов);
	//Иначе
	//	ТекстЗапроса 	 	= ТекстЗапроса + " ГДЕ Док.Подразделение = &Подразделение";
	//	Список.ТекстЗапроса = ТекстЗапроса;
	//	Список.Параметры.УстановитьЗначениеПараметра("Подразделение",Справочники.Подразделения.НайтиПоКоду("000000002"));
	//КонецЕсли;
	
	///+ГомзМА 22.01.2023
	ТекстЗапроса = Список.ТекстЗапроса;
	Пользователь = Пользователи.ТекущийПользователь();
	Если Пользователь.Подразделение = Справочники.Подразделения.НайтиПоКоду("000000029") Тогда //Филиал Москва - Действующий
		ТекстЗапроса 	 	= ТекстЗапроса + " И Док.Подразделение = &Подразделение";
		Список.ТекстЗапроса = ТекстЗапроса;
		Список.Параметры.УстановитьЗначениеПараметра("Подразделение",Справочники.Подразделения.НайтиПоКоду("000000002"));
	ИначеЕсли Пользователь.Подразделение = Справочники.Подразделения.НайтиПоКоду("000000060") Тогда //Филиал Екатеринбург - Действующий
		ТекстЗапроса 	 	= ТекстЗапроса + " И Док.Подразделение В (&Подразделение)";
		Список.ТекстЗапроса = ТекстЗапроса;
		
		МассивПодразделений = Новый Массив;
		МассивПодразделений.Добавить(Справочники.Подразделения.НайтиПоКоду("000000060")); //Филиал Екатеринбург - Действующий
		МассивПодразделений.Добавить(Справочники.Подразделения.НайтиПоКоду("000000061")); //Склад Екатеринбург
		
		Список.Параметры.УстановитьЗначениеПараметра("Подразделение", МассивПодразделений);	
	Иначе
		ТекстЗапроса 	 	= ТекстЗапроса + " И Док.Инициатор.Пользователь = &Пользователь ИЛИ Док.ВидРасхода в (&ВидРасхода)";
		Список.ТекстЗапроса = ТекстЗапроса;
		Список.Параметры.УстановитьЗначениеПараметра("Пользователь",Пользователь);
		Массиврасходов = новый массив;
		Массиврасходов.Добавить(справочники.ВидыРасходов.НайтиПоКоду("000000008"));//ХОЗ РАСХОДЫ
		Массиврасходов.Добавить(справочники.ВидыРасходов.НайтиПоКоду("000000017"));//Стройка
		Массиврасходов.Добавить(справочники.ВидыРасходов.НайтиПоКоду("000000006"));//Инструмент
		Массиврасходов.Добавить(справочники.ВидыРасходов.НайтиПоКоду("000000169"));//Расходники-Малярка
		Массиврасходов.Добавить(справочники.ВидыРасходов.НайтиПоКоду("000000003"));//ОФИС (техника, мебель, канцтовары)
		Массиврасходов.Добавить(справочники.ВидыРасходов.НайтиПоКоду("000000025"));//РЕКЛАМА
		
		Список.Параметры.УстановитьЗначениеПараметра("ВидРасхода",Массиврасходов);
	КонецЕсли;
	///-ГомзМА 22.01.2023
	
КонецПроцедуры


Процедура УстановитьВидимостьПомощникуБухгалтера()
	
	///+ГомзМА 30.08.2023
	ТекстЗапроса 		= Список.ТекстЗапроса;
	ТекстЗапроса 	 	= ТекстЗапроса + " И Док.ВидРасхода в (&ВидРасхода)";
	Список.ТекстЗапроса = ТекстЗапроса;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыРасходов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВидыРасходов КАК ВидыРасходов
		|ГДЕ
		|	ВидыРасходов.ВидОперацииСписаниеДенежныхСредств <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.Зарплата)
		|	И ВидыРасходов.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Справочники.ВидыРасходов.НайтиПоКоду("000000114")); //Зарплата внештатных сотрудников
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	МассивРасходов = Новый Массив;
	Пока РезультатЗапроса.Следующий() Цикл
		МассивРасходов.Добавить(РезультатЗапроса.Ссылка); //Кроме зарплатных расходов
	КонецЦикла;	
	Список.Параметры.УстановитьЗначениеПараметра("ВидРасхода", МассивРасходов);
	///-ГомзМА 30.08.2023
	
КонецПроцедуры



&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Расход_Запись" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
		
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы






&НаКлиенте
Процедура СписокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	
	// Статус = Срочно  - Красный
	ЭлементУО = Список.УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Статус", ВидСравненияКомпоновкиДанных.Равно, ПредопределенноеЗначение("Перечисление.дт_СтатусыЗаявокНаРасход.Срочно"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоРозовый);
	

		
	
	
	// Статус - Планово - Бледно-зелёный
	ЭлементУО = Список.УсловноеОформление.Элементы.Добавить();
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Статус", ВидСравненияКомпоновкиДанных.Равно, ПредопределенноеЗначение("Перечисление.дт_СтатусыЗаявокНаРасход.Планово"));
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"СуммаОплачено", ВидСравненияКомпоновкиДанных.НеРавно, Новый ПолеКомпоновкиДанных("СуммаДокумента"));
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ПринятоБанком", ВидСравненияКомпоновкиДанных.НеРавно, Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноЗеленый);


	// Статус - Внепланово - Бледно-желтый
	ЭлементУО = Список.УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Статус", ВидСравненияКомпоновкиДанных.Равно, ПредопределенноеЗначение("Перечисление.дт_СтатусыЗаявокНаРасход.Внепланово"));
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"СуммаОплачено", ВидСравненияКомпоновкиДанных.НеРавно, Новый ПолеКомпоновкиДанных("СуммаДокумента"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоЖелтый);
		

	// Статус - Внепланово - Бледно-желтый
	ЭлементУО = Список.УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Статус", ВидСравненияКомпоновкиДанных.Равно, ПредопределенноеЗначение("Перечисление.дт_СтатусыЗаявокНаРасход.Отклонено"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗП(Команда)
	
	Форма = ПолучитьФорму("РегистрСведений.УстановитьЗП.ФормаСписка");
	Форма.Открыть();
	
КонецПроцедуры


#КонецОбласти