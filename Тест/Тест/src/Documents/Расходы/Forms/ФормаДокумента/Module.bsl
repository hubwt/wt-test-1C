
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	//++МазинЕС 24-05-24
	

Если ЗначениеЗаполнено(Объект.Основание) Тогда 
Если ТипЗнч(Объект.Основание) = Тип("ДокументСсылка.ПоступлениеЗапчастей") Тогда
Попытка
	СсылкаНаОбъект = Объект.Основание;
	Форма = ПолучитьФорму("Документ.ПоступлениеЗапчастей.Форма.ФормаДокумента", Новый Структура("Ключ", СсылкаНаОбъект));
	Форма.Записать();
Исключение
   Сообщение = новый СообщениеПользователю();
   Сообщение.Текст = "Закройте вкладку документа Поступления запчастей и проведите/сохраните документ";
КонецПопытки;	
КонецЕсли; 
КонецЕсли; 
	//--МазинЕС 24-05-24	
	
	Оповестить("ОстаткиБалансИзменение");
	Оповестить("Расход_Запись");
	
	ЗакрытьФорму = Ложь;
	Если ПараметрыЗаписи.Свойство("ПровестиИЗакрыть", ЗакрытьФорму) Тогда
		Если ЗакрытьФорму = Истина Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ИспользоватьГрузоперевозки = ПолучитьФункциональнуюОпцию("дт_ИспользоватьГрузоперевозки");
	//ИспользоватьАвтосервис = ПолучитьФункциональнуюОпцию("дт_ИспользоватьАвтосервис");
	
	// ++МазинЕС 10-07-2024  Закомитил Строку так как сумма нужна с копейками 
	///дт_Формы.УстановитьТочностьСумм(ЭтаФорма, "Сумма");
	// --МазинЕС 10-07-2024 
	
	УправлениеФормой(ЭтаФорма); 
	
	//Волков ИО 18.01.24 ++
	Элементы.Партия.Видимость = Ложь;
	//Волков ИО 18.01.24 --

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	//Волков++
	
	Элементы.Кредит.Видимость = Ложь;  
	Элементы.СтраницаРасходы.Видимость = Ложь;
	
	ДоступностьРеквизитаКредиты();
	ВидимостьСтраницыРасходов();
	//Волков-- 
	
	//Волков ИО 16.01.24 ++ 
	Элементы.Партия.Видимость = Ложь;
	ВидРасходаЗакупкаЕвропа();
	//Волков ИО 16.01.24 -- 
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//Если Объект.Зарплата Тогда
	//	Элементы.Работник.Видимость = ИСТИНА;
	//	Элементы.Год.Видимость = ИСТИНА;
	//	Элементы.Месяц.Видимость = ИСТИНА;
	//	Элементы.ВидВыдачи.Видимость = Истина;
	//Иначе
	//	Элементы.Работник.Видимость = ЛОЖЬ;
	//	Элементы.Год.Видимость = ЛОЖЬ;
	//	Элементы.Месяц.Видимость = ЛОЖЬ;
	//	Элементы.ВидВыдачи.Видимость = ЛОЖЬ;
	//КонецЕсли; 
	
	
КонецПроцедуры


#КонецОбласти

Процедура ВидРасходаЗакупкаЕвропа()
	//ВидРасхода - ЗакупкаЕвропа
	Если Объект.ВидРасхода = Справочники.ВидыРасходов.НайтиПоКоду("000000042")  Тогда

		Элементы.Партия.Видимость = Истина; 
		
	Иначе 		
		
		Элементы.Партия.Видимость = Ложь;

	КонецЕсли;     
	
КонецПроцедуры	

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ВидРасходаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ВидРасхода) Тогда
		ВидРасходаПриИзмененииСервер();
		ЗарплатаПриИзменении(Элементы.Зарплата);
	КонецЕсли;
	
	//Волков ++
	ДоступностьРеквизитаКредиты();
	//Волков -- 
	
	//Волков ИО 18.01.24 ++
	ВидРасходаЗакупкаЕвропа();
	//Волков ИО 18.01.24 --
	
	
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ДоступностьРеквизитаКредиты()
	//Волков 18.01.24 ++
	Если Объект.ВидРасхода = Справочники.ВидыРасходов.НайтиПоКоду("000000010") Тогда
		
		Элементы.Кредит.Видимость = Истина;
		Элементы.НаименованиеКредита.Видимость = Истина;
		
	Иначе
		
		Элементы.Кредит.Видимость = Ложь;
		Элементы.НаименованиеКредита.Видимость = Ложь;
	КонецЕсли;
	//Воков 18.01.24 --
КонецПроцедуры



Процедура ВидимостьСтраницыРасходов()
	//Волков И.О. 30.11.2023 ++
	Если Объект.ТипРасхода = Перечисления.ТипРасхода.Накопительный Тогда
		
		Элементы.СтраницаРасходы.Видимость = Истина;	
		
	Иначе 
		
		Элементы.СтраницаРасходы.Видимость = Ложь;	
		
	КонецЕсли;
	
	//Волков И.О. 30.11.2023 ++
КонецПроцедуры




&НаСервере
Процедура ВидРасходаПриИзмененииСервер()
	
	СвойстваВидаРасхода = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидРасхода, "Зарплата,ВидОперацииСписаниеДенежныхСредств,Подразделение");
	Объект.Зарплата = СвойстваВидаРасхода.Зарплата;
	
	Если ЗначениеЗаполнено(СвойстваВидаРасхода.ВидОперацииСписаниеДенежныхСредств) Тогда
		Объект.ВидОперации = СвойстваВидаРасхода.ВидОперацииСписаниеДенежныхСредств;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Объект.ВидОперации) Тогда
		
		Объект.ВидОперации = ?(Объект.Зарплата,
		Перечисления.ВидыОперацийСписаниеДенежныхСредств.Зарплата,
		Перечисления.ВидыОперацийСписаниеДенежныхСредств.Прочее
		);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СвойстваВидаРасхода.Подразделение) Тогда
		Объект.Подразделение = СвойстваВидаРасхода.Подразделение;
	КонецЕсли;
	
	
КонецПроцедуры // ВидРасходаПриИзмененииСервер()

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	Объект.Зарплата = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.Зарплата");
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.Прочее") 
		//И НЕ Объект.ИспользоватьАвтосервис 
		И НЕ ЗначениеЗаполнено(Объект.Основание) Тогда
		
		Объект.Основание = ПредопределенноеЗначение("Документ.ЛистыУщерба.ПустаяСсылка");
		
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура ОснованиеПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Основание) Тогда
		ОснованиеПриИзмененииСервер();
	КонецЕсли;
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура ОснованиеПриИзмененииСервер()
	
	Если ТипЗнч(Объект.Основание) = Тип("ДокументСсылка.ПоступлениеЗапчастей")  Тогда
		СвойстваПоступления = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Основание, "Контрагенты,Организация");
		Объект.Контрагент = СвойстваПоступления.Контрагенты;
		Объект.Организация = СвойстваПоступления.Организация;
	КонецЕсли;
	
КонецПроцедуры // ОснованиеПриИзмененииСервер()



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы



#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	
	Элементы.ГруппаГрузоперевозки.Видимость = Форма.ИспользоватьГрузоперевозки;
	
	ЭтоТопливо = Объект.ВидРасхода = ПредопределенноеЗначение("Справочник.ВидыРасходов.Топливо");
	Элементы.КоличествоТопливо.Видимость = Форма.ИспользоватьГрузоперевозки И ЭтоТопливо;
	
	Элементы.ГруппаОплатаПоставщику.Видимость = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщикуЗапчастей");
	Элементы.ГруппаЗарплата.Видимость = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.Зарплата") ИЛИ Объект.Зарплата;
	Элементы.ГруппаАвтосервис.Видимость = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.Прочее"); //И Форма.ИспользоватьАвтосервис;
	//Элементы.ГруппаПрочее.Видимость = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.Прочее") И НЕ Элементы.ГруппаАвтосервис.Видимость;
	
	Если Элементы.ГруппаПрочее.Видимость Тогда
		//Элементы.ОснованиеПрочее.АвтоотметкаНезаполненного = Ложь;
	КонецЕсли;
	
	Элементы.ФормаПровестиИЗакрыть.Доступность = Не Форма.ТолькоПросмотр;
	элементы.ГруппаШапкаЛево.Видимость = Истина;
	
КонецПроцедуры // УстановитьВидимостьДоступность()


#КонецОбласти



&НаКлиенте
Процедура ЗарплатаПриИзменении(Элемент)
	Возврат;
	Если Объект.Зарплата Тогда
		Элементы.Работник.Видимость = ИСТИНА;
		Элементы.Год.Видимость = ИСТИНА;
		Элементы.Месяц.Видимость = ИСТИНА;
		Элементы.ВидВыдачи.Видимость = Истина;
		ПроверитьЗарплатуГалочка();
	Иначе
		Элементы.Работник.Видимость = ЛОЖЬ;
		Элементы.Год.Видимость = ЛОЖЬ;
		Элементы.Месяц.Видимость = ЛОЖЬ;
		Элементы.ВидВыдачи.Видимость = ЛОЖЬ;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Объект.Новые = Истина И Объект.Откуда.Новые = Ложь Тогда
		Сообщить("Поле откуда должно указывать на накладную с новыми запчастями");
		Отказ=Истина;
	КонецЕсли;
	Если Объект.Новые = Ложь И Объект.Откуда.Новые = Истина Тогда
		Сообщить("Поле откуда должно указывать на накладную с БУ запчастями");
		Отказ=Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодтверждающийДокументОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	П = Новый Структура;
	Если Объект.Новые = Истина Тогда
		П.Вставить("НовыеЗП",Истина);
	Иначе
		П.Вставить("НовыеЗП",Ложь);
	КонецЕсли;
	ФормаСписка = ПолучитьФорму("Документ.ПродажаЗапчастей.ФормаВыбора",П);
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	Если Объект.Новые = Истина Тогда
		ФормаСписка.НовыеЗП=Истина;
	Иначе
		ФормаСписка.НовыеЗП=Ложь;
	КонецЕсли;
	
	Если Не ФормаСписка.Открыта() Тогда
		ФормаСписка.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПодтверждающийДокументНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	П = Новый Структура;
	Если Объект.Новые = Истина Тогда
		П.Вставить("НовыеЗП",Истина);
	Иначе
		П.Вставить("НовыеЗП",Ложь);
	КонецЕсли;
	ФормаСписка = ПолучитьФорму("Документ.ПродажаЗапчастей.ФормаВыбора",П);
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	Если Объект.Новые = Истина Тогда
		ФормаСписка.НовыеЗП=Истина;
	Иначе
		ФормаСписка.НовыеЗП=Ложь;
	КонецЕсли;
	
	Если Не ФормаСписка.Открыта() Тогда
		ФормаСписка.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодтверждающийДокументОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Сообщить("Выбор");
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	// Вставить содержимое обработчика.
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПродажаЗапчастей") Тогда
		УстЗначДок(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстЗначДок(док)
	Объект.Откуда=док;
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	Записать(Новый Структура("РежимЗаписи,ПровестиИЗакрыть", РежимЗаписиДокумента.Проведение, Истина));
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//Если НЕ ПроверкаНаЗарплату() Тогда
		//Отказ = истина;
		//Возврат
	//КонецЕсли; ///////////////////////////////////////ПРОВЕРИТЬ!!!!
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.Зарплата") 
		И Объект.Год <> Год(Объект.Дата) 
		И НЕ ПараметрыЗаписи.Свойство("ОтключитьПроверкуПередЗаписью") Тогда 
		
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ПередЗаписью_Продолжение", ЭтаФорма, ПараметрыЗаписи);
		ПоказатьВопрос(Оповещение, "Год выплаты не соответствует дате документа. Продолжить?", РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
	//Волков ИО 16.01.24 ++
	ЗакупкаЕвропа = ПолучитьСпрВидыРасходовзакупкаЕвропа();
	Если Объект.ВидРасхода = ЗакупкаЕвропа И Не ЗначениеЗаполнено(Объект.Партия) Тогда  
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Установите партию";
		Сообщение.Поле = "Партия";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.Сообщить();
		Отказ = Истина; 
	КонецЕсли;
	//Волков ИО 16.01.24 --
	
КонецПроцедуры

//Волков ИО 16.01.24 ++
Функция ПолучитьСпрВидыРасходовзакупкаЕвропа()
                                                 //ЗАКУПКА ЕВРОПА
	Возврат Справочники.ВидыРасходов.НайтиПоКоду("000000042");		
	
КонецФункции
//Волков ИО 16.01.24 --

&НаКлиенте
Процедура ПередЗаписью_Продолжение(КодОтвета, ПараметрыЗаписи = Неопределено) Экспорт
	
	Если КодОтвета <> КодВозвратаДиалога.Да Тогда
		Возврат
	КонецЕсли;
	
	Если ПараметрыЗаписи = Неопределено Тогда
		ПараметрыЗаписи = Новый Структура();
	КонецЕсли;	
	
	ПараметрыЗаписи.Вставить("ОтключитьПроверкуПередЗаписью", Истина);
	
	Записать(ПараметрыЗаписи);
	
	ЗакрытьФорму = Ложь;
	Если ПараметрыЗаписи.Свойство("ПровестиИЗакрыть", ЗакрытьФорму) Тогда
		Если ЗакрытьФорму = Истина Тогда
			Попытка
				
				Закрыть();	
				
			Исключение
				
			КонецПопытки;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью_Продолжение()


Функция ПроверкаНаЗарплату()
	рез = ИСТИНА;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.Зарплата") Тогда
		Если Объект.ВидВыдачи.Пустая() = Истина Тогда
			рез = ЛОЖЬ;
			Сообщить("Необходимо указать вид зарплаты(подсчет, аванс, премия)");
		КонецЕсли;
		
		Если Объект.ВидРасхода.Пользователь.Пустая() = Истина Тогда
			рез = ЛОЖЬ;
			Сообщить("Не Указан работник в виде расхода");
		Иначе
			Если Объект.ВидРасхода.Пользователь <> Объект.Работник Тогда
				рез = ложь;
				Сообщить("Работник не совпадает с тем, что записно в виде расхода");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат рез;
КонецФункции

Процедура ПроверитьЗарплатуГалочка()
	рез = ИСТИНА;
	Если Объект.ВидРасхода.Пустая() <> Истина Тогда
		Если Объект.ВидРасхода.Зарплата = ИСТИНА Тогда	
			Объект.Работник = Объект.ВидРасхода.Пользователь;
		Иначе
			Сообщить("Укажите в виде расхода что это зарплата и укажите работника");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры	

&НаКлиенте
Процедура ПродажиПриИзменении(Элемент)
	
	///+ГомзМА 09.10.2023
	ПродажиПриИзмененииНаСервере();
	///-ГомзМА 09.10.2023
	
КонецПроцедуры

&НаСервере
Процедура ПродажиПриИзмененииНаСервере()
	
	///+ГомзМА 09.10.2023
	Если Объект.Продажи.Количество() > 0 Тогда
		Объект.Сумма = Объект.Продажи.Итог("Сумма");
	Иначе
		Объект.Сумма = 0;
	КонецЕсли;
	///-ГомзМА 09.10.2023
	
КонецПроцедуры

&НаСервере
Процедура ПродажиПродажаПриИзмененииНаСервере(Продажа, Сумма, СтатусПродажи, СтатусДоставки, Ответственный)
	
	///+ГомзМА 09.10.2023
	РезультатЗапроса = ПолучитьПродажу(Продажа);
	
	СтатусПродажи 	= РезультатЗапроса.СтатусПродажи;
	СтатусДоставки 	= РезультатЗапроса.СтатусДоставки;
	Ответственный 	= РезультатЗапроса.Ответственный;
	
	Если РезультатЗапроса.СтатусДоставки <> Перечисления.СтатусОтправки.ТоварПолученБезПретензий Тогда
		Сумма = 0;
	КонецЕсли;
	///-ГомзМА 09.10.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиПродажаПриИзменении(Элемент)
	
	///+ГомзМА 09.10.2023
	ТекущиеДанные = Элементы.Продажи.ТекущиеДанные;
	ПродажиПродажаПриИзмененииНаСервере(ТекущиеДанные.Продажа, ТекущиеДанные.Сумма, ТекущиеДанные.СтатусПродажи, ТекущиеДанные.СтатусДоставки, ТекущиеДанные.Ответственный);
	///-ГомзМА 09.10.2023
	
КонецПроцедуры

&НаСервере
Процедура ПродажиСуммаПриИзмененииНаСервере(Продажа, Сумма)
	
	///+ГомзМА 09.10.2023
	РезультатЗапроса = ПолучитьПродажу(Продажа);
	
	Если РезультатЗапроса.СтатусДоставки <> Перечисления.СтатусОтправки.ТоварПолученБезПретензий Тогда
		Сумма = 0;
		Сообщить("Товар еще не получен, невозможно начислить зарплату! Для того, чтобы начислить, необходимо убедиться в получении товара клиентом и сменить статус в продаже!");
	КонецЕсли;
	///-ГомзМА 09.10.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажиСуммаПриИзменении(Элемент)
	
	///+ГомзМА 09.10.2023
	ТекущиеДанные = Элементы.Продажи.ТекущиеДанные;
	ПродажиСуммаПриИзмененииНаСервере(ТекущиеДанные.Продажа, ТекущиеДанные.Сумма);
	///-ГомзМА 09.10.2023
	
КонецПроцедуры


&НаСервере
Функция ПолучитьПродажу(Продажа)
	
	///+ГомзМА 09.10.2023
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПродажаЗапчастей.Ссылка КАК Ссылка,
	|	ПродажаЗапчастей.СтатусДоставки КАК СтатусДоставки,
	|	ПродажаЗапчастей.КтоПродал КАК Ответственный,
	|	ПродажаЗапчастей.СтатусПродажи КАК СтатусПродажи
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|ГДЕ
	|	ПродажаЗапчастей.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Продажа);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	РезультатЗапроса.Следующий();
	
	Возврат РезультатЗапроса;
	///-ГомзМА 09.10.2023
	
КонецФункции // ПолучитьПродажу()

&НаКлиенте
Процедура ПродажиПродажаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	///+ГомзМА 09.10.2023
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Документ.ПродажаЗапчастей.ФормаВыбора");
	
	ЭлементОтбора = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("КтоПродал");
	ЭлементОтбора.ВидСравнения 	 = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Объект.Работник;
	
	ЭлементОтбора = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Дата");
	ЭлементОтбора.ВидСравнения 	 = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ЭлементОтбора.ПравоеЗначение = '20231001';
	
	ФормаВыбора.Открыть();
	///-ГомзМА 09.10.2023
	
КонецПроцедуры

Функция ВыгрузитьДокументы();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриходОтКредитов.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПриходОтКредитов КАК ПриходОтКредитов
	|ГДЕ
	|	ПриходОтКредитов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусКредита.Открыто)"; 
	
	СписокДокументов = Новый СписокЗначений;
	СписокДокументов.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	
	
	
	Возврат СписокДокументов;
	
КонецФункции

//Волков ИО 30.11.2023 ++
&НаКлиенте
Процедура ТипРасходаПриИзменении(Элемент)
	
	Если ПолучитьТипРасхода() Тогда 
		
		Элементы.СтраницаРасходы.Видимость = Истина;	
		
	Иначе 
		
		Элементы.СтраницаРасходы.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры


Функция ПолучитьТипРасхода()
	
	Если Объект.ТипРасхода = Перечисления.ТипРасхода.Накопительный Тогда
		
		Возврат Истина;
		
	Иначе 
		
		Возврат Ложь; 
		
	КонецЕсли;
	
КонецФункции
//Волков ИО 30.11.2023 --


