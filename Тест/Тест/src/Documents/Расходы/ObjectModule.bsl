#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ПрограммныйИнтерфейс
	
	
	
	#КонецОбласти
	
	#Область ОбработчикиСобытий
//Мазин ---------------------------------------	НАЧАЛО//
Процедура ОбработкаУдаленияПроведения(Отказ)
		Если ЗначениеЗаполнено(Кредит) Тогда
		СпрКредит = Кредит.КредитВБанке; 
		ОбъектКредит = СпрКредит.ПолучитьОбъект(); 
			
			Для Каждого СтрокаТЧ ИЗ ОбъектКредит.Погашения Цикл 
				Если СтрокаТЧ.ДокументРасхода = Ссылка Тогда 
				ОбъектКредит.Погашения.Удалить(СтрокаТЧ.НомерСтроки - 1); 
				ОбъектКредит.Записать();	
			КонецЕсли; 
			КонецЦикла;
		
		//Перебор таблицы Справочника Кредит (ВложенияВолжская) и заполнение реквизитов
 		
 		СуммаПлатежей = 0; 
 	Для Каждого СтрокаТЧ ИЗ ОбъектКредит.Погашения Цикл 
 		СуммаПлатежей= СуммаПлатежей + СтрокаТЧ.Сумма;  	
 	КонецЦикла;
 		ОбъектКредит.ОплаченоПоКредиту = СуммаПлатежей; 
 		ОбъектКредит.ОсталосьОтбить = ОбъектКредит.СуммаДолга - СуммаПлатежей; 
	ОбъектКредит.Записать();	
	
	// Реквизит Статус справочника Кредит (ВложенияВолжская)		
			ОбъектПриходОтКредитов = Кредит.ПолучитьОбъект(); 
		Если ОбъектКредит.ОсталосьОтбить <= 0 ТОГДА 
			ОбъектКредит.Статус = Перечисления.СтатусКредита.Закрыто;
			ОбъектПриходОтКредитов.Статус = Перечисления.СтатусКредита.Закрыто;
		ИНАЧЕ 
			ОбъектКредит.Статус = Перечисления.СтатусКредита.Открыто; 
			ОбъектПриходОтКредитов.Статус = Перечисления.СтатусКредита.Открыто;
		КонецЕсли;
			ОбъектКредит.Записать();
			ОбъектПриходОтКредитов.Записать();
			
	КонецЕсли;		
	КонецПроцедуры
//Мазин ---------------------------------------	КОНЕЦ
	
	Процедура ОбработкаПроведения(Отказ, Режим)
	Если ЗначениеЗаполнено(Кредит) Тогда	
//Мазин --------------------------НАЧАЛО
		
//Заполняем табличную часть справочника Кредит (ВложенияВолжская)
		СпрКредит = Кредит.КредитВБанке; 
		ОбъектКредит = СпрКредит.ПолучитьОбъект(); 
		Счетчик = 0;
		Для Каждого СтрокаТЧ ИЗ ОбъектКредит.Погашения Цикл 
			Если СтрокаТЧ.ДокументРасхода = Ссылка  ТОГДА
				 Если СтрокаТЧ.Сумма <> Ссылка.Сумма Тогда
					СтрокаТЧ.Дата = Дата; 
					СтрокаТЧ.ДокументРасхода = Ссылка; 
					СтрокаТЧ.Сумма = Сумма;
					Счетчик = Счетчик+1; 
					Иначе 
					Счетчик = Счетчик+1; 
					КонецЕсли; 					
			КонецЕсли;	
		КонецЦикла;
		
		Если Счетчик = 0 Тогда
				НоваяСтрокаТЧ =ОбъектКредит.Погашения.Добавить(); 
				НоваяСтрокаТЧ.Дата = Дата; 
				НоваяСтрокаТЧ.ДокументРасхода = Ссылка; 
				НоваяСтрокаТЧ.Сумма = Сумма; 		
		КонецЕсли;
		
		
//Перебор таблицы Справочника Кредит (ВложенияВолжская) и заполнение реквизитов
 		СуммаПлатежей = 0; 
 	Для Каждого СтрокаТЧ ИЗ ОбъектКредит.Погашения Цикл 
 		СуммаПлатежей= СуммаПлатежей + СтрокаТЧ.Сумма;  	
 	КонецЦикла;
 		ОбъектКредит.ОплаченоПоКредиту = СуммаПлатежей; 
 		ОбъектКредит.ОсталосьОтбить = ОбъектКредит.СуммаДолга - СуммаПлатежей; 
	ОбъектКредит.Записать();
	
// Реквизит Статус справочника Кредит (ВложенияВолжская) и Реквизит Статус документа ПриходОтКредита 

		ОбъектПриходОтКредитов = Кредит.ПолучитьОбъект(); 
		Если ОбъектКредит.ОсталосьОтбить <= 0 ТОГДА 
			ОбъектКредит.Статус = Перечисления.СтатусКредита.Закрыто;
			ОбъектПриходОтКредитов.Статус = Перечисления.СтатусКредита.Закрыто;
		ИНАЧЕ 
			ОбъектКредит.Статус = Перечисления.СтатусКредита.Открыто; 
			ОбъектПриходОтКредитов.Статус = Перечисления.СтатусКредита.Открыто;
	КонецЕсли;
			ОбъектКредит.Записать();
			ОбъектПриходОтКредитов.Записать();





КонецЕсли; 
//МАЗИН----------------------------КОНЕЦ
		
		
		
		// ++ obrv 20.09.19
		ДополнительныеСвойства.Вставить("ЭтоНовый",                    ЭтоНовый()); 
		ДополнительныеСвойства.Вставить("ДатаДокументаСдвинутаВперед", Ложь); 
		ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
		// -- obrv 20.09.19
		
		//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		
		// регистр Баланс Расход
		
		// При Накопительном - через цикл всех ТЧ
		
		Если ТипРасхода = Перечисления.ТипРасхода.Накопительный Тогда 
			
			Для каждого Стр из ЭтотОбъект.ТЧРасходы Цикл	
				Движения.Баланс.Записывать = Истина;
				Движение = Движения.Баланс.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				//Волков ++  
				Движение.Период = Стр.Дата;
				//Движение.Период = Дата;
				Движение.Измерение1 = СчетОткудаРасход;  
				//Движение.Баланс = Сумма;
				Движение.Баланс = Стр.Сумма;
				//Волков --
				
				//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
				Движения.Расходы.Записывать = Истина;
				Движение = Движения.Расходы.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход; 
				//Волков++
				//Движение.Период = Дата;
				Движение.Период = Стр.Дата;
				
				Движение.ВидРасхода = ВидРасхода;
				Движение.Комментарий = Комментарий;
				Движение.ДокНо = ПодтверждающийДокумент;
				
				//Движение.Сумма = Сумма; 
				Движение.Сумма = Стр.Сумма;
				//Волков --
				
			КонецЦикла;
			
		Иначе
			
			Движения.Баланс.Записывать = Истина;
			Движение = Движения.Баланс.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Измерение1 = СчетОткудаРасход;
			Движение.Баланс = Сумма;
			
			//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
			Движения.Расходы.Записывать = Истина;
			Движение = Движения.Расходы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.ВидРасхода = ВидРасхода;
			Движение.Комментарий = Комментарий;
			Движение.ДокНо = ПодтверждающийДокумент;
			Движение.Сумма = Сумма;
			
		КонецЕсли;
		
		
		//Движения.Баланс.Записывать = Истина;
		//Движение = Движения.Баланс.Добавить();
		//Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		//Движение.Период = Дата;
		//Движение.Измерение1 = СчетОткудаРасход;
		//Движение.Баланс = Сумма;
		//
		////}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
		//Движения.Расходы.Записывать = Истина;
		//Движение = Движения.Расходы.Добавить();
		//Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		//Движение.Период = Дата;
		//Движение.ВидРасхода = ВидРасхода;
		//Движение.Комментарий = Комментарий;
		//Движение.ДокНо = ПодтверждающийДокумент;
		//Движение.Сумма = Сумма;
		
		з = новый запрос;
		з.Текст = "ВЫБРАТЬ
		|	СУММА(БалансОстатки.БалансОстаток) КАК сум
		|ИЗ
		|	РегистрНакопления.Баланс.Остатки КАК БалансОстатки
		|ГДЕ
		|	БалансОстатки.Измерение1 = &Измерение1";
		з.УстановитьПараметр("Измерение1",СчетОткудаРасход);
		
		// ++ obrv 16.09.19
		дт_ОбработкаПроведения(Отказ, Режим);
		// -- obrv 16.09.19
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.АктВозврата") Тогда 
			Движения.ОплатыПоСделкам.Записывать = Истина;
			ДвижениеПоСделкам = Движения.ОплатыПоСделкам.Добавить();
			
			ДвижениеПоСделкам.Документ 	  = основание.Продажа;
			ДвижениеПоСделкам.Период   	  = Дата;
			ДвижениеПоСделкам.Сумма    	  = 0-основание.ОбщаяСумма; 
		КонецЕсли;
		
		
	КонецПроцедуры
	
	Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.МаршрутныйЛист") Тогда
			
			СвойстваДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Автомобиль,Водитель,Организация");
			
			Автомобиль = СвойстваДокумента.Автомобиль;
			МаршрутныйЛист = ДанныеЗаполнения; 
			Организация = СвойстваДокумента.Организация;
			ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ТекущиеРасходы");
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеЗапчастей") Тогда
			
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПоступлениеЗапчастей.Поставшик КАК Поставшик,
			|	ПоступлениеЗапчастей.Организация КАК Организация,
			|	ВЫБОР
			|		КОГДА ПоступлениеЗапчастей.Проведен
			|			ТОГДА ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаОстаток, 0)
			|		ИНАЧЕ ПоступлениеЗапчастей.СуммаНакладной
			|	КОНЕЦ КАК Сумма,
			|	ПоступлениеЗапчастей.Проект КАК Проект
			|ИЗ
			|	Документ.ПоступлениеЗапчастей КАК ПоступлениеЗапчастей
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщиками.Остатки(, Сделка = &Ссылка) КАК РасчетыСПоставщикамиОстатки
			|		ПО (РасчетыСПоставщикамиОстатки.Сделка = ПоступлениеЗапчастей.Ссылка)
			|ГДЕ
			|	ПоступлениеЗапчастей.Ссылка = &Ссылка";
			
			Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаШапка = РезультатЗапроса.Выбрать();
			ВыборкаШапка.Следующий(); 
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
			
			Основание = ДанныеЗаполнения;
			ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщикуЗапчастей");
			
			ВидРасхода = дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьОсновнойВидРасхода(ВидОперации);
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаряд") Тогда	
			
			
			СвойстваДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация,Проект");
			Основание = ДанныеЗаполнения; 
			Организация = СвойстваДокумента.Организация;
			ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ТекущиеРасходы");
			Проект = СвойстваДокумента.Проект;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЛистыУщерба") Тогда
			
			Основание = ДанныеЗаполнения;
			ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ТекущиеРасходы");
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПродажаЗапчастей") Тогда
			
			Основание = ДанныеЗаполнения;
			ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ТекущиеРасходы");
			СвойстваДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Проект");
			Основание = СвойстваДокумента.Проект;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаРасход") Тогда
			
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ВЫРАЗИТЬ(Док.Получатель КАК Справочник.Контрагенты) КАК Контрагент,
			|	Сотрудники.Пользователь КАК Работник,
			|	Док.Комментарий КАК Комментарий,
			|	Док.ВидРасхода КАК ВидРасхода,
			|	Док.Подразделение КАК Подразделение,
			|	Док.Инициатор КАК Инициатор,
			|	Док.Организация КАК Организация,
			|	Док.СуммаДокумента КАК Сумма,
			|	Док.Ссылка КАК ЗаявкаНаРасход,
			|	Док.Основание КАК Основание,
			|	Док.Счет КАК СчетОткудаРасход,
			|	Док.ВидРасхода.ВидОперацииСписаниеДенежныхСредств КАК ВидОперации,
			|	Док.Месяц КАК Месяц,
			//Волков ИО 18.01.2024 ++
			|	Док.Партия КАК Партия,
			//волков ИО 18.01.2024 --
			|	Док.Кредит КАК Кредит
			|ИЗ
			|	Документ.ЗаявкаНаРасход КАК Док
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
			|		ПО (Сотрудники.Ссылка = (ВЫРАЗИТЬ(Док.Получатель КАК Справочник.Сотрудники)))
			|ГДЕ
			|	Док.Ссылка = &Ссылка";
			
			
			Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Шапка = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РезультатЗапроса.Выгрузить()[0]);
			
			ЗаполнениеДокументов.Заполнить(ЭтотОбъект, Шапка);   
			///+ГомзМА 27.09.2023
			Месяц = ДанныеЗаполнения.Месяц;
			///-ГомзМА 27.09.2023
			
			///+ГомзМА 21.12.2023
			Кредит = ДанныеЗаполнения.Кредит;
			///-ГомзМА 21.12.2023
			
			//Волков ИО 18.01.24 ++
			Партия = ДанныеЗаполнения.Партия;
			//Волков ИО 18.01.24 --
			
			//СвойстваДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация,Основание");
			Проект = ДанныеЗаполнения.Основание;
			Если ЗначениеЗаполнено(Шапка.Работник) Тогда
				ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.Зарплата;
				Зарплата = Истина;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			ЗаполнениеДокументов.ЗаполнитьПоСтруктуре(ЭтотОбъект, ДанныеЗаполнения);
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаРасход") Тогда
		
				Комментарий									= ДанныеЗаполнения.Наименование; 
				Филиал									=ДанныеЗаполнения.Филиал;
				Отдел									=ДанныеЗаполнения.Отдел; 
				ВидыРасхода_3					=ДанныеЗаполнения.ВидыРасхода_3;
				Категория					=ДанныеЗаполнения.Категория	;
				Статья					=ДанныеЗаполнения.Статья	;
				Сумма					=ДанныеЗаполнения.СуммаДокумента;
				Влияние			=ДанныеЗаполнения.Влияние;
		
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВидРасхода) 
			И Не ЗначениеЗаполнено(Подразделение) Тогда
			Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидРасхода, "Подразделение");
		КонецЕсли;
		
		ЗаполнениеДокументов.Заполнить(ЭтотОбъект);
		ЭтотОбъект.Год = Год(Дата);
		//ЭтотОбъект.Месяц = Месяц(Дата);
		
		Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
			ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ТекущиеРасходы;
		КонецЕсли;
		
		
	КонецПроцедуры
	
	
Процедура ПриЗаписи(Отказ)


			Если ОбменДанными.Загрузка Тогда
			     Возврат;
			КонецЕсли;
		
				//+++ МазинЕС 20-11-24
			
			Если ЗначениеЗаполнено(ЗаявкаНаРасход) Тогда 
				
				ФлагПерезаписи = Ложь; // Это флаг взводится если у поступления тмц 
				// реквихит "расход" проставлен автоматически после создания док.Расходы					
				// дальше поступлениеТМЦ создает записи в регистр БюджетТМЦ 
				// поэтому нужно найти все доки переммещения ,а затем списания и их перепровести 
				// так как они презапишут регист БюджетТМЦ
				
				
				Запрос = Новый Запрос;
				Запрос.Текст =
					"ВЫБРАТЬ
					|	ПоступлениеТМЦВорктрак.Ссылка
					|ИЗ
					|	Документ.ПоступлениеТМЦВорктрак КАК ПоступлениеТМЦВорктрак
					|ГДЕ
					|	ПоступлениеТМЦВорктрак.ЗаявкаНаРасход = &ЗаявкаНаРасход";
				
				Запрос.УстановитьПараметр("ЗаявкаНаРасход", ЗаявкаНаРасход);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					ПостублениеСсылка = ВыборкаДетальныеЗаписи.Ссылка; 
					ПостублениеОбъект = ПостублениеСсылка.ПолучитьОбъект(); 
					 
					Если 	НЕ ЗначениеЗаполнено(ПостублениеОбъект.Расход) Тогда 
						ПостублениеОбъект.Расход =  Ссылка; 
						ПостублениеОбъект.Записать(РежимЗаписиДокумента.Проведение); 
						ФлагПерезаписи = Истина; 
					КонецЕсли; 
					
				КонецЦикла;
				
				Если  ЗначениеЗаполнено(ПостублениеСсылка) И ФлагПерезаписи = Истина  Тогда 
			
					
							Запрос = Новый Запрос;
							Запрос.Текст =
								"ВЫБРАТЬ
								|	БюджетТМЦ.ИнвентарныйНомер
								|ИЗ
								|	РегистрНакопления.БюджетТМЦ КАК БюджетТМЦ
								|ГДЕ
								|	БюджетТМЦ.ДокРег = &ДокРег";
							
							Запрос.УстановитьПараметр("ДокРег", ПостублениеСсылка);
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							
							МассивИнкодовТМЦ = Новый Массив;
							
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								МассивИнкодовТМЦ.Добавить(ВыборкаДетальныеЗаписи.ИнвентарныйНомер);
							КонецЦикла;
					
				
						Если МассивИнкодовТМЦ.Количество() > 0 Тогда
								Запрос = Новый Запрос;
								Запрос.Текст =
									"ВЫБРАТЬ
									|	ПеремещениеТМЦВорктрак.Ссылка
									|ИЗ
									|	Документ.ПеремещениеТМЦВорктрак КАК ПеремещениеТМЦВорктрак
									|ГДЕ
									|	ПеремещениеТМЦВорктрак.СписокТМЦ.ИнвентарныйНомер В (&МассивИнвентарных)";
								
								Запрос.УстановитьПараметр("МассивИнвентарных", МассивИнкодовТМЦ);
								
								РезультатЗапроса = Запрос.Выполнить();
								
								ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
								
								Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
									ПеремещениеСсылка =ВыборкаДетальныеЗаписи.Ссылка;  
									ОбъектПеремещение = ПеремещениеСсылка.ПолучитьОбъект();
									ОбъектПеремещение.Записать(РежимЗаписиДокумента.Проведение);  
								КонецЦикла;
								
								Запрос = Новый Запрос;
								Запрос.Текст =
									"ВЫБРАТЬ
									|	СписаниеТМЦВорктрак.Ссылка
									|ИЗ
									|	Документ.СписаниеТМЦВорктрак КАК СписаниеТМЦВорктрак
									|ГДЕ
									|	СписаниеТМЦВорктрак.СписокТМЦ.ИнвентарныйНомер В (&ИнвентарныйНомер)";
								
								Запрос.УстановитьПараметр("ИнвентарныйНомер", МассивИнкодовТМЦ);
								
								РезультатЗапроса = Запрос.Выполнить();
								
								ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
								
								Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
									СписаниеСсылка =ВыборкаДетальныеЗаписи.Ссылка;  
									ОбъектСписание = СписаниеСсылка.ПолучитьОбъект();
									ОбъектСписание.Записать(РежимЗаписиДокумента.Проведение);  
								КонецЦикла;	
						КонецЕсли; 
				КонецЕсли; 
			КонецЕсли; 
	//--- МазинЕС 20-11-24
		
	КонецПроцедуры
	Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		
		МассивНепроверяемыхРеквизитов = Новый Массив();
		ИспользоватьАвтосервис = ПолучитьФункциональнуюОпцию("дт_ИспользоватьАвтосервис");
		ИспользоватьГрузоперевозки = ПолучитьФункциональнуюОпцию("дт_ИспользоватьГрузоперевозки");
		
		Если ВидРасхода = ПредопределенноеЗначение("Справочник.ВидыРасходов.Топливо") 
			И ИспользоватьГрузоперевозки Тогда
			
			ПроверяемыеРеквизиты.Добавить("Автомобиль");
			
		Иначе	
			МассивНепроверяемыхРеквизитов.Добавить("КоличествоТопливо");
		КонецЕсли;
		
		Если ВидОперации <> ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщикуЗапчастей") Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
			МассивНепроверяемыхРеквизитов.Добавить("Основание");
			МассивНепроверяемыхРеквизитов.Добавить("Организация");
		КонецЕсли;
		
		Если НЕ ИспользоватьАвтосервис Тогда
			
			МассивНепроверяемыхРеквизитов.Добавить("ВидОперации");
			МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
			МассивНепроверяемыхРеквизитов.Добавить("Основание");
			МассивНепроверяемыхРеквизитов.Добавить("Организация");
			МассивНепроверяемыхРеквизитов.Добавить("Сумма");
			
		КонецЕсли;
		
		
		Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.Зарплата")
			И дт_ОбщегоНазначенияКлиентСервер.МодульЧисла(Год(Дата) - ЭтотОбъект.Год) > 1 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон("Год выплаты %1 не может отличаться от текущего больше чем на 1",
			Формат(ЭтотОбъект.Год, "ЧГ=0")),
			,
			"Год",
			"Объект",
			Отказ
			);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Подразделение)
			И ЗначениеЗаполнено(ВидРасхода) Тогда
			
			ПодразделениеВидаРасхода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидРасхода, "Подразделение");
			Если НЕ дт_ОбщегоНазначения.ЭлементВИерархии(Подразделение, ПодразделениеВидаРасхода) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон("Подразделение вида расхода (%1) не соответствует подразделению документа (%2)",
				ПодразделениеВидаРасхода,
				Подразделение),
				,
				"ВидРасхода",
				"Объект",
				Отказ
				);
				
			КонецЕсли;
		КонецЕсли;
		
		// ЗаявкаНаРасход
		Если Дата < '20220311' Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ЗаявкаНаРасход");
		КонецЕсли;
		
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
		
		
	КонецПроцедуры
	
	
	
	Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
		Если ОбменДанными.Загрузка Тогда
			Возврат
		КонецЕсли;
		
		Если ВидРасхода <> ПредопределенноеЗначение("Справочник.ВидыРасходов.Топливо") Тогда
			КоличествоТопливо = 0;
		КонецЕсли;
		
		
		Если Не ЗначениеЗаполнено(Основание)
			И Основание <> Неопределено Тогда
			
			Основание = Неопределено;
			
		КонецЕсли;
		
		

	КонецПроцедуры
	
	#КонецОбласти
	
	#Область СлужебныеПроцедурыИФункции
	
	Процедура дт_ОбработкаПроведения(Отказ, РежимПроведения)
		
		ПараметрыПроведения = Документы.Расходы.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		дт_ОбщегоНазначения.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
		дт_Грузоперевозки.ПодготовитьНаборыЗаписей(ЭтотОбъект);	
		дт_РасчетыСПоставщиками.ПодготовитьНаборыЗаписей(ЭтотОбъект);	
		
		// Формирование движений
		дт_Грузоперевозки.ОтразитьТопливоВБаках(ПараметрыПроведения, Движения, Отказ);
		дт_Грузоперевозки.ОтразитьСебестоимостьПеревозок(ПараметрыПроведения, Движения, Отказ);
		дт_РасчетыСПоставщиками.ОтразитьРасчетыСПоставщиками(ПараметрыПроведения, Движения, Отказ);
		
		Движения.Записать();
		
	КонецПроцедуры
	
	
	
	#КонецОбласти
	
#КонецЕсли
