
&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	Объект.ДатаИзмененияСостояния = ТекущаяДата();
КонецПроцедуры


#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	ЗаполнитьСписокСогласовантов();
	ОбновитьДобавленныеКолонки();
	УстановитьУсловноеОформление();
	
	УправлениеФормой(ЭтаФорма);
	
	
	// Позиционируемся на строке
	Для каждого ТабличнаяЧасть Из Объект.Ссылка.Метаданные().ТабличныеЧасти Цикл
	
		ИмяТЧ = ТабличнаяЧасть.Имя;
		ИмяПараметра = ИмяТЧ + "_НомерСтроки";
		Если Параметры.Свойство(ИмяПараметра) Тогда
			Элементы[ИмяТЧ].ТекущаяСтрока = Параметры[ИмяПараметра];
//			ИмяСтраницы = "Группа" + ИмяТЧ;
//			Элементы.ГруппаТабличныеЧасти.ТекущаяСтраница = Элементы[ИмяСтраницы];
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры




&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры



&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьДобавленныеКолонки();
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ДатаПриИзмененииСервер();
	КонецЕсли;	
КонецПроцедуры


&НаСервере
Процедура ДатаПриИзмененииСервер()

//	Если дт_Нумерация.ГодИзменен(Объект.Ссылка, Объект.Дата) Тогда
//		Объект.Номер = "";
//	КонецЕсли;

КонецПроцедуры // ДатаПриИзмененииСервер()

&НаКлиенте
Процедура НомерТелефонаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НайтиКлиента(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Товары

&НаСервереБезКонтекста
Процедура ТоварыНоменклатураПриИзмененииНаСервере(ДанныеЗаполнения)

	ДанныеЗаполнения.МестоХранения = дт_АдресноеХранение.ПолучитьМестоХранения(ДанныеЗаполнения);
	
	дт_ЦенообразованиеВызовСервера.НоменклатураПриИзменении(ДанныеЗаполнения, ПредопределенноеЗначение("Справочник.ТипыЦен.Рекомендованная"));
	
	ЗаполнитьПродажиОстатки(ДанныеЗаполнения);
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ДанныеЗаполнения = Новый Структура("МестоХранения,Цена,Номенклатура,КоличествоПродано,КоличествоОстаток,НомерСтроки");
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Элементы.Товары.ТекущиеДанные);
	
	ДанныеЗаполнения.Вставить("Дата",			Объект.Дата);
	ДанныеЗаполнения.Вставить("Склад",			Объект.Склад);
	//ДанныеЗаполнения.Вставить("Партия",			Неопределено);
	
	ТоварыНоменклатураПриИзмененииНаСервере(ДанныеЗаполнения);
	ЗаполнитьЗначенияСвойств(Элементы.Товары.ТекущиеДанные, ДанныеЗаполнения, , "Номенклатура");
	
	ОбработкаИзмененияСтроки("Товары");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	ОбработкаИзмененияСтроки("Товары", "Количество");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	ОбработкаИзмененияСтроки("Товары", "Цена");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	ОбработкаИзмененияСтроки("Товары", "Сумма");
КонецПроцедуры






#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


&НаКлиенте
Процедура ОткрытьНаСайте(Команда)
	
	Если Элементы.Товары.ТекущиеДанные = Неопределено 
		ИЛИ НЕ ЗначениеЗаполнено(Элементы.Товары.ТекущиеДанные.Номенклатура) Тогда
		Возврат
	КонецЕсли;
	
	КодНоменклатуры = ПолучитьКодНоменклатуры(Элементы.Товары.ТекущиеДанные.Номенклатура); 
	
	ОбщДействия.ПоискКодаНаСайте(КодНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиКлиента(Команда)
	
	
	Клиенты = НайтиКлиентаНаСервере(Объект.НомерТелефона);
	
	Если Клиенты = Неопределено Тогда
		ПоказатьОповещениеПользователя("Не найдено");
	ИначеЕсли Клиенты.Количество() > 1 Тогда
		
		ПоказатьОповещениеПользователя(СтрШаблон("Найдено: %1", Клиенты.Количество()));
		
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("НайтиКлиента_Завершение", ЭтаФорма);
		ПараметрыОткрытия = Новый Структура();
		ПараметрыОткрытия.Вставить("Отбор", Новый Структура("Ссылка", Клиенты));
		ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
		ПараметрыОткрытия.Вставить("ТекущаяСтрока", Объект.Клиент);
		
		ОткрытьФорму("Справочник.Клиенты.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор, ,, ОповещениеОЗакрытии)
	
	Иначе
		Если Объект.Клиент = Клиенты[0] Тогда
			ПоказатьОповещениеПользователя("Найдено", , "Обновление не требуется");
		Иначе
			Объект.Клиент = Клиенты[0];
			ПоказатьОповещениеПользователя("Найдено", , "Обновлено");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры



&НаСервереБезКонтекста
Функция НайтиКлиентаНаСервере(Знач НомерТелефона)
	
	Результат = Неопределено;
	
	Если Не ЗначениеЗаполнено(НомерТелефона) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Клиенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Клиенты КАК Клиенты
		|ГДЕ
		|	НЕ Клиенты.ПометкаУдаления
		|	И Клиенты.ТелефонПоиск ПОДОБНО &НомерТелефона";
		
	// С префиксом +7 и без разделителей
	НомерТелефона = дт_МоиЗвонки.ПреобразоватьНомерТелефона(НомерТелефона);
	// без префикса
	НомерТелефона = Прав(НомерТелефона, 10);
	
	Запрос.УстановитьПараметр("НомерТелефона", "%" + НомерТелефона);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;

	Результат = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура НайтиКлиента_Завершение(П1, П2) Экспорт
	
	Если П1 <> Неопределено Тогда
		Объект.Клиент = П1;
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции



&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	

КонецПроцедуры // УправлениеФормой()


&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Товары.Отменено
	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Товары");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Товары.Отменено", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьДобавленныеКолонки()
	
	дт_АдресноеХранение.ЗаполнитьМестаХранения(ЭтаФорма, "Склад", "Товары", "Номенклатура");
	
	ЗаполнитьПродажиОстатки(Объект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьПродажиОстатки(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Товары.НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ Т
		|ИЗ
		|	&Товары КАК Товары
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.НомерСтроки КАК НомерСтроки,
		|	Т.Номенклатура,
		|	ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0) КАК КоличествоПродано,
		|	ЕСТЬNULL(ПродажиОбороты.СуммаОборот, 0) КАК СуммаОборот,
		|	ЕСТЬNULL(РегистрНакопления1Остатки.КолвоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	Т КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки(, Склад = &Склад
		|		И Товар В
		|			(ВЫБРАТЬ
		|				Т.Номенклатура
		|			ИЗ
		|				Т)) КАК РегистрНакопления1Остатки
		|		ПО Т.Номенклатура = РегистрНакопления1Остатки.Товар
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(,,, Номенклатура В
		|			(ВЫБРАТЬ
		|				Т.Номенклатура
		|			ИЗ
		|				Т)) КАК ПродажиОбороты
		|		ПО ПродажиОбороты.Номенклатура = Т.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	ЗаполнениеДокумента = ТипЗнч(ДанныеЗаполнения) = Тип("ДанныеФормыСтруктура");
	Если ЗаполнениеДокумента Тогда
		Товары = ДанныеЗаполнения.Товары.Выгрузить();
	Иначе
		
		Товары = Новый ТаблицаЗначений();
		Товары.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(4));
		Товары.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ДанныеЗаполнения);
		
	КонецЕсли;
		
	Запрос.УстановитьПараметр("Товары", Товары);
	Запрос.УстановитьПараметр("Склад", ДанныеЗаполнения.Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗаполнениеДокумента Тогда
			СтрокаТовары = ДанныеЗаполнения.Товары[Выборка.НомерСтроки - 1];
			СтрокаТовары.КоличествоПродано = Выборка.КоличествоПродано;
			СтрокаТовары.КоличествоОстаток = Выборка.КоличествоОстаток;
		Иначе
			ДанныеЗаполнения.КоличествоПродано = Выборка.КоличествоПродано; 	
			ДанныеЗаполнения.КоличествоОстаток = Выборка.КоличествоОстаток;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаИзмененияСтроки(ИмяТабличнойЧасти, Поле = Неопределено, ДанныеСтроки = Неопределено)
	
	ТекДанные = ?(ДанныеСтроки = Неопределено, Элементы[ИмяТабличнойЧасти].ТекущиеДанные, ДанныеСтроки);
	
	Если Поле = "Сумма" Тогда
		Если ТекДанные.Количество <> 0 Тогда
			ТекДанные.Цена = ТекДанные.Сумма / ТекДанные.Количество;
		КонецЕсли;	
	Иначе	
		ТекДанные.Сумма = ТекДанные.Цена * ТекДанные.Количество;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаИзмененияСтроки()

&НаСервере
Процедура ЗаполнитьСписокСогласовантов()

	УстановитьПривилегированныйРежим(Истина);
	
	Элементы.Согласовал.СписокВыбора.Очистить();
	Элементы.Согласовал.СписокВыбора.Добавить(Справочники.Пользователи.ПустаяСсылка(), "Не согласовано");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Пользователи.Ссылка,
		|	Пользователи.Представление
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	НЕ Пользователи.Недействителен";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если Пользователи.РолиДоступны("дт_СогласованиеЗаказовКлиентов", ВыборкаДетальныеЗаписи.Ссылка, Ложь, Ложь) Тогда
			
			ФИО = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ВыборкаДетальныеЗаписи.Представление);
			Элементы.Согласовал.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Ссылка, ФИО);
			
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКодНоменклатуры(Номенклатура)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "Код");
КонецФункции
#КонецОбласти