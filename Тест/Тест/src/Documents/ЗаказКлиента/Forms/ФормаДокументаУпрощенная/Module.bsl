#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Штрихкод = Получитькомпоненту();
	Элементы.QRКод.РазмерКартинки = РазмерКартинки.АвтоРазмер;

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если Объект.ТипСделки = Перечисления.ТипСделки.Продажа И Объект.Продажа = Документы.ПродажаЗапчастей.ПустаяСсылка() Тогда
		СоздатьПродажу();
	КонецЕсли;

	//Если Объект.Продажа <> Документы.ПродажаЗапчастей.ПустаяСсылка() Тогда
	//	ОбновитьПродажу();
	//КонецЕсли;

	Если Объект.ТипСделки = Перечисления.ТипСделки.Заявка И Объект.Продажа <> Документы.ПродажаЗапчастей.ПустаяСсылка() Тогда
		ОтменитьПродажу();
	КонецЕсли;

	Если Объект.ТипСделки = Перечисления.ТипСделки.Продажа И Объект.Продажа.СтатусПродажи
		= Перечисления.СтатусыПродажи.Сорвалась Тогда
		ВернутьПродажу();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НайденаяПродажа = ЕстьПродажаВЗаявке(Объект.Ссылка);
	Иначе
		НайденаяПродажа = Документы.ПродажаЗапчастей.ПустаяСсылка();
	КонецЕсли;

	Если НайденаяПродажа <> Документы.ПродажаЗапчастей.ПустаяСсылка() И НайденаяПродажа.СтатусПродажи
	<> Перечисления.СтатусыПродажи.Сорвалась Тогда
		Объект.ТипСделки = Перечисления.ТипСделки.Продажа;
	Иначе
		Объект.ТипСделки = Перечисления.ТипСделки.Заявка;
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.НомерТелефона) И Объект.ИностранныйНомер = Истина Тогда
		Элементы.НомерТелефона.Маска = "";
	Иначе
		Элементы.НомерТелефона.Маска = "+7 ### ###-##-##";
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.Ответственный) Тогда
		Объект.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	КлиентПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КлиентПриИзмененииНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Клиенты.Телефон
	|ИЗ
	|	Справочник.Клиенты КАК Клиенты
	|ГДЕ
	|	Клиенты.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Объект.Клиент);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	ВыборкаДетальныеЗаписи.Следующий();
	Если Объект.НомерТелефона = "" Тогда
		Объект.НомерТелефона = ВыборкаДетальныеЗаписи.Телефон;
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ТипОплатыПриИзменении(Элемент)
	ТипОплатыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТипОплатыПриИзмененииНаСервере()
	Объект.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ТипОплаты, "Организация");
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.СтраницаПродажа Тогда
		ПолучитьДанныеПродажи();
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И Не Копирование Тогда
		ТекДанные = Элементы.Товары.ТекущиеДанные;
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура НомерТелефонаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НайтиКлиета(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура НомерТелефонаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	ДопустимыеСимволы = "0123456789";
	Попытка
		КОбъект = Новый COMОбъект("htmlfile");
		ДанныеБуфера = КОбъект.ParentWindow.ClipboardData.Getdata("Text");
	Исключение
		ДанныеБуфера = "";
	КонецПопытки;
	ЛишниеСимволы = СтрСоединить(СтрРазделить(ДанныеБуфера, ДопустимыеСимволы));

	ИтоговаяСтрока = СтрСоединить(СтрРазделить(ДанныеБуфера, ЛишниеСимволы));

	Если СтрДлина(ИтоговаяСтрока) = 10 Тогда
		КОбъект.ParentWindow.ClipboardData.Setdata("Text", "");
		МассивСтрок = Новый Массив;
		Для Сч = 1 По СтрДлина(ИтоговаяСтрока) Цикл
			МассивСтрок.Добавить(Сред(ИтоговаяСтрока, Сч, 1));
		КонецЦикла;

		МассивСтрок[0] = "+7 " + МассивСтрок[0];
		МассивСтрок[3] = " " + МассивСтрок[3];
		МассивСтрок[6] = "-" + МассивСтрок[6];
		МассивСтрок[8] = "-" + МассивСтрок[8];
		НомерКлиента = СтрСоединить(МассивСтрок, "");
		Объект.НомерТелефона = НомерКлиента;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НомерТелефонаПриИзменении(Элемент)
	СтараяЗаявка = ПроверкаЗаявки();
	Если СтараяЗаявка <> Неопределено Тогда

		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, СтараяЗаявка);

		ПоказатьВопрос(Оповещение, "Нажмите Да чтобы продолжить. Нажмите Нет чтобы открыть существующую заявку.",
			РежимДиалогаВопрос.ДаНетОтмена, 0, КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию

			"По данному номеру уже создана заявка. Вы хотите продолжить заполнение текущей?" // (необ.) заголовок
		);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИностранныйНомерПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.НомерТелефона) ИЛИ (НЕ ЗначениеЗаполнено(Объект.НомерТелефона) И Объект.ИностранныйНомер = Истина) Тогда
		Элементы.НомерТелефона.Маска = "";
	Иначе	
		Элементы.НомерТелефона.Маска = "+7 ### ###-##-##";
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	ТекДанные.Количество 	= 1;
	ТекДанные.Цена 		 	= дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьРекомендованнуюЦену(
		ТекДанные.Номенклатура, Объект.Дата);
	ТекДанные.Сумма 			= ТекДанные.Цена * ТекДанные.Количество;
КонецПроцедуры
&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	ОбработкаИзмененияСтроки("Товары", "Цена");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПартияПриИзменении(Элемент)

КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
КонецПроцедуры
#КонецОбласти
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьНоменклатуру(Команда)
	ОткрытьФорму("ОбщаяФорма.СписокНоменклатурыЦенообразования");
КонецПроцедуры
&НаКлиенте
Процедура СоздатьКарточкуТовара(Команда)
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлементаПростая");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзФайла(Команда)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выбор файла";
	Диалог.Фильтр = "Excel файлы(*.xls;*.xlsx)|*.xls;*.xlsx";
	Диалог.ИндексФильтра = 0;
	Диалог.ПредварительныйПросмотр = Ложь;
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.МножественныйВыбор = Ложь; 
	//Диалог.ПолноеИмяФайла = ПутьКФайлу;

	Если Диалог.Выбрать() Тогда
		Попытка
			Эксель = Новый COMОбъект("Excel.Application");
			Эксель.DisplayAlerts = 0;
			Эксель.Visible = 0;
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;

		ЭксельКнига = Эксель.Workbooks.Open(Диалог.ПолноеИмяФайла);
		КоличествоСтраниц = ЭксельКнига.Sheets.Count;
		
		// Перебираем все листы
		Для НомерЛиста = 1 По КоличествоСтраниц Цикл
			Лист = ЭксельКнига.Sheets(НомерЛиста);
			КоличествоСтрок = Лист.Cells(1, 1).SpecialCells(11).Row;
			КоличествоКолонок = Лист.Cells(1, 1).SpecialCells(11).Column;
			
			// Перебираем строки
			Для НомерСтроки = 2 По КоличествоСтрок Цикл
				артикулДетали = Строка(Лист.Cells(НомерСтроки, 1).Text);
				артикулДетали = СокрЛП(СтрЗаменить(артикулДетали, " ", ""));
				ЗаполнитьИзФайлаНаСервере(артикулДетали);

			КонецЦикла;
		КонецЦикла;

		Эксель.Workbooks.Close();
		Эксель.Application.Quit();

	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзФайлаНаСервере(артикулДетали)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	Номенклатура.Ссылка КАК Номенклатура,
				   |	Номенклатура.РекомендованаяЦена КАК Цена
				   |ИЗ
				   |	Справочник.Номенклатура КАК Номенклатура
				   |ГДЕ
				   |	Номенклатура.Артикул = &Артикул";

	Запрос.УстановитьПараметр("Артикул", артикулДетали);
	ВыборкаДеталей = Запрос.Выполнить().Выбрать();

	Если ВыборкаДеталей.Количество() = 0 Тогда
		Сообщить("Товар с артикулом " + артикулДетали + " не найден!");
	КонецЕсли;

	Если ВыборкаДеталей.Количество() > 1 Тогда
		Сообщить("Товар с артикулом " + артикулДетали + " найден в количестве " + ВыборкаДеталей.Количество() + " шт.");
	КонецЕсли;

	Пока ВыборкаДеталей.Следующий() Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Номенклатура = ВыборкаДеталей.Номенклатура;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Цена = ВыборкаДеталей.Цена;
		НоваяСтрока.Сумма = ВыборкаДеталей.Цена;
	КонецЦикла;
КонецПроцедуры
&НаКлиенте
Процедура НарядНаСборкуКод(Команда)
	Если ЗначениеЗаполнено(Объект.Продажа) Тогда
		ПараметрыФормы = Новый Структура("Ключ", Объект.Продажа);
		ФормаПродажи = ПолучитьФорму("Документ.ПродажаЗапчастей.Форма.ФормаДокумента", ПараметрыФормы);
		ТабДокумент  = ФормаПродажи.НарядНаСборкуСервер("Код");
		ТабДокумент.Показать();
	Иначе
		Сообщить("Продажа не создана.");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НарядыНаСборкуМесто(Команда)

	Если ЗначениеЗаполнено(Объект.Продажа) Тогда
		ПараметрыФормы = Новый Структура("Ключ", Объект.Продажа);
		ФормаПродажи = ПолучитьФорму("Документ.ПродажаЗапчастей.Форма.ФормаДокумента", ПараметрыФормы);
		ТабДокумент  = ФормаПродажи.НарядНаСборкуСервер("Место");
		ТабДокумент.Показать();
	Иначе
		Сообщить("Продажа не создана.");
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура НарядНаВыдачу(Команда)
	Если ЗначениеЗаполнено(Объект.Продажа) Тогда
		ПараметрыФормы = Новый Структура("Ключ", Объект.Продажа);
		ФормаПродажи = ПолучитьФорму("Документ.ПродажаЗапчастей.Форма.ФормаДокумента", ПараметрыФормы);
		ФормаПродажи.ПечатьСписания();
	Иначе
		Сообщить("Продажа не создана.");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НайтиКлиета(Команда)
	ПоискКлиента();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ОбновитьПродажу()
	ОбъектПродажа = Объект.Продажа.ПолучитьОбъект();
	ОбъектПродажа.Организация = Объект.Организация;
	ОбъектПродажа.КтоПродал = Объект.Ответственный;
	ОбъектПродажа.ОжидаемаяДатаВыплаты = ДатаОплаты;
	ОбъектПродажа.Таблица.Очистить();
	Для Каждого СтрокаТЧЗаявки Из Объект.Товары Цикл
		НоваяСтрока = ОбъектПродажа.Таблица.Добавить();
		НоваяСтрока.Партия = СтрокаТЧЗаявки.Партия;
		НоваяСтрока.Товар = СтрокаТЧЗаявки.Номенклатура;
//		НоваяСтрока.МестоХранения = ПолучитьАдрес(СтрокаТЧЗаявки.Номенклатура, Объект.Склад,
//			СтрокаТЧЗаявки.Партия);
//		НоваяСтрока.Склад = Объект.Склад;
		НоваяСтрока.Количество = СтрокаТЧЗаявки.Количество;
		НоваяСтрока.Цена = СтрокаТЧЗаявки.Цена;
		НоваяСтрока.СуммаНДС = СтрокаТЧЗаявки.СуммаНДС;
		НоваяСтрока.Сумма = СтрокаТЧЗаявки.Сумма;
	КонецЦикла;
	ОбъектПродажа.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

&НаСервере
Процедура СоздатьПродажу()
	НовыйДокумент = Документы.ПродажаЗапчастей.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДатаСеанса();
	НовыйДокумент.Клиент = Объект.Клиент;
	НовыйДокумент.ЗаказКлиента = Объект.Ссылка;
	НовыйДокумент.СтатусДоставки = Перечисления.СтатусОтправки.Отправлен;
	НовыйДокумент.ОжидаемаяДатаВыплаты = ТекущаяДата();
	НовыйДокумент.Организация = Объект.Организация;
	НовыйДокумент.КтоПродал = Объект.Ответственный;
	НовыйДокумент.Самовывоз = Истина;

	Для Каждого СтрокаТЧЗаявки Из Объект.Товары Цикл
		НоваяСтрока = НовыйДокумент.Таблица.Добавить();
		НоваяСтрока.Партия = СтрокаТЧЗаявки.Партия;
		НоваяСтрока.Товар = СтрокаТЧЗаявки.Номенклатура;
		НоваяСтрока.Склад = Справочники.Склады.НайтиПоКоду("000000002");
		НоваяСтрока.МестоХранения = ПолучитьАдрес(СтрокаТЧЗаявки.Номенклатура, НоваяСтрока.Склад,
			СтрокаТЧЗаявки.Партия);
		НоваяСтрока.Количество = СтрокаТЧЗаявки.Количество;
		НоваяСтрока.Цена = СтрокаТЧЗаявки.Цена;
		НоваяСтрока.СуммаНДС = СтрокаТЧЗаявки.СуммаНДС;
		НоваяСтрока.Сумма = СтрокаТЧЗаявки.Сумма;
	КонецЦикла;
	НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

Процедура ОтменитьПродажу()
	ПродажаОбъект = Объект.Продажа.ПолучитьОбъект();
	ПродажаОбъект.СтатусПродажи  = Перечисления.СтатусыПродажи.Сорвалась;
	ПродажаОбъект.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры
Процедура ВернутьПродажу()
	ПродажаОбъект = Объект.Продажа.ПолучитьОбъект();
	ПродажаОбъект.СтатусПродажи  = Перечисления.СтатусыПродажи.Актуальная;
	ПродажаОбъект.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

Процедура ПолучитьДанныеПродажи()
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НайденаяПродажа = ЕстьПродажаВЗаявке(Объект.Ссылка);
	Иначе
		НайденаяПродажа = Документы.ПродажаЗапчастей.ПустаяСсылка();
	КонецЕсли;

	Если НайденаяПродажа <> Документы.ПродажаЗапчастей.ПустаяСсылка() Тогда
		Объект.Продажа = НайденаяПродажа;
		ДатаОплаты = НайденаяПродажа.ОжидаемаяДатаВыплаты;
	КонецЕсли;
	Записать();
КонецПроцедуры
&НаСервере
Функция Получитькомпоненту()

	ТекстОшибки = "";

	Штрихкод =  ГенераторШтрихКода.ПолучитьКомпонентуШтрихКодирования(ТекстОшибки);
	Штрихкод.Ширина = 300;
	Штрихкод.Высота = 300;
	Штрихкод.ТипКода = 16;
	Штрихкод.УголПоворота = 0;
	Штрихкод.ЗначениеКода = Объект.Номер;
	Штрихкод.ПрозрачныйФон = Истина;
	Штрихкод.ОтображатьТекст = Ложь;

	ДвоичныйШтрихКод = штрихкод.ПолучитьШтрихКод();
	КартинкаШтрихКод = Новый Картинка(ДвоичныйШтрихКод, Истина);

	QRкод = ПоместитьВоВременноеХранилище(КартинкаШтрихКод, УникальныйИдентификатор);
	Возврат Истина;

КонецФункции

&НаКлиенте
Процедура ДобавлениеКлиента(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ПараметрыОткрытия = Новый Структура;

	ПараметрыОткрытия.Вставить("НомерТелефона", Объект.НомерТелефона);
	ПараметрыОткрытия.Вставить("КлиентНаименование", Объект.КлиентНаименование);
	ПараметрыОткрытия.Вставить("Ответственный", ПользователиКлиентСервер.ТекущийПользователь());

	ОповещениеОЗакрытииНового = Новый ОписаниеОповещения("НайтиКлиентанового_Завершение", ЭтаФорма);
	ОткрытьФорму("Справочник.Клиенты.Форма.ФормаЭлемента", ПараметрыОткрытия, ЭтаФорма,
		ЭтаФорма.УникальныйИдентификатор, , , ОповещениеОЗакрытииНового);

КонецПроцедуры

&НаКлиенте
Процедура ПоискКлиента()
	Клиенты = НайтиКлиентаНаСервере(Объект.НомерТелефона);

	Если Клиенты = Неопределено Тогда
		ПоказатьОповещениеПользователя("Не найдено");
		Оповещение = Новый ОписаниеОповещения("ДобавлениеКлиента", ЭтаФорма);
		ПоказатьВопрос(Оповещение, "Добавить нового клиента?", РежимДиалогаВопрос.ДаНет);
		//ВыполнитьОбработкуОповещения(Оповещение,); 
	ИначеЕсли Клиенты.Количество() > 1 Тогда

		ПоказатьОповещениеПользователя(СтрШаблон("Найдено: %1", Клиенты.Количество()));

		ОповещениеОЗакрытии = Новый ОписаниеОповещения("НайтиКлиента_Завершение", ЭтаФорма);
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Отбор", Новый Структура("Ссылка", Клиенты));
		ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
		ПараметрыОткрытия.Вставить("ТекущаяСтрока", Объект.Клиент);

		ОткрытьФорму("Справочник.Клиенты.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма,
			ЭтаФорма.УникальныйИдентификатор, , , ОповещениеОЗакрытии);

	Иначе
		Если Объект.Клиент = Клиенты[0] Тогда
			ПоказатьОповещениеПользователя("Найдено", , "Обновление не требуется");
		Иначе
			Объект.Клиент = Клиенты[0];
			Объект.КлиентНаименование = Строка(Клиенты[0]);
			ПоказатьОповещениеПользователя("Найдено", , "Обновлено");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиКлиентаНаСервере(Знач НомерТелефона)

	Результат = Неопределено;

	Если Не ЗначениеЗаполнено(НомерТелефона) Тогда
		Возврат Результат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Клиенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Клиенты КАК Клиенты
	|ГДЕ
	|	НЕ Клиенты.ПометкаУдаления
	|	И (Клиенты.Телефон = &НомерТелефона
	|			ИЛИ Клиенты.ДополнительныеКонтакты.Телефон = &НомерТелефона)";

	Запрос.УстановитьПараметр("НомерТелефона", НомерТелефона);
	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;

	Результат = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
	Возврат Результат;

КонецФункции
&НаКлиенте
Процедура ОбработкаИзмененияСтроки(ИмяТабличнойЧасти, Поле = Неопределено, ДанныеСтроки = Неопределено)

	ТекДанные = ?(ДанныеСтроки = Неопределено, Элементы[ИмяТабличнойЧасти].ТекущиеДанные, ДанныеСтроки);

	Если Поле = "Сумма" Тогда
		Если ТекДанные.Количество <> 0 Тогда
			ТекДанные.Цена = ТекДанные.Сумма / ТекДанные.Количество;
		КонецЕсли;
	Иначе
		ТекДанные.Сумма = ТекДанные.Цена * ТекДанные.Количество;
		ТекДанные.СуммаНДС = 0;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьАдрес(Номенклатура, Склад, ИндКод)
	Запрос  = Новый запрос;
	Запрос.текст = "ВЫБРАТЬ
				   |	дт_МестаХраненияНоменклатурыСрезПоследних.МестоХранения КАК МестоХранения,
				   |	ЕСТЬNULL(Стеллажик.ГруппаМестХранения, ЗНАЧЕНИЕ(Справочник.ГруппыМестХранения.ПустаяСсылка)) КАК ГруппаМестХранения,
				   |	ВЫБОР
				   |		КОГДА ИндНомер.Стеллаж <> ЗНАЧЕНИЕ(Справочник.стеллаж.пустаяссылка)
				   |			ТОГДА ИндНомер.Стеллаж
				   |		ИНАЧЕ Стеллажик.Ссылка
				   |	КОНЕЦ КАК Стеллаж
				   |ИЗ
				   |	РегистрСведений.дт_МестаХраненияНоменклатуры.СрезПоследних(
				   |			&ДатаСреза,
				   |			Склад = &Склад
				   |				И Номенклатура = &Номенклатура) КАК дт_МестаХраненияНоменклатурыСрезПоследних
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Стеллаж КАК Стеллажик
				   |		ПО дт_МестаХраненияНоменклатурыСрезПоследних.МестоХранения = Стеллажик.Ссылка
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК ИндНомер
				   |		ПО дт_МестаХраненияНоменклатурыСрезПоследних.Номенклатура = ИндНомер.индкод.Владелец
				   |ГДЕ
				   |	ИндНомер.индкод = &индкод";

	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("индкод", ИндКод);
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());

	Выборка = Запрос.Выполнить().Выбрать();

	Если выборка.Количество() > 0 Тогда
		Выборка.Следующий();
		Возврат Выборка.стеллаж;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьПродажаВЗаявке(СсылкаНаЗаявку)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПродажаЗапчастей.Ссылка КАК Продажа
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|ГДЕ
	|	ПродажаЗапчастей.ЗаказКлиента = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", СсылкаНаЗаявку);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Документы.ПродажаЗапчастей.ПустаяСсылка();
	КонецЕсли;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Возврат ВыборкаДетальныеЗаписи.Продажа;
	КонецЦикла;

КонецФункции

&НаКлиенте
Процедура НайтиКлиентанового_Завершение(П1, П2) Экспорт
	ПоискКлиента();
КонецПроцедуры

&НаСервере
Функция ПроверкаЗаявки()
	Запрос  = Новый запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаказКлиента.Ссылка КАК Ссылка,
	|	ЗаказКлиента.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	(ЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Ожидание)
	|			ИЛИ ЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Думает))
	|	И ЗаказКлиента.НомерТелефона = &НомерТелефона
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказКлиента.Дата УБЫВ";
	Запрос.УстановитьПараметр("НомерТелефона", объект.НомерТелефона);

	Выборка = Запрос.Выполнить().Выбрать();

	Если выборка.Количество() > 0 Тогда
		Выборка.Следующий();
		Возврат Выборка.ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоказатьПредупреждениеПервомуМенеджеру(Параметры);
	КонецЕсли;

	Если Результат = КодВозвратаДиалога.Нет Тогда
		ПараметрыФормы = Новый Структура("Ключ", Параметры);
		ОткрытьФорму("Документ.ЗаказКлиента.Форма.ФормаДокумента", ПараметрыФормы);
		ЭтаФорма.Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПоказатьПредупреждениеПервомуМенеджеру(СтараяЗаявка)
	Если Не ЗначениеЗаполнено(СтараяЗаявка.Ответственный) Тогда
		Возврат;
	КонецЕсли;
	ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
	НапоминаниеПользователю = РегистрыСведений.НапоминанияПользователя.СоздатьМенеджерЗаписи();
	НапоминаниеПользователю.Пользователь = СтараяЗаявка.Ответственный;
	НапоминаниеПользователю.ВремяСобытия = ТекущаяДата() + 20;
	НапоминаниеПользователю.СрокНапоминания = ТекущаяДата() + 25;
	НапоминаниеПользователю.Описание = "" + ТекущийПользователь.ПолноеИмя + " создал заявку с номером клиента "
		+ СтараяЗаявка.НомерТелефона;
	НапоминаниеПользователю.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ВУказанноеВремя;
	НапоминаниеПользователю.ИнтервалВремениНапоминания = 120;
	НапоминаниеПользователю.Записать();
КонецПроцедуры
#КонецОбласти