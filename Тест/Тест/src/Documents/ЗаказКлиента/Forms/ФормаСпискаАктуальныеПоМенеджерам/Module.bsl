 &НаКлиенте
Перем Кэш;
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
        Состояния   = Новый массив();
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Отказ);
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Продажа);
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.НетВНаличии);
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.ЖдёмДенег);
		
        Менеджер = Параметры.менеджер;
		Список.Параметры.УстановитьЗначениеПараметра("Дататекущая", НачалоДня(ТекущаяДата()));
		Список.Параметры.УстановитьЗначениеПараметра("ДатаСвязи", КонецДня(ТекущаяДата()));
		Список.Параметры.УстановитьЗначениеПараметра("Состояния", Состояния);
		Список.Параметры.УстановитьЗначениеПараметра("Ответственный", Параметры.менеджер);
	    Заголовок = Параметры.менеджер;
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьУсловноеОформление();
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекДата", НачалоДня(ТекущаяДата()));
	
	///+ГомзМА 03.02.2023 (Задача 000002653 от 03.02.2023)
	ПолучитьКоличествоЗвонков();
	///-ГомзМА 03.02.2023 (Задача 000002653 от 03.02.2023)
	
	///+ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость = Ложь;
	///-ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	
	///+ГомзМА 02.03.2023 
	ЗаполнениеСписков();
	ОбновлениеСписка();
	///-ГомзМА 02.03.2023
	
	///+ГомзМА 27.07.2023
	ЗаполнитьПодвал();
	///-ГомзМА 27.07.2023
	
КонецПроцедуры




#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	//ПересчётИтогиДокументов(); 
	Если Элементы.список.ТекущиеДанные <> Неопределено Тогда
		ОбновитьОтборПартий();
	КонецЕсли;
	
КонецПроцедуры

     


&НаКлиенте
Процедура ОбновитьОтборПартий()
	ТекДанные = Элементы.список.ТекущиеДанные;
	
	//Номенклатура = ?(ТекДанные = Неопределено, Неопределено, ТекДанные.Номенклатура);
    СписокДашборд1.Параметры.УстановитьЗначениеПараметра("СсылкаНаЗаявку",ТекДанные.ссылка);
	СписокДашборд2.Параметры.УстановитьЗначениеПараметра("СсылкаНаЗаявку",ТекДанные.ссылка);
	Товары.Параметры.УстановитьЗначениеПараметра("СсылкаНаЗаявку",ТекДанные.ссылка);
	//Партии.Параметры.УстановитьЗначениеПараметра("Товар", ТекДанные.Номенклатура);
Элементы.СтраницаДень1.Заголовок = "Понедельник "+ день(НачалоНедели(ТекущаяДата()))+"."+месяц(НачалоНедели(ТекущаяДата()));
Элементы.СтраницаДень2.Заголовок = "Вторник "+ день(НачалоНедели(ТекущаяДата())+1*24*3600)+"."+месяц(НачалоНедели(ТекущаяДата())+1*24*3600);
Элементы.СтраницаДень3.Заголовок = "Среда "+ день(НачалоНедели(ТекущаяДата())+2*24*3600)+"."+месяц(НачалоНедели(ТекущаяДата())+2*24*3600);
Элементы.СтраницаДень4.Заголовок = "Четверг "+ день(НачалоНедели(ТекущаяДата())+3*24*3600)+"."+месяц(НачалоНедели(ТекущаяДата())+3*24*3600);
Элементы.СтраницаДень5.Заголовок = "Пятница "+ день(НачалоНедели(ТекущаяДата())+4*24*3600)+"."+месяц(НачалоНедели(ТекущаяДата())+4*24*3600);
Элементы.СтраницаДень6.Заголовок = "Суббота "+ день(НачалоНедели(ТекущаяДата())+5*24*3600)+"."+месяц(НачалоНедели(ТекущаяДата())+5*24*3600);
Элементы.СтраницаДень7.Заголовок = "Воскресенье "+ день(НачалоНедели(ТекущаяДата())+6*24*3600)+"."+месяц(НачалоНедели(ТекущаяДата())+6*24*3600);
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	//ЭлементУО = Список.УсловноеОформление.Элементы.Добавить();
	//// Состояние Ожидание или Думает
	//ГруппаИЛИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ЭлементУО.Отбор.Элементы, "ИЛИ", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ);
	//ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаИЛИ, "Состояние",
	//	ВидСравненияКомпоновкиДанных.Равно, ПредопределенноеЗначение(
	//		"Перечисление.дт_СостоянияЗаказовКлиента.Ожидание"));
	//ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаИЛИ, "Состояние",
	//	ВидСравненияКомпоновкиДанных.Равно, ПредопределенноеЗначение(
	//		"Перечисление.дт_СостоянияЗаказовКлиента.Думает"));
	//ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор, "ДатаСвязи",
	//	//ВидСравненияКомпоновкиДанных.Меньше, НачалоДня(ТекущаяДата()) - 24*3600);
	//	//Сергеев проверка по новому реквизиту [ДатаСвязи]
	//	ВидСравненияКомпоновкиДанных.Меньше, НачалоДня(ТекущаяДата()));
	//ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоРозовый);
	//
	//
	//				
КонецПроцедуры

&НаСервере
Процедура ПолучитьКоличествоЗвонков()

	///+ГомзМА 03.02.2023 (Задача 000002653 от 03.02.2023)
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	КоличествоЗаявок = Результат.Количество(); 
	
	КоличествоОжидание 		= 0;
	КоличествоДумает 		= 0;
	КоличествоОтказ 		= 0;
	КоличествоПродажа 		= 0;
	КоличествоНетВНаличии 	= 0;
	КоличествоСрочно 		= 0;
	КоличествоЖдёмДенег 	= 0;
	//Для каждого Строка из Результат Цикл
	//	Если Строка.Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Ожидание Тогда
	//		КоличествоОжидание = КоличествоОжидание + Строка.КоличествоОжидание;
	//	ИначеЕсли Строка.Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Думает Тогда
	//		КоличествоДумает = КоличествоДумает + Строка.КоличествоДумает;
	//	ИначеЕсли Строка.Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Отказ Тогда
	//		КоличествоОтказ = КоличествоОтказ + Строка.КоличествоОтказ;	
	//	ИначеЕсли Строка.Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Продажа Тогда
	//		КоличествоПродажа = КоличествоПродажа + Строка.КоличествоПродажа;	
	//	ИначеЕсли Строка.Состояние = Перечисления.дт_СостоянияЗаказовКлиента.НетВНаличии Тогда
	//		КоличествоНетВНаличии = КоличествоНетВНаличии + Строка.КоличествоНетВНаличии;
	//	ИначеЕсли Строка.Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Срочно Тогда
	//		КоличествоСрочно = КоличествоСрочно + Строка.КоличествоСрочно;
	//	КонецЕсли;

	//КонецЦикла;
	КоличествоОжидание 	  =  Формат(Результат.Итог("КоличествоОжидание"),"ЧДЦ=0; ЧН=-");
	КоличествоДумает   	  =  Формат(Результат.Итог("КоличествоДумает"),"ЧДЦ=0; ЧН=-");
	КоличествоОтказ   	  =  Формат(Результат.Итог("КоличествоОтказ"),"ЧДЦ=0; ЧН=-");
	КоличествоПродажа     =  Формат(Результат.Итог("КоличествоПродажа"),"ЧДЦ=0; ЧН=-");
	КоличествоНетВНаличии =  Формат(Результат.Итог("КоличествоНетВНаличии"),"ЧДЦ=0; ЧН=-");
	КоличествоСрочно 	  =  Формат(Результат.Итог("КоличествоСрочно"),"ЧДЦ=0; ЧН=-");
	КоличествоЖдёмДенег   =  Формат(Результат.Итог("КоличествоЖдёмДенег"),"ЧДЦ=0; ЧН=-");
	
	//
	ЭтотОбъект.ЭтаФорма.Элементы.СуммаДокумента.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.Оплачено.ГоризонтальноеПоложениеВПодвале 		= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.Ждём.ГоризонтальноеПоложениеВПодвале 			= ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СуммаДокумента.ТекстПодвала =  Формат(Результат.Итог("СуммаДокумента"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.Оплачено.ТекстПодвала   	 =  Формат(Результат.Итог("Оплачено"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.Ждём.ТекстПодвала    	     =  Формат(Результат.Итог("Ждём"),"ЧДЦ=0; ЧН=-");

     //-СерФ 16.03.2023 (Задача 000002653 от 03.02.2023)
	///-ГомзМА 03.02.2023 (Задача 000002653 от 03.02.2023)

КонецПроцедуры

#КонецОбласти


&НаСервере
Функция СписокВКоллекциюЗначений()
	
	//Получаем схема компановки данных (здесь хранится текст запроса)
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	
	//Получаем настройки пользователя (отборы, сортировки и т.п.)
	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	//Выводим динамический список в таблицу значений
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	//Возвращаем полученную таблицу значений
	Возврат  Результат;
	
КонецФункции

Процедура ПересчётИтогиДокументов()
	
	Таб 				 = СписокВКоллекциюЗначений();
	КоличествоДокументов = 0;
	СуммаДокументов      = 0;
	КоличествоДокументов = Таб.количество();
	//Для каждого стр из таб цикл	
	//	СуммаДокументов 	 = СуммаДокументов + стр.СуммаДокумента;
	//КонецЦикла;
	
	Схема = Элементы.список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы.список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	

	//651 005 092
	//650 970 229
КонецПроцедуры

&НаСервере
 Процедура НеобработанныеПриИзмененииНаСервере()
	Текст =  "ВЫБРАТЬ
	         |	СУММА(ПриходДенегНаСчет.СуммаДокумента) КАК СуммаПрихода,
	         |	ПриходДенегНаСчет.Сделка.ЗаказКлиента КАК СделкаЗаказКлиента
	         |ПОМЕСТИТЬ ВТ_Приходы
	         |ИЗ
	         |	Документ.ПриходДенегНаСчет КАК ПриходДенегНаСчет
	         |
	         |СГРУППИРОВАТЬ ПО
	         |	ПриходДенегНаСчет.Сделка.ЗаказКлиента
	         |;
	         |
	         |////////////////////////////////////////////////////////////////////////////////
	         |ВЫБРАТЬ
	         |	МАКСИМУМ(ПредварительныйСчет.Ссылка) КАК Ссылка,
	         |	ПредварительныйСчет.Основание КАК Основание
	         |ПОМЕСТИТЬ ВТ_Счета
	         |ИЗ
	         |	Документ.ПредварительныйСчет КАК ПредварительныйСчет
	         |
	         |СГРУППИРОВАТЬ ПО
	         |	ПредварительныйСчет.Основание
	         |;
	         |
	         |////////////////////////////////////////////////////////////////////////////////
	         |ВЫБРАТЬ
	         |	МАКСИМУМ(ПродажаЗапчастей.Ссылка) КАК Ссылка,
	         |	ПродажаЗапчастей.ЗаказКлиента КАК ЗаказКлиента
	         |ПОМЕСТИТЬ ВТ_Продажи
	         |ИЗ
	         |	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	         |
	         |СГРУППИРОВАТЬ ПО
	         |	ПродажаЗапчастей.ЗаказКлиента
	         |;
	         |
	         |////////////////////////////////////////////////////////////////////////////////
	         |ВЫБРАТЬ
	         |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаписиЗвонков.Дата) КАК Дата,
	         |	ЗаписиЗвонков.НомерТелефона КАК НомерТелефона,
	         |	СУММА(ЗаписиЗвонков.Длительность) КАК Длительность,
	         |	ЗаписиЗвонков.Заявка КАК Заявка
	         |ПОМЕСТИТЬ ВТ_Звонки
	         |ИЗ
	         |	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
	         |
	         |СГРУППИРОВАТЬ ПО
	         |	ЗаписиЗвонков.НомерТелефона,
	         |	ЗаписиЗвонков.Заявка
	         |;
	         |
	         |////////////////////////////////////////////////////////////////////////////////
	         |ВЫБРАТЬ
	         |	ДокументЗаказКлиента.Ссылка КАК Ссылка,
	         |	ДокументЗаказКлиента.ПометкаУдаления КАК ПометкаУдаления,
	         |	ДокументЗаказКлиента.Номер КАК Номер,
	         |	ДокументЗаказКлиента.Дата КАК Дата,
	         |	ДокументЗаказКлиента.Проведен КАК Проведен,
	         |	ДокументЗаказКлиента.КлиентНаименование КАК КлиентНаименование,
	         |	ДокументЗаказКлиента.Клиент КАК Клиент,
	         |	ДокументЗаказКлиента.НомерТелефона КАК НомерТелефона,
	         |	ВЫРАЗИТЬ(ДокументЗаказКлиента.Комментарий КАК СТРОКА(150)) КАК Комментарий,
	         |	ДокументЗаказКлиента.Состояние КАК Состояние,
	         |	ДокументЗаказКлиента.Ответственный КАК Ответственный,
	         |	ДокументЗаказКлиента.Проект КАК Проект,
	         |	ДокументЗаказКлиента.СуммаДокумента КАК СуммаДокумента,
	         |	ДокументЗаказКлиента.Склад КАК Склад,
	         |	ДокументЗаказКлиента.Согласовал КАК Согласовал,
	         |	ДокументЗаказКлиента.ДатаИзмененияСостояния КАК ДатаИзмененияСостояния,
	         |	ДокументЗаказКлиента.ДатаСвязи КАК ДатаСвязи,
	         |	ДокументЗаказКлиента.МоментВремени КАК МоментВремени,
	         |	ВЫБОР
	         |		КОГДА ДокументЗаказКлиента.ДатаСвязи < &ТекДата
	         |			ТОГДА ИСТИНА
	         |		ИНАЧЕ ЛОЖЬ
	         |	КОНЕЦ КАК Проверка,
	         |	ДокументЗаказКлиента.НомерВнешний КАК НомерВнешний,
	         |	ДокументЗаказКлиента.СтатусКонтроля КАК СтатусКонтроля,
	         |	ДокументЗаказКлиента.Контролёр КАК Контролёр,
	         |	ДокументЗаказКлиента.ТекстовыйМенеджер КАК ТекстовыйМенеджер,
	         |	ДокументЗаказКлиента.ТипЗаявки КАК ТипЗаявки,
	         |	ВЫБОР
	         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Ожидание)
	         |			ТОГДА 1
	         |		ИНАЧЕ 0
	         |	КОНЕЦ КАК КоличествоОжидание,
	         |	ВЫБОР
	         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Думает)
	         |			ТОГДА 1
	         |		ИНАЧЕ 0
	         |	КОНЕЦ КАК КоличествоДумает,
	         |	ВЫБОР
	         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Отказ)
	         |			ТОГДА 1
	         |		ИНАЧЕ 0
	         |	КОНЕЦ КАК КоличествоОтказ,
	         |	ВЫБОР
	         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Продажа)
	         |			ТОГДА 1
	         |		ИНАЧЕ 0
	         |	КОНЕЦ КАК КоличествоПродажа,
	         |	ВЫБОР
	         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.НетВНаличии)
	         |			ТОГДА 1
	         |		ИНАЧЕ 0
	         |	КОНЕЦ КАК КоличествоНетВНаличии,
	         |	ВЫБОР
	         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Срочно)
	         |			ТОГДА 1
	         |		ИНАЧЕ 0
	         |	КОНЕЦ КАК КоличествоСрочно,
	         |	ВЫБОР
	         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.ЖдёмДенег)
	         |			ТОГДА 1
	         |		ИНАЧЕ 0
	         |	КОНЕЦ КАК КоличествоЖдёмДенег,
	         |	ДокументЗаказКлиента.Канал КАК Канал,
	         |	ВТ_Приходы.СуммаПрихода КАК Оплачено,
	         |	ДокументЗаказКлиента.СуммаДокумента - ЕСТЬNULL(ВТ_Приходы.СуммаПрихода, 0) КАК Ждём,
	         |	ВТ_Продажи.Ссылка КАК СсылкаНаПродажу,
	         |	ВТ_Счета.Ссылка КАК СсылкаНаСчёт,
	         |	ДокументЗаказКлиента.СуммаПредлагаемойЦены КАК СуммаПредлагаемойЦены,
	         |	ДокументЗаказКлиента.ДатаПоследнегоВзаимодействия КАК ДатаПоследнегоВзаимодействия,
	         |	ДокументЗаказКлиента.Прослушано КАК Прослушано,
	         |	ДокументЗаказКлиента.Закрыта КАК Закрыта,
	         |	ДокументЗаказКлиента.АтоматическоеСоздание КАК АтоматическоеСоздание,
	         |	ВТ_Звонки.Длительность КАК Длительность,
	         |	ВТ_Звонки.Дата КАК КолвоЗвонков
	         |ИЗ
	         |	Документ.ЗаказКлиента КАК ДокументЗаказКлиента
	         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приходы КАК ВТ_Приходы
	         |		ПО ДокументЗаказКлиента.Ссылка = ВТ_Приходы.СделкаЗаказКлиента
	         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета КАК ВТ_Счета
	         |		ПО ДокументЗаказКлиента.Ссылка = ВТ_Счета.Основание
	         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Продажи КАК ВТ_Продажи
	         |		ПО ДокументЗаказКлиента.Ссылка = ВТ_Продажи.ЗаказКлиента
	         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Звонки КАК ВТ_Звонки
	         |		ПО ДокументЗаказКлиента.Ссылка = ВТ_Звонки.Заявка
	         |{ГДЕ
	         |	(ДокументЗаказКлиента.Ответственный = &Ответственный) КАК Поле2}";
	
	
	Если необработанные = "Все" Тогда
		Список.ТекстЗапроса = Текст;
	ИначеЕсли необработанные = "Необработанные" Тогда
		Текст = Текст + Символы.ПС + "ГДЕ" + Символы.ПС + "ДокументЗаказКлиента.ДатаСвязи <= &ДатаСвязи";
		Список.ТекстЗапроса = Текст;
		Текст = Текст + Символы.ПС + "И" + Символы.ПС + "Не ДокументЗаказКлиента.Состояние В (&Состояния)";
		Список.ТекстЗапроса = Текст;
		
		Состояния   = Новый массив();
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Отказ);
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Продажа);
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.НетВНаличии);
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.ЖдёмДенег);
	
		Список.Параметры.УстановитьЗначениеПараметра("ДатаСвязи", КонецДня(ТекущаяДата()));
		Список.Параметры.УстановитьЗначениеПараметра("Состояния", Состояния);

	ИначеЕсли необработанные = "Актуальные" Тогда
		Текст = Текст + Символы.ПС + "ГДЕ" + Символы.ПС + "(ДокументЗаказКлиента.ДатаСвязи <= &ДатаСвязи";
		Список.ТекстЗапроса = Текст;
		Текст = Текст + Символы.ПС + "И" + Символы.ПС + "Не ДокументЗаказКлиента.Состояние В (&Состояния)";
		Список.ТекстЗапроса = Текст;
		Текст = Текст + Символы.ПС + "И" + Символы.ПС + "ДокументЗаказКлиента.Ответственный = &Ответственный)";
        Список.ТекстЗапроса = Текст;
		Текст = Текст + Символы.ПС + "ИЛИ" + Символы.ПС + "(ДокументЗаказКлиента.Дата > &Дататекущая";
        Список.ТекстЗапроса = Текст;
		Текст = Текст + Символы.ПС + "И" + Символы.ПС + "ДокументЗаказКлиента.Ответственный = &Ответственный)";
        Список.ТекстЗапроса = Текст;

		Состояния   = Новый массив();
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Отказ);
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Продажа);
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.НетВНаличии);
		Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.ЖдёмДенег);
		

		Список.Параметры.УстановитьЗначениеПараметра("Дататекущая", НачалоДня(ТекущаяДата()));
		Список.Параметры.УстановитьЗначениеПараметра("ДатаСвязи", КонецДня(ТекущаяДата()));
		Список.Параметры.УстановитьЗначениеПараметра("Состояния", Состояния);
		Список.Параметры.УстановитьЗначениеПараметра("Ответственный", Пользователи.ТекущийПользователь());
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура НеобработанныеПриИзменении(Элемент)
	НеобработанныеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НоменклатураПриИзмененииНаСервере()
		Текст =  "ВЫБРАТЬ
		         |	СУММА(ПриходДенегНаСчет.СуммаДокумента) КАК СуммаПрихода,
		         |	ПриходДенегНаСчет.Сделка.ЗаказКлиента КАК СделкаЗаказКлиента
		         |ПОМЕСТИТЬ ВТ_Приходы
		         |ИЗ
		         |	Документ.ПриходДенегНаСчет КАК ПриходДенегНаСчет
		         |
		         |СГРУППИРОВАТЬ ПО
		         |	ПриходДенегНаСчет.Сделка.ЗаказКлиента
		         |;
		         |
		         |////////////////////////////////////////////////////////////////////////////////
		         |ВЫБРАТЬ
		         |	МАКСИМУМ(ПредварительныйСчет.Ссылка) КАК Ссылка,
		         |	ПредварительныйСчет.Основание КАК Основание
		         |ПОМЕСТИТЬ ВТ_Счета
		         |ИЗ
		         |	Документ.ПредварительныйСчет КАК ПредварительныйСчет
		         |
		         |СГРУППИРОВАТЬ ПО
		         |	ПредварительныйСчет.Основание
		         |;
		         |
		         |////////////////////////////////////////////////////////////////////////////////
		         |ВЫБРАТЬ
		         |	МАКСИМУМ(ПродажаЗапчастей.Ссылка) КАК Ссылка,
		         |	ПродажаЗапчастей.ЗаказКлиента КАК ЗаказКлиента
		         |ПОМЕСТИТЬ ВТ_Продажи
		         |ИЗ
		         |	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
		         |
		         |СГРУППИРОВАТЬ ПО
		         |	ПродажаЗапчастей.ЗаказКлиента
		         |;
		         |
		         |////////////////////////////////////////////////////////////////////////////////
		         |ВЫБРАТЬ
		         |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаписиЗвонков.Дата) КАК Дата,
		         |	ЗаписиЗвонков.НомерТелефона КАК НомерТелефона,
		         |	СУММА(ЗаписиЗвонков.Длительность) КАК Длительность,
		         |	ЗаписиЗвонков.Заявка КАК Заявка
		         |ПОМЕСТИТЬ ВТ_Звонки
		         |ИЗ
		         |	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
		         |
		         |СГРУППИРОВАТЬ ПО
		         |	ЗаписиЗвонков.НомерТелефона,
		         |	ЗаписиЗвонков.Заявка
		         |;
		         |
		         |////////////////////////////////////////////////////////////////////////////////
		         |ВЫБРАТЬ
		         |	ДокументЗаказКлиента.Ссылка КАК Ссылка,
		         |	ДокументЗаказКлиента.ПометкаУдаления КАК ПометкаУдаления,
		         |	ДокументЗаказКлиента.Номер КАК Номер,
		         |	ДокументЗаказКлиента.Дата КАК Дата,
		         |	ДокументЗаказКлиента.Проведен КАК Проведен,
		         |	ДокументЗаказКлиента.КлиентНаименование КАК КлиентНаименование,
		         |	ДокументЗаказКлиента.Клиент КАК Клиент,
		         |	ДокументЗаказКлиента.НомерТелефона КАК НомерТелефона,
		         |	ВЫРАЗИТЬ(ДокументЗаказКлиента.Комментарий КАК СТРОКА(150)) КАК Комментарий,
		         |	ДокументЗаказКлиента.Состояние КАК Состояние,
		         |	ДокументЗаказКлиента.Ответственный КАК Ответственный,
		         |	ДокументЗаказКлиента.Проект КАК Проект,
		         |	ДокументЗаказКлиента.СуммаДокумента КАК СуммаДокумента,
		         |	ДокументЗаказКлиента.Склад КАК Склад,
		         |	ДокументЗаказКлиента.Согласовал КАК Согласовал,
		         |	ДокументЗаказКлиента.ДатаИзмененияСостояния КАК ДатаИзмененияСостояния,
		         |	ДокументЗаказКлиента.ДатаСвязи КАК ДатаСвязи,
		         |	ДокументЗаказКлиента.МоментВремени КАК МоментВремени,
		         |	ВЫБОР
		         |		КОГДА ДокументЗаказКлиента.ДатаСвязи < &ТекДата
		         |			ТОГДА ИСТИНА
		         |		ИНАЧЕ ЛОЖЬ
		         |	КОНЕЦ КАК Проверка,
		         |	ДокументЗаказКлиента.НомерВнешний КАК НомерВнешний,
		         |	ДокументЗаказКлиента.СтатусКонтроля КАК СтатусКонтроля,
		         |	ДокументЗаказКлиента.Контролёр КАК Контролёр,
		         |	ДокументЗаказКлиента.ТекстовыйМенеджер КАК ТекстовыйМенеджер,
		         |	ДокументЗаказКлиента.ТипЗаявки КАК ТипЗаявки,
		         |	ВЫБОР
		         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Ожидание)
		         |			ТОГДА 1
		         |		ИНАЧЕ 0
		         |	КОНЕЦ КАК КоличествоОжидание,
		         |	ВЫБОР
		         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Думает)
		         |			ТОГДА 1
		         |		ИНАЧЕ 0
		         |	КОНЕЦ КАК КоличествоДумает,
		         |	ВЫБОР
		         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Отказ)
		         |			ТОГДА 1
		         |		ИНАЧЕ 0
		         |	КОНЕЦ КАК КоличествоОтказ,
		         |	ВЫБОР
		         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Продажа)
		         |			ТОГДА 1
		         |		ИНАЧЕ 0
		         |	КОНЕЦ КАК КоличествоПродажа,
		         |	ВЫБОР
		         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.НетВНаличии)
		         |			ТОГДА 1
		         |		ИНАЧЕ 0
		         |	КОНЕЦ КАК КоличествоНетВНаличии,
		         |	ВЫБОР
		         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Срочно)
		         |			ТОГДА 1
		         |		ИНАЧЕ 0
		         |	КОНЕЦ КАК КоличествоСрочно,
		         |	ВЫБОР
		         |		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.ЖдёмДенег)
		         |			ТОГДА 1
		         |		ИНАЧЕ 0
		         |	КОНЕЦ КАК КоличествоЖдёмДенег,
		         |	ДокументЗаказКлиента.Канал КАК Канал,
		         |	ВТ_Приходы.СуммаПрихода КАК Оплачено,
		         |	ДокументЗаказКлиента.СуммаДокумента - ЕСТЬNULL(ВТ_Приходы.СуммаПрихода, 0) КАК Ждём,
		         |	ВТ_Продажи.Ссылка КАК СсылкаНаПродажу,
		         |	ВТ_Счета.Ссылка КАК СсылкаНаСчёт,
		         |	ДокументЗаказКлиента.СуммаПредлагаемойЦены КАК СуммаПредлагаемойЦены,
		         |	ДокументЗаказКлиента.ДатаПоследнегоВзаимодействия КАК ДатаПоследнегоВзаимодействия,
		         |	ДокументЗаказКлиента.Прослушано КАК Прослушано,
		         |	ДокументЗаказКлиента.Закрыта КАК Закрыта,
		         |	ДокументЗаказКлиента.АтоматическоеСоздание КАК АтоматическоеСоздание,
		         |	ВТ_Звонки.Длительность КАК Длительность,
		         |	ВТ_Звонки.Дата КАК КолвоЗвонков
		         |ИЗ
		         |	Документ.ЗаказКлиента КАК ДокументЗаказКлиента
		         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приходы КАК ВТ_Приходы
		         |		ПО ДокументЗаказКлиента.Ссылка = ВТ_Приходы.СделкаЗаказКлиента
		         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета КАК ВТ_Счета
		         |		ПО ДокументЗаказКлиента.Ссылка = ВТ_Счета.Основание
		         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Продажи КАК ВТ_Продажи
		         |		ПО ДокументЗаказКлиента.Ссылка = ВТ_Продажи.ЗаказКлиента
		         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Звонки КАК ВТ_Звонки
		         |		ПО ДокументЗаказКлиента.Ссылка = ВТ_Звонки.Заявка
		         |{ГДЕ
		         |	(ДокументЗаказКлиента.Ответственный = &Ответственный) КАК Поле2}";
	
	
	Если Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда
		Список.ТекстЗапроса = Текст;
	Иначе 
		Текст = Текст + Символы.ПС + "ГДЕ" + Символы.ПС + "ДокументЗаказКлиента.Товары.Номенклатура = &Номенклатура";
		Список.ТекстЗапроса = Текст;

		Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", Номенклатура);
	КонецЕсли;
	
	Элементы.Список.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	НоменклатураПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ПолучитьКоличествоЗвонков();
КонецПроцедуры


&НаКлиенте
Процедура СоздатьДозвон(Команда)
	
	///+ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	КоличесвтоЗаписейВМассиве = ПолучитьКоличествоДозвоновЗаТекущийГод(ТекущиеДанные);
	
	Если КоличесвтоЗаписейВМассиве > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект);
		
		ПоказатьВопрос(Оповещение, "Дозвон с этим номером телефона в текущем году уже существует! Создать новый?", РежимДиалогаВопрос.ДаНет);
	Иначе
		Док = СоздатьДокДозвон(Элементы.Список.ТекущиеДанные.Клиент);
		ПараметрыФормы = Новый Структура("Ключ", Док);
		ОткрытьФорму("Документ.Дозвон.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
	///-ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	///+ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)
	Если Результат = КодВозвратаДиалога.Да Тогда
		Док = СоздатьДокДозвон(Элементы.Список.ТекущиеДанные.Клиент);
		ПараметрыФормы = Новый Структура("Ключ", Док);
		ОткрытьФорму("Документ.Дозвон.ФормаОбъекта", ПараметрыФормы);
	Иначе
		Возврат;
	КонецЕсли;
	///-ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)

КонецПроцедуры





&НаСервере
Функция ПолучитьКоличествоДозвоновЗаТекущийГод(ТекущиеДанные)
	
	///+ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Дозвон.Дата КАК Дата,
		|	Дозвон.Телефон КАК Телефон,
		|	Дозвон.Клиент КАК Клиент
		|ИЗ
		|	Документ.Дозвон КАК Дозвон";
	
	СписокДозвонов = Запрос.Выполнить().Выбрать();
	
	МассивДозвоновЗаТекущийГод = Новый Массив;
	Пока СписокДозвонов.Следующий() Цикл
		Если ТекущиеДанные.НомерТелефона = СписокДозвонов.Телефон И Год(ТекущаяДатаСеанса()) = Год(СписокДозвонов.Дата) Тогда
			МассивДозвоновЗаТекущийГод.Добавить(СписокДозвонов);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивДозвоновЗаТекущийГод.Количество();
	///-ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)
	
КонецФункции

&НаСервере
Функция СоздатьДокДозвон(Клиент)
	
	///+ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)
	Док = Документы.Дозвон.СоздатьДокумент();
	
	Док.Клиент 			= Клиент;
	Док.Дата 			= ТекущаяДата();
	Док.Телефон 		= Док.Клиент.Телефон;
	Док.Автор 			= НайтиПользователя();
	Док.Статус 			= Перечисления.СтатусыДозвона.Ожидание;
	ТаблицаДляСкрипта 	= ПолучитьСкрипт();
	
	Пока  ТаблицаДляСкрипта.Следующий() Цикл
		Док.Скрипт.Добавить().Описание = ТаблицаДляСкрипта.Описание;
	КонецЦикла;
	
	Док.Записать();
	
	Возврат Док.Ссылка;
	///-ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)
	
КонецФункции

&НаСервере
Функция НайтиПользователя()
	
	///+ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)
	Возврат ПользователиКлиентСервер.ТекущийПользователь();
	///+ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)
	
КонецФункции

Функция  ПолучитьСкрипт()
	
	///+ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЧекЛистЧекЛист.Описание КАК Описание
	               |ИЗ
	               |	Документ.ЧекЛист.ЧекЛист КАК ЧекЛистЧекЛист
	               |ГДЕ
	               |	ЧекЛистЧекЛист.Ссылка = &Чеклист";
	
	Запрос.УстановитьПараметр("Чеклист", Константы.БЗДляДозвона.Получить());
	Выборка = Запрос.Выполнить().Выбрать();

	Возврат Выборка;
	///-ГомзМА 16.02.2023 (Задача 000002740 от 16.02.2023)
	
КонецФункции

&НаКлиенте
Процедура ОтобразитьПоказатели(Команда)
	
	///+ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	Элементы.ОтобразитьПоказатели.Видимость = НЕ Элементы.ОтобразитьПоказатели.Видимость;
	Элементы.СкрытьПоказатели.Видимость 	= НЕ Элементы.СкрытьПоказатели.Видимость;
	Элементы.ГруппаСчетчик.Видимость 		= НЕ Элементы.ГруппаСчетчик.Видимость;
	///-ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатели(Команда)

	///+ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	Элементы.ОтобразитьПоказатели.Видимость = НЕ Элементы.ОтобразитьПоказатели.Видимость;
	Элементы.СкрытьПоказатели.Видимость 	= НЕ Элементы.СкрытьПоказатели.Видимость;
	Элементы.ГруппаСчетчик.Видимость 		= НЕ Элементы.ГруппаСчетчик.Видимость;
	///-ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьОтбор(Команда)
	
	///+ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	Элементы.ОтобразитьОтбор.Видимость 										= НЕ Элементы.ОтобразитьОтбор.Видимость;
	Элементы.СкрытьОтбор.Видимость 											= НЕ Элементы.СкрытьОтбор.Видимость;
	Элементы.Группа4.Видимость 												= НЕ Элементы.Группа4.Видимость;
	Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость 	= НЕ Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость;
	///-ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	

КонецПроцедуры

&НаКлиенте
Процедура СкрытьОтбор(Команда)
	
	///+ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	Элементы.ОтобразитьОтбор.Видимость 										= НЕ Элементы.ОтобразитьОтбор.Видимость;
	Элементы.СкрытьОтбор.Видимость 											= НЕ Элементы.СкрытьОтбор.Видимость;
	Элементы.Группа4.Видимость 												= НЕ Элементы.Группа4.Видимость;
	Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость 	= НЕ Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость;
	///-ГомзМА 22.02.2023 (Задача 000002844 от 22.02.2023)
	
КонецПроцедуры

&НаКлиенте
Процедура МенеджерПриИзменении(Элемент)
	
	ОбновлениеСписка();
	//Список.Параметры.УстановитьЗначениеПараметра("Ответственный", Менеджер);
	ЭтаФорма.Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновлениеСписка();
	УстановитьЗначенияПараметров();
	ЗаполнитьПодвал();
	
КонецПроцедуры



&НаСервере
Процедура ОбновлениеСписка()
	
	///+ГомзМА 02.03.2023
	Если ЗначениеЗаполнено(Менеджер) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, 
		"Ответственный", 
		Менеджер, // Значение отбора
		ВидСравненияКомпоновкиДанных.Равно,, Истина);
	Иначе	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Ссылка,
		|	Пользователи.Представление КАК Представление
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	НЕ Пользователи.Недействителен";
		
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
		
		МассивПользователей = Новый Массив;
		МассивПользователей.Добавить(Справочники.Пользователи.ПустаяСсылка());
		Пока РезультатЗапроса.Следующий() Цикл
			МассивПользователей.Добавить(РезультатЗапроса.Ссылка);
		КонецЦикла;
		
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, 
		"Ответственный", 
		МассивПользователей, // Значение отбора
		ВидСравненияКомпоновкиДанных.ВСписке,, Истина);
	КонецЕсли;
	///-ГомзМА 02.03.2023
	
КонецПроцедуры

Процедура ЗаполнениеСписков()
	
	///+ГомзМА 02.03.2023
	ЗапросМенеджеров = Новый Запрос;
	
	ЗапросМенеджеров.Текст = 
	"ВЫБРАТЬ
	|	ДолжностиСотрудниковСрезПоследних.Сотрудник.Пользователь КАК СотрудникПользователь,
	|	ДолжностиСотрудниковСрезПоследних.Сотрудник.Фамилия КАК Представление
	|ИЗ
	|	РегистрСведений.ДолжностиСотрудников.СрезПоследних КАК ДолжностиСотрудниковСрезПоследних
	|ГДЕ
	|	ДолжностиСотрудниковСрезПоследних.Должность.Отдел В(&Отдел)
	|	И НЕ ДолжностиСотрудниковСрезПоследних.Сотрудник.Пользователь.Недействителен
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникПользователь";
	
	Отдел = Новый Массив;
	Отдел.Добавить(Справочники.Подразделения.НайтиПоКоду("000000038"));
	Отдел.Добавить(Справочники.Подразделения.НайтиПоКоду("000000055"));
	
	ЗапросМенеджеров.УстановитьПараметр("Отдел", Отдел);
	ВыборкаМенеджеров = ЗапросМенеджеров.Выполнить().Выбрать();
	
	Элементы.Менеджер.СписокВыбора.Очистить();
	Элементы.Менеджер.СписокВыбора.Добавить(Справочники.Пользователи.ПустаяСсылка(), "ВСЕ");
	
	Пока ВыборкаМенеджеров.Следующий() Цикл
		Элементы.Менеджер.СписокВыбора.Добавить(ВыборкаМенеджеров.СотрудникПользователь, ВыборкаМенеджеров.Представление);
	КонецЦикла;
	///-ГомзМА 02.03.2023
	
	
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНаСервере()
	
	///+ГомзМА 07.03.2023
	Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
	НоменклатураПриИзмененииНаСервере();
	///-ГомзМА 07.03.2023
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	ОчиститьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СписокУпущеннаяПрибыльВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	///+ГомзМА 27.07.2023
	ТекСтрока = Элементы.СписокАналитика.ТекущиеДанные;
	Если Поле = Элементы.СписокАналитикаДокумент Тогда
		
		СсылкаДляОткрытия    = ТекСтрока.Документ;
		ПараметрыФормы       = Новый Структура("Ключ", СсылкаДляОткрытия);
		
		ФормаДокумента 		 = ПолучитьФорму("Документ.ЗаказКлиента.Форма.ФормаДокумента", ПараметрыФормы);
		ФормаДокумента.Открыть();
	КонецЕсли;
	///+ГомзМА 27.07.2023
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодвал()

	///+ГомзМА 27.07.2023
	//Динамический список СписокУпущеннаяПрибыль
	Схема = Элементы.СписокАналитика.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокАналитика.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокАналитикаСумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;

	ЭтотОбъект.ЭтаФорма.Элементы.СписокАналитикаСумма.ТекстПодвала 	=  Формат(Результат.Итог("Сумма"), "ЧДЦ=0; ЧН=-");
	///-ГомзМА 27.07.2023

КонецПроцедуры

&НаКлиенте
Процедура ПериодУпущеннаяПрибыльПриИзменении(Элемент)
	
	///+ГомзМА 27.07.2023
	УстановитьЗначенияПараметров();
	ЗаполнитьПодвал();
	///-ГомзМА 27.07.2023
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияПараметров()

	///+ГомзМА 27.07.2023
	СписокАналитика.Параметры.УстановитьЗначениеПараметра("ДатаНачала",		ПериодАналитика.ДатаНачала);
	СписокАналитика.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",	ПериодАналитика.ДатаОкончания);
	///-ГомзМА 27.07.2023

КонецПроцедуры

&НаКлиенте
Процедура Прослушать(Команда)
		Если Элементы.СписокДашборд1.ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если Кэш = Неопределено Тогда
		Кэш = Новый Структура();
		Кэш.Вставить("ФайлыЗвонков", Новый Соответствие());
	КонецЕсли;
	
	СсылкаНаФайл = Элементы.СписокДашборд1.ТекущиеДанные.URL;
	СсылкаНаФайлЛокальная = Кэш.ФайлыЗвонков.Получить(СсылкаНаФайл);
	
	Если СсылкаНаФайлЛокальная = Неопределено Тогда
		
		СсылкаНаФайлЛокальная = дт_МоиЗвонкиКлиент.ПолучитьФайлЗаписи(СсылкаНаФайл);
		Если СсылкаНаФайлЛокальная = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		Кэш.ФайлыЗвонков.Вставить(СсылкаНаФайл, СсылкаНаФайлЛокальная);
		
	КонецЕсли;
	дт_МоиЗвонкиКлиент.ПрослушатьФайл(СсылкаНаФайлЛокальная);	
КонецПроцедуры

&НаКлиенте
Процедура СписокДашборд1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элементы.СписокДашборд1.ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если Кэш = Неопределено Тогда
		Кэш = Новый Структура();
		Кэш.Вставить("ФайлыЗвонков", Новый Соответствие());
	КонецЕсли;
	
	СсылкаНаФайл = Элементы.СписокДашборд1.ТекущиеДанные.URL;
	СсылкаНаФайлЛокальная = Кэш.ФайлыЗвонков.Получить(СсылкаНаФайл);
	
	Если СсылкаНаФайлЛокальная = Неопределено Тогда
		
		СсылкаНаФайлЛокальная = дт_МоиЗвонкиКлиент.ПолучитьФайлЗаписи(СсылкаНаФайл);
		Если СсылкаНаФайлЛокальная = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		Кэш.ФайлыЗвонков.Вставить(СсылкаНаФайл, СсылкаНаФайлЛокальная);
		
	КонецЕсли;
	дт_МоиЗвонкиКлиент.ПрослушатьФайл(СсылкаНаФайлЛокальная);	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница) 
	
	Если ТекущаяСтраница = Элементы.Страницадень1 Тогда
		СменаСтраницыСервер(1); 
	КонецЕсли;
	
	Если ТекущаяСтраница = Элементы.Страницадень2 Тогда
		СменаСтраницыСервер(2); 
	КонецЕсли;
	
	Если ТекущаяСтраница = Элементы.Страницадень3 Тогда
		СменаСтраницыСервер(3); 
	КонецЕсли;
	
	Если ТекущаяСтраница = Элементы.Страницадень4 Тогда
		СменаСтраницыСервер(4); 
	КонецЕсли; 
	
	Если ТекущаяСтраница = Элементы.Страницадень5 Тогда
		СменаСтраницыСервер(5); 
	КонецЕсли;
	
	Если ТекущаяСтраница = Элементы.Страницадень6 Тогда
		СменаСтраницыСервер(6); 
	КонецЕсли;
	
	Если ТекущаяСтраница = Элементы.Страницадень7 Тогда
		СменаСтраницыСервер(7); 
	КонецЕсли; 
	
	Если ТекущаяСтраница = Элементы.СтраницаЗаявки Тогда
		СменаСтраницыСервер(0); 
	КонецЕсли;

	
КонецПроцедуры

Процедура СменаСтраницыСервер(Стр)
	Текст =  "ВЫБРАТЬ
	|	СУММА(ПриходДенегНаСчет.СуммаДокумента) КАК СуммаПрихода,
	|	ПриходДенегНаСчет.Сделка.ЗаказКлиента КАК СделкаЗаказКлиента
	|ПОМЕСТИТЬ ВТ_Приходы
	|ИЗ
	|	Документ.ПриходДенегНаСчет КАК ПриходДенегНаСчет
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходДенегНаСчет.Сделка.ЗаказКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПредварительныйСчет.Ссылка) КАК Ссылка,
	|	ПредварительныйСчет.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_Счета
	|ИЗ
	|	Документ.ПредварительныйСчет КАК ПредварительныйСчет
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредварительныйСчет.Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПродажаЗапчастей.Ссылка) КАК Ссылка,
	|	ПродажаЗапчастей.ЗаказКлиента КАК ЗаказКлиента
	|ПОМЕСТИТЬ ВТ_Продажи
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажаЗапчастей.ЗаказКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаписиЗвонков.Дата) КАК Дата,
	|	ЗаписиЗвонков.НомерТелефона КАК НомерТелефона,
	|	СУММА(ЗаписиЗвонков.Длительность) КАК Длительность,
	|	ЗаписиЗвонков.Заявка КАК Заявка
	|ПОМЕСТИТЬ ВТ_Звонки
	|ИЗ
	|	РегистрСведений.ЗаписиЗвонков КАК ЗаписиЗвонков
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаписиЗвонков.НомерТелефона,
	|	ЗаписиЗвонков.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументЗаказКлиента.Ссылка КАК Ссылка,
	|	ДокументЗаказКлиента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДокументЗаказКлиента.Номер КАК Номер,
	|	ДокументЗаказКлиента.Дата КАК Дата,
	|	ДокументЗаказКлиента.Проведен КАК Проведен,
	|	ДокументЗаказКлиента.КлиентНаименование КАК КлиентНаименование,
	|	ДокументЗаказКлиента.Клиент КАК Клиент,
	|	ДокументЗаказКлиента.НомерТелефона КАК НомерТелефона,
	|	ВЫРАЗИТЬ(ДокументЗаказКлиента.Комментарий КАК СТРОКА(150)) КАК Комментарий,
	|	ДокументЗаказКлиента.Состояние КАК Состояние,
	|	ДокументЗаказКлиента.Ответственный КАК Ответственный,
	|	ДокументЗаказКлиента.Проект КАК Проект,
	|	ДокументЗаказКлиента.СуммаДокумента КАК СуммаДокумента,
	|	ДокументЗаказКлиента.Склад КАК Склад,
	|	ДокументЗаказКлиента.Согласовал КАК Согласовал,
	|	ДокументЗаказКлиента.ДатаИзмененияСостояния КАК ДатаИзмененияСостояния,
	|	ДокументЗаказКлиента.ДатаСвязи КАК ДатаСвязи,
	|	ДокументЗаказКлиента.МоментВремени КАК МоментВремени,
	|	ВЫБОР
	|		КОГДА ДокументЗаказКлиента.ДатаСвязи < &ТекДата
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Проверка,
	|	ДокументЗаказКлиента.НомерВнешний КАК НомерВнешний,
	|	ДокументЗаказКлиента.СтатусКонтроля КАК СтатусКонтроля,
	|	ДокументЗаказКлиента.Контролёр КАК Контролёр,
	|	ДокументЗаказКлиента.ТекстовыйМенеджер КАК ТекстовыйМенеджер,
	|	ДокументЗаказКлиента.ТипЗаявки КАК ТипЗаявки,
	|	ВЫБОР
	|		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Ожидание)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоОжидание,
	|	ВЫБОР
	|		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Думает)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДумает,
	|	ВЫБОР
	|		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Отказ)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоОтказ,
	|	ВЫБОР
	|		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Продажа)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПродажа,
	|	ВЫБОР
	|		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.НетВНаличии)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоНетВНаличии,
	|	ВЫБОР
	|		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Срочно)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСрочно,
	|	ВЫБОР
	|		КОГДА ДокументЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.ЖдёмДенег)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЖдёмДенег,
	|	ДокументЗаказКлиента.Канал КАК Канал,
	|	ВТ_Приходы.СуммаПрихода КАК Оплачено,
	|	ДокументЗаказКлиента.СуммаДокумента - ЕСТЬNULL(ВТ_Приходы.СуммаПрихода, 0) КАК Ждём,
	|	ВТ_Продажи.Ссылка КАК СсылкаНаПродажу,
	|	ВТ_Счета.Ссылка КАК СсылкаНаСчёт,
	|	ДокументЗаказКлиента.СуммаПредлагаемойЦены КАК СуммаПредлагаемойЦены,
	|	ДокументЗаказКлиента.ДатаПоследнегоВзаимодействия КАК ДатаПоследнегоВзаимодействия,
	|	ДокументЗаказКлиента.Прослушано КАК Прослушано,
	|	ДокументЗаказКлиента.Закрыта КАК Закрыта,
	|	ДокументЗаказКлиента.АтоматическоеСоздание КАК АтоматическоеСоздание,
	|	ВТ_Звонки.Длительность КАК Длительность,
	|	ВТ_Звонки.Дата КАК КолвоЗвонков
	|ИЗ
	|	Документ.ЗаказКлиента КАК ДокументЗаказКлиента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приходы КАК ВТ_Приходы
	|		ПО ДокументЗаказКлиента.Ссылка = ВТ_Приходы.СделкаЗаказКлиента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Счета КАК ВТ_Счета
	|		ПО ДокументЗаказКлиента.Ссылка = ВТ_Счета.Основание
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Продажи КАК ВТ_Продажи
	|		ПО ДокументЗаказКлиента.Ссылка = ВТ_Продажи.ЗаказКлиента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Звонки КАК ВТ_Звонки
	|		ПО ДокументЗаказКлиента.Ссылка = ВТ_Звонки.Заявка";
	
	Состояния   = Новый массив();
	Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Отказ);
	Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Продажа);
	Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.НетВНаличии);
	Состояния.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.ЖдёмДенег);
	
	
	ПервыйДеньНедели = НачалоНедели(ТекущаяДата()); 
	ПоследнийДеньНедели = КонецНедели(ТекущаяДата());
	
	Если стр = 0 Тогда
		
		Текст = Текст + Символы.ПС + "ГДЕ" + Символы.ПС + "(ДокументЗаказКлиента.ДатаСвязи < &ДатаСвязи";
		Список.ТекстЗапроса = Текст;
		Текст = Текст + Символы.ПС + "И" + Символы.ПС + "Не ДокументЗаказКлиента.Состояние В (&Состояния)";
		Список.ТекстЗапроса = Текст;
		Текст = Текст + Символы.ПС + "И" + Символы.ПС + "ДокументЗаказКлиента.Ответственный = &Ответственный)";
		Список.ТекстЗапроса = Текст;
		Текст = Текст + Символы.ПС + "ИЛИ" + Символы.ПС + "(ДокументЗаказКлиента.Дата > &Дататекущая";
		Список.ТекстЗапроса = Текст;
		Текст = Текст + Символы.ПС + "И" + Символы.ПС + "ДокументЗаказКлиента.Ответственный = &Ответственный)";
		Список.ТекстЗапроса = Текст;
		
		
		Список.Параметры.УстановитьЗначениеПараметра("Дататекущая", НачалоДня(ТекущаяДата()));
		Список.Параметры.УстановитьЗначениеПараметра("ДатаСвязи", КонецДня(ТекущаяДата()));		
		Список.Параметры.УстановитьЗначениеПараметра("Состояния", Состояния);
		Список.Параметры.УстановитьЗначениеПараметра("Ответственный", Менеджер);
		
	Иначе	
		Если стр = 1 Тогда
			
			Текст = Текст + Символы.ПС + "ГДЕ" + Символы.ПС + "(ДокументЗаказКлиента.ДатаСвязи Между &ДатаСвязиНачало и &ДатаСвязиОкончание  ";
			Список.ТекстЗапроса = Текст;
			Текст = Текст + Символы.ПС + "И" + Символы.ПС + "Не ДокументЗаказКлиента.Состояние В (&Состояния)";
			Список.ТекстЗапроса = Текст;
			Текст = Текст + Символы.ПС + "И" + Символы.ПС + "ДокументЗаказКлиента.Ответственный = &Ответственный)";
			Список.ТекстЗапроса = Текст;
			Текст = Текст + Символы.ПС + "ИЛИ" + Символы.ПС + "(ДокументЗаказКлиента.Дата Между &ДататекущаяНачало и &ДататекущаяОкончание";
			Список.ТекстЗапроса = Текст;
			Текст = Текст + Символы.ПС + "И" + Символы.ПС + "ДокументЗаказКлиента.Ответственный = &Ответственный)";
			Список.ТекстЗапроса = Текст;
			
			Список.Параметры.УстановитьЗначениеПараметра("ДататекущаяНачало", ПервыйДеньНедели+(стр-1)*24*3600);
			Список.Параметры.УстановитьЗначениеПараметра("ДататекущаяОкончание", КонецДня(ПервыйДеньНедели+(стр-1)*24*3600));
			
			Список.Параметры.УстановитьЗначениеПараметра("ДатаСвязиНачало", ПервыйДеньНедели+(стр-1)*24*3600);
			Список.Параметры.УстановитьЗначениеПараметра("ДатаСвязиОкончание", КонецДня(ПервыйДеньНедели+(стр-1)*24*3600));
			
			Список.Параметры.УстановитьЗначениеПараметра("Состояния", Состояния);
			Список.Параметры.УстановитьЗначениеПараметра("Ответственный", Менеджер);	
		Иначе
			Текст = Текст + Символы.ПС + "ГДЕ" + Символы.ПС + "(ДокументЗаказКлиента.ДатаСвязи Между &ДатаСвязиНачало и &ДатаСвязиОкончание  ";
			Список.ТекстЗапроса = Текст;
			Текст = Текст + Символы.ПС + "И" + Символы.ПС + "Не ДокументЗаказКлиента.Состояние В (&Состояния)";
			Список.ТекстЗапроса = Текст;
			Текст = Текст + Символы.ПС + "И" + Символы.ПС + "ДокументЗаказКлиента.Ответственный = &Ответственный)";
			Список.ТекстЗапроса = Текст;
			Текст = Текст + Символы.ПС + "ИЛИ" + Символы.ПС + "(ДокументЗаказКлиента.Дата Между &ДататекущаяНачало и &ДататекущаяОкончание";
			Список.ТекстЗапроса = Текст;
			Текст = Текст + Символы.ПС + "И" + Символы.ПС + "ДокументЗаказКлиента.Ответственный = &Ответственный)";
			Список.ТекстЗапроса = Текст;

			
			Список.Параметры.УстановитьЗначениеПараметра("ДататекущаяНачало", ПервыйДеньНедели+(стр-1)*24*3600);
			Список.Параметры.УстановитьЗначениеПараметра("ДататекущаяОкончание", КонецДня(ПервыйДеньНедели+(стр-1)*24*3600));
			
			Список.Параметры.УстановитьЗначениеПараметра("ДатаСвязиНачало", ПервыйДеньНедели+(стр-1)*24*3600);
			Список.Параметры.УстановитьЗначениеПараметра("ДатаСвязиОкончание", КонецДня(ПервыйДеньНедели+(стр-1)*24*3600));
			
			Список.Параметры.УстановитьЗначениеПараметра("Состояния", Состояния);
			Список.Параметры.УстановитьЗначениеПараметра("Ответственный", Менеджер);	
		КонецЕсли; 
		
	КонецЕсли;
	
	Элементы.Список.Обновить();
КонецПроцедуры



