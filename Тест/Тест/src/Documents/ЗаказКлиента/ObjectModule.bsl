
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ПрограммныйИнтерфейс
	
	
	
	#КонецОбласти
	
	#Область ОбработчикиСобытий
	
	Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
		WTPanel = Справочники.СтатусыWT.НайтиПоНаименованию("Обращение");
		СтатусОбработки = Перечисления.СтатусыОбработкиЗаявок.ВОбработке;

		ТипЗаявки = Перечисления.ТипЗаявки.Продажа;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПродажаЗапчастей") Тогда
			
			//ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Док.Клиент,
			|	Док.Комментарий,
			|	Док.Проект,
			|	Док.Склад,
			|	Клиенты.Наименование КАК КлиентНаименование,
			|	Клиенты.Телефон КАК НомерТелефона
			|ИЗ
			|	Документ.ПродажаЗапчастей КАК Док
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Клиенты КАК Клиенты
			|		ПО Док.Клиент = Клиенты.Ссылка
			|ГДЕ
			|	Док.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	Товары.Товар КАК Номенклатура,
			|	Товары.Количество,
			|	Товары.Цена,
			|	Товары.Сумма
			|ИЗ
			|	Документ.ПродажаЗапчастей.Таблица КАК Товары
			|ГДЕ
			|	Товары.Ссылка = &Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			
			Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
			
			РезультатЗапроса = Запрос.ВыполнитьПакет();
			
			Шапка = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РезультатЗапроса[0].Выгрузить()[0]);
			
			ЗаполнениеДокументов.Заполнить(ЭтотОбъект, Шапка);
			Товары.Загрузить(РезультатЗапроса[1].Выгрузить());
			
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("строка") Тогда
			
			НомерТелефона = ДанныеЗаполнения;
			
		КонецЕсли;
		
		//ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
		
		Если Не ЗначениеЗаполнено(Состояние) Тогда
			Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Ожидание;
		КонецЕсли;
		
		ДатаИзмененияСостояния = Дата;
		ДатаСвязи              = ТекущаяДата()+25;
		
		Если Не Пользователи.РолиДоступны("ТекстовыйМенеджер") тогда
			Ответственный      = Пользователи.ТекущийПользователь();
		КонецЕсли;
		
		//Если Не ЗначениеЗаполнено(Склад) Тогда
		//	Склад = Справочники;
		//КонецЕсли;
		
		
	КонецПроцедуры
	
	Процедура ПриКопировании(ОбъектКопирования)
		Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
		Ответственный = Пользователи.ТекущийПользователь();
		
	КонецПроцедуры
	
	Процедура ОбработкаУдаленияПроведения(Отказ)
		ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
		Движения.Записать();
		
	КонецПроцедуры
	
	
	Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
		ДополнительныеСвойства.Вставить("ЭтоНовый",                    ЭтоНовый()); 
		ДополнительныеСвойства.Вставить("ДатаДокументаСдвинутаВперед", Ложь); 
		ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
		
		//	
		//	ПараметрыПроведения = Документы.ЗаказКлиента.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
		//	Если Отказ Тогда
		//		Возврат;
		//	КонецЕсли;
		
		
		// Формирование движений
		//	дт_Ценообразование.ОтразитьДвижения(ПараметрыПроведения, Движения, Отказ);
		
	ЭтапированиеЗаявки();	
	КонецПроцедуры
	
	
	Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
		Если ОбменДанными.Загрузка Тогда
			Возврат
		КонецЕсли;
		СуммаТоваров   = дт_ОбщегоНазначения.ИтоговаяСумма(ЭтотОбъект, "Товары", "Отменено");
		Если СуммаТоваров > 0 Тогда 
			СуммаДокумента = СуммаТоваров;
		КонецЕсли;
		
		
		///+ГомзМА 27.12.2022 (Задача 000002652 от 03.02.2023)
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗаказКлиента.Ссылка КАК Ссылка,
		|	ЗаказКлиента.Ответственный КАК Ответственный,
		|	ЗаказКлиента.Дата
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Клиент = &Клиент
		|	И (ЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Ожидание)
		|	ИЛИ ЗаказКлиента.Состояние = ЗНАЧЕНИЕ(Перечисление.дт_СостоянияЗаказовКлиента.Думает))
		|	И НЕ ЗаказКлиента.Клиент.Дилер
		|	И ЗаказКлиента.Ссылка <> &Ссылка";
		
		Запрос.УстановитьПараметр("Клиент", Клиент);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Ответственный", Ответственный);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ	ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("Руководитель")) Тогда 
			
			Если НЕ РезультатЗапроса.Пустой() Тогда
				РезультатЗапроса = РезультатЗапроса.Выбрать();
				Пока РезультатЗапроса.Следующий() Цикл
					
					Если (Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Ожидание ИЛИ
						Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Думает И РазрешитьИзменениеПрограммно = Ложь) И 
						Строка(РезультатЗапроса.Ответственный) <> ПользователиИнформационнойБазы.ТекущийПользователь().ПолноеИмя И 
						НЕ ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("Контролёр")) Тогда
							Отказ = Истина;
						ВызватьИсключение("Невозможно создать документ, существует открытая заявка! Дополните заявку, либо закройте её.");
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		///-ГомзМА 27.12.2022 (Задача 000002652 от 03.02.2023)
		
		///+ГомзМА 11.08.2023
		СуммаПредлагаемойЦены = Товары.Итог("ПредлагаемаяЦена");
		///-ГомзМА 11.08.2023
		
		
		///+ГомзМА 24.08.2023
		Если Состояние = Перечисления.дт_СостоянияЗаказовКлиента.ЖдёмДенег ИЛИ
			Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Продажа Тогда
			Целевая = Истина;
		КонецЕсли;
		///-ГомзМА 24.08.2023
		
	
	КонецПроцедуры
	
	Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		
		Если Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Продажа тогда
			ПроверяемыеРеквизиты.Добавить("Товары");
		КонецЕсли;
		
		Если Дата >= НачалоДня(Дата("20230310")) И (ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("ТекстовыйМенеджер")) И 
			НЕ (ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("РКК")) ИЛИ 
			ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("Контролёр")))) Тогда
			ПроверяемыеРеквизиты.Добавить("Канал");
		КонецЕсли;
		
	КонецПроцедуры
	
	#КонецОбласти  
	Процедура ЭтапированиеЗаявки() 
		НаборЗаписей = РегистрыСведений.ЭтапированиеЗаказа.СоздатьНаборЗаписей();  			
		НаборЗаписей.Отбор.Заявка.Установить(Ссылка);
		НаборЗаписей.Прочитать(); 
		
		Если НаборЗаписей.Количество() = 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Заявка = Ссылка;
			НоваяЗапись.ЗаявкаСформирована = Истина;	
		ИначеЕсли НаборЗаписей.Количество() = 1 Тогда
			
			НоваяЗапись = НаборЗаписей[0]; 		
			
		КонецЕсли; 
		
		Если ПроверкаПродаж(Ссылка) <> Неопределено тогда
			НоваяЗапись.Продажа = ПроверкаПродаж(Ссылка); 
			НоваяЗапись.ВыписанаПродажа = Истина 
		КонецЕсли;
		
		Если Состояние <> перечисления.дт_СостоянияЗаказовКлиента.Ожидание тогда
			НоваяЗапись.ЗаявкаВРаботе = Истина;
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	КонецПроцедуры  
	
	функция ПроверкаПродаж(Заявка)
	Запрос = Новый Запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	ПродажаЗапчастей.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	               |ГДЕ
	               |	ПродажаЗапчастей.ЗаказКлиента = &ЗаказКлиента
	               |	И ПродажаЗапчастей.ЗаказКлиента <> ЗНАЧЕНИЕ(Документ.заказКлиента.ПустаяСсылка)";
	Запрос.УстановитьПараметр("ЗаказКлиента",Заявка);
	Выборка = Запрос.Выполнить().Выбрать();
	Продажа =Неопределено;
	Если выборка.Количество() > 0 тогда
		Выборка.Следующий();
		Продажа = выборка.ссылка;	
	КонецЕсли;
	Возврат продажа;
КонецФункции

	
		
	
	#Область СлужебныеПроцедурыИФункции
	
	
	
	#КонецОбласти
	
#КонецЕсли