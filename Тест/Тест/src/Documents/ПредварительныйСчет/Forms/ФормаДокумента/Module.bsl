&НаКлиенте
Процедура Печатать(Команда)
	Если Объект.Организация <> возврПС() и КодОрганизации(Объект.Организация) = "000000001" Тогда
		ПечатьНовые();
	Иначе			
		ПечатьБУ();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция КодОрганизации(Организация)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Код");
	
КонецФункции // КодОрганизации()


&НаСервере
Функция возврПС()
	Возврат Справочники.Организация.ПустаяСсылка();
КонецФункции


&НаКлиенте
Процедура ПечатьНовые()
	ТабДокумент = ПечатьНовыеСервер();

	ТабДокумент.Показать();
КонецПроцедуры

&НаСервере
Функция ПечатьНовыеСервер()

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("ТоварнаяНакладная1");
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	номерТЧ = ОпределитьНомерОрганизация(Объект.Организация);
	Если объект.НомерПП > 0 Тогда
		номерТЧ = объект.НомерПП;
	Иначе
		объект.НомерПП = номерТЧ;
	КонецЕсли;
	
	ОбластьМакета.Параметры.ТекстЗаголовка = "Товарный чек № "+номерТЧ+" от "+Объект.Дата;
	// ++ obrv 02.03.18
	//ОбластьМакета.Параметры.Покупатель = Объект.Клиент.ФИО;
	СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Объект.Клиент, Объект.Дата);
	СведенияОПродавце = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Объект.Организация, Объект.Дата);
	ОбластьМакета.Параметры.Покупатель = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование");
	
	//ОбластьМакета.Параметры.организация = Объект.Организация.Наименование + ", ИНН " + Объект.Организация.ИНН;
	ОбластьМакета.Параметры.организация = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПродавце, "ПолноеНаименование,ИНН");
	// -- obrv 02.03.18
	обл = "";
	Если Объект.Клиент.Область.Пустая() <> Истина Тогда
		обл = Объект.Клиент.Область.Наименование + ", ";
	КонецЕсли;
	ОбластьМакета.Параметры.Адрес = Объект.Клиент.Страна2.Наименование + ", " + Объект.Клиент.Область.Наименование + ", " + Объект.Клиент.Город2.Наименование;
	ОбластьМакета.Параметры.Телефон = Объект.Клиент.Телефон;
	ТабДокумент.Вывести(ОбластьМакета); 
	ОбластьМакета = Макет.ПолучитьОбласть("заголовок2");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("шапка");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	
	НомерСтроки = 0;
	
	Итого = 0;
	Скидка = 0;
	Для Каждого СтрокаТабличнойЧасти Из Объект.Таблица Цикл

		НомерСтроки = НомерСтроки + 1;
		ОбластьСтроки.Параметры.н = НомерСтроки;
		ОбластьСтроки.Параметры.код = СтрокаТабличнойЧасти.Товар.Код; 
		ОбластьСтроки.Параметры.артикул = СтрокаТабличнойЧасти.Товар.Артикул;
		//ОбластьСтроки.Параметры.нпроизв = СтрокаТабличнойЧасти.Товар.НомерПроизводителя;
		ОбластьСтроки.Параметры.машина = СтрокаТабличнойЧасти.Машина.Код;
		Если Объект.АртикулВНазвании Тогда
		    ОбластьСтроки.Параметры.наименование = СтрокаТабличнойЧасти.Товар.Артикул + " " +СтрокаТабличнойЧасти.Товар.Наименование;
	    Иначе
		    ОбластьСтроки.Параметры.наименование = СтрокаТабличнойЧасти.Товар.Наименование;
		КонецЕсли;
		
		Скидка1 = 0;

		
		ОбластьСтроки.Параметры.цена = СтрокаТабличнойЧасти.Цена;
		ОбластьСтроки.Параметры.колво = СтрокаТабличнойЧасти.Количество;
		
		Итого = Итого + СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество;
		Если СтрокаТабличнойЧасти.Скидка <> Null И СтрокаТабличнойЧасти.Скидка > 0 Тогда
			Скидка = Скидка + СтрокаТабличнойЧасти.Скидка;
			Скидка1 = СтрокаТабличнойЧасти.Скидка;
		Иначе
			Скидка = Скидка + (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
			Скидка1 = (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
		КонецЕсли;
		ОбластьСтроки.Параметры.сумма = СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество - Скидка1;
		//ОбластьСтроки.Параметры.скидка = Скидка1; 
		
		ТабДокумент.Вывести(ОбластьСтроки);

	КонецЦикла;

	ОбластьМакета = Макет.ПолучитьОбласть("подвал");
	//ОбластьМакета.Параметры.СрокПроверки = "5 дней";
	//ОбластьМакета.Параметры.доставка = "" + Объект.Доставка;
	ОбластьМакета.Параметры.ИтогоСумма = "" + Итого + " р.";
	ФормСтрока = "Л = ru_RU; ДП = Истина";
	ОбластьМакета.Параметры.прописью = ЧислоПрописью(Итого - Скидка,ФормСтрока,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	
	//ОбластьМакета.Параметры.Скидка = "" + Скидка+ " р.";
	
	//ОбластьМакета.Параметры.Продавец = Объект.КтоПродал.ФИО;
	
	ТабДокумент.РазмерКолонтитулаСнизу=25;
	ТабДокумент.НижнийКолонтитул.ВертикальноеПоложение=ВертикальноеПоложение.Верх;
	ТабДокумент.НижнийКолонтитул.Шрифт=Новый Шрифт(Макет.Область(1,1).Шрифт,,14);
	ТабДокумент.НижнийКолонтитул.ТекстСправа = "№"+номерТЧ+объект.Организация.БукваВНакладной+" / №"+объект.Номер;
	ТабДокумент.НижнийКолонтитул.Выводить=Истина; 

	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;

КонецФункции // ПечатьСервер()

	
&НаКлиенте
Процедура ПечатьБУ()
	ТабДокумент = ПечатьБУСервер();

	ТабДокумент.Показать();
КонецПроцедуры

&НаСервере
Функция ПечатьБУСервер()

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("ТоварнаяНакладная");
	//Если Объект.Организация.Код = "000000001" Тогда
	//	 Макет       =   ПолучитьМакет("ТоварнаяНакладнаяИП");
	//КонецЕсли;
	 
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = "Счет № "+Объект.Номер+"Р";
	ОбластьМакета.Параметры.Дата = Объект.Дата;
	// ++ obrv 02.03.18
	//ОбластьМакета.Параметры.Покупатель = Объект.Клиент.ФИО;
	//ОбластьМакета.Параметры.инн =  Объект.Клиент.ИНН;
	//ОбластьМакета.Параметры.email =  Объект.Клиент.Email;
	СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Объект.Клиент, Объект.Дата);
	ОбластьМакета.Параметры.Покупатель = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование");
	ОбластьМакета.Параметры.инн =  СведенияОПокупателе.ИНН;
	ОбластьМакета.Параметры.email =  СведенияОПокупателе.Email;
	// -- obrv 02.03.18
	
	обл = "";
	Если Объект.Клиент.Область.Пустая() <> Истина Тогда
		обл = Объект.Клиент.Область.Наименование + ", ";
	КонецЕсли;
	ОбластьМакета.Параметры.Адрес = Объект.Клиент.Страна2.Наименование + ", " + Объект.Клиент.Область.Наименование + ", " + Объект.Клиент.Город2.Наименование;
	ОбластьМакета.Параметры.Телефон = Объект.Клиент.Телефон;
	ТабДокумент.Вывести(ОбластьМакета); 
	
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	
	НомерСтроки = 0;
	
	Итого = 0;
	Скидка = 0;
	Для Каждого СтрокаТабличнойЧасти Из Объект.Таблица Цикл

		НомерСтроки = НомерСтроки + 1;
		ОбластьСтроки.Параметры.н = НомерСтроки;
		ОбластьСтроки.Параметры.код = СтрокаТабличнойЧасти.Товар.Код; 
		ОбластьСтроки.Параметры.артикул = СтрокаТабличнойЧасти.Товар.Артикул;
		//ОбластьСтроки.Параметры.нпроизв = СтрокаТабличнойЧасти.Товар.НомерПроизводителя;
		ОбластьСтроки.Параметры.машина = СтрокаТабличнойЧасти.Машина.Код;
		Если Объект.АртикулВНазвании Тогда
		    ОбластьСтроки.Параметры.наименование = СтрокаТабличнойЧасти.Товар.Артикул + " " +СтрокаТабличнойЧасти.Товар.Наименование;
	    Иначе
		    ОбластьСтроки.Параметры.наименование = СтрокаТабличнойЧасти.Товар.Наименование;
		КонецЕсли;
		
		Скидка1 = 0;

		
		ОбластьСтроки.Параметры.цена = СтрокаТабличнойЧасти.Цена;
		ОбластьСтроки.Параметры.колво = СтрокаТабличнойЧасти.Количество;
		
		Итого = Итого + СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество;
		Если СтрокаТабличнойЧасти.Скидка <> Null И СтрокаТабличнойЧасти.Скидка > 0 Тогда
			Скидка = Скидка + СтрокаТабличнойЧасти.Скидка;
			Скидка1 = СтрокаТабличнойЧасти.Скидка;
		Иначе
			Скидка = Скидка + (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
			Скидка1 = (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
		КонецЕсли;
		ОбластьСтроки.Параметры.сумма = СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество - Скидка1;
		//ОбластьСтроки.Параметры.скидка = Скидка1; 
		
		ТабДокумент.Вывести(ОбластьСтроки);

	КонецЦикла;

	ОбластьМакета = Макет.ПолучитьОбласть("подвал");

	Если Объект.TipOplati.ВидРасчета.Пустая() Тогда
		ОбластьМакета.Параметры.видрасчета = "" + ВидРасходаНаличные();
	Иначе
		ОбластьМакета.Параметры.видрасчета = "" + Объект.TipOplati.ВидРасчета;
	КонецЕсли;
	
	//ОбластьМакета.Параметры.расход = "" + Объект.Расход + " р.";
	
	//ОбластьМакета.Параметры.Скидка = "" + Скидка+ " р.";
	Если ВидРасходаСндс() = Объект.TipOplati.ВидРасчета Тогда
		ндс = (Объект.ИтогоРекв * 0.18)/1.18;
		ОбластьМакета.Параметры.ИтогоСумма = "" + Формат((Объект.ИтогоРекв - ндс),"ЧЦ=10; ЧДЦ=2") + " р.";
		ОбластьМакета.Параметры.Парам1 = "НДС:"; 		
		ОбластьМакета.Параметры.Парам1Знач = "" + Формат(ндс,"ЧЦ=10; ЧДЦ=2") + " р." ;
		ОбластьМакета.Параметры.Парам2 = "Итого:";
    	ОбластьМакета.Параметры.Парам2Знач = "" + (Объект.ИтогоРекв)+ " р.";
	Иначе
		ОбластьМакета.Параметры.ИтогоСумма = "" + Итого + " р.";
		ОбластьМакета.Параметры.Парам1 = "Итого:";
    	ОбластьМакета.Параметры.Парам1Знач = "" + (Объект.ИтогоРекв)+ " р.";
	КонецЕсли;
	//Если Объект.Организация.Код = "000000001" Тогда
	//    ОбластьМакета.Параметры.Продавец = "";
	//Иначе
	    ОбластьМакета.Параметры.Продавец = Объект.КтоПродал.ФИО;
	//КонецЕсли;
		
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;

КонецФункции // ПечатьСервер()


&НаСервере
Функция ВидРасходаНаличные()
	Возврат Перечисления.ВидРасчета.Наличные;
КонецФункции

&НаСервере
Функция ВидРасходаСндс()
	Возврат Перечисления.ВидРасчета.БезналСНДС;
КонецФункции

&НаСервере
Функция ПолучитьМакет(название)
	Возврат  Документы.ПредварительныйСчет.ПолучитьМакет(название);
КонецФункции

&НаКлиенте
Процедура Добавить(Команда)
	Форма = ПолучитьФорму("Обработка.ВыборНоменклатуры.Форма.ФормаСписка1");
	Форма.ВладелецФормы = ЭтаФорма;       
	Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	// Вставить содержимое обработчика.
	Перем Команда;
	Перем деталь;
	Перем код;
    Перем машина;
	Перем цена;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		ВыбранноеЗначение.Свойство("Команда", Команда);
        Если Команда = "ПравильныйПоиск"   Тогда
           ВыбранноеЗначение.Свойство("Код", код);
		   ВыбранноеЗначение.Свойство("Цена", цена);
		   ДобавлениеЗапчасти(код, цена);
		   ПосчитатьИтоги();
	   КонецЕсли
   КонецЕсли     
КонецПроцедуры

&НаСервере
Процедура  ДобавлениеЗапчасти(код, цена)
	 Товар = Справочники.Номенклатура.НайтиПоКоду(код);
	 Строка = Объект.Таблица.Добавить();
	 Строка.Товар = Товар;
	 
	 Строка.Цена = цена;
	 Строка.Количество = 1;
	 //Строка.Стеллаж = деталь.Стеллаж;
КонецПроцедуры
 
&НаКлиенте
Процедура ПечатьСчетФактура(Команда)
	// Вставить содержимое обработчика.
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("СчетФактура1137");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Номер = "Счет-фактура № "+Объект.Номер+"Р от "+Формат(Объект.Дата,"ДФ=""дд ММММ гггг""");
	ОбластьМакета.Параметры.НомерИсправления = "Исправление № -- от --";
	ОбластьМакета.Параметры.ПредставлениеПоставщика = "Продавец: "+Объект.Организация.ПолноеНаименование+" ("+Объект.Организация.Наименование+")";
	ОбластьМакета.Параметры.АдресПоставщика = "Адрес: "+Объект.Организация.Адрес;
	ОбластьМакета.Параметры.ИННПоставщика = "ИНН/КПП продавца: "+Объект.Организация.ИНН;
	ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = "Грузоотправитель и его адрес: он же";
	ОбластьМакета.Параметры.ПредставлениеГрузополучателя = "Грузополучатель и его адрес: " + Объект.Клиент.ПолноеНаименование + ", " + Объект.Клиент.ЮридическийАдрес;
	ОбластьМакета.Параметры.ПоДокументу = "К платежно-расчетному документу № -- от --";
	ОбластьМакета.Параметры.ПредставлениеПокупателя = "Покупатель: " + Объект.Клиент.ПолноеНаименование;
	ОбластьМакета.Параметры.АдресПокупателя = "Адрес: " + Объект.Клиент.ЮридическийАдрес;
	ОбластьМакета.Параметры.ИННПокупателя = "ИНН/КПП покупателя: "+Объект.Клиент.ИНН+"/"+Объект.Клиент.КПП;
	ОбластьМакета.Параметры.Валюта = "Валюта: наименование, код Российский рубль, 643";
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	
	//===========================================================
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	НомерСтроки = 0;
	Итого = 0;
	Скидка = 0;
	ндс = 0;
	
	ДопНаценка = Объект.Организация.ПроцентПотери/100;

	//===========================================================

	Для Каждого СтрокаТабличнойЧасти Из Объект.Таблица Цикл

		НомерСтроки = НомерСтроки + 1;
		Если Объект.АртикулВНазвании Тогда
			ОбластьСтроки.Параметры.ТоварНаименование = СтрокаТабличнойЧасти.Товар.Наименование;
		Иначе
			ОбластьСтроки.Параметры.ТоварНаименование = СтрокаТабличнойЧасти.Товар.Наименование;
		КонецЕсли;
		
		ОбластьСтроки.Параметры.ЕдиницаИзмерения = "шт";
		ОбластьСтроки.Параметры.ЕдиницаИзмеренияКод = "796";
		ОбластьСтроки.Параметры.Акциз = "без акциза";

		ОбластьСтроки.Параметры.Количество=СтрокаТабличнойЧасти.Количество;
		Скидка1 = 0;
		
		//ОбластьСтроки.Параметры.цена = СтрокаТабличнойЧасти.Цена;
		//ОбластьСтроки.Параметры.колво = СтрокаТабличнойЧасти.Количество;
		
		//Итого = Итого + СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество;
		Если СтрокаТабличнойЧасти.Скидка <> Null И СтрокаТабличнойЧасти.Скидка > 0 Тогда
			Скидка = Скидка + СтрокаТабличнойЧасти.Скидка;
			Скидка1 = СтрокаТабличнойЧасти.Скидка;
		Иначе
			Скидка = Скидка + (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
			Скидка1 = (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
		КонецЕсли;
		всего1 = СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество - Скидка1;
		ИтогоБезнал2 = всего1; 
		Если Объект.ВычитатьИзСуммы <> Истина Тогда 
				всего1 = всего1/(1-ДопНаценка);
				ИтогоБезнал2 = Окр(всего1,-2);
		КонецЕсли;		
		Если всего1 > ИтогоБезнал2 Тогда
			всего = ИтогоБезнал2 + 100;
		Иначе
			всего = ИтогоБезнал2;
		КонецЕсли;


		Итого = Итого + всего;
		ОбластьСтроки.Параметры.Всего = всего;
		
		ОбластьСтроки.Параметры.СтавкаНДС = "18%";
		ОбластьСтроки.Параметры.Стоимость = всего/1.18;
		ндс = ндс + Окр((всего - всего/1.18),2);
		ОбластьСтроки.Параметры.СуммаНДС = всего - всего/1.18;
		ОбластьСтроки.Параметры.Цена = (всего/1.18)/СтрокаТабличнойЧасти.Количество;
		ОбластьСтроки.Параметры.ПредставлениеСтраны = "--";
		ОбластьСтроки.Параметры.ПредставлениеГТД = "--";
		ОбластьСтроки.Параметры.СтранаПроисхожденияКод = "--";
		//ОбластьСтроки.Параметры.скидка = Скидка1; 
		
		ТабДокумент.Вывести(ОбластьСтроки);

	КонецЦикла;
    ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.ИтогоВсего = Итого;
	ОбластьМакета.Параметры.ИтогоСуммаНДС = ндс;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = Объект.Организация.ФИО;
	ОбластьМакета.Параметры.ФИОРуководителя = Объект.Организация.ФИО;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.Показать();
КонецПроцедуры

&НаКлиенте
Процедура ТоварнаяНакладная(Команда)
	// Вставить содержимое обработчика.
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("ТОРГ12");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ПредставлениеОрганизации = Объект.Организация.Наименование + ", ИНН " + Объект.Организация.ИНН + ", свидетельство " + Объект.Организация.Свидетельство + ", " + Объект.Организация.Адрес + ", тел. " + Объект.Организация.Телефон + ", р/с " + Объект.Организация.НомерСчета + ", в банке " + Объект.Организация.БанкПолучателя + ", БИК " +  Объект.Организация.БИК + ", к/с " + Объект.Организация.СчетБанка;
	ОбластьМакета.Параметры.ПредставлениеГрузополучателя = Объект.Клиент.ПолноеНаименование + ", ИНН " + Объект.Клиент.ИНН +", "+ Объект.Клиент.ЮридическийАдрес + ", тел. "+Объект.Клиент.РеквизитТелефон;
	ОбластьМакета.Параметры.ПредставлениеПоставщика = Объект.Организация.Наименование + ", ИНН " + Объект.Организация.ИНН + ", свидетельство " + Объект.Организация.Свидетельство + ", " + Объект.Организация.Адрес + ", тел. " + Объект.Организация.Телефон + ", р/с " + Объект.Организация.НомерСчета + ", в банке " + Объект.Организация.БанкПолучателя + ", БИК " +  Объект.Организация.БИК + ", к/с " + Объект.Организация.СчетБанка;
	ОбластьМакета.Параметры.ПредставлениеПлательщика = Объект.Клиент.ПолноеНаименование + ", ИНН " + Объект.Клиент.ИНН +", "+ Объект.Клиент.ЮридическийАдрес + ", тел. "+Объект.Клиент.РеквизитТелефон;
	ОбластьМакета.Параметры.Основание = "Основной договор";
	ОбластьМакета.Параметры.НомерДокумента = Объект.Номер+"Р";
	ОбластьМакета.Параметры.ДатаДокумента = Объект.Дата;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	НомерСтроки = 0;
	Итого = 0;
	Скидка = 0;
	ндс = 0;
	
	СтрокНаСтранице = 20;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;
	
	ОбластьЗаголовка = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ОбластьЗаголовка.Параметры.НомерСтраницы = "Страница "+НомерСтраницы;
    ТабДокумент.Вывести(ОбластьЗаголовка);
	ПроверкаПечати = Новый Массив;
	ПроверкаПечати.Добавить(ОбластьЗаголовка);
	
	КоличествоСтрок = Объект.Таблица.Количество();
	
	Если КоличествоСтрок <= 2 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	ПереноситьПоследнюю = Ложь;
	
	// инициализация итогов по странице
	ИтогоМассаБруттоНаСтранице = 0;
	ИтогоМестНаСтранице        = 0;
	ИтогоКоличествоНаСтранице  = 0;
	ИтогоСуммаНаСтранице       = 0;
	ИтогоНДСНаСтранице         = 0;
	ИтогоСуммаСНДСНаСтранице   = 0;

	// инициализация итогов по документу
	ИтогоМассаБрутто = 0;
	ИтогоМест        = 0;
	ИтогоКоличество  = 0;
	ИтогоСуммаСНДС   = 0;
	ИтогоСумма       = 0;
	ИтогоНДС         = 0;
	Ном              = 0;
    ДопНаценка = Объект.Организация.ПроцентПотери/100;
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.Таблица Цикл

		НомерСтроки = НомерСтроки + 1;
		ОбластьСтроки.Параметры.Номер = ""+НомерСтроки; 
		Если Объект.АртикулВНазвании Тогда
			ОбластьСтроки.Параметры.ТоварНаименование = СтрокаТабличнойЧасти.Товар.Наименование;
		Иначе
			ОбластьСтроки.Параметры.ТоварНаименование = СтрокаТабличнойЧасти.Товар.Наименование;
		КонецЕсли;
		ОбластьСтроки.Параметры.ТоварКод = СтрокаТабличнойЧасти.Товар.Код; 
		ОбластьСтроки.Параметры.БазоваяЕдиницаНаименование = "шт";
		ОбластьСтроки.Параметры.БазоваяЕдиницаКодПоОКЕИ = ""+796;
		ОбластьСтроки.Параметры.Количество=СтрокаТабличнойЧасти.Количество;
		Скидка1 = 0;
		
		//ОбластьСтроки.Параметры.цена = СтрокаТабличнойЧасти.Цена;
		//ОбластьСтроки.Параметры.колво = СтрокаТабличнойЧасти.Количество;
		
		//Итого = Итого + СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество;
		Если СтрокаТабличнойЧасти.Скидка <> Null И СтрокаТабличнойЧасти.Скидка > 0 Тогда
			Скидка = Скидка + СтрокаТабличнойЧасти.Скидка;
			Скидка1 = СтрокаТабличнойЧасти.Скидка;
		Иначе
			Скидка = Скидка + (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
			Скидка1 = (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
		КонецЕсли;
		всего1 = СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество - Скидка1;
		ИтогоБезнал2 = всего1; 
		Если Объект.ВычитатьИзСуммы <> Истина Тогда 
				всего1 = всего1/(1-ДопНаценка);
				ИтогоБезнал2 = Окр(всего1,-2);
		КонецЕсли;		
		Если всего1 > ИтогоБезнал2 Тогда
			всего = ИтогоБезнал2 + 100;
		Иначе
			всего = ИтогоБезнал2;
		КонецЕсли;

		Итого = Итого + всего;
		ОбластьСтроки.Параметры.СуммаСНДС = всего;
		//ОбластьСтроки.Параметры.Акциз = "--";
		ОбластьСтроки.Параметры.СтавкаНДС = "18%";
		ОбластьСтроки.Параметры.СуммаБезНДС = всего/1.18;
		ндс = ндс + Окр((всего - всего/1.18),2);
		ОбластьСтроки.Параметры.СуммаНДС = всего - всего/1.18;
		ОбластьСтроки.Параметры.Цена = (всего - всего/1.18)/СтрокаТабличнойЧасти.Количество;
		//ОбластьСтроки.Параметры.ПредставлениеСтраны = "--";
		//ОбластьСтроки.Параметры.ПредставлениеГТД = "--"; 
		//ОбластьСтроки.Параметры.скидка = Скидка1; 
		
		ПроверкаПечати.Добавить(ОбластьСтроки);
		
		Если Ном  =  Объект.Таблица.Количество() Тогда
			    ПроверкаПечатиПодвала = Новый Массив;
				
				ПроверкаПечатиПодвала.Добавить(ОбластьМакета);
			    ПроверкаПечатиПодвала.Добавить(Макет.ПолучитьОбласть("ИтогоПоСтранице"));
				
			    ПроверкаПечатиПодвала.Добавить(Макет.ПолучитьОбласть("Всего"));
			    ПроверкаПечатиПодвала.Добавить(Макет.ПолучитьОбласть("Подвал"));
		        Если Не ТабДокумент.ПроверитьВывод(ПроверкаПечатиПодвала) Тогда
					ПереноситьПоследнюю = Истина;
				КонецЕсли;	
			КонецЕсли;
			
		Если (ТабДокумент.ПроверитьВывод(ПроверкаПечати)) и Не переноситьПоследнюю Тогда
			ТабДокумент.Вывести(ОбластьСтроки);
			ИтогоМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице;
			ИтогоМестНаСтранице        = ИтогоМестНаСтранице       ;
			ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице  + СтрокаТабличнойЧасти.Количество;
			ИтогоСуммаНаСтранице       = ИтогоСуммаНаСтранице       + всего/1.18;
			ИтогоНДСНаСтранице         = ИтогоНДСНаСтранице         + Окр((всего - всего/1.18),2);
			ИтогоСуммаСНДСНаСтранице   = ИтогоСуммаСНДСНаСтранице   + всего;
				
			// увеличим итоги по дукументу
			ИтогоМассаБрутто = ИтогоМассаБрутто;
			ИтогоМест        = ИтогоМест       ;
			ИтогоКоличество  = ИтогоКоличество  + СтрокаТабличнойЧасти.Количество;;
			ИтогоСумма       = ИтогоСумма       + всего/1.18;
			ИтогоНДС         = ИтогоНДС         + Окр((всего - всего/1.18),2);
			ИтогоСуммаСНДС   = ИтогоСуммаСНДС   + всего;
		Иначе		

			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");

			ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;

			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			ПроверкаПечати.Очистить();
			
			НомерСтраницы = НомерСтраницы + 1;
				
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
			ОбластьЗаголовка.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				
			ПроверкаПечати.Добавить(ОбластьЗаголовка);
			ТабДокумент.Вывести(ОбластьЗаголовка);
				
				
				// очистим итоги по странице
			ИтогоМассаБруттоНаСтранице = 0;
			ИтогоМестНаСтранице        = 0;
			ИтогоКоличествоНаСтранице  = 0;
			ИтогоСуммаНаСтранице       = 0;
			ИтогоНДСНаСтранице         = 0;
			ИтогоСуммаСНДСНаСтранице   = 0;


			ПроверкаПечати.Добавить(ОбластьСтроки);
			ТабДокумент.Вывести(ОбластьСтроки);
			ИтогоМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице;
			ИтогоМестНаСтранице        = ИтогоМестНаСтранице       ;
			ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице  + СтрокаТабличнойЧасти.Количество;
			ИтогоСуммаНаСтранице       = ИтогоСуммаНаСтранице       + всего/1.18;
			ИтогоНДСНаСтранице         = ИтогоНДСНаСтранице         + Окр((всего - всего/1.18),2);
			ИтогоСуммаСНДСНаСтранице   = ИтогоСуммаСНДСНаСтранице   + всего;

				// увеличим итоги по дукументу
			ИтогоМассаБрутто = ИтогоМассаБрутто;
			ИтогоМест        = ИтогоМест       ;
			ИтогоКоличество  = ИтогоКоличество  + СтрокаТабличнойЧасти.Количество;
			ИтогоСумма       = ИтогоСумма       + всего/1.18;
			ИтогоНДС         = ИтогоНДС         + Окр((всего - всего/1.18),2);
			ИтогоСуммаСНДС   = ИтогоСуммаСНДС   + всего;
				

				
			КонецЕсли;
	КонецЦикла;

	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице = ИтогоМассаБруттоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогМестПоСтранице        = ИтогоМестНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоПоСтранице  = ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице       = ИтогоСуммаНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогНДСПоСтранице         = ИтогоНДСНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице   = ИтогоСуммаСНДСНаСтранице;

	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогМассаБрутто = ИтогоМассаБрутто;
	ОбластьМакета.Параметры.ИтогМест        = ИтогоМест;
	ОбластьМакета.Параметры.ИтогКоличество  = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогСуммы       = ИтогоСумма;
	ОбластьМакета.Параметры.ИтогНДС         = ИтогоНДС;
	ОбластьМакета.Параметры.ИтогСуммыСНДС   = ИтогоСуммаСНДС;

	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");

	ОбластьМакета.Параметры.ФИОРуководителя       = Объект.Организация.ФИО;
	ОбластьМакета.Параметры.ФИОГлавБухгалтера     = Объект.Организация.ФИО;
	ОбластьМакета.Параметры.ДолжностьРуководителя = "Директор";

	Если ИтогоМест > 0 Тогда
		ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтогоМест, ,",,,,,,,,0");
	КонецЕсли;

	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.СуммаПрописью = ЧислоПрописью(ИтогоСуммаСНДС,,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	
	
	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;


	ТабДокумент.Показать();
КонецПроцедуры

&НаКлиенте
Процедура СчетНаОплату(Команда)
	// Вставить содержимое обработчика.
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("СчетЗаказ1");
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСчета");
	ОбластьМакета.Параметры.БанкПолучателяПредставление = Объект.Организация.БанкПолучателя;
	ОбластьМакета.Параметры.БИКБанкаПолучателя = Объект.Организация.БИК;
	ОбластьМакета.Параметры.СчетБанкаПолучателяПредставление = Объект.Организация.СчетБанка;
	ОбластьМакета.Параметры.ИННПолучателя = Объект.Организация.ИНН;
	ОбластьМакета.Параметры.КПППолучателя = Объект.Организация.КПП;
	ОбластьМакета.Параметры.СчетПолучателяПредставление = Объект.Организация.НомерСчета;
	ОбластьМакета.Параметры.ПредставлениеПолучателя = Объект.Организация.Наименование;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = "Счет на оплату № " + Объект.Номер+"Р от "+Формат(Объект.Дата,"ДФ=""дд ММММ гггг"""); 
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	поставшик = Объект.Организация.Наименование+ ", ИНН " + Объект.Организация.ИНН;  
	Если СтрДлина(Объект.Организация.КПП)>3 Тогда
		поставшик = поставшик + ", КПП " + Объект.Организация.КПП;
	КонецЕсли;
	ОбластьМакета.Параметры.ПредставлениеПоставщика = поставшик + ", " + Объект.Организация.Адрес + ", тел. " + Объект.Организация.Телефон;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	покупатель = Объект.Клиент.ПолноеНаименование + ", ИНН " + Объект.Клиент.ИНН;
	Если СтрДлина(Объект.Клиент.КПП)>3 Тогда
		покупатель = покупатель + ", КПП " + Объект.Клиент.КПП;
	КонецЕсли;
	ОбластьМакета.Параметры.ПредставлениеПокупателя = покупатель  +", "+ Объект.Клиент.ЮридическийАдрес + ", тел. "+Объект.Клиент.РеквизитТелефон;
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	
	НомерСтроки = 0;
	Итого = 0;
	Скидка = 0;
	ндс = 0;
	ДопНаценка = Объект.Организация.ПроцентПотери/100;
	Для Каждого СтрокаТабличнойЧасти Из Объект.Таблица Цикл

		НомерСтроки = НомерСтроки + 1;
		
		ОбластьСтроки.Параметры.НомерСтроки = ""+НомерСтроки;
		Если Объект.АртикулВНазвании Тогда
			ОбластьСтроки.Параметры.Товар = СтрокаТабличнойЧасти.Товар.Артикул + " " + СтрокаТабличнойЧасти.Товар.Наименование;
		Иначе
			ОбластьСтроки.Параметры.Товар = СтрокаТабличнойЧасти.Товар.Наименование;
		КонецЕсли;
		ОбластьСтроки.Параметры.ЕдиницаИзмерения = "шт";
		ОбластьСтроки.Параметры.Количество=""+СтрокаТабличнойЧасти.Количество;
		Скидка1 = 0;
		
		//ОбластьСтроки.Параметры.цена = СтрокаТабличнойЧасти.Цена;
		//ОбластьСтроки.Параметры.колво = СтрокаТабличнойЧасти.Количество;
		
		//Итого = Итого + СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество;
		Если СтрокаТабличнойЧасти.Скидка <> Null И СтрокаТабличнойЧасти.Скидка > 0 Тогда
			Скидка = Скидка + СтрокаТабличнойЧасти.Скидка;
			Скидка1 = СтрокаТабличнойЧасти.Скидка;
		Иначе
			Скидка = Скидка + (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
			Скидка1 = (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
		КонецЕсли;
		всего1 = СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество - Скидка1;
		ИтогоБезнал2 = всего1; 
		Если Объект.ВычитатьИзСуммы <> Истина Тогда 
				всего1 = всего1/(1-ДопНаценка);
				ИтогоБезнал2 = Окр(всего1,-2);
		КонецЕсли;		
		Если всего1 > ИтогоБезнал2 Тогда
			всего = ИтогоБезнал2 + 100;
		Иначе
			всего = ИтогоБезнал2;
		КонецЕсли;


		Итого = Итого + всего;
		ОбластьСтроки.Параметры.Сумма = всего;
		ндс = ндс + Окр((всего - всего/1.18),2);
		ОбластьСтроки.Параметры.Цена = всего/СтрокаТабличнойЧасти.Количество;
		//ОбластьСтроки.Параметры.скидка = Скидка1; 
		
		ТабДокумент.Вывести(ОбластьСтроки);

	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Всего = Итого; 
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
	ОбластьМакета.Параметры.ВсегоНДС = ндс;
	ОбластьМакета.Параметры.НДС = "В том числе НДС: ";
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоКОплате");
	ОбластьМакета.Параметры.ИтогоКОплате = Итого; 
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований "+Объект.Таблица.Количество() + ", на сумму "+Итого;
	ОбластьМакета.Параметры.СуммаПрописью = ЧислоПрописью(Итого,,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");                     
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчета");
	ОбластьМакета.Параметры.ФИОРуководителя = Объект.Организация.ФИО;
	ТабДокумент.Вывести(ОбластьМакета);
	  
	
	ТабДокумент.Показать();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	Сообщить("!!1");
КонецПроцедуры


&НаСервере
Процедура УстановитьЗначПоУм()
	Объект.СтранаПолучения = Справочники.Страна.НайтиПоКоду("000000001");
	Объект.ГородОтправки = Справочники.Город.НайтиПоКоду("000000002");
КонецПроцедуры

&НаСервере
Функция НайтиПользователя()
	// ++ obrv 16.01.18
	//Возврат Справочники.Пользователи.НайтиПоНаименованию(ПолноеИмяПользователя());
	Возврат ПользователиКлиентСервер.ТекущийПользователь();
	// -- obrv 16.01.18
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// Вставить содержимое обработчика.
	ПосчитатьИтоги();
	ОбновитьОстатокДенег();
	Доставка();
КонецПроцедуры

&НаСервере
Процедура Доставка()
	Если Объект.ЕстьДоставка = Истина Тогда
		Если Объект.Вес = 0 ИЛИ Объект.Объем = 0 ИЛИ Объект.КоличествоМест = 0 ИЛИ Объект.ГородОтправки = Справочники.Город.ПустаяСсылка() ИЛИ Объект.РегионПолучения = Справочники.Область.ПустаяСсылка() ИЛИ  Объект.ГородПолучения = Справочники.Город.ПустаяСсылка() ИЛИ Объект.СтоимостьДоставки = 0 ИЛИ Объект.ТранспортнаяКомпания = Справочники.ТранспротнаяКомпания.ПустаяСсылка() Тогда
			Объект.ДоставкаНеЗаполнена = Истина;
		Иначе
			Объект.ДоставкаНеЗаполнена = Ложь;
		КонецЕсли;
	Иначе
		Объект.ДоставкаНеЗаполнена = Ложь;
	КонецЕсли;
КонецПроцедуры

	

&НаКлиенте
Процедура ОплаченоПриИзменении(Элемент)
	Если ПолностьюОплачено() Тогда
		Элементы.УжеОплачено.Видимость = Ложь;
	Иначе
		Элементы.УжеОплачено.Видимость = Истина;
	КонецЕсли
КонецПроцедуры
	
Функция ПолностьюОплачено()
	Возврат Объект.Оплачено;
КонецФункции

&НаКлиенте
Процедура ПосчитатьИтого(Команда)
	// Вставить содержимое обработчика.
	ПосчитатьИтоги();
	ОбновитьОстатокДенег();
КонецПроцедуры

&НаСервере
Процедура ПосчитатьИтоги()
// регистр ИнформацияОПродажах Приход
	ИтогоОбщ = 0;
	СкидкаОбщ = 0;
    Объект.ИтогоБезнал = 0;
	Объект.ИтогоРекв = 0;
	ИтогоРекв = 0;
	ИтогоБезнал = 0;
	ИтогоБезнал1 = 0;
    ТекСкид = 0;
	Если Объект.Скидка > 0 Тогда
		ТекСкид = Объект.Скидка;
	КонецЕсли;
	Для Каждого ТекСтрокаТаблица Из Объект.Таблица Цикл
		Скидка = 0;
		//ИтогоОбщ = ИтогоОбщ + ТекСтрокаТаблица.Цена*ТекСтрокаТаблица.Количество;
		Если НЕ Объект.НачисляетсяНДС Тогда
			итог1 = ТекСтрокаТаблица.Цена*ТекСтрокаТаблица.Количество;
			ТекСтрокаТаблица.Сумма = итог1;
		Иначе
			Итог1 = ТекСтрокаТаблица.Сумма;
		КонецЕсли;
		
		Если ТекСтрокаТаблица.Скидка <> Null И ТекСтрокаТаблица.Скидка > 0 Тогда
			Скидка = ТекСтрокаТаблица.Скидка;
			СкидкаОбщ = СкидкаОбщ + ТекСтрокаТаблица.Скидка;
		Иначе
			Скидка = ТекСтрокаТаблица.Цена*(Объект.Клиент.Скидка/100);
			СкидкаОбщ = СкидкаОбщ + (ТекСтрокаТаблица.Цена*ТекСтрокаТаблица.Количество)*(Объект.Клиент.Скидка/100);
		КонецЕсли;
		
		Если Объект.ВычитатьИзСуммы Тогда
			ИтогоБезнал1 = итог1 - Скидка;
			ИтогоБезнал = ИтогоБезнал1;
			ИтогоРекв = ИтогоБезнал1;
			ИтогоРекв =  ИтогоБезнал1 * ((100-Объект.Организация.ПроцентПотери)/100);
		Иначе		
			ИтогоРекв = итог1 - Скидка;
			ИтогоБезнал1 = ИтогоРекв;
			ИтогоБезнал1 = ИтогоРекв/((100-Объект.Организация.ПроцентПотери)/100);
			ИтогоБезнал2 = Окр(ИтогоБезнал1,-2);
			Если ИтогоБезнал1 > ИтогоБезнал2 Тогда
				ИтогоБезнал = ИтогоБезнал2 + 100;
			Иначе
				ИтогоБезнал = ИтогоБезнал2;
			КонецЕсли;
		КонецЕсли;
			Объект.ИтогоБезнал = Объект.ИтогоБезнал + ИтогоБезнал;
			Объект.ИтогоРекв = Объект.ИтогоРекв + ИтогоРекв;
	КонецЦикла;
	Объект.ПотеряНаОбналичку = Объект.ИтогоБезнал - Объект.ИтогоРекв;
	Если Объект.ВозвратТовара = Истина Тогда			
		Объект.ИтогоРекв = Объект.ИтогоРекв + Объект.СуммаВозврат;
	КонецЕсли;
	Если ТекСкид > 0 Тогда
		ПолнаяЦена = Объект.ИтогоБезнал;
		Объект.ИтогоБезнал = Объект.ИтогоБезнал - Объект.ИтогоРекв*ТекСкид/100;
		Объект.ИтогоРекв = Объект.ИтогоБезнал;
	КонецЕсли;
	
	// ++ obrv 14.11.19
	Объект.ИтогоРекв = Объект.ИтогоРекв + Объект.Услуги.Итог("Сумма");
	// -- obrv 14.11.19
КонецПроцедуры

&НаКлиенте
Процедура НарядНаСборку(Команда)
	ТабДокумент = ПечатьСервер();
	ТабДокумент.Показать();
КонецПроцедуры

&НаСервере
Функция ПечатьСервер()

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("НарядНаСборку");
	ОбластьМакета = Макет.ПолучитьОбласть("шапка");
	ОбластьМакета.Параметры.заголовок = "Наряд на сборку №"+Объект.Номер+"Р";
	// ++ obrv 02.03.18
	//ОбластьМакета.Параметры.покупатель = Объект.Клиент.ФИО;
	СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Объект.Клиент, Объект.Дата);
	ОбластьМакета.Параметры.покупатель = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование");;
	// -- obrv 02.03.18
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьСтроки = Макет.ПолучитьОбласть("строка");
	НомерСтроки = 0;
	Для Каждого СтрокаТабличнойЧасти Из Объект.Таблица Цикл
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтроки.Параметры.н = НомерСтроки;
		ОбластьСтроки.Параметры.код = СтрокаТабличнойЧасти.Товар.Код; 
		ОбластьСтроки.Параметры.артикул = СтрокаТабличнойЧасти.Товар.Артикул;
		ОбластьСтроки.Параметры.название = СтрокаТабличнойЧасти.Товар.Наименование;
		ОбластьСтроки.Параметры.колво = СтрокаТабличнойЧасти.Количество;
		// ++ obrv 03.07.19
		//ОбластьСтроки.Параметры.место = СтрокаТабличнойЧасти.Товар.МестоНаСкладе2;
		ОбластьСтроки.Параметры.место = ?(
			ЗначениеЗаполнено(СтрокаТабличнойЧасти.Товар),
			ПолучитьМестоХранения(СтрокаТабличнойЧасти.Товар, Кэш, Объект.Дата),
			""
		); 
		// -- obrv 03.07.19
		ном1 = Найти(СтрокаТабличнойЧасти.машина.Наименование,"_");
		Если ном1 > 0 Тогда
			ОбластьСтроки.Параметры.машина = Лев(СтрокаТабличнойЧасти.машина.Наименование,ном1-1);
		Иначе
			ОбластьСтроки.Параметры.машина = Лев(СтрокаТабличнойЧасти.машина.Наименование,5);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтроки);

	КонецЦикла;
	ОбластьСтроки = Макет.ПолучитьОбласть("footer");
    ТабДокумент.Вывести(ОбластьСтроки);
	
	Возврат ТабДокумент;

КонецФункции // ПечатьСервер()


&НаКлиенте
Процедура ТаблицаКоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПосчитатьИтоги();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЦенаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПосчитатьИтоги();
КонецПроцедуры


&НаКлиенте
Процедура ВычитатьИзСуммыПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПосчитатьИтоги();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСуммаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчитатьЦену();
	ПосчитатьИтоги();
КонецПроцедуры

Функция ПересчитатьЦену()
	Для Каждого ТекСтрокаТаблица Из Объект.Таблица Цикл
		ТекСтрокаТаблица.Цена = ТекСтрокаТаблица.Сумма/ТекСтрокаТаблица.Количество
	КонецЦикла
КонецФункции

&НаКлиенте
Процедура ПоказыватьРекЦенуПриИзменении(Элемент)
	Если ПоказыватьРекЦену Тогда
		Элементы.ТаблицаТоварРекомендованаяЦена.Видимость = ИСТИНА;
	Иначе
		Элементы.ТаблицаТоварРекомендованаяЦена.Видимость = ЛОЖЬ;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВозвратПриИзменении(Элемент)
	Если ВозвратЗначение() = Истина Тогда
		Элементы.СуммаВозврат.Видимость = Истина;
	Иначе
		Элементы.СуммаВозврат.Видимость = Ложь;
	КонецЕсли
КонецПроцедуры

&НаСервере
Функция ВозвратЗначение()
	Возврат Объект.ВозвратТовара;
КонецФункции

&НаКлиенте
Процедура ТоварПоПоступлению(Команда)
	// Вставить содержимое обработчика.
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("ТоварПоПоступлению");
	ОбластьМакета = Макет.ПолучитьОбласть("заголовок"); 
	ТабДокумент.Вывести(ОбластьМакета);

	маш =  Макет.ПолучитьОбласть("поступление");
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	сум = Макет.ПолучитьОбласть("сумма");
	общ = Макет.ПолучитьОбласть("общ");
	НомерСтроки = 0;
	
	Итого = 0;
	Скидка = 0;
	машины = Новый Массив;
	Для Каждого СтрокаТабличнойЧасти Из Объект.Таблица Цикл
		рез = машины.Найти(СтрокаТабличнойЧасти.Машина);
		Если рез = неопределено Тогда
			машины.Добавить(СтрокаТабличнойЧасти.Машина);
		КонецЕсли;
	КонецЦикла;
	Для Каждого машина Из машины Цикл
        маш.Параметры.имяПоступление = машина.Наименование;
		ТабДокумент.Вывести(маш);
		НомерСтроки = 0;
		итогоМаш = 0;
		скидкаМаш = 0;
		Для Каждого СтрокаТабличнойЧасти Из Объект.Таблица Цикл
			Если машина = СтрокаТабличнойЧасти.Машина Тогда
				НомерСтроки = НомерСтроки + 1;
				ОбластьСтроки.Параметры.н = НомерСтроки;
				ОбластьСтроки.Параметры.код = СтрокаТабличнойЧасти.Товар.Код; 
				ОбластьСтроки.Параметры.артикул = СтрокаТабличнойЧасти.Товар.Артикул;
		//ОбластьСтроки.Параметры.нпроизв = СтрокаТабличнойЧасти.Товар.НомерПроизводителя;
				
				ОбластьСтроки.Параметры.наименование = СтрокаТабличнойЧасти.Товар.Наименование;
				Скидка1 = 0;
				Если(СтрДлина(СтрокаТабличнойЧасти.Комментарий)>2) Тогда
					ОбластьСтроки.Параметры.наименование = ОбластьСтроки.Параметры.наименование + ", " + СтрокаТабличнойЧасти.Комментарий;
				КонецЕсли;
				
				ОбластьСтроки.Параметры.цена = СтрокаТабличнойЧасти.Цена;
				ОбластьСтроки.Параметры.колво = СтрокаТабличнойЧасти.Количество;
				итогоМаш = итогоМаш + СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество;
				Итого = Итого + СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество;
				Если СтрокаТабличнойЧасти.Скидка <> Null И СтрокаТабличнойЧасти.Скидка > 0 Тогда
					Скидка = Скидка + СтрокаТабличнойЧасти.Скидка;
					скидкаМаш = скидкаМаш + СтрокаТабличнойЧасти.Скидка;
					Скидка1 = СтрокаТабличнойЧасти.Скидка;
				Иначе
					Скидка = Скидка + (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
					скидкаМаш = скидкаМаш + (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
					Скидка1 = (СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество)*(Объект.Клиент.Скидка/100);
				КонецЕсли;
				ОбластьСтроки.Параметры.сумма = СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество - Скидка1;
				//ОбластьСтроки.Параметры.скидка = Скидка1; 
				
				ТабДокумент.Вывести(ОбластьСтроки);
			КонецЕсли;
		КонецЦикла;
		сум.Параметры.сумма = итогоМаш - скидкаМаш;
		ТабДокумент.Вывести(сум);
	КонецЦикла;

	общ.Параметры.сумма = Итого - Скидка;
	ТабДокумент.Вывести(общ);

	

	ТабДокумент.Показать();

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	колво = 0;
	Для Каждого СтрокаТабличнойЧасти Из Объект.Таблица Цикл	
		колво = колво +  СтрокаТабличнойЧасти.Количество;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РегионПолученияПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЕстьДоставкаПриИзменении(Элемент)
	Если Объект.ЕстьДоставка = Истина Тогда
		ЭтаФорма.Элементы.Группа11.Видимость = Истина;
		ЭтаФорма.Элементы.Группа21.Видимость = Истина;
	Иначе
		ЭтаФорма.Элементы.Группа11.Видимость = Ложь;
		ЭтаФорма.Элементы.Группа21.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.Таблица.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	Если Объект.ЕстьДоставка <> Истина И Объект.Самовывоз <> Истина Тогда
		Сообщение = Новый СообщениеПользователю();
    	Сообщение.Текст = "Не указан способ доставки на вкладке Доставка!";
    	Сообщение.Поле = "ЕстьДоставка";
    	Сообщение.Сообщить();
 		Отказ = Истина;
	КонецЕсли;    
	Если Объект.ЕстьДоставка = Истина И Объект.СтатусДоставки.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю();
    	Сообщение.Текст = "Необходимо указать статус доставки";
    	Сообщение.Поле = "СтатусДоставки";
    	Сообщение.Сообщить();
 		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГород(Команда)
	// Вставить содержимое обработчика.
	Форма = ПолучитьФорму("Справочник.Город.ФормаОбъекта");
	Форма.ВладелецФормы = ЭтаФорма;       
	Форма.Открыть();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// ++ obrv 07.11.18
	//Для Каждого стр Из Объект.Таблица Цикл
	//	Если стр.Товар.ЭтоНоваяЗапчасть = Истина И Объект.Новые = Ложь Тогда
	//		Сообщить("Нельзя добалять новые запчасти в накладные для БУ. Товар: "+стр.Товар.Наименование);
	//		Отказ = Истина;
	//		возврат;
	//	КонецЕсли;
	//	Если стр.Товар.ЭтоНоваяЗапчасть = Ложь И Объект.Новые = Истина Тогда
	//		Сообщить("Нельзя добалять БУ запчасти в накладные для новых. Товар: "+стр.Товар.Наименование);
	//		Отказ = Истина;
	//		возврат;
	//	КонецЕсли;
	//КонецЦикла;	
	// -- obrv 07.11.18
КонецПроцедуры

&НаКлиенте
Процедура НовыеПриИзменении(Элемент)
	Если Объект.Новые = ИСТИНА Тогда
		Если Найти(Объект.Комментарий,"Новые запчасти") = 0 Тогда
			Объект.Комментарий = Объект.Комментарий + " Новые запчасти"
		КонецЕсли;
	Иначе
		Объект.Комментарий = СтрЗаменить(Объект.Комментарий,"Новые запчасти","");
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура ЗаменаКомментарий()
	Если Объект.Новые = ИСТИНА Тогда
		Если Найти(Объект.Комментарий,"Новые запчасти") = 0 Тогда
			Объект.Комментарий = Объект.Комментарий + " Новые запчасти"
		КонецЕсли;
	Иначе
		Рез = СтрЗаменить(Объект.Комментарий,"Новые запчасти","");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСайт(Команда)
	ОбщДействия.ПоискКодаНаСтаромСайте(ПолучитьКодТовара(ЭтаФорма.Элементы.Таблица.ТекущиеДанные.Товар));
	//// Вставить содержимое обработчика.
	//ссылка = "http://www.truckdonor.ru/catalogs/search?search="+ЭтаФорма.Элементы.Таблица.ТекущиеДанные.Товар.Код;
	//ЗапуститьПриложение(ссылка);
КонецПроцедуры

&НаСервере
Функция ПолучитьКодТовара(Ссылка)

	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Код");	

КонецФункции // ПолучитьКодТовара()


&НаСервере
Функция ОпределитьНомер()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПродажаЗапчастей.Номер КАК Номер
	               |ИЗ
	               |	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	               |ГДЕ
	               |	ПродажаЗапчастей.Новые = ИСТИНА
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номер";
    рез = Запрос.Выполнить().Выгрузить();
	ном=1;
	Для Каждого стр Из рез Цикл
		Если стр.Номер = Объект.Номер Тогда
			возврат ном;
		КонецЕсли;
		ном=ном+1
	КонецЦикла;
	возврат ном;
КонецФункции

&НаСервере
Функция ОпределитьНомерОрганизация(организация)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПродажаЗапчастей.Номер КАК Номер
	               |ИЗ
	               |	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	               |ГДЕ
	               |	ПродажаЗапчастей.Организация = &организация
	               |УПОРЯДОЧИТЬ ПО
	               |	Номер";
	запрос.УстановитьПараметр("организация",организация);
    рез = Запрос.Выполнить().Выгрузить();
	ном=1;
	Для Каждого стр Из рез Цикл
		Если стр.Номер = Объект.Номер Тогда
			возврат ном;
		КонецЕсли;
		ном=ном+1
	КонецЦикла;
	возврат ном;
КонецФункции


&НаКлиенте
Процедура СкидкаПриИзменении(Элемент)
	Если Объект.Скидка > 25 Тогда
		Сообщить("Слишком большое значение. Изменено на 25");
		Объект.Скидка = 25 ;
	КонецЕсли;
	ПосчитатьИтоги();
КонецПроцедуры

&НаКлиенте
Процедура ПроцентПриИзменении(Элемент)
	Если Процент = Истина Тогда
		Элементы.Группа17.Видимость = Истина;
		Элементы.ПолнаяЦена.Видимость = Истина;
	Иначе
		Элементы.Группа17.Видимость = Ложь;
		Элементы.ПолнаяЦена.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НарядДоставка(Команда)
	
	ТабДокумент = НарядДоставкаСервер();
	
	ТабДокумент.Показать();
КонецПроцедуры

&НаСервере
Функция НарядДоставкаСервер()

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("НарядДоставка");
	ОбластьМакета = Макет.ПолучитьОбласть("шапка");
	ОбластьМакета.Параметры.заголовок = "Наряд на доставку №"+Объект.Номер+"Р";
    ОбластьМакета.Параметры.тк = Объект.ТранспортнаяКомпания.Наименование;
	ОбластьМакета.Параметры.куда = ""+Объект.ГородПолучения+"/"+Объект.РегионПолучения+"/"+Объект.СтранаПолучения+"
    |"+Объект.КоммДост;
	получатель = "";
	частный = ложь;
	Если Объект.доставкаКлиент = Истина Тогда
		телефон = Объект.Телефон;
		фио = Объект.НаименованиеИлиФИО;  		
		Если Объект.частный = Истина Тогда 			
			паспорт = Объект.Паспорт+"
			|"+Объект.Прописка;
			частный = истина;
		Иначе
			инн = Объект.ИНН;
			частный = ложь;
		КонецЕсли;
	Иначе
		Если Объект.Клиент.ЧастноеЛицо = Ложь Тогда
			фио = Объект.Клиент.ПолноеНаименование;
			инн = Объект.Клиент.ИНН;
			частный = ложь;
			Если СтрДлина(Объект.Клиент.РеквизитТелефон)>3 Тогда
			    телефон = Объект.Клиент.РеквизитТелефон;
			Иначе
				телефон = Объект.Клиент.Телефон;
			КонецЕсли;
		Иначе
			фио = Объект.Клиент.ФИОдост;
			частный = истина;
			паспорт = Объект.Клиент.Паспорт+"
			|"+Объект.Клиент.Прописка;
			Если СтрДлина(Объект.Клиент.ТелефониДост)>3 Тогда
			    телефон = Объект.Клиент.ТелефониДост;
			Иначе
				телефон = Объект.Клиент.Телефон;
			КонецЕсли;
		КонецЕсли
	КонецЕсли;	
	Если частный = Ложь Тогда
		ОбластьМакета.Параметры.п1 = "Название Компании:";
		ОбластьМакета.Параметры.зп1 = фио;
		ОбластьМакета.Параметры.п2 = "ИНН:";
		ОбластьМакета.Параметры.зп2 = инн;
		ОбластьМакета.Параметры.п3 = "Телефон:";
		ОбластьМакета.Параметры.зп3 = телефон;		 
	Иначе
		ОбластьМакета.Параметры.п1 = "ФИО:";
		ОбластьМакета.Параметры.зп1 = фио;
		ОбластьМакета.Параметры.п2 = "Паспорт/Прописка:";
		ОбластьМакета.Параметры.зп2 = паспорт;
		ОбластьМакета.Параметры.п3 = "Телефон:";
		ОбластьМакета.Параметры.зп3 = телефон;
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьСтроки = Макет.ПолучитьОбласть("строка");
	НомерСтроки = 0;
	Для Каждого СтрокаТабличнойЧасти Из Объект.Таблица Цикл
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтроки.Параметры.н = НомерСтроки;
		ОбластьСтроки.Параметры.код = СтрокаТабличнойЧасти.Товар.Код; 
		ОбластьСтроки.Параметры.артикул = СтрокаТабличнойЧасти.Товар.Артикул;
		ОбластьСтроки.Параметры.название = СтрокаТабличнойЧасти.Товар.Наименование;
		ОбластьСтроки.Параметры.колво = СтрокаТабличнойЧасти.Количество;		
		ТабДокумент.Вывести(ОбластьСтроки);

	КонецЦикла;
	
	
	Возврат ТабДокумент;

КонецФункции // ПечатьСервер()


&НаКлиенте
Процедура доставкаКлиентПриИзменении(Элемент)
	Если Объект.доставкаКлиент = Истина Тогда
		Элементы.Группа20.Видимость = Истина;
		Если Объект.частный = Истина Тогда
			Элементы.Паспорт.Видимость = Истина;
			Элементы.Прописка.Видимость = Истина;
			Элементы.ИНН.Видимость = Ложь;
			Элементы.НаименованиеИлиФИО.Заголовок = "ФИО";
		Иначе
			Элементы.Паспорт.Видимость = Ложь;
			Элементы.Прописка.Видимость = Ложь;
			Элементы.ИНН.Видимость = Истина;
			Элементы.НаименованиеИлиФИО.Заголовок = "Наименование";
		КонецЕсли;
	Иначе
		Элементы.Группа20.Видимость = Ложь;
	КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура частныйПриИзменении(Элемент)
	Если Объект.доставкаКлиент = Истина Тогда
		Элементы.Группа20.Видимость = Истина;
		Если Объект.частный = Истина Тогда
			Элементы.Паспорт.Видимость = Истина;
			Элементы.Прописка.Видимость = Истина;
			Элементы.ИНН.Видимость = Ложь;
			Элементы.НаименованиеИлиФИО.Заголовок = "ФИО";
		Иначе
			Элементы.Паспорт.Видимость = Ложь;
			Элементы.Прописка.Видимость = Ложь;
			Элементы.ИНН.Видимость = Истина;
			Элементы.НаименованиеИлиФИО.Заголовок = "Наименование";
		КонецЕсли;
	Иначе
		Элементы.Группа20.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ОбновитьОстатокДенег()
КонецПроцедуры


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды


	
	
	НомерНакладной=ОпределитьНомер();
	Расходы.Параметры.УстановитьЗначениеПараметра("Откуда",Объект.Ссылка);
	ВыводДенег.Параметры.УстановитьЗначениеПараметра("Документ",Объект.Ссылка);
	Если НЕ Пользователи.ЭтоПолноправныйПользователь() Тогда //Не РольДоступна("Администратор") Тогда
		Элементы.Расходы.Видимость = Ложь;
		Элементы.ВыводДенег.Видимость = Ложь;
	КонецЕсли;
	
	ИспользоватьГрузоперевозки = ПолучитьФункциональнуюОпцию("дт_ИспользоватьГрузоперевозки");
	ИспользоватьАвтосервис = ПолучитьФункциональнуюОпцию("дт_ИспользоватьАвтосервис");
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьДобавленныеКолонки();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьРольПользователя()

	///+ГомзМА 21.03.2023
	ПользовательСодержитРоль = Ложь;
	Если (ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("дт_Зарплата")) 
	  ИЛИ ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("дт_ПолныеПрава")) 
	  ИЛИ ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("ПолныеПрава"))) Тогда
	  	ПользовательСодержитРоль = Истина;
	  КонецЕсли;
	  Возврат ПользовательСодержитРоль;
	///-ГомзМА 21.03.2023

КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	 ПользовательСодержитРоль = ПроверитьРольПользователя();
	
	Если Объект.Дата < '20220303' Тогда
		Если Не ЗначениеЗаполнено(объект.Основание) И НЕ ПользовательСодержитРоль Тогда
			СтандартнаяОбработка = Ложь;
			ПоказатьОповещениеПользователя("Счёт только на основании!");
			ЭтаФорма.Закрыть();
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.КтоПродал = НайтиПользователя();
	КонецЕсли;
	Если ПолностьюОплачено() Тогда
		Элементы.УжеОплачено.Видимость = Ложь;
	Иначе
		Элементы.УжеОплачено.Видимость = Истина;
	КонецЕсли;
	Если ПоказыватьРекЦену Тогда
		Элементы.ТаблицаТоварРекомендованаяЦена.Видимость = ИСТИНА;
	Иначе
		Элементы.ТаблицаТоварРекомендованаяЦена.Видимость = ЛОЖЬ;
	КонецЕсли;
	
	Если ВозвратЗначение() = Истина Тогда
		Элементы.СуммаВозврат.Видимость = Истина;
	Иначе
		Элементы.СуммаВозврат.Видимость = Ложь;
	КонецЕсли;
	
    ПосчитатьИтоги();
	
	колво = 0;
	Для Каждого СтрокаТабличнойЧасти Из Объект.Таблица Цикл	
		колво = колво +  СтрокаТабличнойЧасти.Количество;
	КонецЦикла;
	Если Объект.ЕстьДоставка = Истина Тогда
		ЭтаФорма.Элементы.Группа11.Видимость = Истина;
		ЭтаФорма.Элементы.Группа21.Видимость = Истина;
	Иначе
		ЭтаФорма.Элементы.Группа11.Видимость = Ложь;
		ЭтаФорма.Элементы.Группа21.Видимость = Ложь;
	КонецЕсли;
	Если Объект.Скидка > 0 Тогда
		Элементы.Группа17.Видимость = Истина;
		Процент = Истина;
		Элементы.ПолнаяЦена.Видимость = Истина;
		ПосчитатьИтоги();
	КонецЕсли;
	Если  НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		УстановитьЗначПоУм();
	КонецЕсли;
	
	Если Объект.доставкаКлиент = Истина Тогда
		Элементы.Группа20.Видимость = Истина;
		Если Объект.частный = Истина Тогда
			Элементы.Паспорт.Видимость = Истина;
			Элементы.Прописка.Видимость = Истина;
			Элементы.ИНН.Видимость = Ложь;
			Элементы.НаименованиеИлиФИО.Заголовок = "ФИО";
		Иначе
			Элементы.Паспорт.Видимость = Ложь;
			Элементы.Прописка.Видимость = Ложь;
			Элементы.ИНН.Видимость = Истина;
			Элементы.НаименованиеИлиФИО.Заголовок = "Наименование";
		КонецЕсли;
	Иначе
		Элементы.Группа20.Видимость = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)

    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура TipOplatiПриИзменении(Элемент)

    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Объект.Номер = "";
	
	///+ГомзМА 09.08.2023
	ПроверкаРолиИОрганизации();
	///-ГомзМА 09.08.2023
	
КонецПроцедуры


&НаКлиенте
Процедура БезДоговораПриИзменении(Элемент)
	Если Объект.БезДоговора Тогда
		Объект.ДоговорКонтрагента = Неопределено;
	КонецЕсли;
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ДатаПриИзмененииСервер();
	КонецЕсли;	
КонецПроцедуры


&НаСервере
Процедура ДатаПриИзмененииСервер()

	Если дт_Нумерация.ГодИзменен(Объект.Ссылка, Объект.Дата) Тогда
		Объект.Номер = "";
	КонецЕсли;

КонецПроцедуры // ДатаПриИзмененииСервер()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Таблица

&НаКлиенте
Процедура ТаблицаТоварПриИзменении(Элемент)
	
	ТекДанные = Элементы.Таблица.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекДанные.Товар) Тогда
		ТекДанные.МестоХранения = ПолучитьМестоХранения(ТекДанные.Товар, Кэш, Объект.Дата);
	Иначе
		ТекДанные.МестоХранения = Неопределено;
	КонецЕсли;
		
КонецПроцедуры

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьМестоХранения(Номенклатура, Кэш, Дата)

	Результат = Неопределено;
	СтрокиТаблицы = Кэш.НайтиСтроки(Новый Структура("Номенклатура", Номенклатура));
	
	Если СтрокиТаблицы.Количество() <> 0 Тогда
		Результат = СтрокиТаблицы[0].МестоХранения;
	Иначе
		Результат = ПолучитьМестоХраненияСервер(Номенклатура, Дата);
		СтрокаТаблицы = Кэш.Добавить();
		СтрокаТаблицы.Номенклатура = Номенклатура;
		СтрокаТаблицы.МестоХранения = Результат;
	КонецЕсли;
	
	Возврат Результат;
	

КонецФункции // ПолучитьМестоХраненияСервер()

&НаСервереБезКонтекста
Функция ПолучитьМестоХраненияСервер(Номенклатура, Дата)

	Результат = дт_АдресноеХранение.ПолучитьМестоХранения(
		Новый Структура("Дата,Склад,Номенклатура", 
			Дата, 
			дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьОсновнойСклад(),
			Номенклатура
		)
	);
	
	Возврат Результат;

КонецФункции // ПолучитьМестоХранения()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Услуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	ОбработкаИзмененияСтроки("Услуги");
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	ОбработкаИзмененияСтроки("Услуги");
КонецПроцедуры

&НаКлиенте
Процедура УслугиСуммаПриИзменении(Элемент)
	ОбработкаИзмененияСтроки("Услуги", "Сумма");
КонецПроцедуры

	
#КонецОбласти


#Область ОбработчикиКомандФормы
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды



#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура УстановитьВидимостьДоступность()

	Элементы.ДоговорКонтрагента.Видимость = НЕ Объект.БезДоговора;
	
КонецПроцедуры // УстановитьВидимостьДоступность()


&НаСервере
Процедура ЗаполнитьДобавленныеКолонки()

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Источник.Товар КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_Источник
		|ИЗ
		|	&Источник КАК Источник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МестаХранения.Номенклатура КАК Номенклатура,
		|	МестаХранения.МестоХранения КАК МестоХранения
		|ИЗ
		|	РегистрСведений.дт_МестаХраненияНоменклатуры.СрезПоследних(
		|			,
		|			Склад = &Склад
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТ_Источник.Номенклатура
		|					ИЗ
		|						ВТ_Источник)) КАК МестаХранения";
	
	Запрос.УстановитьПараметр("Источник", Объект.Таблица.Выгрузить());
	Запрос.УстановитьПараметр("Склад", дт_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьОсновнойСклад());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Кэш.Загрузить(РезультатЗапроса.Выгрузить());
	
	////Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	////	Кэш.Вставить(ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.МестоХранения);
	////КонецЦикла;
	

	Для каждого СтрокаТаблицы Из Объект.Таблица Цикл
	
		СтрокаТаблицы.МестоХранения = ПолучитьМестоХранения(СтрокаТаблицы.Товар, Кэш, Объект.Дата);	
	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаИзмененияСтроки(ИмяТабличнойЧасти, Поле = Неопределено)
	
	ТекДанные = Элементы[ИмяТабличнойЧасти].ТекущиеДанные;
	дт_ПродажиКлиентСервер.ОбработкаИзмененияСтроки(Объект, ИмяТабличнойЧасти, ТекДанные, Поле);
	//ОбновитьСуммуДокумента(ЭтаФорма);

КонецПроцедуры // ОбработкаИзмененияСтроки()

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	Элементы.ГруппаУслуги.Видимость = Объект.Услуги.Количество() <> 0
		ИЛИ Форма.ИспользоватьГрузоперевозки ИЛИ Форма.ИспользоватьАвтосервис;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаРолиИОрганизации()

	///+ГомзМА 09.08.2023
	Если ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("МенеджерПоПродажам")) И
		(НЕ ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("ПолныеПрава")) ИЛИ
		 НЕ ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("дт_ПолныеПрава"))) Тогда
			Если Объект.Организация = Справочники.Организация.НайтиПоКоду("000000005") Тогда
				Объект.Организация = Справочники.Организация.ПустаяСсылка();
				Сообщить("Не использовать ООО ""Ворктрак"", выберите другую организацию!");
			КонецЕсли;
	КонецЕсли;
///-ГомзМА 09.08.2023
	
КонецПроцедуры


#КонецОбласти

