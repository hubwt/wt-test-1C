#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// ++ obrv 02.02.18
	Параметры.Свойство("НоСтроки", НоСтроки);
	// -- obrv 02.02.18
	
	// ++ obrv 27.02.18
	ЭтоПолноправныйПользователь = ДоступКУдалению();
	ИспользоватьРазборку = ПолучитьФункциональнуюОпцию("дт_ИспользоватьРазборку");
	ОбновитьПраваДоступа();
	
	УстановитьУсловноеОформление();
	// -- obrv 27.02.18
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьРасчетныеПоказатели(ЭтаФорма);
	ОбновитьДобавленныеКолонки();
	
	///+ГомзМА 05.04.2023
	Если ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("ПолныеПрава")) ИЛИ
		ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("дт_ПолныеПрава")) Тогда
		
		Элементы.ЗаявкаНаРасход.Видимость = Истина;
	Иначе
		Элементы.ЗаявкаНаРасход.Видимость = Ложь;
	КонецЕсли;	
	///+ГомзМА 05.04.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПоставщика()
	
	элементы.Поставшик.Видимость = (Объект.Перекуп ИЛИ Объект.Новые); 	
	
КонецПроцедуры

&НаСервере
Функция ДоступКУдалению()
	Если Пользователи.ТекущийПользователь() = Справочники.Пользователи.НайтиПоНаименованию("Волобуев Дмитрий Владимирович") Или Пользователи.ТекущийПользователь() = Справочники.Пользователи.НайтиПоНаименованию("Лазарев Антон Александрович") Или Пользователи.ЭтоПолноправныйПользователь() Тогда
		Возврат Истина;
	Иначе
		Возврат ложь;
	конецесли;
КонецФункции



&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьРасчетныеПоказатели(ЭтаФорма);
	ОбновитьДобавленныеКолонки();
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОстаткиИзменение");

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПроверкаПоставщика();
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	Всего = УстСтроку();
	Если Всего > 0 Тогда
		Элементы.Таблица.ТекущаяСтрока = Всего -1;
	КонецЕсли;
	Если НоСтроки > 0 Тогда
		Элементы.Таблица.ТекущаяСтрока = НоСтроки -1;
	КонецЕсли;
	
	
	
	// ++ obrv 04.09.18
	УстановитьВидимостьИДоступность(ЭтаФорма);
	// -- obrv 04.09.18
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// Вставить содержимое обработчика.
	передзаписьюс();

КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьДобавленныеКолонки();
	
	Если ПараметрыЗаписи.РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		Возврат
	КонецЕсли;
	
	Для Каждого стр Из Объект.Таблица Цикл
		//стр.наценка = 1;
		Если стр.Товар.Состояние = Перечисления.Состояние.Новый И (Объект.Новые = Ложь И Объект.Перекуп = Истина)Тогда
			Сообщить("Нельзя добалять новые запчасти в накладные для БУ. Товар: "+стр.Товар.Наименование);
			Отказ = Истина;
			возврат;
		КонецЕсли;
		Если стр.Товар.Состояние <> Перечисления.Состояние.Новый И (Объект.Новые = Истина И Объект.Перекуп = Ложь) Тогда
			Сообщить("Нельзя добалять БУ запчасти в накладные для новых. Товар: "+стр.Товар.Наименование);
			Отказ = Истина;
			возврат;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры




&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьДобавленныеКолонки();


КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПродажаЗапчастей") Тогда
		Результат = Null;
		
		Если ЗначениеЗаполнено(Элементы.Таблица.ТекущиеДанные.Товар)
			И ЭтоНовыйТовар(Элементы.Таблица.ТекущиеДанные.Товар) Тогда
			
			Результат = ДобавитьВПродажуСервНов(ВыбранноеЗначение,
			ЭтаФорма.Элементы.Таблица.ТекущиеДанные.Товар, ЭтаФорма.Элементы.Таблица.ТекущиеДанные.Колво,
			Объект.Машина,ЭтаФорма.Элементы.Таблица.ТекущиеДанные.Цена,
			Объект.Ссылка);
		Иначе
			Результат = ДобавитьВПродажуСерв(ВыбранноеЗначение,ЭтаФорма.Элементы.Таблица.ТекущиеДанные.Товар, 
			ЭтаФорма.Элементы.Таблица.ТекущиеДанные.Колво,Объект.Машина,
			ЭтаФорма.Элементы.Таблица.ТекущиеДанные.Цена);
		КонецЕсли;
		
		Если Результат <> Null Тогда
			ТоварСсылка = НайтиДокПродажа(Результат.Номер);
			Если Не ТоварСсылка.Пустая() Тогда
				ТоварСсылка.ПолучитьФорму().ОткрытьМодально();
			КонецЕсли;
		Иначе
			Сообщить("Такой номер не найден");
		КонецЕсли;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ЗаказНаряд") Тогда
		ДобавитьСтрокиВДокумент(ВыбранноеЗначение, ИсточникВыбора.ИмяФормы);
	Иначе 
		Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Коофициенты") Тогда
			Для каждого т из Элементы.Таблица.ВыделенныеСтроки Цикл
				з = Элементы.Таблица.ДанныеСтроки(т);
				з.Наценка = ВыбранноеЗначение;
			КонецЦикла;
		Иначе			
			Элементы.Таблица.ДобавитьСтроку();
			Элементы.Таблица.ТекущиеДанные.Товар  = ВыбранноеЗначение;
			ТаблицаТоварПриИзменении(Элементы.ТаблицаТовар);
			Элементы.Таблица.ТекущиеДанные.Ответственный = НайтиПользователя(); 
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииСервер();
	
	УстановитьВидимостьИДоступность(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииСервер()
	
	//ИспользуетсяСтараяСхемаУчета = Объект.Дата < дт_Склад.ДатаНачалаИспользованияЗаявокНаСборку();
	ОбновитьПраваДоступа();
	
	ОбновитьДобавленныеКолонки();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	СкладПриИзмененииСервер();
КонецПроцедуры

&НаСервере
Процедура СкладПриИзмененииСервер()
	
	ОбновитьДобавленныеКолонки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставшикПриИзменении(Элемент)
	УстановитьВидимостьИДоступность(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура МашинаПриИзменении(Элемент)
	ОбновитьРасчетныеПоказателиАвтомобиля(ЭтаФорма);
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Таблица

&НаКлиенте
Процедура ТаблицаПередУдалением(Элемент, Отказ)
	Если элементы.Таблица.ТекущиеДанные.партия <> ПустаяСсылка() Тогда	
		Отказ = Не ЭтоПолноправныйПользователь;
	Иначе
		Отказ = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Функция ПустаяСсылка()
	Возврат Справочники.ИндКод.ПустаяСсылка()
КонецФункции


&НаКлиенте
Процедура ТаблицаТоварПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Таблица.ТекущиеДанные;
	
	СвойстваСтроки = Новый Структура();
	СвойстваСтроки.Вставить("Дата", Объект.Дата);
	СвойстваСтроки.Вставить("Склад", Объект.Склад);
	СвойстваСтроки.Вставить("Номенклатура", ТекСтрока.Товар);
	
	ТаблицаТоварПриИзмененииСервер(СвойстваСтроки);
	
	ЗаполнитьЗначенияСвойств(ТекСтрока, СвойстваСтроки, "ГруппаМестХранения");
	
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаТоварПриИзмененииСервер(ДанныеЗаполнения)
	ДанныеЗаполнения.Вставить("ГруппаМестХранения", дт_АдресноеХранение.ПолучитьГруппуМестХранения(ДанныеЗаполнения));	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		Отказ = Истина;
		Сообщить(Объект.Таблица.Количество());
		строка = Объект.Таблица.Вставить(Объект.Таблица.Количество());
		строка.Товар = Элемент.ТекущиеДанные.Товар;
		строка.Цена = Элемент.ТекущиеДанные.Цена;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	// ++ obrv 27.02.18
	Если НоваяСтрока Тогда
		Если Копирование Тогда
			Элемент.ТекущиеДанные.ДатаДобавления = '00010101';
		Иначе
			Элемент.ТекущиеДанные.ДатаДобавления = ТекущаяДата();
		КонецЕсли;
	КонецЕсли;
	// -- obrv 27.02.18
	
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьКоличество(Команда)
	ОбновитьДобавленныеКолонки();
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды
//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

//@skip-warning
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


&НаСервереБезКонтекста
Функция ЭтоНовыйТовар(Номенклатура)
	
	Состояние = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "Состояние");
	Возврат Состояние = ПредопределенноеЗначение("Перечисление.Состояние.Новый");
	
КонецФункции // ПолучитьСостояниеТовара()

&НаКлиенте
Процедура Добавить(Команда)
	ФормаСписка = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора");
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	Если Не ФормаСписка.Открыта() Тогда
		ФормаСписка.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВПродажу(Команда)
	// Вставить содержимое обработчика.
	ФормаСписка = ПолучитьФорму("Документ.ПродажаЗапчастей.ФормаВыбора");
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	
	Если ЗначениеЗаполнено(Элементы.Таблица.ТекущиеДанные.Товар)
		И ЭтоНовыйТовар(Элементы.Таблица.ТекущиеДанные.Товар) Тогда
		
		ФормаСписка.НовыеЗП=Истина;
		
	Иначе
		ФормаСписка.НовыеЗП=Ложь;
	КонецЕсли;
	
	Если Не ФормаСписка.Открыта() Тогда
		ФормаСписка.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	RegExp = Новый COMОбъект("VBScript.RegExp");
	
	RegExp.IgnoreCase = Ложь; //Игнорировать регистр
	RegExp.Global = Истина; //Поиск всех вхождений шаблона
	RegExp.MultiLine = Истина; //Многострочный режим
	
	RegExp.Pattern = "[^a-zA-Zа-яА-Я_0-9 ]";
	стр1=RegExp.Replace( Поиск,"");  
	Номера = Новый Массив();
	НомВр = Новый Массив();
	Рез1 = РазбитьСтрокуНаМассивПодстрок(стр1," ");
	Для Каждого ном1 из Рез1 Цикл
		НомВр = НачатьПоиск2(ном1);
		для каждого ном2 из НомВр Цикл
			Номера.Добавить(ном2);
		КонецЦикла;
		Номера.Добавить(ном1);
	КонецЦикла;
	RegExp = Новый COMОбъект("VBScript.RegExp");
	МассивСсылок = Фильтр(стр1, Номера);
	Элементы.Таблица.ОтборСтрок= Новый ФиксированнаяСтруктура("Товар", МассивСсылок); 
КонецПроцедуры



&НаКлиенте
Процедура НапечататьВыбранное(Команда)
	
	ТабДокумент = ПечатьСервер();
	
	ТабДокумент.Показать();
	
КонецПроцедуры



&НаКлиенте
Процедура Наличие(Команда)
	// Вставить содержимое обработчика.
	Если ЭтаФорма.Элементы.Таблицаостаток.Видимость = Истина Тогда
		ЭтаФорма.Элементы.Таблицаостаток.Видимость = Ложь;
	Иначе
		Для Каждого стр Из Объект.Таблица Цикл
			стр.остаток = остаток1(стр.Товар,стр.Цена);
		КонецЦикла;
		ЭтаФорма.Элементы.Таблицаостаток.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьНаСайте(Команда)
	ОбщДействия.ПоискКодаНаСайте(ЭтаФорма.Элементы.Таблица.ТекущиеДанные.Товар.Код);
КонецПроцедуры

&НаКлиенте
Процедура CalculateSum(Команда)
	// Вставить содержимое обработчика.
	УстановитьОбщуюСумму();
	Сообщить(Объект.СуммаНакладной);
КонецПроцедуры

&НаКлиенте
Процедура Изменить3На4(Команда)
	// Вставить содержимое обработчика.
	Изм3На4();
КонецПроцедуры


&НаКлиенте
Процедура ИзменитьОценку(Команда)
	ФормаСписка = ПолучитьФорму("Справочник.Коофициенты.ФормаВыбора");
	ФормаСписка.ВладелецФормы = ЭтаФорма;
	Если Не ФормаСписка.Открыта() Тогда
		ФормаСписка.ОткрытьМодально();
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНаименованияПоСправочникуНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Товар КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Товары КАК Товары
	|ГДЕ
	|	Товары.Товар <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ СпрНоменклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА СпрНоменклатура.НаименованиеПолное
	|		ИНАЧЕ СпрНоменклатура.Наименование
	|	КОНЕЦ КАК Наименование
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ВТ_Товары.Номенклатура = СпрНоменклатура.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";	
	
	Запрос.УстановитьПараметр("Товары", Объект.Таблица.Выгрузить(, "НомерСтроки,Товар"));
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаТаблицы = Объект.Таблица[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		СтрокаТаблицы.НаименованиеПоставщика =  ВыборкаДетальныеЗаписи.Наименование;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаименованияПоСправочнику(Команда)
	ЗаполнитьНаименованияПоСправочникуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаименованияПоставщикаНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Товар КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Товары КАК Товары
	|ГДЕ
	|	Товары.Товар <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
	|	НоменклатураПоставщиков.Наименование КАК Наименование,
	|	НоменклатураПоставщиков.Период КАК Период
	|ПОМЕСТИТЬ ВТ_Наименования
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.дт_НоменклатураПоставщиков.СрезПоследних(
	|				&Дата,
	|				Контрагент = &Контрагент
	|					И Номенклатура В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ВТ_Товары.Номенклатура
	|						ИЗ
	|							ВТ_Товары)) КАК НоменклатураПоставщиков
	|		ПО ВТ_Товары.Номенклатура = НоменклатураПоставщиков.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Наименования.НомерСтроки КАК НомерСтроки,
	|	МАКСИМУМ(ВТ_Наименования.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_НаименованияПериоды
	|ИЗ
	|	ВТ_Наименования КАК ВТ_Наименования
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Наименования.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Наименования.НомерСтроки КАК НомерСтроки,
	|	МАКСИМУМ(ВТ_Наименования.Наименование) КАК Наименование
	|ИЗ
	|	ВТ_Наименования КАК ВТ_Наименования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НаименованияПериоды КАК ВТ_НаименованияПериоды
	|		ПО ВТ_Наименования.НомерСтроки = ВТ_НаименованияПериоды.НомерСтроки
	|			И ВТ_Наименования.Период = ВТ_НаименованияПериоды.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Наименования.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";	
	
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагенты);
	Запрос.УстановитьПараметр("Товары", Объект.Таблица.Выгрузить(, "НомерСтроки,Товар"));
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаТаблицы = Объект.Таблица[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		СтрокаТаблицы.НаименованиеПоставщика =  ВыборкаДетальныеЗаписи.Наименование;
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаименованияПоставщика(Команда)
	
	ИмяПоля = "Контрагенты";
	Если Не ЗначениеЗаполнено(Объект[ИмяПоля]) Тогда
		ТекстОшибки = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(,, ИмяПоля);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстОшибки,
		,
		ИмяПоля
		);
		
		Возврат
		
	КонецЕсли;
	
	ЗаполнитьНаименованияПоставщикаНаСервере();
	
КонецПроцедуры



&НаКлиенте
Процедура ДобавитьВЗаказНаряд(Команда)
	
	ОткрытьФорму("Документ.ЗаказНаряд.ФормаВыбора", , ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокиВДокумент(ДокументСсылка, ИмяФормыИсточник)
	
	ДанныеЗаполнения = Новый Массив();
	Отказ = Ложь;
	Для каждого ИдСтроки Из Элементы.Таблица.ВыделенныеСтроки Цикл
		
		СтрокаТаблицы = Объект.Таблица.НайтиПоИдентификатору(ИдСтроки);
		ПараметрыСтроки = Новый Структура();
		ПараметрыСтроки.Вставить("Номенклатура", СтрокаТаблицы.Товар);
		ПараметрыСтроки.Вставить("ПартияНаименование", СтрокаТаблицы.Код);
		ПараметрыСтроки.Вставить("Количество", СтрокаТаблицы.Колво);
		ПараметрыСтроки.Вставить("Цена", СтрокаТаблицы.Цена);
		ПараметрыСтроки.Вставить("Автомобиль", Объект.Машина);
		
		ДанныеЗаполнения.Добавить(ПараметрыСтроки);	
		
	КонецЦикла;
	
	ДобавитьСтрокиВДокументНаСервере(ДокументСсылка, ДанныеЗаполнения, Отказ);
	
	Если Не Отказ Тогда
		ОткрытьФорму(СтрЗаменить(ИмяФормыИсточник, "ФормаВыбора", "ФормаДокумента"), Новый Структура("Ключ", ДокументСсылка), ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокиВДокумент()

&НаСервере
Процедура ДобавитьСтрокиВДокументНаСервере(ДокументСсылка, ДанныеЗаполнения, Отказ = Ложь)
	
	
	ЭтоЗаказНаряд = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаказНаряд");
	Док = ДокументСсылка.ПолучитьОбъект();
	
	Для каждого ПараметрыСтроки Из ДанныеЗаполнения Цикл
		
		Партия = Справочники.ИндКод.ПолучитьПартиюПоКоду(ПараметрыСтроки.ПартияНаименование, ПараметрыСтроки.Номенклатура, Объект);
		
		ПараметрыСтроки.Вставить("Партия", Партия);
		
		Если ЭтоЗаказНаряд Тогда
			
			НоваяСтрока = Док.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыСтроки);
			дт_АвтосервисКлиентСервер.ОбработкаИзмененияСтроки(Док, "Товары", НоваяСтрока);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Док.Модифицированность() Тогда
		Попытка
			
			Док.Записать();
			
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон("Не удалось добавить в %1. %2",
			Док,
			ОписаниеОшибки()),
			,
			,
			,
			Отказ
			);
			
		КонецПопытки;
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПартии(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НЕ Записать() Тогда
			Возврат
		КонецЕсли;
	КонецЕслИ;
	
	ЗаполнитьПартииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПартииНаСервере(Отказ = Ложь)
	
	ДанныеЗаполнения = Новый Структура();
	ДанныеЗаполнения.Вставить("ДокументПоступления", Объект.Ссылка);
	ДанныеЗаполнения.Вставить("ДатаПоступления", Объект.Дата);
	
	Для каждого СтрокаТаблицы Из Объект.Таблица Цикл
		
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Партия) Тогда
			
			ДанныеЗаполнения.Вставить("Номенклатура", СтрокаТаблицы.Товар);
			ДанныеЗаполнения.Вставить("Автомобиль", СтрокаТаблицы.Автомобиль);
			СтрокаТаблицы.Партия = Справочники.ИндКод.СоздатьНовыйЭлемент(ДанныеЗаполнения, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьИДоступность(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	УчетПоСкладам = дт_ОбщегоНазначенияКлиентСервер.УчетПоСкладам(Объект.Дата);
	ИспользоватьРазборку = Форма.ИспользоватьРазборку;
	ЭтоНовыеЗапчасти = (Объект.Новые Или объект.Перекуп); //ЗначениеЗаполнено(Объект.Поставшик);
	ИспользуетсяСтараяСхемаУчета = Форма.ИспользуетсяСтараяСхемаУчета;
	
	// Шапка
	Элементы.ПолеНовые.Видимость = ИспользоватьРазборку;
	Элементы.Организация.Видимость = ЭтоНовыеЗапчасти;
	Элементы.ГруппаДляНовых.Видимость = ЭтоНовыеЗапчасти;
	Элементы.Название.Видимость= Не ЭтоНовыеЗапчасти;
	Элементы.ГруппаАвтомобиль.Видимость = ИспользуетсяСтараяСхемаУчета;
	Элементы.Склад.Видимость = УчетПоСкладам;
	Элементы.ДатаПоступления.Видимость = Не ЭтоНовыеЗапчасти;
	
	//Элементы.КнопкаУдалить.Доступность = Форма.РазрешеноУдалениеСтрок;
	Элементы.ТаблицаЗаполнитьПартии.Видимость = НЕ ИспользуетсяСтараяСхемаУчета;
	
	// Таблица
	Элементы.ТаблицаПроцентНаценки.Видимость = ЭтоНовыеЗапчасти;
	Элементы.ТаблицаЦенаПоступления.Видимость = ЭтоНовыеЗапчасти;
	Элементы.ТаблицаСуммаПоступления.Видимость = ЭтоНовыеЗапчасти;
	Элементы.ТаблицаТоварБренд.Видимость = ЭтоНовыеЗапчасти;
	Элементы.ТаблицаТоварНомерПроизводителя.Видимость = ЭтоНовыеЗапчасти;
	Элементы.ТаблицаЦена.Видимость = ЭтоНовыеЗапчасти;
	//Элементы.ТаблицаОтветственный.Видимость = ИспользуетсяСтараяСхемаУчета;
	Элементы.ТаблицаНаименованиеПоставщика.Видимость = ЭтоНовыеЗапчасти;
	Элементы.ТаблицаГруппаЗаполнитьНаименования.Видимость = ЭтоНовыеЗапчасти;
	Элементы.ТаблицаАвтомобиль.Видимость = (НЕ ИспользуетсяСтараяСхемаУчета) И НЕ ЭтоНовыеЗапчасти;
	Элементы.ТаблицаКод.Видимость = ИспользуетсяСтараяСхемаУчета;
	Элементы.ТаблицаПартия.Видимость = НЕ ИспользуетсяСтараяСхемаУчета;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаАвтомобильПриИзменении(Элемент)
	// При изменении автомобиля партию нужно создавать снова
	Элементы.Таблица.ТекущиеДанные.Партия = Неопределено;
	
КонецПроцедуры




&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Если НЕ(ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("Руководитель")) ИЛИ
		ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("дт_ПолныеПрава"))) Тогда
		// видимость даты создания
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТаблицаДатаДобавления");
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ЭтоПолноправныйПользователь",
		ВидСравненияКомпоновкиДанных.Равно,
		Ложь);
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДатуПоступленияАвтомобиля(Автомобиль) Экспорт
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Автомобиль, "Дата");	
КонецФункции


&НаСервере
Функция УстСтроку()
	Возврат Объект.Таблица.Количество(); 	  
КонецФункции

&НаСервере
Функция ПечатьСервер()
	
	Выбранное = Элементы.Таблица.ВыделенныеСтроки;
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет       =   ПолучитьМакет("Макет");
	Если Объект.Новые или Объект.Перекуп Тогда
		Макет       =   ПолучитьМакет("Макет1");
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("шапка");
	ОбластьМакета.Параметры.Заголовок = "Учет запчастей с машины" + Объект.Машина;
	ТабДокумент.Вывести(ОбластьМакета);
	
	строка = Макет.ПолучитьОбласть("строка");
	Для Каждого ряд Из Объект.Таблица Цикл
		Если Выбранное.Найти(ряд.НомерСтроки-1) <> Неопределено Тогда
			строка.Параметры.код = ряд.Товар.код;
			строка.Параметры.артикул = ряд.Товар.Артикул;
			строка.Параметры.нпроизв = ряд.Товар.НомерПроизводителя;
			строка.Параметры.бренд = ряд.Товар.Бренд;
			строка.Параметры.наименование = ряд.Товар.Наименование;
			строка.Параметры.колво = ряд.Колво;
			строка.Параметры.место = ряд.Товар.МестоНаСкладе2;
			
			
			Если НЕ(Объект.Новые или Объект.Перекуп) Тогда
				строка.Параметры.общ = ОбщКолВо(ряд.Товар);
				строка.Параметры.тек = ряд.место;
			КонецЕсли;
			ТабДокумент.Вывести(строка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьСервер()


&НаСервере
Функция ОбщКолВо(товар)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(РегистрНакопления1Остатки.КолвоОстаток) Как Поле1
	|ИЗ
	|	РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|ГДЕ
	|	РегистрНакопления1Остатки.Товар = &Товар";
	Запрос.УстановитьПараметр("Товар",товар);
	Рез = Запрос.Выполнить();
	Табл = Рез.Выгрузить();
	Возврат Табл.Итог("Поле1");
КонецФункции


&НаСервере
Функция ПолучитьМакет(название)
	Возврат  Документы.ПоступлениеЗапчастей.ПолучитьМакет(название);
КонецФункции


&НаСервере
Функция НайтиПользователя()
	// ++ obrv 16.01.18
	//Возврат Справочники.Пользователи.НайтиПоНаименованию(ПолноеИмяПользователя());
	Возврат ПользователиКлиентСервер.ТекущийПользователь();
	// -- obrv 16.01.18
КонецФункции




&НаСервере
Функция остаток1(товар, цена)
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	РегистрНакопления1Остатки.КолвоОстаток
	|ИЗ
	|	РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|ГДЕ
	|	РегистрНакопления1Остатки.машина = &машина
	|	И РегистрНакопления1Остатки.Товар = &Товар
	|	И РегистрНакопления1Остатки.Цена = &Цена";
	Запрос.УстановитьПараметр("машина", Объект.Машина);
	Запрос.УстановитьПараметр("Товар", товар);
	Запрос.УстановитьПараметр("Цена", цена);
	Возврат Запрос.Выполнить().Выгрузить().Итог("КолвоОстаток");
КонецФункции


&НаКлиенте
Процедура ТаблицаПроцентНаценкиПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если Объект.Новые Или Объект.Перекуп Тогда
		Если Элементы.Таблица.ТекущиеДанные.ЦенаПоступления <> 0 Тогда
			Элементы.Таблица.ТекущиеДанные.Цена = (1+Элементы.Таблица.ТекущиеДанные.ПроцентНаценки/100)*Элементы.Таблица.ТекущиеДанные.ЦенаПоступления;
		КонецЕсли;
	КонецЕсли;
	УстановитьОбщуюСумму();
	ОбновитьРасчетныеПоказатели(ЭтаФорма);
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаЦенаПоступленияПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	//Сообщить(Элементы.Таблица.ТекущаяСтрока);
	Если Объект.Новые или Объект.Перекуп Тогда
		Элементы.Таблица.ТекущиеДанные.СуммаПоступления = Элементы.Таблица.ТекущиеДанные.ЦенаПоступления * Элементы.Таблица.ТекущиеДанные.Колво;
		Если Элементы.Таблица.ТекущиеДанные.ПроцентНаценки <> 0 Тогда
			Элементы.Таблица.ТекущиеДанные.Цена = (1+Элементы.Таблица.ТекущиеДанные.ПроцентНаценки/100)*Элементы.Таблица.ТекущиеДанные.ЦенаПоступления;
		Иначе
			Если Элементы.Таблица.ТекущиеДанные.Цена <> 0 И Элементы.Таблица.ТекущиеДанные.ЦенаПоступления <> 0 Тогда
				Элементы.Таблица.ТекущиеДанные.ПроцентНаценки = (Элементы.Таблица.ТекущиеДанные.Цена/Элементы.Таблица.ТекущиеДанные.ЦенаПоступления-1)*100;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	УстановитьОбщуюСумму();
	
	ОбновитьРасчетныеПоказатели(ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаЦенаПриИзменении(Элемент)
	Если Объект.Новые или Объект.Перекуп Тогда
		Если Элементы.Таблица.ТекущиеДанные.Цена <> 0 И Элементы.Таблица.ТекущиеДанные.ЦенаПоступления <> 0 Тогда
			Элементы.Таблица.ТекущиеДанные.ПроцентНаценки = (Элементы.Таблица.ТекущиеДанные.Цена/Элементы.Таблица.ТекущиеДанные.ЦенаПоступления-1)*100;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьРасчетныеПоказатели(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОбщуюСумму()
	//ВремСум=0;
	//Для Каждого стр Из Объект.Таблица Цикл
	//	ВремСум = ВремСум + стр.ЦенаПоступления * стр.Колво;
	//КонецЦикла;   	
	Объект.СуммаНакладной = Объект.Таблица.Итог("СуммаПоступления");
КонецПроцедуры


&НаКлиенте
Процедура НовыеПриИзменении(Элемент)
	ПроверкаПоставщика();
	//Если Объект.Новые 
	//	И ИспользоватьРазборку Тогда
	//	УстановитьМашину("000000008");
	//КонецЕсли;
	Если Объект.Новые Тогда
		Объект.Перекуп = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьИДоступность(ЭтаФорма);
	
	Таблица = Объект.Таблица;
	
	Для каждого Строка Из Таблица Цикл
		Если Объект.Новые Тогда
			Строка.Автомобиль = УстановитьАвтомобиль("000000008");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМашину(код)
	Объект.Машина = Справочники.Машины.НайтиПоКоду(код);
КонецПроцедуры


&НаСервере
Функция УстановитьАвтомобиль(код)
	Автомобиль = Справочники.Машины.НайтиПоКоду(код);
	Возврат Автомобиль;
КонецФункции


&НаКлиенте
Процедура ТаблицаКолвоПриИзменении(Элемент)
	Элементы.Таблица.ТекущиеДанные.СуммаПоступления = Элементы.Таблица.ТекущиеДанные.ЦенаПоступления * Элементы.Таблица.ТекущиеДанные.Колво;
	УстановитьОбщуюСумму();
	ОбновитьРасчетныеПоказатели(ЭтаФорма);
КонецПроцедуры


&НаСервере
Функция РазбитьСтрокуНаМассивПодстрок(ИсходнаяСтрока,РазделительСтрок)
	СтрокаДляРазбора = ИсходнаяСтрока;
	СтрокаДляРазбора = СтрЗаменить(СтрокаДляРазбора, РазделительСтрок, Символы.ПС);
	МассивСтрок = новый Массив;
	КолвоСтрок = СтрЧислоСтрок(СтрокаДляРазбора);
	Для НомСтр = 1 По КолвоСтрок Цикл
		МассивСтрок.Добавить(СтрПолучитьСтроку(СтрокаДляРазбора, НомСтр));
	КонецЦикла;
	Возврат МассивСтрок;
КонецФункции

&НаСервере
Функция НачатьПоиск2(Поиск1) Экспорт 
	// Вставить содержимое обработчика.
	ЭтоСкания = ЛОЖЬ;
	ЭтоЗамена = ЛОЖЬ;
	Запрос = Новый Запрос();
	Номера = Новый Массив();
	НомераВр = Новый Массив();
	Номера.Добавить(Поиск1);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НомераСкания.Ссылка,
	|	НомераСкания.Код КАК Код,
	|	НомераСкания.Наименование,
	|	НомераСкания.НомерСкания КАК НомерСкания,
	|	НомераСкания.НомерЗамена КАК НомерЗамена,
	|	НомераСкания.Представление
	|ИЗ
	|	Справочник.НомераСкания КАК НомераСкания
	|ГДЕ
	|	НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск 
	|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск1
	|	ИЛИ НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск2
	|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск3
	|УПОРЯДОЧИТЬ ПО Код";
	Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
	Запрос.УстановитьПараметр("ПарамПоиск1","%/"+Поиск+"/%");
	Запрос.УстановитьПараметр("ПарамПоиск2",Поиск1);
	Запрос.УстановитьПараметр("ПарамПоиск3","%/"+Поиск1+"/%");
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
	Иначе
		ЭтоСкания = Истина; 
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Номера.Добавить(Выборка.НомерСкания);
			НомераВр = РазбитьСтрокуНаМассивПодстрок(Выборка.НомерЗамена,"/");
			Номер1 = НомераВр.Количество();
			Номер2 = 0;
			Пока Номер2<Номер1 Цикл
				Если СтрДлина(НомераВр[Номер2]) > 3 Тогда
					Номера.Добавить(НомераВр[Номер2]);
				КонецЕсли;
				Номер2 = Номер2 + 1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НомераЗамен.Ссылка,
	|	НомераЗамен.ВерсияДанных,
	|	НомераЗамен.ПометкаУдаления,
	|	НомераЗамен.Предопределенный,
	|	НомераЗамен.Код,
	|	НомераЗамен.Наименование,
	|	НомераЗамен.СканияКод,
	|	НомераЗамен.НомерСкания,
	|	НомераЗамен.НомерПоиск,
	|	НомераЗамен.НомерПолный,
	|	НомераЗамен.Бренд,
	|	НомераЗамен.Представление
	|ИЗ
	|	Справочник.НомераЗамен КАК НомераЗамен
	|ГДЕ
	|	НомераЗамен.НомерСкания ПОДОБНО &ПарамПоиск
	|	ИЛИ НомераЗамен.НомерПолный ПОДОБНО &ПарамПоиск
	|	ИЛИ НомераЗамен.НомерСкания ПОДОБНО &ПарамПоиск1
	|	ИЛИ НомераЗамен.НомерПоиск ПОДОБНО &ПарамПоиск1";
	Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
	Запрос.УстановитьПараметр("ПарамПоиск1",Поиск1);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
	Иначе
		ЭтоЗамена = Истина; 
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Номера.Добавить(Выборка.НомерСкания);
		КонецЦикла;
	КонецЕсли;
	
	Если ЭтоЗамена ИЛИ ЭтоСкания Тогда
		
		ПоискПо = "";
		Номер1 = Номера.Количество();
		Номер2 = 0;
		Пока Номер2 < Номер1 Цикл
			ПоискПо = ПоискПо + " ИЛИ НомераЗамен.НомерСкания = """+Номера[Номер2]+"""";
			Номер2 = Номер2 +1;
		КонецЦикла;
		
		Запрос.Текст = 
		"ВЫБРАТЬ DISTINCT
		|	НомераЗамен.НомерСкания как НомерСкания,
		|	НомераЗамен.НомерПолный,
		|	НомераЗамен.НомерПоиск как НомерПоиск
		|ИЗ
		|	Справочник.НомераЗамен КАК НомераЗамен
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераСкания КАК НомераСкания
		|		ПО НомераЗамен.НомерСкания = НомераСкания.Код
		|ГДЕ
		|	НомераЗамен.НомерСкания ПОДОБНО &ПарамПоиск
		|			ИЛИ НомераЗамен.НомерПоиск ПОДОБНО &ПарамПоиск1 "+ПоискПо;
		Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
		Запрос.УстановитьПараметр("ПарамПоиск1",Поиск1);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			
		Иначе 
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Номера.Добавить(Выборка.НомерСкания);
				Номера.Добавить(Выборка.НомерПоиск);
			КонецЦикла;
		КонецЕсли;
		
		Если ЭтоСкания Тогда
			Запрос.Текст=
			"ВЫБРАТЬ
			|	НомераСкания.Ссылка,
			|	НомераСкания.Код КАК Код,
			|	НомераСкания.Наименование,
			|	НомераСкания.НомерСкания КАК НомерСкания,
			|	НомераСкания.НомерЗамена КАК НомерЗамена,
			|	НомераСкания.Представление
			|ИЗ
			|	Справочник.НомераСкания КАК НомераСкания
			|ГДЕ
			|	НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск 
			|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск1
			|	ИЛИ НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск1 
			|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск2
			|УПОРЯДОЧИТЬ ПО Код";
			Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
			Запрос.УстановитьПараметр("ПарамПоиск1","%/"+Поиск+"/%");
			Запрос.УстановитьПараметр("ПарамПоиск2",Поиск1);
			Запрос.УстановитьПараметр("ПарамПоиск3","%/"+Поиск1+"/%");
		Иначе
			ПоискПо = "";
			Номер1 = Номера.Количество();
			Номер2 = 0;
			Пока Номер2 < Номер1 Цикл
				ПоискПо = ПоискПо + " ИЛИ НомераСкания.НомерСкания = """+Номера[Номер2]+""" ИЛИ НомераСкания.НомерЗамена ПОДОБНО ""%/"+Номера[Номер2]+"/%""";
				Номер2 = Номер2 +1;
			КонецЦикла;
			
			Если ЭтоЗамена Тогда
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	НомераСкания.Ссылка,
				|	НомераСкания.Код КАК Код,
				|	НомераСкания.Наименование,
				|	НомераСкания.НомерСкания КАК НомерСкания,
				|	НомераСкания.НомерЗамена КАК НомерЗамена,
				|	НомераСкания.Представление
				|ИЗ
				|	Справочник.НомераСкания КАК НомераСкания
				|ГДЕ
				|	НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск 
				|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск1
				|	ИЛИ НомераСкания.НомерСкания ПОДОБНО &ПарамПоиск2 
				|	ИЛИ НомераСкания.НомерЗамена ПОДОБНО &ПарамПоиск3" + ПоискПо;
				Запрос.УстановитьПараметр("ПарамПоиск",Поиск);
				Запрос.УстановитьПараметр("ПарамПоиск1","%/"+Поиск+"/%");
				Запрос.УстановитьПараметр("ПарамПоиск2",Поиск1);
				Запрос.УстановитьПараметр("ПарамПоиск3","%/"+Поиск1+"/%");
			КонецЕсли;
		КонецЕсли;
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			
		Иначе 
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Номера.Добавить(Выборка.НомерСкания);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ВОЗВРАТ Номера; 	 
КонецФункции


&НаСервере
Функция Фильтр(Поиск1,Номера) Экспорт
	Перем а;
	Мас = РазбитьСтрокуНаМассивПодстрок(Поиск," ");
	Кол = Мас.Количество();
	
	Запрос = Новый Запрос();
	ПоискПо = " ГДЕ ( СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск+""" ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск+"%"" ИЛИ СправочникНоменклатура.Артикул = """+Поиск+""" ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Поиск+"""
	| ИЛИ СправочникНоменклатура.Код ПОДОБНО ""%"+Поиск1+""" ИЛИ СправочникНоменклатура.Наименование ПОДОБНО ""%"+Поиск1+"%"" ИЛИ СправочникНоменклатура.АртикулПоиск = """+Поиск1+""" ИЛИ СправочникНоменклатура.НомерПоиск = """+Поиск1+""" ИЛИ СправочникНоменклатура.Комплектность.Артикул= """+Поиск+"""  ИЛИ НомЗамены.НомерЗамены= """+Поиск+""" ИЛИ СправочникНоменклатура.Комплектность.НомерПоиск= """+Поиск1+"""
	| ";
	Если Кол > 1 Тогда
		а=0;
		ПоискПо = ПоискПо + " ИЛИ ( ";
		Пока а < Кол Цикл
			Если а = 0 Тогда
				ПоискПо = ПоискПо + " СправочникНоменклатура.Наименование ПОДОБНО ""%"+Мас[а]+"%""";
			Иначе
				ПоискПо = ПоискПо + " И СправочникНоменклатура.Наименование ПОДОБНО ""%"+Мас[а]+"%""";
			КонецЕсли;
			а = а + 1;
		КонецЦикла;
		ПоискПо = ПоискПо + " ) ";
	КонецЕсли;
	
	Если Кол > 1 Тогда
		а=0;
		Пока а < Кол Цикл
			ПоискПо = ПоискПо + " ИЛИ СправочникНоменклатура.Артикул = """+Мас[а]+"""
			|  ИЛИ СправочникНоменклатура.Код ПОДОБНО ""%"+Мас[а]+"""
			| ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Мас[а]+"""";
			а = а + 1;
		КонецЦикла;
	КонецЕсли;
	
	Номера = УдалитьПовторяющиесяЭлементыМассива(Номера);
	
	Номер1 = Номера.Количество();
	Номер2 = 0;
	Пока Номер2 < Номер1 Цикл
		ПоискПо = ПоискПо + " ИЛИ СправочникНоменклатура.Артикул = """+Номера[Номер2]+"""
		| ИЛИ НомЗамены.НомерЗамены= """+Номера[Номер2]+"""
		| ИЛИ СправочникНоменклатура.НомерПроизводителя = """+Номера[Номер2]+"""
		| ИЛИ СправочникНоменклатура.Комплектность.Артикул= """+Номера[Номер2]+"""
		| ";
		Номер2 = Номер2 +1;
	КонецЦикла;
	Текст1 = 
	"	ВЫБРАТЬ
	| СправочникНоменклатура.Ссылка,
	| СправочникНоменклатура.ВерсияДанных,
	| СправочникНоменклатура.ПометкаУдаления,
	| СправочникНоменклатура.Предопределенный,
	| СправочникНоменклатура.Код,
	| СправочникНоменклатура.Наименование,
	| СправочникНоменклатура.Артикул,
	| СправочникНоменклатура.НомерПроизводителя,
	| СправочникНоменклатура.МестоНаСкладе,
	| СправочникНоменклатура.Бренд,
	| СправочникНоменклатура.АртикулПоиск,
	| СправочникНоменклатура.НомерПоиск,
	| СправочникНоменклатура.НаименованиеПолное,
	| РегистрНакопления1Остатки.КолвоОстаток,
	| СправочникНоменклатура.Комплектность.(
	| 	Ссылка,
	| 	НомерСтроки,
	| 	Артикул,
	| 	Наименование,
	| 	Количество,
	| 	Комментарий,
	| 	НомерПоиск
	| )
	| ИЗ
	| Справочник.Номенклатура КАК СправочникНоменклатура
	| ЛЕВОЕ СОЕДИНЕНИЕ  Справочник.Номенклатура.НомераЗамен КАК НомЗамены ПО СправочникНоменклатура.Ссылка = НомЗамены.Ссылка
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	| 	ПО СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар "+ ПоискПо;
	Текст1 = Текст1 + " ) ";
	Запрос = Новый Запрос;
	Запрос.Текст = Текст1;
	
	
	Результат = Запрос.Выполнить();
	Таблица2 = Результат.Выгрузить();
	Количество = Таблица2.Количество();
	Если Таблица2.Количество() < 1 Тогда
		//ОчиститьПоиск();
		Сообщить("Номер не найден");
		возврат 0;
	КонецЕсли;
	Текст1 = "ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура ГДЕ ";
	номер = 0;
	Для Каждого строка из Таблица2 Цикл
		номер = номер + 1;
		Если номер<Количество Тогда 
			Текст1= Текст1 + "Номенклатура.Код = """+строка.код+""" ИЛИ ";	
		Иначе
			Текст1= Текст1 + "Номенклатура.Код = """+строка.код+""" ";
		КонецЕсли;
	КонецЦикла;	 
	Запрос.Текст = Текст1;
	тмп2 = Новый Массив();
	тмп1 =  Запрос.Выполнить().Выгрузить();
	Для Каждого стр из тмп1 Цикл
		тмп2.Добавить(стр.Ссылка);
	КонецЦикла;
	Возврат тмп2;
КонецФункции

&НаСервере
Функция УдалитьПовторяющиесяЭлементыМассива(Массив) 
	ТекущийИндекс = 0; 
	ВсегоЭлементов = Массив.Количество(); 
	Пока ТекущийИндекс < ВсегоЭлементов Цикл 
		Индекс2 = ТекущийИндекс + 1; 
		Пока Индекс2 < ВсегоЭлементов Цикл 
			Если Массив[Индекс2] = Массив[ТекущийИндекс] Тогда 
				Массив.Удалить(Индекс2); 
				ВсегоЭлементов = ВсегоЭлементов - 1; 
			Иначе 
				Индекс2 = Индекс2 + 1; 
			КонецЕсли; 
		КонецЦикла; 
		ТекущийИндекс = ТекущийИндекс + 1; 
	КонецЦикла; 
	Возврат Массив; 
КонецФункции    



&НаСервере
Функция ДобавитьВПродажуСерв(ВыбранноеЗначение, СсылкаНом,Колво,Машина,Цена)
	
	Объект1 = ВыбранноеЗначение.ПолучитьОбъект();
	Объект1.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Строка = Объект1.Таблица.Добавить();
	Строка.Товар = СсылкаНом;
	Строка.Количество = 1;
	Строка.машина = Машина;
	Строка.Комментарий = Машина.Наименование;
	Строка.Цена = СсылкаНом.РекомендованаяЦена;
	Строка.цена1 = Цена;
	Объект1.Записать(РежимЗаписиДокумента.Запись);
	Возврат Объект1;
КонецФункции

&НаСервере
Функция ДобавитьВПродажуСервНов(ВыбранноеЗначение, СсылкаНом,Колво,Машина,Цена,ПродНак)
	
	Объект1 = ВыбранноеЗначение.ПолучитьОбъект();
	Объект1.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Строка = Объект1.Таблица.Добавить();
	Строка.Товар = СсылкаНом;
	Строка.Количество = 1;
	Строка.машина = Машина;
	Строка.Цена = СсылкаНом.РекомендованаяЦена;
	Строка.цена1 = Цена;
	Строка.ПродНак = ПродНак;
	Объект1.Записать(РежимЗаписиДокумента.Запись);
	Возврат Объект1;
КонецФункции


&НаСервере
Функция НайтиДокПродажа(Код)
	Возврат Документы.ПродажаЗапчастей.НайтиПоНомеру(Код);
КонецФункции


&НаСервере
Процедура передзаписьюс()
	Для каждого стр из Объект.Таблица Цикл
		Если СтрДлина(стр.код) < 5 Тогда
			
			КодАвто = Объект.Машина.КодМашины;
			
			следНомер = СледующийНомер(стр.Товар, КодАвто);
			// ++ obrv 23.11.19
			КодТовара = дт_ПрефиксацияКлиентСервер.НомерНаПечать(Стр.Товар.Код);
			//стр.код = "00"+Формат(Число(стр.Товар.Код),"ЧЦ=10;ЧГ=0")+"_"+Объект.Машина.КодМашины + "_" + следНомер;
			стр.код = "00"+Формат(КодТовара,"ЧЦ=10;ЧГ=0")+"_"+ КодАвто + "_" + следНомер;
			// -- obrv 23.11.19
			СоздатьНомер(стр.код,стр.Товар,Объект.Машина);
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры


&НаСервере
Функция СледующийНомер(товар, КодАвтомобиля)
	
	Возврат Справочники.ИндКод.ПолучитьСвободныйНомер(товар, КодАвтомобиля);
	//	запрос = новый запрос;
	//	запрос.Текст = "ВЫБРАТЬ
	//	               |	Номера.Наименование
	//	               |ИЗ
	//	               |	Справочник.Номера КАК Номера
	//	               |ГДЕ
	//	               |	Номера.машина = &машина
	//	               |	И Номера.товар = &товар";
	//	запрос.УстановитьПараметр("машина",машина);
	//	запрос.УстановитьПараметр("товар",товар);
	//	возврат запрос.Выполнить().Выгрузить().Количество()+1;
КонецФункции

&НаСервере
Процедура СоздатьНомер(код,товар,машина)
	эл = Справочники.Номера.СоздатьЭлемент();
	эл.Наименование = код;
	эл.товар = товар;
	эл.машина = машина;
	эл.Записать();
КонецПроцедуры




&НаСервере
Процедура Изм3На4()
	нов = Справочники.Коофициенты.НайтиПоКоду("000000004");
	стар = Справочники.Коофициенты.НайтиПоКоду("000000003");
	Для Каждого стр из Объект.Таблица цикл
		Если стр.Наценка = стар Тогда
			стр.Наценка = нов;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьРасчетныеПоказатели(Форма)
	
	Объект = Форма.Объект;
	СуммаПродажи = 0;
	Для каждого СтрокаТаблицы Из Объект.Таблица Цикл
		
		СуммаПродажи = СуммаПродажи + СтрокаТаблицы.Колво * СтрокаТаблицы.Цена;
		
	КонецЦикла; 
	
	Форма.СуммаПрибыльРасчетная = СуммаПродажи - Объект.СуммаНакладной;
	
	ОбновитьРасчетныеПоказателиАвтомобиля(Форма);
	
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьРасчетныеПоказателиАвтомобиля(Форма)
	
	Объект = Форма.Объект;
	Форма.ДатаПоступленияАвтомобиля = Неопределено;
	Если НЕ Объект.Новые 
		И ЗначениеЗаполнено(Объект.Машина) Тогда
		
		Форма.ДатаПоступленияАвтомобиля = ПолучитьДатуПоступленияАвтомобиля(Объект.Машина); 
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьДобавленныеКолонки()
	
	дт_АдресноеХранение.ЗаполнитьМестаХранения(ЭтаФорма, "Склад", "Таблица", "Товар");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Товар КАК Номенклатура,
	|	Товары.Партия КАК Партия,
	|	Товары.Автомобиль КАК Автомобиль
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки,
	|	Номенклатура,
	|	Партия,
	|	Автомобиль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступленияТЗ.КоличествоПриход КАК Количество,
	|	ПоступленияТЗ.Номенклатура КАК Номенклатура,
	|	ПоступленияТЗ.Автомобиль КАК Автомобиль,
	|	ПоступленияТЗ.Партия КАК Партия
	|ПОМЕСТИТЬ втПоступленияТЗ
	|ИЗ
	|	РегистрНакопления.ТоварыВТранзитнойЗоне.Обороты(,,, Склад = &СкладТЗ
	|	И Распоряжение = &Поступление
	|	И (Номенклатура, Автомобиль, Партия) В
	|		(ВЫБРАТЬ
	|			втТовары.Номенклатура,
	|			втТовары.Автомобиль,
	|			втТовары.Партия
	|		ИЗ
	|			втТовары)) КАК ПоступленияТЗ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Автомобиль,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступленияСклад.КоличествоРасход КАК Количество,
	|	ПоступленияСклад.Номенклатура КАК Номенклатура,
	|	ПоступленияСклад.Автомобиль КАК Автомобиль,
	|	ПоступленияСклад.Партия КАК Партия
	|ПОМЕСТИТЬ втПоступленияСклад
	|ИЗ
	|	РегистрНакопления.ТоварыВТранзитнойЗоне.Обороты(,,, Склад = &СкладТЗ
	|	И Распоряжение = &Поступление
	|	И (Номенклатура, Автомобиль, Партия) В
	|		(ВЫБРАТЬ
	|			втТовары.Номенклатура,
	|			втТовары.Автомобиль,
	|			втТовары.Партия
	|		ИЗ
	|			втТовары)) КАК ПоступленияСклад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Автомобиль,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(втПоступленияТЗ.Количество, 0) КАК КоличествоТЗ,
	|	ЕСТЬNULL(втПоступленияСклад.Количество, 0) КАК КоличествоСклад
	|ИЗ
	|	втТовары КАК втТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПоступленияТЗ КАК втПоступленияТЗ
	|		ПО втТовары.Номенклатура = втПоступленияТЗ.Номенклатура
	|		И втТовары.Автомобиль = втПоступленияТЗ.Автомобиль
	|		И втТовары.Партия = втПоступленияТЗ.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПоступленияСклад КАК втПоступленияСклад
	|		ПО втТовары.Номенклатура = втПоступленияСклад.Номенклатура
	|		И втТовары.Автомобиль = втПоступленияСклад.Автомобиль
	|		И втТовары.Партия = втПоступленияСклад.Партия
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Поступление", Объект.Ссылка);
	Запрос.УстановитьПараметр("Товары", Объект.Таблица.Выгрузить());
	Запрос.УстановитьПараметр("СкладТЗ", Объект.СкладТранзитный);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтрокаТаблицы = Объект.Таблица[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		СтрокаТаблицы.КоличествоВТранзитнойЗоне = ВыборкаДетальныеЗаписи.КоличествоТЗ;
		СтрокаТаблицы.КоличествоНаСкладе = ВыборкаДетальныеЗаписи.КоличествоСклад;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПраваДоступа() Экспорт
	
	ИспользуетсяСтараяСхемаУчета = Объект.Дата < дт_Склад.ДатаНачалаИспользованияЗаявокНаСборку();
	//РазрешеноУдалениеСтрок = Истина;
	//Если ИспользуетсяСтараяСхемаУчета Тогда
	РазрешеноУдалениеСтрок = ЭтоПолноправныйПользователь;// ИЛИ РольДоступна("дт_УдалениеСтрокПоступленияЗапчастей");
	//КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПерекупПриИзменении(Элемент)
	ПроверкаПоставщика();	
	///+ГомзМА 27.12.2022 (Задача №000002209 от 10.11.2022)
	Если Объект.Перекуп тогда
		Объект.Новые = Ложь;
	КонецЕсли;
	УстановитьВидимостьИДоступность(ЭтаФорма);
	
	Таблица = Объект.Таблица;
	
	Для каждого Строка Из Таблица Цикл
		Если Объект.Перекуп Тогда
			Строка.Автомобиль = УстановитьАвтомобиль("000000204");
		КонецЕсли;
	КонецЦикла;
	///+ГомзМА 27.12.2022 (Задача №000002209 от 10.11.2022)
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.СтраницаПродаж Тогда
		СписокПродаж.Параметры.УстановитьЗначениеПараметра("Ссылка", Объект.ссылка);
		элементы.СписокПродаж.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПродажВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СсылкаДляОткрытия    = Элементы.СписокПродаж.ТекущиеДанные[СтрЗаменить(Поле.Имя,Элемент.имя,"")];
	ПараметрыФормы       = Новый Структура("Ключ", СсылкаДляОткрытия);
	Если ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ПродажаЗапчастей") Тогда
		ИмяФормыДокумента="Документ.ПродажаЗапчастей.Форма.ФормаДокумента";
	Иначе
		Возврат;
	КонецЕсли;
	ФормаДокумента = ПолучитьФорму(ИмяФормыДокумента, ПараметрыФормы);
	ФормаДокумента.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПриИзменении(Элемент)
	
	///+ГомзМА 27.12.2022 (Задача №000002209 от 10.11.2022)
	Таблица = Объект.Таблица;
	
	Для каждого Строка Из Таблица Цикл
		Если Объект.Новые Тогда
			Строка.Автомобиль = УстановитьАвтомобиль("000000008");
		ИначеЕсли Объект.Перекуп Тогда
			Строка.Автомобиль = УстановитьАвтомобиль("000000204");
		КонецЕсли;
	КонецЦикла;
	///-ГомзМА 27.12.2022 (Задача №000002209 от 10.11.2022)
	
КонецПроцедуры


#КонецОбласти


#Область РасходДетальноПоЗапчасти

&НаКлиенте
Процедура РасходДетально(Команда)
	
	Попытка
		ТекущаяСтрока = ЭтаФорма.ТекущийЭлемент.ТекущиеДанные;
	Исключение
		Состояние("Не выбрана строка!");
		Возврат;	
	КонецПопытки;
	
	ДанныеДляЗапроса = Новый Структура;
	ДанныеДляЗапроса.Вставить("Товар", ТекущаяСтрока.Товар);
	ДанныеДляЗапроса.Вставить("Машина", ?(НЕ ЗначениеЗаполнено(ТекущаяСтрока.Автомобиль), Объект.Машина, ТекущаяСтрока.Автомобиль));
	ДанныеДляЗапроса.Вставить("ИндКод", ?(НЕ ЗначениеЗаполнено(ТекущаяСтрока.Партия), 
	ПолучитьИндКодНаСервере(ТекущаяСтрока.Код), ТекущаяСтрока.Партия));
	ДанныеДляЗапроса.Вставить("Склад", Объект.Склад);
	ДанныеДляЗапроса.Вставить("ДатаДокумента", Объект.Дата);
	
	//Передаем в другую форму
	парДанные = Новый Структура("ДанныеПоПозиции", ДанныеДляЗапроса);
	ОткрытьФорму("Документ.ПоступлениеЗапчастей.Форма.ФормаРасходаДетальногоПоЗапчасти",парДанные,,,,,);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИндКодНаСервере(Код)	
	Возврат Справочники.ИндКод.НайтиПоНаименованию(Код);	
КонецФункции

&НаКлиенте
Процедура ТаблицаСуммаПоступленияПриИзменении(Элемент)
	Если Объект.Новые или Объект.Перекуп Тогда
		Элементы.Таблица.ТекущиеДанные.ЦенаПоступления  = Элементы.Таблица.ТекущиеДанные.СуммаПоступления / Элементы.Таблица.ТекущиеДанные.Колво;
		Если Элементы.Таблица.ТекущиеДанные.ПроцентНаценки <> 0 Тогда
			Элементы.Таблица.ТекущиеДанные.Цена = (1+Элементы.Таблица.ТекущиеДанные.ПроцентНаценки/100)*Элементы.Таблица.ТекущиеДанные.ЦенаПоступления;
		Иначе
			Если Элементы.Таблица.ТекущиеДанные.Цена <> 0 И Элементы.Таблица.ТекущиеДанные.ЦенаПоступления <> 0 Тогда
				Элементы.Таблица.ТекущиеДанные.ПроцентНаценки = (Элементы.Таблица.ТекущиеДанные.Цена/Элементы.Таблица.ТекущиеДанные.ЦенаПоступления-1)*100;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	УстановитьОбщуюСумму();
	
	ОбновитьРасчетныеПоказатели(ЭтаФорма);
КонецПроцедуры



#КонецОбласти
