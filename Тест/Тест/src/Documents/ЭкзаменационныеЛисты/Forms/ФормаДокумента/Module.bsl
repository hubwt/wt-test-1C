
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура УчащийсяПриИзмененииНаСервере()

    Запрос =Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СотрудникиКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
	|	СотрудникиКонтактнаяИнформация.Ссылка.ОтправлятьСМС КАК ОтправлятьСМС
	|ИЗ
	|	Справочник.Сотрудники.КонтактнаяИнформация КАК СотрудникиКонтактнаяИнформация
	|ГДЕ
	|	СотрудникиКонтактнаяИнформация.Ссылка.Пользователь = &Пользователь
	|	И СотрудникиКонтактнаяИнформация.Вид = &Вид";
	Запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.ТелефонСотрудникаСлужебный);
	Запрос.УстановитьПараметр("Пользователь",объект.Учащийся);
	Телефон = Запрос.Выполнить().Выбрать();
	Телефон.Следующий();
	 
	Объект.ТелефонУчащегося = Телефон.НомерТелефона;

КонецПроцедуры


&НаКлиенте
Процедура УчащийсяПриИзменении(Элемент)

	УчащийсяПриИзмененииНаСервере();
		
КонецПроцедуры



&НаКлиенте
Процедура РезультатыОценкаПриИзменении(Элемент)
	
	///+ГомзМА 04.05.2023
	ТекСтрока = Элементы.Результаты.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекСтрока.Оценка) Тогда
		ТекСтрока.ДатаОценки = ТекущаяДата();
	Иначе
		ТекСтрока.ДатаОценки = '00010101';
	КонецЕсли;
	///-ГомзМА 04.05.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	///+ГомзМА 05.06.2023
	Для каждого СтрокаТЧ Из Объект.Результаты Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.ДатаОбучения) Тогда
			Если СтрокаТЧ.ДатаОбучения > ТекущаяДата() И НЕ СтрокаТЧ.ОповещениеПолучено Тогда
				ЗаписатьНапоминаниеВРегистреСведений(Объект.Учащийся, СтрокаТЧ.ДатаОбучения, СтрокаТЧ.Тема);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Для каждого СтрокаТЧ Из Объект.Результаты Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.ДатаОбучения) Тогда
			Если СтрокаТЧ.ДатаОбучения > ТекущаяДата() И НЕ СтрокаТЧ.ОповещениеПолучено Тогда
				СтрокаТЧ.ОповещениеПолучено = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	///-ГомзМА 05.06.2023
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНапоминаниеВРегистреСведений(Учащийся, ДатаОбучения, Тема)

	//Запись напоминания об обучении пользователю
	СтрокаВывода = СтрШаблон("%1, Вам назначена дата обучения: %2 по теме ""%3""", Учащийся, ДатаОбучения, Тема);
	ЗаписьВРегистреСведений = РегистрыСведений.НапоминанияПользователя.СоздатьМенеджерЗаписи();
	ЗаписьВРегистреСведений.ВремяСобытия = ТекущаяДатаСеанса() + 60;
	ЗаписьВРегистреСведений.СрокНапоминания = ТекущаяДатаСеанса() + 60;
	ЗаписьВРегистреСведений.Пользователь = Учащийся;
	ЗаписьВРегистреСведений.СпособУстановкиВремениНапоминания = Перечисления.СпособыУстановкиВремениНапоминания.ВУказанноеВремя;
	ЗаписьВРегистреСведений.Описание = СтрокаВывода;
	ЗаписьВРегистреСведений.Записать();

КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПечатьЭкзЛиста(Команда)
	ТабДок = Печать(Объект.ссылка);
	
	// создадим коллекцию печатных форм, в которую надо будет добавить нужный нам табличный документ
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("Печать");
	// Добавляем в коллекцию (тип массив) сформированный Табличный документ
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок;
	// если требуется устанавливаем параметры печати
	КоллекцияПечатныхФорм[0].Экземпляров=1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "Печать";  // используется для формирования имени файла при сохранении из общей формы печати документов
	// .. и выводим стандартной процедурой БСП
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Неопределено,ЭтаФорма);

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции


Функция Печать(Ссылка)
	ТабДок = Новый ТабличныйДокумент;

	Макет = Документы.ЭкзаменационныеЛисты.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭкзаменационныеЛисты.Дата,
	|	ЭкзаменационныеЛисты.Наименование,
	|	ЭкзаменационныеЛисты.Номер,
	|	ЭкзаменационныеЛисты.Преподаватель,
	|	ЭкзаменационныеЛисты.ТелефонУчащегося,
	|	ЭкзаменационныеЛисты.Учащийся,
	|	ЭкзаменационныеЛисты.Результаты.(
	|		НомерСтроки,
	|		Тема,
	|		Прослушал,
	|		Балл,
	|		Оценка
	|	)
	|ИЗ
	|	Документ.ЭкзаменационныеЛисты КАК ЭкзаменационныеЛисты
	|ГДЕ
	|	ЭкзаменационныеЛисты.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьРезультатыШапка = Макет.ПолучитьОбласть("РезультатыШапка");
	ОбластьРезультаты = Макет.ПолучитьОбласть("Результаты");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
        ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьРезультатыШапка);
		ВыборкаРезультаты = Выборка.Результаты.Выбрать();
		Пока ВыборкаРезультаты.Следующий() Цикл
			ОбластьРезультаты.Параметры.Заполнить(ВыборкаРезультаты);
			ТабДок.Вывести(ОбластьРезультаты, ВыборкаРезультаты.Уровень());
		КонецЦикла;

		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	ТабДок.АвтоМасштаб = Истина;
	Возврат табдок; 

КонецФункции

&НаКлиенте
Процедура РезультатыДатаОбученияПриИзменении(Элемент)
	
	///+ГомзМА 31.05.2023
	ТекСтрока = Элементы.Результаты.ТекущиеДанные;
	
	Если ТекСтрока.ОповещениеПолучено Тогда
		ТекСтрока.ОповещениеПолучено = Ложь;
	КонецЕсли;
	///-ГомзМА 31.05.2023
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	/////+ГомзМА 01.06.2023
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ ПЕРВЫЕ 1
	//	|	ДолжностиСотрудниковСрезПоследних.Сотрудник.Пользователь КАК СотрудникПользователь,
	//	|	ДолжностиСотрудниковСрезПоследних.Сотрудник.Пользователь.Подразделение КАК СотрудникПользовательПодразделение,
	//	|	ДолжностиСотрудниковСрезПоследних.Регистратор.Город КАК РегистраторГород,
	//	|	ДолжностиСотрудниковСрезПоследних.Регистратор КАК Регистратор,
	//	|	ДолжностиСотрудниковСрезПоследних.Регистратор.Дата КАК РегистраторДата
	//	|ИЗ
	//	|	РегистрСведений.ДолжностиСотрудников.СрезПоследних(, ) КАК ДолжностиСотрудниковСрезПоследних
	//	|ГДЕ
	//	|	НЕ ДолжностиСотрудниковСрезПоследних.Сотрудник.Пользователь.Недействителен
	//	|	И ДолжностиСотрудниковСрезПоследних.Регистратор ССЫЛКА Документ.КадровыйПриказ
	//	|	И ДолжностиСотрудниковСрезПоследних.Сотрудник = &Сотрудник
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	ДолжностиСотрудниковСрезПоследних.Регистратор.Дата УБЫВ";
	//
	//Запрос.УстановитьПараметр("Сотрудник", Объект.Учащийся);
	//
	//РезультатЗапроса = Запрос.Выполнить().Выбрать();
	//
	//РезультатЗапроса.Следующий();
	

	///-ГомзМА 01.06.2023
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатыПриИзменении(Элемент)
	
	///+ГомзМА 02.06.2023
	Если Объект.Ссылка.Пустая() Тогда
		ЭтаФорма.Записать();
	КонецЕсли;
	///-ГомзМА 02.06.2023
	
КонецПроцедуры


#КонецОбласти









