
Процедура ОбработкаПроведения(Отказ,Режим)
	// регистр Баланс
	Движения.Баланс.Записывать = Истина;
	Движение = Движения.Баланс.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Измерение1 = Счет;
	Движение.Баланс = СуммаПлатежа;

	// регистр ДвижениеТМЦВорктрак
	Движения.ДвижениеТМЦВорктрак.Записывать = Истина;
	Для Каждого ТекСтрокаТМЦ из ТМЦ Цикл
		Движение = Движения.ДвижениеТМЦВорктрак.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.ТМЦ = ТекСтрокаТМЦ.Наименование;
		Движение.МестоХранения = ТекСтрокаТМЦ.МестоХраненияТМЦ;
		Движение.ИнвентарныйНомер = ТекСтрокаТМЦ.ИнвентарныйНомер;
		Движение.Количество = ТекСтрокаТМЦ.Количество;
		Движение.Цена = ТекСтрокаТМЦ.Стоимость;
	КонецЦикла;
КонецПроцедуры 

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
			Возврат;
	КонецЕсли;
	
	Если ПроверкаНаДублиВТаблицеТМЦ()  тогда 
		Сообщить (" Ошибка, в таблице ТМЦ есть Дубли");
		Отказ  = Истина; 
		Возврат; 
//	ИначеЕСли ПроверкаОстатков() Тогда 
//		Сообщить (" Ошибка, недостаточное колличество");
//		Отказ  = Истина;
	КонецЕсли; 
КонецПроцедуры

Функция ПроверкаОстатков() 

	МассивИндкодов = Новый массив; 
	КоличествоОстаток = 0; 
	ФлагОстановкиЗаписи = ложь;
	  
	Для каждого Строка из ТМЦ Цикл 
		 КоличествоОстаток = ПроверкаОстатковЗапрос(Строка.ИнвентарныйНомер); 
		 Если КоличествоОстаток < Строка.Количество  Тогда 
		 	ФлагОстановкиЗаписи = Истина; 
		 	Возврат ФлагОстановкиЗаписи; 
		 	КонецЕсли;  
	конецЦикла;
	Возврат ФлагОстановкиЗаписи; 
КонецФункции

 Функция ПроверкаОстатковЗапрос(ИндКод)
 	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДвижениеТМЦВорктракОстатки.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ДвижениеТМЦВорктракОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ДвижениеТМЦВорктрак.Остатки КАК ДвижениеТМЦВорктракОстатки
		|ГДЕ
		|	ДвижениеТМЦВорктракОстатки.ИнвентарныйНомер = &ИнвентарныйНомер";
	
	Запрос.УстановитьПараметр("ИнвентарныйНомер", ИндКод);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	КоличествоОстаток = 0; 
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КоличествоОстаток = ВыборкаДетальныеЗаписи. КоличествоОстаток; 
	КонецЦикла;
 	
 	Возврат КоличествоОстаток;
 	 	 
 КонецФункции 
   
   Функция ПроверкаНаДублиВТаблицеТМЦ() 
	ИндНомер = "";
	ФлагОстановки= Ложь; 
	Для каждого Строка из ТМЦ Цикл 
		 
			Если ИндНомер = Строка.ИнвентарныйНомер Тогда 
				ФлагОстановки = истина; 
				Возврат ФлагОстановки ; 
			Иначе ИндНомер = Строка.ИнвентарныйНомер; 
			КонецЕсли; 
			
	конецЦикла; 
	Возврат ФлагОстановки; 
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеЗапчастей") Тогда

		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ПоступлениеЗапчастейТМЦ.Ссылка,
			|	ПоступлениеЗапчастейТМЦ.НомерСтроки,
			|	ПоступлениеЗапчастейТМЦ.Артикул,
			|	ПоступлениеЗапчастейТМЦ.Количество,
			|	ПоступлениеЗапчастейТМЦ.Товар,
			|	ПоступлениеЗапчастейТМЦ.Цена,
			|	ПоступлениеЗапчастейТМЦ.Сумма,
			|	ПоступлениеЗапчастейТМЦ.Склад,
			|	ПоступлениеЗапчастейТМЦ.ТипУчетаТМЦ,
			|	ПоступлениеЗапчастейТМЦ.Бренд,
			|	ПоступлениеЗапчастейТМЦ.Сотрудник
			|ИЗ
			|	Документ.ПоступлениеЗапчастей.ТМЦ КАК ПоступлениеЗапчастейТМЦ
			|ГДЕ
			|	ПоступлениеЗапчастейТМЦ.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НоваяСтрока = ТМЦ.Добавить();
			
			НоваяСтрока.Наименование		= ВыборкаДетальныеЗаписи.Товар;
			НоваяСтрока.Количество			= ВыборкаДетальныеЗаписи.Количество; 
			НоваяСтрока.Сумма				= ВыборкаДетальныеЗаписи.Сумма; 
			НоваяСтрока.Стоимость			= ВыборкаДетальныеЗаписи.Цена; 
			НоваяСтрока.ИнвентарныйНомер	= ВыборкаДетальныеЗаписи.Ссылка; 
//			НоваяСтрока.МестоХраненияТМЦ	= ВыборкаДетальныеЗаписи.
			НоваяСтрока.Сотрудник			= ВыборкаДетальныеЗаписи.Сотрудник; 
			НоваяСтрока.Код					= ВыборкаДетальныеЗаписи.Товар.код; 
		КонецЦикла;

	
			
	КонецЕсли; 
		
КонецПроцедуры
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	НепроверяемыеРеквизиты = Новый Массив();

  // Проверка значения реквизита на соответствие некоторым требованиям
 
  
  	Если НЕ ЗначениеЗаполнено(ТипОплаты) И ВидДохода = Перечисления.ВидыПрочихДоходов.ВнутренняяПродажа Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Тип оплаты не задан.'");
		Сообщение.Сообщить();
		Отказ = Истина;  
		
		ТипОплатыПроверка = ПроверяемыеРеквизиты.Найти("ТипОплаты");
		Если ТипОплатыПроверка <> Неопределено Тогда
        	ПроверяемыеРеквизиты.Удалить(ТипОплатыПроверка);
    	КонецЕсли;	
	Иначе 
		ТипОплатыПроверка = ПроверяемыеРеквизиты.Найти("ТипОплаты");
		Если ТипОплатыПроверка <> Неопределено Тогда
        	ПроверяемыеРеквизиты.Удалить(ТипОплатыПроверка);
    	КонецЕсли;
	КонецЕсли;

	

КонецПроцедуры

