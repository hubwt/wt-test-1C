
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс



#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если БезДоговора Тогда
		ДоговорКонтрагента = Неопределено;
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если БезДоговора Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДоговорКонтрагента");
	КонецЕсли;
	
	// Проверить, если статус = Выполнено
	Если Состояние = ПредопределенноеЗначение("Перечисление.СостоянияЗаказаНаДоставку.Выполнен") Тогда
		ПроверяемыеРеквизиты.Добавить("Автомобиль");
		ПроверяемыеРеквизиты.Добавить("Водитель");
		ПроверяемыеРеквизиты.Добавить("ДатаНачала");
		ПроверяемыеРеквизиты.Добавить("ДатаОкончания");
		//ПроверяемыеРеквизиты.Добавить("Расстояние");
		//ПроверяемыеРеквизиты.Добавить("ТопливоРасход");
	КонецЕсли;
	
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	
	Если ПоказанияОдометраНачало > ПоказанияОдометраОкончание Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Показание одометра на конец поездки не может быть меньше показания на начало",
			,
			"ПоказанияОдометраОкончание",
			"Объект",
			Отказ
		);
			
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(ДатаНачала) 
		И ЗначениеЗаполнено(ДатаОкончания) 
		И ДатаНачала > ДатаОкончания Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Дата окончания не может быть меньше даты начала",
			,
			"ДатаОкончания",
			"Объект",
			Отказ
		);
			
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Состояние) Тогда
		Состояние = Перечисления.СостоянияЗаказаНаДоставку.Предварительный;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	ПоказанияОдометраНачало = 0;
	ПоказанияОдометраОкончание = 0;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ДополнительныеСвойства.Вставить("ЭтоНовый",                    ЭтоНовый()); 
	ДополнительныеСвойства.Вставить("ДатаДокументаСдвинутаВперед", Ложь); 
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	
	ПараметрыПроведения = Документы.ЗаказНаДоставку.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	дт_ОбщегоНазначения.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	дт_Продажи.ПодготовитьНаборыЗаписей(ЭтотОбъект);
	дт_Грузоперевозки.ПодготовитьНаборыЗаписей(ЭтотОбъект);	
	
	// Формирование движений
	дт_Продажи.ОтразитьДвижения(ПараметрыПроведения, Движения, Отказ);
	дт_Грузоперевозки.ОтразитьПоказанияОдометра(ПараметрыПроведения, Движения, Отказ);
	дт_Грузоперевозки.ОтразитьТопливоВБаках(ПараметрыПроведения, Движения, Отказ);
	
	Движения.Записать();
	
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТопливоВБаках", ПараметрыПроведения.ТаблицаТопливоВБаках);
	ДополнительныеСвойства.ДляПроведения.МоментКонтроля = Новый Граница(МоментВремени(), ВидГраницы.Включая);
	
	// Контроль отрицательных остаткок по регистрам накопления
	Документы.ЗаказНаДоставку.ВыполнитьКонтроль(ЭтотОбъект, ДополнительныеСвойства, Отказ);
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	//Префикс = дт_ОбщегоНазначения.ПрефиксОрганизации(Организация);
КонецПроцедуры



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти

#КонецЕсли