#Область ОбработчикиСобытий
Функция ПолучитьТоварыПоИндКодамGetProductsByIds(Запрос)
	///+ГомзМА 04.07.2024
	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);

	Массив = ПрочитатьJSON(ЧтениеJSON);

	Индкода = Массив.ids;
	МассивИнфо = Новый Массив;

	Для Каждого Индкод Из Индкода Цикл
		Если стрНайти(Индкод, "_") <> 0 Тогда
			запросТовара = Новый Запрос;
			запросТовара.Текст =  СтрШаблон(текстДляТовара(), Формат(10000, "ЧГ="));

			запросТовара.УстановитьПараметр("Наименование", Строка(Индкод));
			запросТовара.УстановитьПараметр("НачинаяСЗаписи", 0);
	
		//@skip-check query-in-loop
			ТЗ = запросТовара.Выполнить().Выгрузить();
			ТЗ.Колонки.Добавить("колФото", Новый ОписаниеТипов("Число"));
			ТЗ.Колонки.Добавить("Фото", Новый ОписаниеТипов("Массив"));
			ИндКоды = тз.ВыгрузитьКолонку("индкод");
			Фотки = РаботаССайтомWT.ПолучениеФото(ИндКоды);
			итер = 0;

			Для Каждого стр Из ТЗ Цикл
				НайденныеФотки = Новый Массив;

				НайденныеФотки = Фотки[итер].urls;
				МассивФото = Новый массив;
				Если НайденныеФотки <> Неопределено И НайденныеФотки.Количество() > 0 Тогда

					стр.колфото = 1;

					Для Каждого Фотка Из НайденныеФотки Цикл
						Текст = "";

						Текст = Фотка;
						МассивФото.Добавить(Текст);
					КонецЦикла;
				КонецЕсли;
				итер = итер + 1;
				тз.Сортировать("колФото Убыв");

				СтруктураТоваров = Новый Структура;
				СтруктураТоваров.Вставить("name", Строка(стр.Наименование));
				СтруктураТоваров.Вставить("article", Строка(стр.Артикул));
				СтруктураТоваров.Вставить("price", стр.Цена);
				СтруктураТоваров.Вставить("comment", Строка(стр.Комментарий));
				СтруктураТоваров.Вставить("shelf", Строка(стр.Адрес));
				Попытка
					СтруктураТоваров.Вставить("yearcar", Число(стр.машинаГод));
				Исключение
					СтруктураТоваров.Вставить("yearcar", Число(0));
				КонецПопытки;
				СтруктураТоваров.Вставить("code", Строка(стр.Код));
				СтруктураТоваров.Вставить("id", Строка(стр.индкод));
				СтруктураТоваров.Вставить("poddon", Строка(стр.Поддон));

				СтруктураТоваров.Вставить("photos", МассивФото);

				МассивИнфо.Добавить(СтруктураТоваров);
			КонецЦикла;

		Иначе
			ОбъектНоменклатуры = Справочники.Номенклатура.НайтиПоКоду(Индкод).ПолучитьОбъект();
			СтруктураТоваров = Новый Структура;
			СтруктураТоваров.Вставить("name", Строка(ОбъектНоменклатуры.Наименование));
			СтруктураТоваров.Вставить("article", Строка(ОбъектНоменклатуры.Артикул));
			СтруктураТоваров.Вставить("price", ОбъектНоменклатуры.РекомендованаяЦена);
			СтруктураТоваров.Вставить("comment", Строка(ОбъектНоменклатуры.Комментарий));
			СтруктураТоваров.Вставить("shelf", Строка(ОбъектНоменклатуры.МестоНаСкладе2));
			СтруктураТоваров.Вставить("code", Строка(ОбъектНоменклатуры.Код));
			СтруктураТоваров.Вставить("type", "CARD_PRODUCT");
			Попытка
				//@skip-check query-in-loop
				Кодноменк = ПолучитьКоличествоУчтенногоТовара(ОбъектНоменклатуры.Код);

				СтруктураТоваров.Вставить("count_registered", Число(Кодноменк));
			Исключение
				СтруктураТоваров.Вставить("count_registered", Число(0));
			КонецПопытки;
			СтруктураТоваров.Вставить("id", Строка(ОбъектНоменклатуры.Код));
			СтруктураТоваров.Вставить("poddon", "");

			СтруктураТоваров.Вставить("photos", МассивФото);

			Код = ОбъектНоменклатуры.Код;
			ИндКоды =  Новый массив;
			ИндКоды.Добавить(Код);

			Попытка
				Попытка
					Фотки = РаботаССайтомWT.ПолучениеФотокарточек(ИндКоды);
					НайденныеФотки = Фотки[0].images.common;
					Если Фотки[0].images.main <> "" Тогда
						НайденныеФотки.Вставить(0, Фотки[0].images.main);
					КонецЕсли;
				Исключение
					НайденныеФотки = Новый Массив;
				КонецПопытки;
				МассивФото = Новый массив;

				Текст = НайденныеФотки;
				Если НайденныеФотки <> Неопределено И НайденныеФотки <> "" Тогда
					Для Каждого Фотка Из НайденныеФотки Цикл
						Текст = "";

						Текст = Фотка;
						МассивФото.Добавить(Текст);
					КонецЦикла;
				КонецЕсли;

			Исключение
				МассивФото.Добавить("");
			КонецПопытки;

			СтруктураТоваров.Вставить("photos", НайденныеФотки);

			МассивИнфо.Добавить(СтруктураТоваров);
		КонецЕсли;

	КонецЦикла;

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();

	ЗаписатьJSON(ЗаписьJSON, МассивИнфо);

	СтрокаДляОтвета = ЗаписьJSON.Закрыть();

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета);

	Возврат Ответ;
	///-ГомзМА 04.07.2024
КонецФункции


Функция ПолучитьТоварыПоИндКодам2GetProductsByIdsV2(Запрос)
	// Комлев АА 07/12/ 24 +++
	Попытка
		Тело = Запрос.ПолучитьТелоКакстроку();
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Тело);

		Массив = ПрочитатьJSON(ЧтениеJSON);

		МассивИндКодов = Массив.ids;
		запросТовара = Новый Запрос;
		запросТовара.Текст =  СтрШаблон(текстДляТовараБезЛишнихПолей(), Формат(10000, "ЧГ="));

		запросТовара.УстановитьПараметр("МассивИндКодов", МассивИндКодов);
		ВыборкаТовры = запросТовара.Выполнить().Выбрать();
		МассивТоваров = Новый Массив;

		Фотки = РаботаССайтомWT.ПолучениеФото(МассивИндКодов);
		Пока ВыборкаТовры.Следующий() Цикл
			СтруктураТоваров = Новый Структура;
			СтруктураТоваров.Вставить("name", Строка(ВыборкаТовры.Наименование));
			СтруктураТоваров.Вставить("article", Строка(ВыборкаТовры.Артикул));
			СтруктураТоваров.Вставить("price", ВыборкаТовры.Цена);
			СтруктураТоваров.Вставить("id", Строка(ВыборкаТовры.индкод));
			МассивТоваров.Добавить(СтруктураТоваров);
		КонецЦикла;

		Для Каждого Фото Из Фотки Цикл
			Для Инд = 0 По МассивТоваров.ВГраница() Цикл
				Если Фото.indCode = МассивТоваров[Инд].id Тогда
					МассивТоваров[Инд].Вставить("photos", Фото.urls);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		МассивТоваровОтсортированный = Новый Массив;
		
		Для Каждого ЭлементИзФайла Из МассивИндКодов Цикл
			Для Инд = 0 По МассивТоваров.ВГраница() Цикл
				Если ЭлементИзФайла = МассивТоваров[Инд].id Тогда
					МассивТоваровОтсортированный.Добавить(МассивТоваров[Инд]);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();

		ЗаписатьJSON(ЗаписьJSON, МассивТоваровОтсортированный);

		СтрокаДляОтвета = ЗаписьJSON.Закрыть();

		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета);

		Возврат Ответ;
	Исключение
		Инфо = ИнформацияОбОшибке();
		Ответ = Новый HTTPСервисОтвет(500);
		СтрокаОшибки = "" + Инфо.Описание + ?(Инфо.Причина <> Неопределено, Инфо.Причина.Описание, "");
		Ответ.УстановитьТелоИзСтроки("" + СтрокаОшибки);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		Возврат Ответ;
	КонецПопытки;
	
	// Комлев АА 07/12/ 24 +++
КонецФункции

Функция СписокТоваровДляИнвентаризацииProductsListInventory(Запрос)
	/// Комлев АА 06/12/24 +++
	Попытка
		Город = Число(Запрос.ПараметрыURL.Получить("city"));
		Если Город = 1 Тогда
			Склад = Справочники.Склады.НайтиПоКоду("000000002");
		ИначеЕсли Город = 2 Тогда
			Склад = Справочники.Склады.НайтиПоКоду("000000005");
		ИначеЕсли Город = 3 Тогда
			Склад = Справочники.Склады.НайтиПоКоду("000000008");
		КонецЕсли;
		
		Количество = Число(Запрос.ПараметрыURL.Получить("count"));
		Страница = Число(Запрос.ПараметрыURL.Получить("page"));

		Запрос = Новый Запрос;
		Текст =
		"ВЫБРАТЬ
		|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиентаТовары.Ссылка) КАК КоличествоЗаявок
		|ПОМЕСТИТЬ ТоварыИзЗаявок
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|ГДЕ
		|	ЗаказКлиентаТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ЗаказКлиентаТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрНакопления1Остатки.Товар КАК Товар,
		|	КОЛИЧЕСТВО(РегистрНакопления1Остатки.КолвоОстаток) КАК КолвоОстаток,
		|	СУММА(ИндНомер.Цена) КАК Сумма
		|ПОМЕСТИТЬ ОстаткиСумма
		|ИЗ
		|	РегистрНакопления.РегистрНакопления1.Остатки(, Склад = &Склад) КАК РегистрНакопления1Остатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК ИндНомер
		|		ПО ИндНомер.индкод = РегистрНакопления1Остатки.индкод
		|ГДЕ
		|	РегистрНакопления1Остатки.КолвоОстаток > 0
		|СГРУППИРОВАТЬ ПО
		|	РегистрНакопления1Остатки.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка КАК Товар,
		|	СпрНоменклатура.Артикул КАК Артикул,
		|	ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) КАК КоличествоЗаявок,
		|	12 КАК Месяцев,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) / 12 КАК ЧИСЛО(10, 2)) КАК Коэффицент,
		|	ЕстьNULL(ОстаткиСумма.КолвоОстаток, 0) КАК КолвоОстаток,
		|	ОстаткиСумма.Сумма КАК Сумма,
		|	ВЫБОР
		|		КОГДА СпрНоменклатура.ДатаСоздания > &ДатаПолгодаНазад
		|			ТОГДА ""Новые""
		|		КОГДА СпрНоменклатура.ДатаСоздания < &ДатаПолгодаНазад
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) = 0
		|			ТОГДА ""Низкий спрос (Нет заявок)""
		|		КОГДА СпрНоменклатура.ДатаСоздания < &ДатаПолгодаНазад
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) > 0
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) <= 1
		|			ТОГДА ""Категория 8 (1 Заявка)""
		|		КОГДА СпрНоменклатура.ДатаСоздания < &ДатаПолгодаНазад
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) > 1
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) <= 3
		|			ТОГДА ""Категория 7 (от 2 до 3)""
		|		КОГДА СпрНоменклатура.ДатаСоздания < &ДатаПолгодаНазад
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) > 3
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) <= 7
		|			ТОГДА ""Категория 6 (от 3 до 7)""
		|		КОГДА СпрНоменклатура.ДатаСоздания < &ДатаПолгодаНазад
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) > 7
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) <= 13
		|			ТОГДА ""Категория 5 (от 7 до 13)""
		|		КОГДА СпрНоменклатура.ДатаСоздания < &ДатаПолгодаНазад
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) > 13
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) <= 33
		|			ТОГДА ""Категория 4 (от 13 до 33)""
		|		КОГДА СпрНоменклатура.ДатаСоздания < &ДатаПолгодаНазад
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) > 33
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) <= 50
		|			ТОГДА ""Категория 3 (от 33 до 50)""
		|		КОГДА СпрНоменклатура.ДатаСоздания < &ДатаПолгодаНазад
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) > 50
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) <= 100
		|			ТОГДА ""Категория 2 (от 50 до 100)""
		|		КОГДА СпрНоменклатура.ДатаСоздания < &ДатаПолгодаНазад
		|		И ЕСТЬNULL(ТоварыИзЗаявок.КоличествоЗаявок, 0) > 100
		|			ТОГДА ""Высокий спрос (от 100)""
		|	КОНЕЦ КАК Категория,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиСумма.КолвоОстаток, 0) = 0
		|		ИЛИ ЕСТЬNULL(ОстаткиСумма.КолвоОстаток, 0) = 1
		|		ИЛИ ЕСТЬNULL(ОстаткиСумма.КолвоОстаток, 0) = 2
		|		ИЛИ ЕСТЬNULL(ОстаткиСумма.КолвоОстаток, 0) = 3
		|			ТОГДА СпрНоменклатура.РекомендованаяЦена
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РекомендованаяЦена,
		|	СпрНоменклатура.Код,
		|	СпрНоменклатура.ОстатокСовпадает,
		|	дт_МестаХраненияНоменклатурыСрезПоследних.МестоХранения,
		|	дт_МестаХраненияНоменклатурыСрезПоследних.Склад,
		|	СпрНоменклатура.ОстатокСовпадаетМСК,
		|	СпрНоменклатура.ОстатокСовпадаетЕКБ
		|ПОМЕСТИТЬ ТоварыСКатегорией
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыИзЗаявок КАК ТоварыИзЗаявок
		|		ПО ТоварыИзЗаявок.Номенклатура = СпрНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиСумма КАК ОстаткиСумма
		|		ПО ОстаткиСумма.Товар = СпрНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дт_МестаХраненияНоменклатуры.СрезПоследних(, Склад = &Склад) КАК
		|			дт_МестаХраненияНоменклатурыСрезПоследних
		|		ПО дт_МестаХраненияНоменклатурыСрезПоследних.Номенклатура = СпрНоменклатура.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыСКатегорией.Товар,
		|	ТоварыСКатегорией.Артикул,
		|	ТоварыСКатегорией.КолвоОстаток,
		|	ТоварыСКатегорией.Категория,
		|	ТоварыСКатегорией.МестоХранения,
		|	ТоварыСКатегорией.ОстатокСовпадает,
		|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
		|	ТоварыСКатегорией.Код,
		|	ТоварыСКатегорией.Склад,
		|	ТоварыСКатегорией.ОстатокСовпадаетМСК,
		|	ТоварыСКатегорией.ОстатокСовпадаетЕКБ
		|ПОМЕСТИТЬ ТоварыСНомеромЗаписи
		|ИЗ
		|	ТоварыСКатегорией КАК ТоварыСКатегорией
		|ГДЕ
		|	ТоварыСКатегорией.Категория = ""Высокий спрос (от 100)""
		|	ИЛИ ТоварыСКатегорией.Категория = ""Категория 2 (от 50 до 100)""
		|	ИЛИ ТоварыСКатегорией.Категория = ""Категория 3 (от 33 до 50)""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТоварыСНомеромЗаписи.Товар,
		|	ТоварыСНомеромЗаписи.Артикул,
		|	ТоварыСНомеромЗаписи.КолвоОстаток,
		|	ТоварыСНомеромЗаписи.МестоХранения,
		|	ТоварыСНомеромЗаписи.ОстатокСовпадает,
		|	ТоварыСНомеромЗаписи.НомерЗаписи,
		|	ТоварыСНомеромЗаписи.Код,
		|	ТоварыСНомеромЗаписи.Склад,
		|	ТоварыСНомеромЗаписи.ОстатокСовпадаетМСК,
		|	ТоварыСНомеромЗаписи.ОстатокСовпадаетЕКБ
		|ИЗ
		|	ТоварыСНомеромЗаписи КАК ТоварыСНомеромЗаписи
		|ГДЕ
		|	ТоварыСНомеромЗаписи.НомерЗаписи >= &НачинаяСЗаписи";

		Запрос.Текст =  СтрШаблон(Текст, Формат(100000, "ЧГ="));

		ДатаПолгодаНазад = ДобавитьМесяц(ТекущаяДата(), -6);
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("ДатаПолгодаНазад", ДатаПолгодаНазад);
		Запрос.УстановитьПараметр("НачинаяСЗаписи", 0);

		ОбщееКолво = Запрос.Выполнить().Выбрать().Количество();
		Запрос.Текст =  СтрШаблон(Текст, Формат(?(Количество > 0, Количество, 10000), "ЧГ="));

		Запрос.УстановитьПараметр("Склад", Склад);

		Если Количество * Страница > 0 И Страница > 1 Тогда
			Запрос.УстановитьПараметр("НачинаяСЗаписи", Количество * (Страница - 1) + 1);

		Иначе
			Запрос.УстановитьПараметр("НачинаяСЗаписи", 0);
		КонецЕсли;
		Выборка = Запрос.Выполнить().Выбрать();
		
		МассивТоваров = Новый Массив;
		Пока Выборка.Следующий() Цикл
			СтруктураТовара = Новый Структура;
			СтруктураТовара.Вставить("name", Строка(Выборка.Товар));
			СтруктураТовара.Вставить("id", Строка(Выборка.Код));
			СтруктураТовара.Вставить("article", Строка(Выборка.Артикул));
			СтруктураТовара.Вставить("count", Число(Выборка.КолвоОстаток));
			СтруктураТовара.Вставить("warehouse", Строка(Выборка.Склад));
			СтруктураТовара.Вставить("place", Строка(Выборка.МестоХранения));
			СтруктураТовара.Вставить("verified_NN", Строка(Выборка.ОстатокСовпадает));
			СтруктураТовара.Вставить("verified_MSK", Строка(Выборка.ОстатокСовпадает));
			СтруктураТовара.Вставить("verified_EKB", Строка(Выборка.ОстатокСовпадает));
			МассивТоваров.Добавить(СтруктураТовара);
		КонецЦикла;
		Итог = ОбщееКолво / ?(Количество = 0, ОбщееКолво, Количество);
		Итог = ?((Итог - Цел(Итог)) > 0, Цел(Итог) + 1, Цел(Итог));
		
		СтруктураОтвета= Новый Структура;
		СтруктураОтвета.Вставить("pages", Итог);
		СтруктураОтвета.Вставить("count", ОбщееКолво);
		СтруктураОтвета.Вставить("products", МассивТоваров);

		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();

		ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);

		СтрокаДляОтвета = ЗаписьJSON.Закрыть();

		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
		Возврат Ответ;
	Исключение
		Инфо = ИнформацияОбОшибке();
		Ответ = Новый HTTPСервисОтвет(500);
		СтрокаОшибки = "" + Инфо.Описание + ?(Инфо.Причина <> Неопределено, Инфо.Причина.Описание, "");
		Ответ.УстановитьТелоИзСтроки("" + СтрокаОшибки);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		Возврат Ответ;
	КонецПопытки;
	/// Комлев АА 06/12/24 ---
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьКоличествоУчтенногоТовара(Код)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(РегистрНакопления1Остатки.КолвоОстаток, 0)) КАК КолвоОстаток
	|ИЗ
	|	РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК ИндНомер
	|		ПО РегистрНакопления1Остатки.индкод = ИндНомер.индкод
	|ГДЕ
	|	ИндНомер.АвитоЧастник
	|	и РегистрНакопления1Остатки.Товар.Код = &Код
	|СГРУППИРОВАТЬ ПО
	|	РегистрНакопления1Остатки.Товар";

	Запрос.УстановитьПараметр("Код", Код);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.КолвоОстаток;
КонецФункции

Функция текстДляТовара()
	Текстзапроса = "ВЫБРАТЬ
				   |	ИндНомер.индкод КАК индкод
				   |ПОМЕСТИТЬ ВТ_предКоды
				   |ИЗ
				   |	РегистрСведений.ИндНомер КАК ИндНомер
				   |ГДЕ
				   |	ИндНомер.индкод.Наименование = &Наименование
				   |
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	РегИндНомер.индкод.Владелец.Наименование КАК Наименование,
				   |	РегИндНомер.индкод КАК индкод,
				   |	РегИндНомер.Состояние КАК Состояние,
				   |	ВЫБОР
				   |		КОГДА РегИндНомер.Цена > 0
				   |			ТОГДА РегИндНомер.Цена
				   |		ИНАЧЕ РегИндНомер.индкод.Владелец.РекомендованаяЦена
				   |	КОНЕЦ КАК Цена,
				   |	РегИндНомер.Комментарий КАК Комментарий,
				   |	РегИндНомер.индкод.Владелец.Артикул КАК Артикул,
				   |	ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.Подкатегория2) КАК Подкатегория2,
				   |	ВЫБОР
				   |		КОГДА РегИндНомер.Стеллаж <> ЗНАЧЕНИЕ(справочник.Стеллаж.ПустаяСсылка)
				   |			ТОГДА ПРЕДСТАВЛЕНИЕ(РегИндНомер.Стеллаж)
				   |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.МестоНаСкладе2)
				   |	КОНЕЦ КАК Адрес,
				   |	РегИндНомер.Ответственный КАК Учетчик,
				   |	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
				   |	ПРЕДСТАВЛЕНИЕ(РегистрНакопления1Остатки.Склад) КАК Склад,
				   |	РегИндНомер.Поддон КАК Поддон,
				   |	РегИндНомер.АвитоЧастник КАК АвитоЧастник,
				   |	НоменклатураТовар.Размеры КАК Размеры,
				   |	НоменклатураТовар.Вес КАК Вес,
				   |	НоменклатураТовар.выс КАК выс,
				   |	НоменклатураТовар.длин КАК длин,
				   |	НоменклатураТовар.шир КАК шир,
				   |
				   |	НоменклатураТовар.Код КАК НоменклатураКод,
				   |
				   |РегистрНакопления1Остатки.КолвоОстаток Как Остаток,
				   |ЕстьNULL(РегистрНакопления1Остатки.машина.Год,0 )КАК машинаГод,
				   |	РегИндНомер.индкод.Владелец.Код КАК Код,
				   |ВЫБОР
				   |Когда регистрНакопления1Остатки.КолвоОстаток > 0 Тогда
				   |""Есть в наличии""
				   |Иначе
				   |""Товар продан""
				   |
				   |КОНЕЦ КАК ФактНаличия
				   |ПОМЕСТИТЬ ВТ_данныеНоменклатур
				   |ИЗ
				   |	ВТ_предКоды КАК ИндНомер
				   |		Левое СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
				   |		ПО ИндНомер.индкод = РегистрНакопления1Остатки.индкод
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураТовар
				   |		ПО ИндНомер.индкод.Владелец.Ссылка = НоменклатураТовар.Ссылка
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК РегИндНомер
				   |		ПО ИндНомер.индкод = РегИндНомер.индкод
				   |{ГДЕ
				   |	(РегИндНомер.АвитоЧастник = &Ач) КАК Поле2}
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ ПЕРВЫЕ %1
				   |	ВТ_данныеНоменклатур.Наименование КАК Наименование,
				   |	ПРЕДСТАВЛЕНИЕ(ВТ_данныеНоменклатур.индкод) КАК индкод,
				   |	ВТ_данныеНоменклатур.Цена КАК Цена,
				   |	ВТ_данныеНоменклатур.Состояние КАК Состояние,
				   |	ВТ_данныеНоменклатур.Комментарий КАК Комментарий,
				   |	ВТ_данныеНоменклатур.Артикул КАК Артикул,
				   |	ВТ_данныеНоменклатур.Подкатегория2 КАК Подкатегория2,
				   |	ВТ_данныеНоменклатур.Адрес КАК Адрес,
				   |	ВТ_данныеНоменклатур.Учетчик КАК Учетчик,
				   |	ВТ_данныеНоменклатур.Склад КАК Склад,
				   |	ВТ_данныеНоменклатур.НомерЗаписи КАК НомерЗаписи,
				   |	ВТ_данныеНоменклатур.Поддон КАК Поддон,
				   |	ВТ_данныеНоменклатур.АвитоЧастник КАК АвитоЧастник,
				   |	ВТ_данныеНоменклатур.ФактНаличия КАК ФактНаличия,
				   |ВТ_данныеНоменклатур.Остаток КАК Остаток,
				   |ВТ_данныеНоменклатур.машинаГод КАК машинаГод,
				   |	ВТ_данныеНоменклатур.Код КАК Код,
				   |	ВТ_данныеНоменклатур.Размеры КАК Размеры,
				   |	ВТ_данныеНоменклатур.Вес КАК Вес,
				   |	ВТ_данныеНоменклатур.выс КАК выс,
				   |	ВТ_данныеНоменклатур.длин КАК длин,
				   |	ВТ_данныеНоменклатур.НоменклатураКод КАК НоменклатураКод,
				   |	ВТ_данныеНоменклатур.шир КАК шир
				   |ИЗ
				   |	ВТ_данныеНоменклатур КАК ВТ_данныеНоменклатур
				   |ГДЕ
				   |	ВТ_данныеНоменклатур.НомерЗаписи >= &НачинаяСЗаписи
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	НомерЗаписи";

	Возврат Текстзапроса;
КонецФункции

Функция текстДляТовараБезЛишнихПолей()
	Текстзапроса = "ВЫБРАТЬ
	|	РегИндНомер.индкод.Владелец.Наименование КАК Наименование,
	|	РегИндНомер.индкод КАК индкод,
	|	ВЫБОР
	|		КОГДА РегИндНомер.Цена > 0
	|			ТОГДА РегИндНомер.Цена
	|		ИНАЧЕ РегИндНомер.индкод.Владелец.РекомендованаяЦена
	|	КОНЕЦ КАК Цена,
	|	РегИндНомер.индкод.Владелец.Артикул КАК Артикул,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
	|	РегИндНомер.индкод.Владелец.Код КАК Код
	|ПОМЕСТИТЬ ВТ_данныеНоменклатур
	|ИЗ
	|	РегистрСведений.ИндНомер КАК РегИндНомер
	|ГДЕ
	|	РегИндНомер.индкод.Наименование В (&МассивИндКодов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ %1
	|	ВТ_данныеНоменклатур.Наименование КАК Наименование,
	|	ПРЕДСТАВЛЕНИЕ(ВТ_данныеНоменклатур.индкод) КАК индкод,
	|	ВТ_данныеНоменклатур.Цена КАК Цена,
	|	ВТ_данныеНоменклатур.Артикул КАК Артикул,
	|	ВТ_данныеНоменклатур.НомерЗаписи КАК НомерЗаписи,
	|	ВТ_данныеНоменклатур.Код КАК Код
	|ИЗ
	|	ВТ_данныеНоменклатур КАК ВТ_данныеНоменклатур
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерЗаписи";

	Возврат Текстзапроса;
КонецФункции
#КонецОбласти