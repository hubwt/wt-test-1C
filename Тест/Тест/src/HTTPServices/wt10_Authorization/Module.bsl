#Область ОбработчикиСобытий

Функция ПолучитьАвторизациюСотрудникаAuthorizationemployee(Запрос)
	
	ЗапросСотрудника = Новый запрос;
	ЗапросСотрудника.Текст = "ВЫБРАТЬ
							 |	ДолжностиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
							 |	ДолжностиСотрудниковСрезПоследних.Организация КАК Организация,
							 |	ДолжностиСотрудниковСрезПоследних.Подразделение КАК Подразделение,
							 |	ДолжностиСотрудниковСрезПоследних.Должность КАК Должность,
							 |	ДолжностиСотрудниковСрезПоследних.ТипДоговора КАК ТипДоговора,
							 |	ДолжностиСотрудниковСрезПоследних.Период КАК Период
							 |ПОМЕСТИТЬ втДолжности
							 |ИЗ
							 |	РегистрСведений.ДолжностиСотрудников.СрезПоследних КАК ДолжностиСотрудниковСрезПоследних
							 |
							 |ИНДЕКСИРОВАТЬ ПО
							 |	Сотрудник,
							 |	Организация,
							 |	Подразделение,
							 |	Должность,
							 |	ТипДоговора,
							 |	Период
							 |;
							 |
							 |////////////////////////////////////////////////////////////////////////////////
							 |ВЫБРАТЬ
							 |	втДолжности.Сотрудник КАК Сотрудник,
							 |	МАКСИМУМ(втДолжности.Период) КАК Период
							 |ПОМЕСТИТЬ втДолжностиПериоды
							 |ИЗ
							 |	втДолжности КАК втДолжности
							 |СГРУППИРОВАТЬ ПО
							 |	втДолжности.Сотрудник
							 |
							 |ИНДЕКСИРОВАТЬ ПО
							 |	Сотрудник,
							 |	Период
							 |;
							 |
							 |////////////////////////////////////////////////////////////////////////////////
							 |ВЫБРАТЬ
							 |	втДолжности.Сотрудник КАК Сотрудник,
							 |	МИНИМУМ(втДолжности.Организация) КАК Организация,
							 |	МИНИМУМ(втДолжности.Подразделение) КАК Подразделение,
							 |	МИНИМУМ(втДолжности.Должность) КАК Должность,
							 |	МИНИМУМ(втДолжности.ТипДоговора) КАК ТипДоговора
							 |ПОМЕСТИТЬ втДолжностиСотрудников
							 |ИЗ
							 |	втДолжности КАК втДолжности
							 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДолжностиПериоды КАК втДолжностиПериоды
							 |		ПО втДолжности.Сотрудник = втДолжностиПериоды.Сотрудник
							 |		И (втДолжностиПериоды.Период = втДолжности.Период)
							 |СГРУППИРОВАТЬ ПО
							 |	втДолжности.Сотрудник
							 |
							 |ИНДЕКСИРОВАТЬ ПО
							 |	Сотрудник
							 |;
							 |
							 |////////////////////////////////////////////////////////////////////////////////
							 |ВЫБРАТЬ
							 |	МАКСИМУМ(КадровыйПриказ.Должность) КАК Должность,
							 |	МАКСИМУМ(КадровыйПриказ.Отдел) КАК Отдел,
							 |	КадровыйПриказ.Сотрудник КАК Сотрудник,
							 |	МАКСИМУМ(КадровыйПриказ.Дата) КАК ДатаДоговора
							 |ПОМЕСТИТЬ ВТ_ДолжностиНовые
							 |ИЗ
							 |	Документ.КадровыйПриказ КАК КадровыйПриказ
							 |СГРУППИРОВАТЬ ПО
							 |	КадровыйПриказ.Сотрудник
							 |;
							 |
							 |////////////////////////////////////////////////////////////////////////////////
							 |ВЫБРАТЬ
							 |	СотрудникиКонтактнаяИнформация.Ссылка КАК Ссылка,
							 |	СотрудникиКонтактнаяИнформация.Представление КАК Представление,
							 |	СотрудникиКонтактнаяИнформация.Представление КАК ТелефонЛичный
							 |ПОМЕСТИТЬ ТелефоныЛичные
							 |ИЗ
							 |	Справочник.Сотрудники.КонтактнаяИнформация КАК СотрудникиКонтактнаяИнформация
							 |ГДЕ
							 |	СотрудникиКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСотрудникаЛичный)
							 |;
							 |
							 |////////////////////////////////////////////////////////////////////////////////
							 |ВЫБРАТЬ
							 |	СотрудникиКонтактнаяИнформация.Ссылка КАК Ссылка,
							 |	СотрудникиКонтактнаяИнформация.Представление КАК Представление,
							 |	СотрудникиКонтактнаяИнформация.Представление КАК ТелефонСлужебный
							 |ПОМЕСТИТЬ ТелефоныСлужебные
							 |ИЗ
							 |	Справочник.Сотрудники.КонтактнаяИнформация КАК СотрудникиКонтактнаяИнформация
							 |ГДЕ
							 |	СотрудникиКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСотрудникаСлужебный)
							 |;
							 |
							 |////////////////////////////////////////////////////////////////////////////////
							 |ВЫБРАТЬ
							 |	ТелефоныЛичные.ТелефонЛичный КАК ТелефонЛичный,
							 |	ТелефоныСлужебные.ТелефонСлужебный КАК ТелефонСлужебный,
							 |	Сотрудники.Наименование КАК Наименование,
							 |	Сотрудники.Код КАК Код,
							 |	втДолжностиСотрудников.Организация КАК Организация,
							 |	втДолжностиСотрудников.Подразделение КАК Подразделение,
							 |	втДолжностиСотрудников.Должность КАК Должность,
							 |	Сотрудники.ДатаРождения КАК ДатаРождения,
							 |	ЕСТЬNULL(втДолжностиСотрудников.Должность,
							 |		ЗНАЧЕНИЕ(Справочник.ДолжностиПредприятия.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ДолжностиПредприятия.ПустаяСсылка) КАК
							 |		Действующий,
							 |	Сотрудники.Руководитель КАК Руководитель,
							 |	Сотрудники.МестоРаботы КАК МестоРаботы,
							 |	Сотрудники.ПарольДляУК КАК ПарольДляУК,
							 |	Сотрудники.Тележка КАК Тележка,
							 |	Сотрудники.РолиWT10.(
							 |		Ссылка,
							 |		НомерСтроки,
							 |		Роль)
							 |ИЗ
							 |	Справочник.Сотрудники КАК Сотрудники
							 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолжностиНовые КАК ВТ_ДолжностиНовые
							 |		ПО (ВТ_ДолжностиНовые.Сотрудник = Сотрудники.Ссылка)
							 |		ЛЕВОЕ СОЕДИНЕНИЕ втДолжностиСотрудников КАК втДолжностиСотрудников
							 |		ПО (втДолжностиСотрудников.Сотрудник = Сотрудники.Ссылка)
							 |		ЛЕВОЕ СОЕДИНЕНИЕ ТелефоныЛичные КАК ТелефоныЛичные
							 |		ПО (ТелефоныЛичные.Ссылка = Сотрудники.Ссылка)
							 |		ЛЕВОЕ СОЕДИНЕНИЕ ТелефоныСлужебные КАК ТелефоныСлужебные
							 |		ПО (ТелефоныСлужебные.Ссылка = Сотрудники.Ссылка)
							 |ГДЕ
							 |	НЕ Сотрудники.Пользователь.Недействителен
							 | И (ТелефоныЛичные.ТелефонЛичный = &Телефон
							 |	ИЛИ ТелефоныСлужебные.ТелефонСлужебный = &Телефон)";

	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);

	Массив = ПрочитатьJSON(ЧтениеJSON);

	ЗапросСотрудника.УстановитьПараметр("Телефон", Строка(Массив.phone));
	ВыборкаСотрудника = ЗапросСотрудника.Выполнить().Выбрать();
	Если ВыборкаСотрудника.Количество() > 0 Тогда
		ВыборкаСотрудника.Следующий();
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("name", Строка(ВыборкаСотрудника.Наименование));
		СтруктураОтвета.Вставить("id", Строка(ВыборкаСотрудника.Код));
		СтруктураОтвета.Вставить("company", Строка(ВыборкаСотрудника.Организация));
		СтруктураОтвета.Вставить("post", Строка(ВыборкаСотрудника.Должность));
		СтруктураОтвета.Вставить("birthdate", Строка(ВыборкаСотрудника.ДатаРождения));
		СтруктураОтвета.Вставить("pphone", Строка(ВыборкаСотрудника.ТелефонЛичный));
		СтруктураОтвета.Вставить("wphone", Строка(ВыборкаСотрудника.ТелефонСлужебный));
		СтруктураОтвета.Вставить("car", Строка(ВыборкаСотрудника.Тележка));
		Если ВыборкаСотрудника.Тележка <> Справочники.Стеллаж.ПустаяСсылка() Тогда
			СтруктураОтвета.Вставить("car_items", КоличествоТоваровВКорзине(ВыборкаСотрудника.Тележка));
		Иначе
			СтруктураОтвета.Вставить("car_items", 0);
		КонецЕсли;

		Роли = ВыборкаСотрудника.РолиWT10.Выгрузить();

		МассивРолей = Новый массив;
		Для Каждого стр Из Роли Цикл
			Структурароли = Новый Структура;
			Структурароли.Вставить("id", Стр.Роль.Код);
			Структурароли.Вставить("title", Строка(Стр.Роль));
			МассивРолей.Добавить(Строка(Стр.Роль));
		КонецЦикла;

		СтруктураОтвета.Вставить("roles", Структурароли);

		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();

		ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();

		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);

		Возврат Ответ;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьАвторизациюКлиентаAuthorizationclient(Запрос)
	
	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);

	Массив = ПрочитатьJSON(ЧтениеJSON);
	Телефон= СокрЛП(Массив.phone);
	МассивСтрок = Новый Массив;
	Для Сч = 1 По СтрДлина(Телефон) Цикл
		МассивСтрок.Добавить(Сред(Телефон, Сч, 1));
	КонецЦикла;
	МассивСтрок[2] = " " + МассивСтрок[2];
	МассивСтрок[5] = " " + МассивСтрок[5];
	МассивСтрок[8] = "-" + МассивСтрок[8];
	МассивСтрок[10] = "-" + МассивСтрок[10];
	Телефон = СтрСоединить(МассивСтрок, "");

	ЗапросКлиента = Новый запрос;
	ЗапросКлиента.Текст = "ВЫБРАТЬ
						  |	Клиенты.Код КАК Код,
						  |	Клиенты.Наименование КАК Наименование,
						  |	Клиенты.Телефон
						  |ИЗ
						  |	Справочник.Клиенты КАК Клиенты
						  |ГДЕ
						  |	(Клиенты.Телефон = &Телефон
						  |	ИЛИ Клиенты.Телефон = &ТелефонБезМаски)";

	ЗапросКлиента.УстановитьПараметр("Телефон", Телефон);
	ЗапросКлиента.УстановитьПараметр("ТелефонБезМаски", Массив.phone);
	ВыборкаКлиента = ЗапросКлиента.Выполнить().Выбрать();
	Если ВыборкаКлиента.Количество() > 0 Тогда
		ВыборкаКлиента.Следующий();
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("name", Строка(ВыборкаКлиента.Наименование));
		СтруктураОтвета.Вставить("id", Строка(ВыборкаКлиента.Код));
		СтруктураОтвета.Вставить("wphone", Строка(ВыборкаКлиента.Телефон));

		МассивРолей = Новый массив;

		МассивРолей.Добавить("Клиент");
		Структурароли = Новый Структура;
		Структурароли.Вставить("id", "000000099");
		Структурароли.Вставить("title", "Клиент");
		МассивРолей.Добавить(Структурароли);
		СтруктураОтвета.Вставить("roles", Структурароли);
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();

		ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();

		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);

		Возврат Ответ;
	Иначе
		НовыйКлиент = Справочники.Клиенты.СоздатьЭлемент();
		НовыйКлиент.Наименование = Массив.client_name;
		НовыйКлиент.Телефон = Телефон;
		НовыйКлиент.Записать();

		ВыборкаКлиента.Следующий();
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("name", Строка(НовыйКлиент.Наименование));
		СтруктураОтвета.Вставить("id", Строка(НовыйКлиент.Код));
		СтруктураОтвета.Вставить("wphone", Строка(НовыйКлиент.Телефон));
		МассивРолей = Новый массив;

		МассивРолей.Добавить("Клиент");
		Структурароли = Новый Структура;
		Структурароли.Вставить("id", "000000099");
		Структурароли.Вставить("title", "Клиент");
		МассивРолей.Добавить(Структурароли);
		СтруктураОтвета.Вставить("roles", Структурароли);
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();

		ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();

		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);

		Возврат Ответ;
	КонецЕсли;
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция КоличествоТоваровВКорзине(Тележка)
	Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИндНомер.индкод) КАК Количество,
				   |	ИндНомер.Стеллаж КАК Стеллаж
				   |ИЗ
				   |	РегистрСведений.ИндНомер КАК ИндНомер
				   |ГДЕ
				   |	ИндНомер.Стеллаж = &Стеллаж
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	ИндНомер.Стеллаж";
	Запрос.УстановитьПараметр("Стеллаж", Тележка);
	Выборка = запрос.Выполнить().Выбрать();

	Если выборка.Количество() > 0 Тогда
		Выборка.Следующий();
		Возврат выборка.Количество;
	Иначе
		Возврат 0;
	КонецЕсли;

КонецФункции

#КонецОбласти