#Область ОбработчикиСобытий
Функция ПолучитьСтатистикуКладовщиковgetstoragestat(Запрос)
	
	//Сергеев Ф.В. ++ Дата: 30.09.2024
	ЗапросСтаты = Новый Запрос;
	ЗапросСтаты.Текст = "ВЫБРАТЬ
						|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура.Ссылка) КАК Ссылка,
						|	Номенклатура.КтоСоздал КАК КтоСоздал
						|ПОМЕСТИТЬ ВТ_Карточки
						|ИЗ
						|	Справочник.Номенклатура КАК Номенклатура
						|ГДЕ
						|	Номенклатура.ДатаСоздания МЕЖДУ &ДатаНачала И &ДатаОкончания
						|СГРУППИРОВАТЬ ПО
						|	Номенклатура.КтоСоздал
						|;
						|
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	СУММА(Рас_КомплектовкаНоменклатураСписок.Количество) КАК Количество,
						|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Ответственный.Пользователь КАК Ответственный
						|ПОМЕСТИТЬ Комплектовка
						|ИЗ
						|	Документ.Рас_Комплектовка.НоменклатураСписок КАК Рас_КомплектовкаНоменклатураСписок
						|ГДЕ
						|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
						|СГРУППИРОВАТЬ ПО
						|	Рас_КомплектовкаНоменклатураСписок.Ссылка.Ответственный.Пользователь
						|;
						|
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	СУММА(ПоступлениеЗапчастейТаблица.Колво) КАК Колво,
						|	СУММА(ПоступлениеЗапчастейТаблица.Товар.РекомендованаяЦена) КАК ТоварРекомендованаяЦена,
						|	СРЕДНЕЕ(ПоступлениеЗапчастейТаблица.Товар.РекомендованаяЦена) КАК СрЦена,
						|	ПоступлениеЗапчастейТаблица.Ссылка.Ответственный КАК Ответственный
						|ПОМЕСТИТЬ ВТ_Номеклатура
						|ИЗ
						|	Документ.ПоступлениеЗапчастей.Таблица КАК ПоступлениеЗапчастейТаблица
						|ГДЕ
						|	НАЧАЛОПЕРИОДА(ПоступлениеЗапчастейТаблица.ДатаДобавления, ДЕНЬ) МЕЖДУ &ДатаНачала И &ДатаОкончания
						|СГРУППИРОВАТЬ ПО
						|	ПоступлениеЗапчастейТаблица.Ссылка.Ответственный
						|;
						|
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	ВТ_Карточки.Ссылка КАК Карточки,
						|	Комплектовка.Количество КАК Комплектовка,
						|	ВТ_Номеклатура.Колво КАК Поступления,
						|	ВТ_Номеклатура.ТоварРекомендованаяЦена КАК Цена,
						|	ВТ_Номеклатура.ТоварРекомендованаяЦена / ВТ_Номеклатура.Колво КАК СрЦена,
						|	ВТ_Номеклатура.Ответственный КАК Ответственный
						|ИЗ
						|	ВТ_Номеклатура КАК ВТ_Номеклатура
						|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Карточки КАК ВТ_Карточки
						|		ПО ВТ_Номеклатура.Ответственный = ВТ_Карточки.КтоСоздал
						|		ЛЕВОЕ СОЕДИНЕНИЕ Комплектовка КАК Комплектовка
						|		ПО ВТ_Номеклатура.Ответственный = Комплектовка.Ответственный";
	
	
	
	//Сергеев Ф.В. -- Дата: 30.09.2024
КонецФункции

Функция ПолучитьСтатистикуРекламыGetMarketingStat(Запрос)
//Сергеев Ф.В. ++ Дата: 30.09.2024
	НачалоОтбора = НачалоДня(Дата(Запрос.ПараметрыURL["datestart"]));
//	НачалоОтбора = НачалоДня(Дата("20240201"));
	КонецОтбора  = КонецДня(Дата(Запрос.ПараметрыURL["dateend"]));
//	КонецОтбора  = КонецДня(Дата("20240229"));
	МассивОтвета = Новый Массив;

	ЗапросСтаты  = Новый Запрос;
	ЗапросСтаты.Текст = "ВЫБРАТЬ
						|	Представление(ЗаказКлиента.Ответственный) КАК Ответственный,
						|	Представление(Сотрудники.МестоРаботы) КАК МестоРаботы,
						|	ЗаказКлиента.СуммаДокумента КАК СуммаДокумента,
						|	Представление(ЗаказКлиента.Канал) КАК Канал
						|ИЗ
						|	Документ.ЗаказКлиента КАК ЗаказКлиента
						|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
						|		ПО (ЗаказКлиента.Ответственный = Сотрудники.Пользователь)
						|ГДЕ
						|	Сотрудники.МестоРаботы <> ЗНАЧЕНИЕ(справочник.МестоРаботы.ПустаяСсылка)
						|	И ЗаказКлиента.Ответственный <> ЗНАЧЕНИЕ(справочник.пользователи.ПустаяСсылка)
						|	И ЗаказКлиента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
						|ИТОГИ
						|	СУММА(СуммаДокумента)
						|ПО
						|	ОБЩИЕ,
						|	МестоРаботы,
						|	Ответственный,
						|	Канал";

	ЗапросСтаты.УстановитьПараметр("ДатаНачала", НачалоОтбора);
	ЗапросСтаты.УстановитьПараметр("ДатаОкончания", КонецОтбора);

	РезультатЗапроса = ЗапросСтаты.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "МестоРаботы");
	
	//МассивБонусовПоПродажам = Новый Массив;
	Пока РезультатЗапроса.Следующий() Цикл
		МассивОтветственных = Новый Массив;
		СтруктураСборки = Новый Структура;
		СтруктураСборки.Вставить("МестоРаботы", Строка(РезультатЗапроса.МестоРаботы));
		СтруктураСборки.Вставить("СуммаПоГороду", РезультатЗапроса.СуммаДокумента);

		РезультатЗапроса2 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ответственный");
		Пока РезультатЗапроса2.Следующий() Цикл
			МассивКаналов = Новый Массив;
			СтруктураОтветственного = Новый Структура;
			СтруктураОтветственного.Вставить("Ответственный", Строка(РезультатЗапроса2.Ответственный));
			СтруктураОтветственного.Вставить("СуммаПоОтветственному", РезультатЗапроса2.СуммаДокумента);
			РезультатЗапроса3 = РезультатЗапроса2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Канал");
			Пока РезультатЗапроса3.Следующий() Цикл
				СтруктураКаналов = Новый Структура;
				СтруктураКаналов.Вставить("Канал", Строка(РезультатЗапроса3.Канал));
				СтруктураКаналов.Вставить("СуммаПоКаналу", РезультатЗапроса3.СуммаДокумента);
				МассивКаналов.Добавить(СтруктураКаналов);
			КонецЦикла;
			СтруктураОтветственного.Вставить("Каналы", МассивКаналов);
			МассивОтветственных.Добавить(СтруктураОтветственного);
		КонецЦикла;
		СтруктураСборки.Вставить("Ответственные", МассивОтветственных);
		МассивОтвета.Добавить(СтруктураСборки);
	КонецЦикла;

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();

	ЗаписатьJSON(ЗаписьJSON, МассивОтвета);

	СтрокаДляОтвета = ЗаписьJSON.Закрыть();

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);

	Возврат Ответ;
	//Сергеев Ф.В. -- Дата: 30.09.2024
КонецФункции

Функция ПолучитьСтатистикуКадровgetstatisticpersonnel(Запрос)
	
	///+ТатарМА 30.09.2024
	ЗапросАналитикаКадров = Новый Запрос;

	ЗапросАналитикаКадров.Текст = "ВЫБРАТЬ
								  |	АналитикаВакансий.Вакансия КАК Вакансия,
								  |	АналитикаВакансий.ДатаСоздания КАК ДатаСоздания,
								  |	АналитикаВакансий.Ответственный КАК Ответственный,
								  |	АналитикаВакансий.ДатаЗакрытия КАК ДатаЗакрытия,
								  |	АналитикаВакансий.КадровыйПриказ КАК КадровыйПриказ,
								  |	АналитикаВакансий.Сотрудник КАК Сотрудник,
								  |	АналитикаВакансий.ПериодПоиска КАК ПериодПоиска,
								  |	АналитикаВакансий.Увольнение КАК Увольнения,
								  |	АналитикаВакансий.ДатаУвольнения КАК ДатаУвольнения,
								  |	АналитикаВакансий.ПериодРаботы КАК ПериодРаботы
								  |ИЗ
								  |	РегистрСведений.АналитикаВакансий КАК АналитикаВакансий";

	Выборка = ЗапросАналитикаКадров.Выполнить().Выбрать();

	МассивКадров = Новый Массив;
	Пока Выборка.Следующий() Цикл
		СтруктураИнфо = Новый Структура;
		СтруктураИнфо.Вставить("vacancy", Строка(выборка.Вакансия));
		СтруктураИнфо.Вставить("date_creation", Строка(выборка.ДатаСоздания));
		СтруктураИнфо.Вставить("responsible", Строка(выборка.Ответственный));
		СтруктураИнфо.Вставить("date_closing", Строка(выборка.ДатаЗакрытия));
		СтруктураИнфо.Вставить("personnel_order", Строка(Выборка.КадровыйПриказ));
		СтруктураИнфо.Вставить("employee", Строка(выборка.Сотрудник));
		СтруктураИнфо.Вставить("search_period", Строка(выборка.ПериодПоиска));
		СтруктураИнфо.Вставить("dismissal", Строка(выборка.Увольнения));
		СтруктураИнфо.Вставить("date_dismissal", Строка(выборка.ДатаУвольнения));
		СтруктураИнфо.Вставить("period_work", Строка(выборка.ПериодРаботы));

		МассивКадров.Добавить(СтруктураИнфо);
	КонецЦикла;

	СтруктураОтвета = Новый Структура;

	СтруктураОтвета.Вставить("info", МассивКадров);

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();

	ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);

	СтрокаДляОтвета = ЗаписьJSON.Закрыть();

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);

	Возврат Ответ;
	///-ТатарМА 30.09.2024

КонецФункции

Функция ВыручкаПоКатегориямGET(Запрос)
	// +++ Комлев  01/10/24 +++
	Попытка
		ДатаНачала = Дата(Запрос.ПараметрыURL.Получить("date_start"));
		ДатаОкончания = Дата(Запрос.ПараметрыURL.Получить("date_end"));
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ПриходДенегНаСчет.СуммаДокумента), 0) КАК СуммаПродаж
		|ПОМЕСТИТЬ ПродажаПриход
		|ИЗ
		|	Документ.ПриходДенегНаСчет КАК ПриходДенегНаСчет
		|ГДЕ
		|	ПриходДенегНаСчет.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ПриходДенегНаСчет.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ПриходОтКредитов.Сумма), 0) КАК СуммаКредитовПриход
		|ПОМЕСТИТЬ КредитПриход
		|ИЗ
		|	Документ.ПриходОтКредитов КАК ПриходОтКредитов
		|ГДЕ
		|	ПриходОтКредитов.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ПриходОтКредитов.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(Расходы.Сумма), 0) КАК СуммаЗарплатаРасход
		|ПОМЕСТИТЬ ЗарплатаРасход
		|ИЗ
		|	Документ.Расходы КАК Расходы
		|ГДЕ
		|	Расходы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Расходы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.Зарплата)
		|	И Расходы.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(Расходы.Сумма), 0) КАК СуммаОплатаПоставщиковРасход
		|ПОМЕСТИТЬ ОплатаПоставщиковРасход
		|ИЗ
		|	Документ.Расходы КАК Расходы
		|ГДЕ
		|	Расходы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Расходы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщикуЗапчастей)
		|	И Расходы.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(Расходы.Сумма), 0) КАК СуммаТекРасходы
		|ПОМЕСТИТЬ ТекущиеРасходы
		|ИЗ
		|	Документ.Расходы КАК Расходы
		|ГДЕ
		|	Расходы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Расходы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ТекущиеРасходы)
		|	И Расходы.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(Расходы.Сумма), 0) КАК СуммаКапитальныеРасходы
		|ПОМЕСТИТЬ КапитальныеРасходы
		|ИЗ
		|	Документ.Расходы КАК Расходы
		|ГДЕ
		|	Расходы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Расходы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.КапитальныеЗатраты)
		|	И Расходы.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(Расходы.Сумма), 0) КАК СуммаКредитРасход
		|ПОМЕСТИТЬ КредитРасходы
		|ИЗ
		|	Документ.Расходы КАК Расходы
		|ГДЕ
		|	Расходы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Расходы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВозвратЗаёмныхСредств)
		|	И Расходы.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(Расходы.Сумма), 0) КАК СуммаВозвратРасход
		|ПОМЕСТИТЬ ВозвратыКлиентамРасходы
		|ИЗ
		|	Документ.Расходы КАК Расходы
		|ГДЕ
		|	Расходы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Расходы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю)
		|	И Расходы.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ЛичныйВывод.Сумма), 0) КАК ЛичныйРасход
		|ПОМЕСТИТЬ ЛичныеРасходы
		|ИЗ
		|	Документ.ЛичныйВывод КАК ЛичныйВывод
		|ГДЕ
		|	ЛичныйВывод.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЛичныйВывод.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратыКлиентамРасходы.СуммаВозвратРасход КАК СуммаВозвратРасход,
		|	ЗарплатаРасход.СуммаЗарплатаРасход КАК ЗПРасход,
		|	КапитальныеРасходы.СуммаКапитальныеРасходы КАК КапитальныеЗатратыРасход,
		|	КредитПриход.СуммаКредитовПриход КАК КредитыПриход,
		|	КредитРасходы.СуммаКредитРасход КАК ВозвратЗаемныхСредствРасход,
		|	ЛичныеРасходы.ЛичныйРасход КАК ЛичныеВыводыРасход,
		|	ОплатаПоставщиковРасход.СуммаОплатаПоставщиковРасход КАК ОплатаПоставщикамРасход,
		|	ПродажаПриход.СуммаПродаж КАК ПродажиПриход,
		|	ТекущиеРасходы.СуммаТекРасходы КАК ТекущиеРасходы,
		|	КредитПриход.СуммаКредитовПриход + ПродажаПриход.СуммаПродаж КАК Поступления,
		|	(КредитПриход.СуммаКредитовПриход + ПродажаПриход.СуммаПродаж) - (ВозвратыКлиентамРасходы.СуммаВозвратРасход +
		|		ЗарплатаРасход.СуммаЗарплатаРасход + КапитальныеРасходы.СуммаКапитальныеРасходы + КредитРасходы.СуммаКредитРасход +
		|		ЛичныеРасходы.ЛичныйРасход + ОплатаПоставщиковРасход.СуммаОплатаПоставщиковРасход +
		|		ТекущиеРасходы.СуммаТекРасходы) КАК Прибыль,
		|	ВозвратыКлиентамРасходы.СуммаВозвратРасход + ЗарплатаРасход.СуммаЗарплатаРасход +
		|		КапитальныеРасходы.СуммаКапитальныеРасходы + КредитРасходы.СуммаКредитРасход + ЛичныеРасходы.ЛичныйРасход +
		|		ОплатаПоставщиковРасход.СуммаОплатаПоставщиковРасход + ТекущиеРасходы.СуммаТекРасходы КАК ВсеРасходы
		|ИЗ
		|	ПродажаПриход КАК ПродажаПриход,
		|	КредитПриход КАК КредитПриход,
		|	ЗарплатаРасход КАК ЗарплатаРасход,
		|	ОплатаПоставщиковРасход КАК ОплатаПоставщиковРасход,
		|	ТекущиеРасходы КАК ТекущиеРасходы,
		|	КапитальныеРасходы КАК КапитальныеРасходы,
		|	КредитРасходы КАК КредитРасходы,
		|	ВозвратыКлиентамРасходы КАК ВозвратыКлиентамРасходы,
		|	ЛичныеРасходы КАК ЛичныеРасходы";

		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
		Данные = Запрос.Выполнить().Выбрать();


		//СтруктураПерем = ПосчитатьПрибыль(Данные);
		СтруктураДень = Новый Структура;
		СтруктураДень.Вставить("sales_coming", 0);
		СтруктураДень.Вставить("credit_coming", 0);
		СтруктураДень.Вставить("credit_expense", 0);
		СтруктураДень.Вставить("salary_expense", 0);
		СтруктураДень.Вставить("capital_expense", 0);
		СтруктураДень.Вставить("personal_expense", 0);
		СтруктураДень.Вставить("supplier_expense", 0);
		СтруктураДень.Вставить("current_expense", 0);
		СтруктураДень.Вставить("all_coming", 0);
		СтруктураДень.Вставить("all_expense", 0);
		СтруктураДень.Вставить("profit", 0);

		Пока Данные.Следующий() Цикл
			СтруктураДень.sales_coming =  Данные.ПродажиПриход;
			СтруктураДень.credit_coming =  Данные.КредитыПриход;
			СтруктураДень.credit_expense =  Данные.ВозвратЗаемныхСредствРасход;
			СтруктураДень.salary_expense =  Данные.ЗПРасход;
			СтруктураДень.capital_expense =  Данные.КапитальныеЗатратыРасход;
			СтруктураДень.personal_expense =  Данные.ЛичныеВыводыРасход;
			СтруктураДень.supplier_expense =  Данные.ОплатаПоставщикамРасход;
			СтруктураДень.current_expense =  Данные.ТекущиеРасходы;
			СтруктураДень.all_coming = Данные.Поступления;
			СтруктураДень.all_expense =  Данные.ВсеРасходы;
			СтруктураДень.profit =  Данные.Прибыль;
		КонецЦикла;
		Ответ = Новый HTTPСервисОтвет(200);
		Запись = Новый ЗаписьJSON;
		Запись.УстановитьСтроку();
		ЗаписатьJSON(Запись, СтруктураДень);
		СтрокаОтвета = Запись.Закрыть();
		Ответ.УстановитьТелоИзСтроки(СтрокаОтвета);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		Возврат Ответ;
	Исключение
		Ответ = Новый HTTPСервисОтвет(500);
		Инфо = ИнформацияОбОшибке();
		СтрокаОтвета = Инфо.Описание + " " + ?(Инфо.Причина <> Неопределено, Инфо.Причина.Описание, "!");
		Ответ.УстановитьТелоИзСтроки(СтрокаОтвета);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		Возврат Ответ;
	КонецПопытки;
	// --- Комлев  01/10/24 ---
КонецФункции

Функция ПриходИРасходДенегget_coming_spending_money(Запрос)
	// +++ Комлев  08/10/24 +++
	Попытка
		ДатаНачала = Дата(Запрос.ПараметрыURL.Получить("date_start"));
		ДатаОкончания = Дата(Запрос.ПараметрыURL.Получить("date_end"));
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ПриходДенегНаСчет.СуммаДокумента), 0) КАК СуммаПродаж,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПриходДенегНаСчет.Ссылка) КАК КолиствоПродаж
		|ПОМЕСТИТЬ ПродажаПриход
		|ИЗ
		|	Документ.ПриходДенегНаСчет КАК ПриходДенегНаСчет
		|ГДЕ
		|	ПриходДенегНаСчет.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ПриходДенегНаСчет.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ПриходОтКредитов.Сумма), 0) КАК СуммаКредитовПриход,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПриходОтКредитов.Ссылка) КАК КоличествоКредитов
		|ПОМЕСТИТЬ КредитПриход
		|ИЗ
		|	Документ.ПриходОтКредитов КАК ПриходОтКредитов
		|ГДЕ
		|	ПриходОтКредитов.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ПриходОтКредитов.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ЛичныйВывод.Сумма), 0) КАК СуммаЛичныйРасход,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЛичныйВывод.Ссылка) КАК КоличествоЛич
		|ПОМЕСТИТЬ ЛичныеРасходы
		|ИЗ
		|	Документ.ЛичныйВывод КАК ЛичныйВывод
		|ГДЕ
		|	ЛичныйВывод.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЛичныйВывод.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(Расходы.Сумма), 0) КАК СуммаРасход,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Расходы.Ссылка) КАК КоличествоРасходов
		|ПОМЕСТИТЬ Расходы
		|ИЗ
		|	Документ.Расходы КАК Расходы
		|ГДЕ
		|	Расходы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Расходы.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КредитПриход.СуммаКредитовПриход + ПродажаПриход.СуммаПродаж КАК СуммаПриходов,
		|	КредитПриход.КоличествоКредитов + ПродажаПриход.КолиствоПродаж КАК КоличествоПриходов
		|ПОМЕСТИТЬ ВсеПриходы
		|ИЗ
		|	ПродажаПриход КАК ПродажаПриход,
		|	КредитПриход КАК КредитПриход
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛичныеРасходы.СуммаЛичныйРасход + Расходы.СуммаРасход КАК СуммаРасходов,
		|	ЛичныеРасходы.КоличествоЛич + Расходы.КоличествоРасходов КАК КоличествоРасходов
		|ПОМЕСТИТЬ ВсеРасходы
		|ИЗ
		|	Расходы КАК Расходы,
		|	ЛичныеРасходы КАК ЛичныеРасходы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеПриходы.СуммаПриходов КАК СуммаПоступлений,
		|	ВсеПриходы.КоличествоПриходов КАК КоличествоПриходДенег,
		|	ВсеРасходы.КоличествоРасходов КАК КоличествоДокументовРасход,
		|	ВсеРасходы.СуммаРасходов КАК СуммаРасхода,
		|	ВсеПриходы.СуммаПриходов - ВсеРасходы.СуммаРасходов КАК Прибыль
		|ИЗ
		|	ВсеРасходы КАК ВсеРасходы,
		|	ВсеПриходы КАК ВсеПриходы";
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));

		РезультатЗапроса = Запрос.Выполнить();

		Выборка = РезультатЗапроса.Выбрать();
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("count_coming", 0);
		СтруктураОтвета.Вставить("sum_coming", 0);
		СтруктураОтвета.Вставить("count_spending", 0);
		СтруктураОтвета.Вставить("sum_spending", 0);
		СтруктураОтвета.Вставить("profit", 0);
		Пока Выборка.Следующий() Цикл
			СтруктураОтвета.count_coming = Выборка.КоличествоПриходДенег;
			СтруктураОтвета.sum_coming = Выборка.СуммаПоступлений;
			СтруктураОтвета.count_spending = Выборка.КоличествоДокументовРасход;
			СтруктураОтвета.sum_spending = Выборка.СуммаРасхода;
			СтруктураОтвета.profit = Выборка.Прибыль;
		КонецЦикла;
		Ответ = Новый HTTPСервисОтвет(200);
		Запись = Новый ЗаписьJSON;
		Запись.УстановитьСтроку();
		ЗаписатьJSON(Запись, СтруктураОтвета);
		СтрокаОтвета = Запись.Закрыть();
		Ответ.УстановитьТелоИзСтроки(СтрокаОтвета);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		Возврат Ответ;
	Исключение
		Ответ = Новый HTTPСервисОтвет(500);
		Инфо = ИнформацияОбОшибке();
		СтрокаОтвета = Инфо.Описание + " " + ?(Инфо.Причина <> Неопределено, Инфо.Причина.Описание, "!");
		Ответ.УстановитьТелоИзСтроки(СтрокаОтвета);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		Возврат Ответ;
	КонецПопытки;
	// --- Комлев  08/10/24 ---
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПосчитатьПрибыль(Данные) // Принимает таблицу значений, Возвращает структуру занчний
	// +++ Комлев  01/10/24 +++
	ПродажиПриход = Число(Данные.Найти("Продажи Приход").Сумма);
	КредитыПриход = Число(Данные.Найти("Кредиты Приход").Сумма);
	ВозвратЗаемныхСредствРасход = Число(Данные.Найти("Возврат заемных средств Расход").Сумма);
	ЗПРасход = Число(Данные.Найти("ЗП Расход").Сумма);
	КапитальныеЗатратыРасход = Число(Данные.Найти("Капитальные затраты Расход").Сумма);
	ЛичныеВыводыРасход = Число(Данные.Найти("Личные выводы Расход").Сумма);
	ОплатаПоставщикамРасход = Число(Данные.Найти("Оплата поставщикам Расход").Сумма);
	//ПрочиеРасход = Число(Данные.Найти("Прочие Расход").Сумма);
	ТекущиеРасходы = Число(Данные.Найти("Текущие расходы Расход").Сумма);
	Прибыль = (ПродажиПриход + КредитыПриход) - (ВозвратЗаемныхСредствРасход + ЗПРасход + КапитальныеЗатратыРасход
		+ ЛичныеВыводыРасход + ОплатаПоставщикамРасход + ТекущиеРасходы);

	СтруктураПерем = Новый Структура;
	СтруктураПерем.Вставить("ПродажиПриход", ПродажиПриход);
	СтруктураПерем.Вставить("КредитыПриход", КредитыПриход);
	СтруктураПерем.Вставить("ВозвратЗаемныхСредствРасход", ВозвратЗаемныхСредствРасход);
	СтруктураПерем.Вставить("ЗПРасход", ЗПРасход);
	СтруктураПерем.Вставить("КапитальныеЗатратыРасход", КапитальныеЗатратыРасход);
	СтруктураПерем.Вставить("ЛичныеВыводыРасход", ЛичныеВыводыРасход);
	СтруктураПерем.Вставить("ОплатаПоставщикамРасход", ОплатаПоставщикамРасход);
	//СтруктураПерем.Вставить("ПрочиеРасход", ПрочиеРасход);
	СтруктураПерем.Вставить("ТекущиеРасходы", ТекущиеРасходы);
	СтруктураПерем.Вставить("Прибыль", Прибыль);

	Возврат СтруктураПерем;
	// --- Комлев  01/10/24 ---
КонецФункции
#КонецОбласти