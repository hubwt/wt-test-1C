Функция ПолучитьТоварыЗаявки1(НомерЗаявки)
	Запросзаявки = Новый Запрос;
	Запросзаявки.Текст =  "ВЫБРАТЬ
	|	ЗаказКлиентаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаказКлиентаТовары.Партия КАК Партия,
	|	ЗаказКлиентаТовары.Номенклатура.Код КАК НоменклатураКод,
	|	ЗаказКлиентаТовары.Сумма КАК Сумма,
	|	ЗаказКлиентаТовары.Цена КАК Цена,
	|	ЗаказКлиентаТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Ссылка.Номер = &Номер";

	Запросзаявки.УстановитьПараметр("Номер", НомерЗаявки);
	 
	Выборка = Запросзаявки.Выполнить().Выбрать();
	МассивТоваров = Новый Массив;

	// ТЗ_Товары = выборка.Выгрузить();
	МассивТоваров = Новый Массив;

	СуммаТоваров = 0; 
	Пока выборка.Следующий()  Цикл
		СтруктураТоваров = Новый Структура;
		СтруктураТоваров.Вставить("position", Строка(выборка.НомерСтроки));
		Если выборка.Партия <> Справочники.ИндКод.ПустаяСсылка() Тогда
			СтруктураТоваров.Вставить("id", Строка(выборка.Партия));
		Иначе
			СтруктураТоваров.Вставить("id", Строка(выборка.НоменклатураКод));	
		КонецЕсли;
		СуммаТоваров = СуммаТоваров + (выборка.Цена*выборка.Количество);
		МассивТоваров.Добавить(СтруктураТоваров);
     КонецЦикла;

		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("Товары", МассивТоваров); 
		СтруктураОтвета.Вставить("СуммаТоваров", СуммаТоваров);
   	Возврат СтруктураОтвета;
КонецФункции

Функция СформироватьСтруктуруОшибки(Сode, Message, Details)

	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("code", Сode);
	СтруктураОтвета.Вставить("message", Message);
	СтруктураОтвета.Вставить("details", Details);

	Возврат СтруктураОтвета;
КонецФункции


Функция ПолучитьВсеЗаявкиGetAllApp(Запрос)
	МассивЗаявок = Новый Массив;
	Попытка

		СтрокаПоиска = "	И (ЗаказКлиента.Номер ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""" + Символы.ПС
			+ " ИЛИ ЗаказКлиента.КлиентНаименование ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""" + Символы.ПС
			+ " ИЛИ ЗаказКлиента.Клиент.ПолноеНаименование ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""" + Символы.ПС
			+ " ИЛИ ЗаказКлиента.НомерТелефона ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~"")";
		ЗапросЗаявок = Новый Запрос;

		Текст = "ВЫБРАТЬ
				|	СотрудникиКонтактнаяИнформация.Ссылка КАК Ссылка,
				|	СотрудникиКонтактнаяИнформация.Представление КАК Представление,
				|	СотрудникиКонтактнаяИнформация.Представление КАК ТелефонСлужебный
				|ПОМЕСТИТЬ ТелефоныСлужебные
				|ИЗ
				|	Справочник.Сотрудники.КонтактнаяИнформация КАК СотрудникиКонтактнаяИнформация
				|ГДЕ
				|	СотрудникиКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСотрудникаСлужебный)
				|;
				|/////////////////////////////////////////
				|ВЫБРАТЬ ПЕРВЫЕ 10000
				|	ЗаказКлиента.Номер КАК Номер,
				|	ЗаказКлиента.Дата КАК Дата,
				|	Выбор
				|		Когда ЗаказКлиента.Клиент <> Значение(Справочник.Клиенты.ПустаяСсылка)
				|			Тогда ЗаказКлиента.Клиент
				|		Иначе ЗаказКлиента.КлиентНаименование
				|	Конец КАК Клиент,
				|	Выбор
				|		Когда ЗаказКлиента.Клиент <> Значение(Справочник.Клиенты.ПустаяСсылка)
				|			Тогда ЗаказКлиента.Клиент.Код
				|		Иначе ""Не авторизован""
				|	Конец КАК КлиентКод,
				|	ЗаказКлиента.Состояние КАК Состояние,
				|	ЗаказКлиента.Ответственный КАК Ответственный,
				|	ТелефоныСлужебные.ТелефонСлужебный КАК ТелефонСлужебный,
				|	ЗаказКлиента.СуммаДокумента КАК СуммаДокумента,
				|	ЗаказКлиента.ДатаСвязи КАК ДатаСвязи,
				|	ТелефоныСлужебные.Ссылка.Код КАК КодСотрудника,
				|	ЗаказКлиента.Ссылка КАК Ссылка,
				|	ЗаказКлиента.WTPanel КАК СтатусОбработки,
				|	ЗаказКлиента.ОтветственныйЗаОбработку КАК ОтветственныйЗаОбработку,
				|	ЗаказКлиента.Комментарий КАК Комментарий,
				|	ЗаказКлиента.ПодстатусОбработки КАК ПодстатусОбработки,
				|	ЗаказКлиента.НомерТелефона КАК Телефон,
				|	ЗаказКлиента.WTPanel КАК WTPanel,
				|	АвтономерЗаписи() КАК НомерЗаписи,
				|ЗаказКлиента.СтатусыДействия.Порядок КАК СтатусыДействия,
				|ЗаказКлиента.ФинансовыеСтатусы.Порядок КАК ФинансовыеСтатусы
				|ПОМЕСТИТЬ ВТ_ДанныеЗаявки
				|ИЗ
				|	Документ.ЗаказКлиента КАК ЗаказКлиента
				|		ЛЕВОЕ Соединение ТелефоныСлужебные КАк ТелефоныСлужебные
				|		По ЗаказКлиента.Ответственный = ТелефоныСлужебные.ссылка.пользователь
				|Где ЗаказКлиента.Дата > &ДатаОтсчёта
				|
				|%2
				|
				|УПОРЯДОЧИТЬ ПО
				|	Номер УБЫВ
				|ИНДЕКСИРОВАТЬ ПО
				|	Дата
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ ПЕРВЫЕ %1
				|	ВТ_ДанныеЗаявки.НомерЗаписи КАК НомерЗаписи,
				|	ВТ_ДанныеЗаявки.Ссылка КАК Ссылка,
				|	ВТ_ДанныеЗаявки.Номер КАК Номер,
				|	ВТ_ДанныеЗаявки.Дата КАК Дата,
				|	ВТ_ДанныеЗаявки.Клиент КАК Клиент,
				|	ВТ_ДанныеЗаявки.Комментарий КАК Комментарий,
				|	ВТ_ДанныеЗаявки.Ответственный КАК Ответственный,
				|	ВТ_ДанныеЗаявки.СуммаДокумента КАК СуммаДокумента,
				|	ВТ_ДанныеЗаявки.ДатаСвязи КАК ДатаСвязи,
				|	ВТ_ДанныеЗаявки.Состояние КАК Состояние,
				|	ВТ_ДанныеЗаявки.ОтветственныйЗаОбработку КАК ОтветственныйЗаОбработку,
				|	ВТ_ДанныеЗаявки.СтатусОбработки КАК СтатусОбработки,
				|	ВТ_ДанныеЗаявки.ПодстатусОбработки КАК ПодстатусОбработки,
				|	ВТ_ДанныеЗаявки.ТелефонСлужебный КАК ТелефонСлужебный,
				|	ВТ_ДанныеЗаявки.КодСотрудника КАК КодСотрудника,
				|	ВТ_ДанныеЗаявки.WTPanel КАК WTPanel,
				|	ВТ_ДанныеЗаявки.КлиентКод КАК КлиентКод,
				|	ВТ_ДанныеЗаявки.Телефон КАК Телефон
				|ИЗ
				|	ВТ_ДанныеЗаявки КАК ВТ_ДанныеЗаявки
				|ГДЕ
				|	ВТ_ДанныеЗаявки.НомерЗаписи >= &НачинаяСЗаписи
				|	УПОРЯДОЧИТЬ ПО
				|	Дата УБЫВ";
		Если Запрос.ПараметрыURL["text"] = "00" Тогда
			ЗапросЗаявок.Текст =  СтрШаблон(Текст, Формат(10000, "ЧГ="), " ");
		Иначе
			ЗапросЗаявок.Текст =  СтрШаблон(Текст, Формат(10000, "ЧГ="), СтрокаПоиска);
			ЗапросЗаявок.УстановитьПараметр("Наименование", "%" + ОбщегоНазначения.СформироватьСтрокуДляПоискаВЗапросе(
				Строка(
		Запрос.ПараметрыURL["text"])) + "%");
		КонецЕсли;
		ДатаОтсчёта = ТекущаяДата() - (3600 * 24 * 180);
		ЗапросЗаявок.УстановитьПараметр("ДатаОтсчёта", ДатаОтсчёта);
		ЗапросЗаявок.УстановитьПараметр("НачинаяСЗаписи", 0);

		ОбщееКолво = 10000;

		Если Запрос.ПараметрыURL["text"] = "00" Тогда
			ЗапросЗаявок.Текст =  СтрШаблон(Текст, Формат(?(Число(Запрос.ПараметрыURL["count"]) > 0,
				Запрос.ПараметрыURL["count"], 10000), "ЧГ="), " ");
		Иначе
			ЗапросЗаявок.Текст =  СтрШаблон(Текст, Формат(?(Число(Запрос.ПараметрыURL["count"]) > 0,
				Запрос.ПараметрыURL["count"], 10000), "ЧГ="), СтрокаПоиска);
			ЗапросЗаявок.УстановитьПараметр("Наименование", "%" + ОбщегоНазначения.СформироватьСтрокуДляПоискаВЗапросе(
				Строка(
		Запрос.ПараметрыURL["text"])) + "%");
		КонецЕсли;
		ЗапросЗаявок.УстановитьПараметр("ДатаОтсчёта", ДатаОтсчёта);

		Если Число(((Запрос.ПараметрыURL["count"]) * (Запрос.ПараметрыURL["page"]))) > 0 И Число(
		Запрос.ПараметрыURL["page"]) > 1 Тогда
			ЗапросЗаявок.УстановитьПараметр("НачинаяСЗаписи", Число(((Запрос.ПараметрыURL["count"])
				* (Запрос.ПараметрыURL["page"] - 1) + 1)));

		Иначе
			ЗапросЗаявок.УстановитьПараметр("НачинаяСЗаписи", 0);
		КонецЕсли;
	
	
		ОбщееКолво = 10000;
		
		СписокПоиска = ЗапросЗаявок.Выполнить().Выгрузить();

		Для Каждого Результат Из СписокПоиска Цикл

			СтруктураЗаявок = Новый Структура;
			СтруктураЗаявок.Вставить("id", Строка(Результат.Номер));
			СтруктураЗаявок.Вставить("date", Строка(Результат.Дата));
			СтруктураЗаявок.Вставить("state", Строка(Результат.WTPanel));
			
			СтруктураКлиента = Новый Структура;
			СтруктураКлиента.Вставить("name", Строка(Результат.Клиент));
			СтруктураКлиента.Вставить("id", Результат.КлиентКод);
			СтруктураКлиента.Вставить("phone", Результат.Телефон);
			СтруктураЗаявок.Вставить("client", СтруктураКлиента);

			СтруктураМенеджера = Новый Структура;
			СтруктураМенеджера.Вставить("name", Строка(Результат.Ответственный));
	//Менеджер = Справочники.Сотрудники.НайтиПоРеквизиту("Пользователь", выборка.Ответственный).Код;
			СтруктураМенеджера.Вставить("id", Строка(Результат.КодСотрудника));
			СтруктураМенеджера.Вставить("phone", Строка(Результат.ТелефонСлужебный));
			СтруктураЗаявок.Вставить("manager", СтруктураМенеджера);
	
		//@skip-check query-in-loop
			//СтруктураВремени = ПолучитьВремяЗК(Результат.Ссылка);
			СтруктураЗаявок.Вставить("workers", 0);
			СтруктураЗаявок.Вставить("in_work", 0);
			//@skip-check query-in-loop

			СтруктураЗаявок.Вставить("summ", Результат.СуммаДокумента);
			МассивЗаявок.Добавить(СтруктураЗаявок);
		КонецЦикла;

		Итог = ОбщееКолво / ?(Число(Запрос.ПараметрыURL["count"]) = 0, ОбщееКолво, Число(Запрос.ПараметрыURL["count"]));
		Итог = ?((Итог - Цел(Итог)) > 0, Цел(Итог) + 1, Цел(Итог));

		СтруктураИнфо= Новый Структура;
		СтруктураИнфо.Вставить("pages", Итог);
		СтруктураИнфо.Вставить("count", ОбщееКолво);
		СтруктураИнфо.Вставить("applications", МассивЗаявок);

		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("info", СтруктураИнфо);
		СтруктураОтвета.Вставить("applications", МассивЗаявок);

		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		Информация = ИнформацияОбОшибке();
		ЗаписатьJSON(ЗаписьJSON, СтруктураИнфо);
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета);

		Возврат Ответ;
	Исключение
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		Информация = ИнформацияОбОшибке();
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		Информация = ИнформацияОбОшибке();
		ЗаписатьJSON(ЗаписьJSON, СформироватьСтруктуруОшибки( , "Ошибка выполнения запроса", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета);

	КонецПопытки;
	Возврат Ответ;
КонецФункции

Функция ПоказателиСкладаGET(Запрос)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказКлиентаТовары.Номенклатура КАК Товар,
		|	ЕСТЬNULL(КОЛИЧЕСТВО(ЗаказКлиентаТовары.Номенклатура), 0) КАК Количество,
		|	ЕСТЬNULL(МАКСИМУМ(РегистрНакопления1ОстаткиИОбороты.КолвоКонечныйОстаток), 0) КАК КолвоКонечныйОстаток
		|ПОМЕСТИТЬ ТоварыСпрашивают
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ),
		|			КОНЕЦПЕРИОДА(&Дата, ДЕНЬ), Авто,,) КАК РегистрНакопления1ОстаткиИОбороты
		|		ПО (ЗаказКлиентаТовары.Номенклатура = РегистрНакопления1ОстаткиИОбороты.Товар)
		|ГДЕ
		|	ЗаказКлиентаТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И ЗаказКлиентаТовары.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
		|	И НАЧАЛОПЕРИОДА(РегистрНакопления1ОстаткиИОбороты.ПериодДень, ДЕНЬ) = НАЧАЛОПЕРИОДА(ЗаказКлиентаТовары.Ссылка.Дата,
		|		ДЕНЬ)
		|СГРУППИРОВАТЬ ПО
		|	ЗаказКлиентаТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеЗапчастейТаблица.Товар КАК Товар,
		|	ЕСТЬNULL(КОЛИЧЕСТВО(ПоступлениеЗапчастейТаблица.Код), 0) КАК Количество
		|ПОМЕСТИТЬ УчтенныйТоварИзСпискаСпрашивают
		|ИЗ
		|	Документ.ПоступлениеЗапчастей.Таблица КАК ПоступлениеЗапчастейТаблица
		|ГДЕ
		|	ПоступлениеЗапчастейТаблица.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
		|	И ПоступлениеЗапчастейТаблица.Товар В
		|		(ВЫБРАТЬ
		|			ТоварыСпрашивают.Товар КАК Товар
		|		ИЗ
		|			ТоварыСпрашивают КАК ТоварыСпрашивают)
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеЗапчастейТаблица.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(СРЕДНЕЕ(ЕСТЬNULL(ВЫБОР
		|		КОГДА ТоварыСпрашивают.КолвоКонечныйОстаток > ТоварыСпрашивают.Количество
		|			ТОГДА 1
		|		КОГДА ТоварыСпрашивают.КолвоКонечныйОстаток >= ТоварыСпрашивают.Количество
		|		И УчтенныйТоварИзСпискаСпрашивают.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|			КОГДА (ВЫРАЗИТЬ(УчтенныйТоварИзСпискаСпрашивают.Количество / ТоварыСпрашивают.Количество КАК ЧИСЛО(10, 2))) > 1
		|				ТОГДА 1
		|			ИНАЧЕ ВЫРАЗИТЬ(УчтенныйТоварИзСпискаСпрашивают.Количество / ТоварыСпрашивают.Количество КАК ЧИСЛО(10, 2))
		|		КОНЕЦ
		|	КОНЕЦ, 0)) КАК ЧИСЛО(10, 2)) КАК КоэфДень,
		|	СУММА(ТоварыСпрашивают.Количество) КАК КоличествоСпрашиваютДень,
		|	СУММА(УчтенныйТоварИзСпискаСпрашивают.Количество) КАК КоличествоУчтенногоДень
		|ПОМЕСТИТЬ ПоказателиДень
		|ИЗ
		|	ТоварыСпрашивают КАК ТоварыСпрашивают
		|		ПОЛНОЕ СОЕДИНЕНИЕ УчтенныйТоварИзСпискаСпрашивают КАК УчтенныйТоварИзСпискаСпрашивают
		|		ПО ТоварыСпрашивают.Товар = УчтенныйТоварИзСпискаСпрашивают.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ЗаказКлиентаТовары.Номенклатура) КАК Товар,
		|	ЕСТЬNULL(КОЛИЧЕСТВО(ЗаказКлиентаТовары.Номенклатура), 0) КАК Количество,
		|	ЕСТЬNULL(РегистрНакопления1ОстаткиИОбороты.КолвоКонечныйОстаток, 0) КАК КолвоКонечныйОстаток
		|ПОМЕСТИТЬ ТоварыСпрашиваютНЕДЕЛЯ
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&Дата, НЕДЕЛЯ),
		|			КОНЕЦПЕРИОДА(&Дата, НЕДЕЛЯ), Авто,,) КАК РегистрНакопления1ОстаткиИОбороты
		|		ПО ЗаказКлиентаТовары.Номенклатура = РегистрНакопления1ОстаткиИОбороты.Товар
		|ГДЕ
		|	ЗаказКлиентаТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И ЗаказКлиентаТовары.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, НЕДЕЛЯ) И КОНЕЦПЕРИОДА(&Дата, НЕДЕЛЯ)
		|	И НАЧАЛОПЕРИОДА(РегистрНакопления1ОстаткиИОбороты.ПериодДень, ДЕНЬ) = НАЧАЛОПЕРИОДА(ЗаказКлиентаТовары.Ссылка.Дата,
		|		ДЕНЬ)
		|СГРУППИРОВАТЬ ПО
		|	ЗаказКлиентаТовары.Номенклатура,
		|	ЕСТЬNULL(РегистрНакопления1ОстаткиИОбороты.КолвоКонечныйОстаток, 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеЗапчастейТаблица.Товар КАК Товар,
		|	ЕСТЬNULL(КОЛИЧЕСТВО(ПоступлениеЗапчастейТаблица.Код), 0) КАК Количество
		|ПОМЕСТИТЬ УчтенныйТоварИзСпискаСпрашиваютНЕДЕЛЯ
		|ИЗ
		|	Документ.ПоступлениеЗапчастей.Таблица КАК ПоступлениеЗапчастейТаблица
		|ГДЕ
		|	ПоступлениеЗапчастейТаблица.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, НЕДЕЛЯ) И КОНЕЦПЕРИОДА(&Дата, НЕДЕЛЯ)
		|	И ПоступлениеЗапчастейТаблица.Товар В
		|		(ВЫБРАТЬ
		|			ТоварыСпрашивают.Товар КАК Товар
		|		ИЗ
		|			ТоварыСпрашиваютНЕДЕЛЯ КАК ТоварыСпрашивают)
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеЗапчастейТаблица.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(СРЕДНЕЕ(ЕСТЬNULL(ВЫБОР
		|		КОГДА ТоварыСпрашивают.КолвоКонечныйОстаток > ТоварыСпрашивают.Количество
		|			ТОГДА 1
		|		КОГДА ТоварыСпрашивают.КолвоКонечныйОстаток >= ТоварыСпрашивают.Количество
		|		И УчтенныйТоварИзСпискаСпрашивают.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|			КОГДА (ВЫРАЗИТЬ(УчтенныйТоварИзСпискаСпрашивают.Количество / ТоварыСпрашивают.Количество КАК ЧИСЛО(10, 2))) > 1
		|				ТОГДА 1
		|			ИНАЧЕ ВЫРАЗИТЬ(УчтенныйТоварИзСпискаСпрашивают.Количество / ТоварыСпрашивают.Количество КАК ЧИСЛО(10, 2))
		|		КОНЕЦ
		|	КОНЕЦ, 0)) КАК ЧИСЛО(10, 2)) КАК КоэфДень,
		|	СУММА(ТоварыСпрашивают.Количество) КАК КоличествоСпрашиваютДень,
		|	СУММА(УчтенныйТоварИзСпискаСпрашивают.Количество) КАК КоличествоУчтенногоДень
		|ПОМЕСТИТЬ ПоказателиНЕДЕЛЯ
		|ИЗ
		|	ТоварыСпрашиваютНЕДЕЛЯ КАК ТоварыСпрашивают
		|		ПОЛНОЕ СОЕДИНЕНИЕ УчтенныйТоварИзСпискаСпрашиваютНЕДЕЛЯ КАК УчтенныйТоварИзСпискаСпрашивают
		|		ПО ТоварыСпрашивают.Товар = УчтенныйТоварИзСпискаСпрашивают.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ЗаказКлиентаТовары.Номенклатура) КАК Товар,
		|	ЕСТЬNULL(КОЛИЧЕСТВО(ЗаказКлиентаТовары.Номенклатура), 0) КАК Количество,
		|	ЕСТЬNULL(РегистрНакопления1ОстаткиИОбороты.КолвоКонечныйОстаток, 0) КАК КолвоКонечныйОстаток
		|ПОМЕСТИТЬ ТоварыСпрашиваютМЕСЯЦ
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ),
		|			КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ), Авто,,) КАК РегистрНакопления1ОстаткиИОбороты
		|		ПО ЗаказКлиентаТовары.Номенклатура = РегистрНакопления1ОстаткиИОбороты.Товар
		|ГДЕ
		|	ЗаказКлиентаТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И ЗаказКлиентаТовары.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|	И НАЧАЛОПЕРИОДА(РегистрНакопления1ОстаткиИОбороты.ПериодДень, ДЕНЬ) = НАЧАЛОПЕРИОДА(ЗаказКлиентаТовары.Ссылка.Дата,
		|		ДЕНЬ)
		|СГРУППИРОВАТЬ ПО
		|	ЗаказКлиентаТовары.Номенклатура,
		|	ЕСТЬNULL(РегистрНакопления1ОстаткиИОбороты.КолвоКонечныйОстаток, 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеЗапчастейТаблица.Товар КАК Товар,
		|	ЕСТЬNULL(КОЛИЧЕСТВО(ПоступлениеЗапчастейТаблица.Код), 0) КАК Количество
		|ПОМЕСТИТЬ УчтенныйТоварИзСпискаСпрашиваютМЕСЯЦ
		|ИЗ
		|	Документ.ПоступлениеЗапчастей.Таблица КАК ПоступлениеЗапчастейТаблица
		|ГДЕ
		|	ПоступлениеЗапчастейТаблица.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|	И ПоступлениеЗапчастейТаблица.Товар В
		|		(ВЫБРАТЬ
		|			ТоварыСпрашивают.Товар КАК Товар
		|		ИЗ
		|			ТоварыСпрашиваютМЕСЯЦ КАК ТоварыСпрашивают)
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеЗапчастейТаблица.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(СРЕДНЕЕ(ЕСТЬNULL(ВЫБОР
		|		КОГДА ТоварыСпрашивают.КолвоКонечныйОстаток > ТоварыСпрашивают.Количество
		|			ТОГДА 1
		|		КОГДА ТоварыСпрашивают.КолвоКонечныйОстаток >= ТоварыСпрашивают.Количество
		|		И УчтенныйТоварИзСпискаСпрашивают.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|			КОГДА (ВЫРАЗИТЬ(УчтенныйТоварИзСпискаСпрашивают.Количество / ТоварыСпрашивают.Количество КАК ЧИСЛО(10, 2))) > 1
		|				ТОГДА 1
		|			ИНАЧЕ ВЫРАЗИТЬ(УчтенныйТоварИзСпискаСпрашивают.Количество / ТоварыСпрашивают.Количество КАК ЧИСЛО(10, 2))
		|		КОНЕЦ
		|	КОНЕЦ, 0)) КАК ЧИСЛО(10, 2)) КАК КоэфДень,
		|	СУММА(ТоварыСпрашивают.Количество) КАК КоличествоСпрашиваютДень,
		|	СУММА(УчтенныйТоварИзСпискаСпрашивают.Количество) КАК КоличествоУчтенногоДень
		|ПОМЕСТИТЬ ПоказателиМЕСЯЦ
		|ИЗ
		|	ТоварыСпрашиваютМЕСЯЦ КАК ТоварыСпрашивают
		|		ПОЛНОЕ СОЕДИНЕНИЕ УчтенныйТоварИзСпискаСпрашиваютМЕСЯЦ КАК УчтенныйТоварИзСпискаСпрашивают
		|		ПО ТоварыСпрашивают.Товар = УчтенныйТоварИзСпискаСпрашивают.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоказателиДень.КоэфДень КАК КоэфДень,
		|	ПоказателиДень.КоличествоСпрашиваютДень КАК КоличествоСпрашиваютДень,
		|	ПоказателиДень.КоличествоУчтенногоДень КАК КоличествоУчтенногоДень,
		|	ПоказателиМЕСЯЦ.КоэфДень КАК КоэфМесяц,
		|	ПоказателиМЕСЯЦ.КоличествоСпрашиваютДень КАК КоличествоСпрашиваютМесяц,
		|	ПоказателиМЕСЯЦ.КоличествоУчтенногоДень КАК КоличествоУчтенногоМесяц,
		|	ПоказателиНЕДЕЛЯ.КоэфДень КАК КоэфНеделя,
		|	ПоказателиНЕДЕЛЯ.КоличествоСпрашиваютДень КАК КоличествоСпрашиваютНеделя,
		|	ПоказателиНЕДЕЛЯ.КоличествоУчтенногоДень КАК КоличествоУчтенногоНеделя
		|ИЗ
		|	ПоказателиДень КАК ПоказателиДень,
		|	ПоказателиНЕДЕЛЯ КАК ПоказателиНЕДЕЛЯ,
		|	ПоказателиМЕСЯЦ КАК ПоказателиМЕСЯЦ";
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СтруктураПоказатели = Новый Структура;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
	КонецЦикла;
	
	
	
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции
