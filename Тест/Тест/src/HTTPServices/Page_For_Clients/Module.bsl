
Функция ПолучитьТоварGetProduct(Запрос)
/// МазинЕС-06-12-20-24	
	ЗапросТовара = Новый Запрос;
	ЗапросТовара.Текст =  СтрШаблон(текстДляТовараGetProduct(), Формат(10000, "ЧГ=")); 
	ЗапросТовара.УстановитьПараметр("Наименование", Строка(Запрос.ПараметрыURL["id"]));
	ЗапросТовара.УстановитьПараметр("НачинаяСЗаписи", 0);

	ТЗ_Товары = ЗапросТовара.Выполнить().Выгрузить();
	ТЗ_Товары.Колонки.Добавить("колФото", Новый ОписаниеТипов("Число"));
	ТЗ_Товары.Колонки.Добавить("Фото", Новый ОписаниеТипов("Массив"));
	МассивТоваров = Новый Массив;

	ИндКоды = ТЗ_Товары.ВыгрузитьКолонку("индкод");
	Фотки = РаботаССайтомWT.ПолучениеФото(ИндКоды);
	Итер = 0;
	

	Фотограф = ПолучитьФотографаGetProduct(Запрос.ПараметрыURL["id"]); 
	ФИОФотографа = "";
	ТабНомФотографа = "";
	Если Фотограф <> Неопределено Тогда
		ФИОФотографа = Справочники.Сотрудники.НайтиПоКоду(Фотограф.tabnum);
		ТабНомФотографа = Фотограф.tabnum;
	КонецЕсли;
	
	
	Если ТЗ_Товары.Количество() > 0 Тогда
		Для Каждого стр Из ТЗ_Товары Цикл
			
			НайденныеФотки = Новый Массив;
		
			НайденныеФотки = Фотки[итер].urls;
			МассивФото = Новый массив;
			Если НайденныеФотки <> Неопределено И НайденныеФотки.Количество() > 0 Тогда

				стр.колфото = 1;

				Для Каждого Фотка Из НайденныеФотки Цикл
					Текст = "";
					Текст = Фотка;
					МассивФото.Добавить(Текст);
				КонецЦикла;
			КонецЕсли;
			итер = итер + 1;
			ТЗ_Товары.Сортировать("колФото Убыв");
			РекомендованноеМестоХранения = Новый Массив;
			ЗапросРекомендованноеМесто = Новый Запрос;
			ЗапросРекомендованноеМесто.Текст = текстРекомендуемоеМестоХраненияGetProduct();
			ЗапросРекомендованноеМесто.УстановитьПараметр("Наименование", Строка(стр.код));
			РезультатЗапросаРекомендованноеМесто = ЗапросРекомендованноеМесто.Выполнить().Выбрать();
			РезультатЗапросаРекомендованноеМесто.Следующий();
			СтруктураРекомендованноеМесто = Новый Структура;
			СтруктураРекомендованноеМесто.Вставить("sklad", Строка(РезультатЗапросаРекомендованноеМесто.Склад));
			СтруктураРекомендованноеМесто.Вставить("shelf", Строка(РезультатЗапросаРекомендованноеМесто.Адрес));
			СтруктураРекомендованноеМесто.Вставить("poddon", Строка(РезультатЗапросаРекомендованноеМесто.Поддон));
			СтруктураРекомендованноеМесто.Вставить("count", Строка(РезультатЗапросаРекомендованноеМесто.Количество));
			РекомендованноеМестоХранения.Добавить(СтруктураРекомендованноеМесто);
			СтруктураТоваров = Новый Структура;	
			Структура = ПолучитьДанныеОТовареGetProduct(стр.индкод);
			СтруктураТоваров.Вставить(" yearcar", Число(стр.машинаГод));
			СтруктураТоваров.Вставить("name", Строка(стр.Наименование));
			СтруктураТоваров.Вставить("article", Строка(стр.Артикул));
			СтруктураТоваров.Вставить("price", стр.Цена);
			СтруктураТоваров.Вставить("sklad", Строка(стр.Склад));
			СтруктураТоваров.Вставить("id", Строка(стр.индкод));
			СтруктураТоваров.Вставить("photos", МассивФото);
			МассивТоваров.Добавить(СтруктураТоваров);
		
		КонецЦикла;

		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();

		ЗаписатьJSON(ЗаписьJSON, СтруктураТоваров);

		СтрокаДляОтвета = ЗаписьJSON.Закрыть();

		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	Иначе
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
	

		ЗаписатьJSON(ЗаписьJSON, СформироватьСтруктуруОшибкиGetProduct("Товар не найден",
			"Ошибка при вызове метода контекста (Выполнить)"));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();

		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
	КонецЕсли;
	Возврат Ответ;
/// МазинЕС-06-12-20-24	
КонецФункции

Функция текстДляТовараGetProduct()
/// МазинЕС-06-12-20-24	
	Текстзапроса = "ВЫБРАТЬ
				   |	ИндНомер.индкод КАК индкод
				   |ПОМЕСТИТЬ ВТ_предКоды
				   |ИЗ
				   |	РегистрСведений.ИндНомер КАК ИндНомер
				   |ГДЕ
				   |	ИндНомер.индкод.Наименование = &Наименование
				   |
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	РегИндНомер.индкод.Владелец.Наименование КАК Наименование,
				   |	РегИндНомер.индкод КАК индкод,
				   |	РегИндНомер.Состояние КАК Состояние,
				   |	ВЫБОР
				   |		КОГДА РегИндНомер.Цена > 0
				   |			ТОГДА РегИндНомер.Цена
				   |		ИНАЧЕ РегИндНомер.индкод.Владелец.РекомендованаяЦена
				   |	КОНЕЦ КАК Цена,
				   |	РегИндНомер.Комментарий КАК Комментарий,
				   |	РегИндНомер.индкод.Владелец.Артикул КАК Артикул,
				   |	ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.Подкатегория2) КАК Подкатегория2,
				   |	ВЫБОР
				   |		КОГДА РегИндНомер.Стеллаж <> ЗНАЧЕНИЕ(справочник.Стеллаж.ПустаяСсылка)
				   |			ТОГДА ПРЕДСТАВЛЕНИЕ(РегИндНомер.Стеллаж)
				   |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.МестоНаСкладе2)
				   |	КОНЕЦ КАК Адрес,
				   |	РегИндНомер.Ответственный КАК Учетчик,
				   |	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
				   |	ПРЕДСТАВЛЕНИЕ(РегистрНакопления1Остатки.Склад) КАК Склад,
				   |	РегИндНомер.Поддон КАК Поддон,
				   |	РегИндНомер.АвитоЧастник КАК АвитоЧастник,
				   |	НоменклатураТовар.Размеры КАК Размеры,
				   |	НоменклатураТовар.Вес КАК Вес,
				   |	НоменклатураТовар.выс КАК выс,
				   |	НоменклатураТовар.длин КАК длин,
				   |	НоменклатураТовар.шир КАК шир,
				   |
				   |	НоменклатураТовар.Код КАК НоменклатураКод,
				   |
				   |РегистрНакопления1Остатки.КолвоОстаток Как Остаток,
				   |ЕстьNULL(РегистрНакопления1Остатки.машина.Год,0 )КАК машинаГод,
				   |	РегИндНомер.индкод.Владелец.Код КАК Код,
				   |ВЫБОР
				   |Когда регистрНакопления1Остатки.КолвоОстаток > 0 Тогда
				   |""Есть в наличии""
				   |Иначе
				   |""Товар продан""
				   |
				   |КОНЕЦ КАК ФактНаличия
				   |ПОМЕСТИТЬ ВТ_данныеНоменклатур
				   |ИЗ
				   |	ВТ_предКоды КАК ИндНомер
				   |		Левое СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
				   |		ПО ИндНомер.индкод = РегистрНакопления1Остатки.индкод
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураТовар
				   |		ПО ИндНомер.индкод.Владелец.Ссылка = НоменклатураТовар.Ссылка
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК РегИндНомер
				   |		ПО ИндНомер.индкод = РегИндНомер.индкод
				   |{ГДЕ
				   |	(РегИндНомер.АвитоЧастник = &Ач) КАК Поле2}
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ ПЕРВЫЕ %1
				   |	ВТ_данныеНоменклатур.Наименование КАК Наименование,
				   |	ПРЕДСТАВЛЕНИЕ(ВТ_данныеНоменклатур.индкод) КАК индкод,
				   |	ВТ_данныеНоменклатур.Цена КАК Цена,
				   |	ВТ_данныеНоменклатур.Состояние КАК Состояние,
				   |	ВТ_данныеНоменклатур.Комментарий КАК Комментарий,
				   |	ВТ_данныеНоменклатур.Артикул КАК Артикул,
				   |	ВТ_данныеНоменклатур.Подкатегория2 КАК Подкатегория2,
				   |	ВТ_данныеНоменклатур.Адрес КАК Адрес,
				   |	ВТ_данныеНоменклатур.Учетчик КАК Учетчик,
				   |	ВТ_данныеНоменклатур.Склад КАК Склад,
				   |	ВТ_данныеНоменклатур.НомерЗаписи КАК НомерЗаписи,
				   |	ВТ_данныеНоменклатур.Поддон КАК Поддон,
				   |	ВТ_данныеНоменклатур.АвитоЧастник КАК АвитоЧастник,
				   |	ВТ_данныеНоменклатур.ФактНаличия КАК ФактНаличия,
				   |ВТ_данныеНоменклатур.Остаток КАК Остаток,
				   |ВТ_данныеНоменклатур.машинаГод КАК машинаГод,
				   |	ВТ_данныеНоменклатур.Код КАК Код,
				   |	ВТ_данныеНоменклатур.Размеры КАК Размеры,
				   |	ВТ_данныеНоменклатур.Вес КАК Вес,
				   |	ВТ_данныеНоменклатур.выс КАК выс,
				   |	ВТ_данныеНоменклатур.длин КАК длин,
				   |	ВТ_данныеНоменклатур.НоменклатураКод КАК НоменклатураКод,
				   |	ВТ_данныеНоменклатур.шир КАК шир
				   |ИЗ
				   |	ВТ_данныеНоменклатур КАК ВТ_данныеНоменклатур
				   |ГДЕ
				   |	ВТ_данныеНоменклатур.НомерЗаписи >= &НачинаяСЗаписи
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	НомерЗаписи";

	Возврат Текстзапроса;
/// МазинЕС-06-12-20-24
КонецФункции

Функция ПолучитьФотографаGetProduct(ИндКод)
/// МазинЕС-06-12-20-24	
	
	Попытка
		Соединение = Новый HTTPСоединение("192.168.0.245", 8085);

		СтрокаЗапроса = "v1/product/" + ИндКод + "/last_date/tabnum";
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("Content-Type", "application/json");

		Запрос = Новый HTTPЗапрос(СтрокаЗапроса, Заголовки);	
	
		Ответ = Соединение.Получить(Запрос);

		Если Ответ.КодСостояния = 200 Тогда
			Тело = Ответ.ПолучитьТелоКакСтроку();
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(Тело);

			Ответ  = ПрочитатьJSON(ЧтениеJSON);
			
		Иначе
			
			тело = Ответ.ПолучитьТелоКакСтроку();
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(Тело);

			Ответ  = ПрочитатьJSON(ЧтениеJSON);
			
			ответ = Неопределено;
		КонецЕсли;
		Возврат Ответ;
	Исключение

		Возврат Неопределено;
	КонецПопытки;
	
/// МазинЕС-06-12-20-24
КонецФункции

Функция текстРекомендуемоеМестоХраненияGetProduct()
/// МазинЕС-06-12-20-24	
	
	Текстзапроса = "ВЫБРАТЬ
				   |	Номенклатура.Ссылка КАК Ссылка
				   |ПОМЕСТИТЬ ВТ_Номенклатура
				   |ИЗ
				   |	Справочник.Номенклатура КАК Номенклатура
				   |ГДЕ
				   |	Номенклатура.Код = &Наименование
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ИндНомер.индкод КАК индкод
				   |ПОМЕСТИТЬ ВТ_предКоды
				   |ИЗ
				   |	РегистрСведений.ИндНомер КАК ИндНомер
				   |ГДЕ
				   |	ИндНомер.Поддон.Наименование = &Наименование
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
				   |	ИндНомер.индкод
				   |ИЗ
				   |	РегистрСведений.ИндНомер КАК ИндНомер
				   |ГДЕ
				   |	ИндНомер.Стеллаж.Наименование = &Наименование
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
				   |	ИндНомер.индкод
				   |ИЗ
				   |	РегистрСведений.ИндНомер КАК ИндНомер
				   |ГДЕ
				   |	ИндНомер.индкод.Наименование = &Наименование
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
				   |	ИндНомер.индкод
				   |ИЗ
				   |	РегистрСведений.ИндНомер КАК ИндНомер
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
				   |		ПО ИндНомер.индкод.Владелец = ВТ_Номенклатура.Ссылка
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	РегИндНомер.индкод.Владелец.Наименование КАК Наименование,
				   |	РегИндНомер.индкод КАК индкод,
				   |	ВЫБОР
				   |		КОГДА РегИндНомер.Цена > 0
				   |			ТОГДА РегИндНомер.Цена
				   |		ИНАЧЕ РегИндНомер.индкод.Владелец.РекомендованаяЦена
				   |	КОНЕЦ КАК Цена,
				   |	РегИндНомер.Комментарий КАК Комментарий,
				   |	РегИндНомер.индкод.Владелец.Артикул КАК Артикул,
				   |	ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.Подкатегория2) КАК Подкатегория2,
				   |	ВЫБОР
				   |		КОГДА РегИндНомер.Стеллаж <> ЗНАЧЕНИЕ(справочник.Стеллаж.ПустаяСсылка)
				   |			ТОГДА ПРЕДСТАВЛЕНИЕ(РегИндНомер.Стеллаж)
				   |		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.МестоНаСкладе2)
				   |	КОНЕЦ КАК Адрес,
				   |	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
				   |	ПРЕДСТАВЛЕНИЕ(РегистрНакопления1Остатки.Склад) КАК Склад,
				   |	РегИндНомер.Поддон КАК Поддон,
				   |	РегистрНакопления1Остатки.Склад.Город КАК Город
				   |ПОМЕСТИТЬ ВТ_данныеНоменклатур
				   |ИЗ
				   |	ВТ_предКоды КАК ИндНомер
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
				   |		ПО ИндНомер.индкод = РегистрНакопления1Остатки.индкод
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК РегИндНомер
				   |		ПО ИндНомер.индкод = РегИндНомер.индкод
				   |ГДЕ
				   |	РегистрНакопления1Остатки.КолвоОстаток > 0
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ ПЕРВЫЕ 1
				   |	ВТ_данныеНоменклатур.Адрес КАК Адрес,
				   |	ВТ_данныеНоменклатур.Склад КАК Склад,
				   |	ВТ_данныеНоменклатур.Город КАК Город,
				   |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_данныеНоменклатур.индкод) КАК Количество,
				   |	ВТ_данныеНоменклатур.Поддон КАК Поддон
				   |ИЗ
				   |	ВТ_данныеНоменклатур КАК ВТ_данныеНоменклатур
				   |СГРУППИРОВАТЬ ПО
				   |	ВТ_данныеНоменклатур.Адрес,
				   |	ВТ_данныеНоменклатур.Склад,
				   |	ВТ_данныеНоменклатур.Город,
				   |	ВТ_данныеНоменклатур.Поддон
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	Количество УБЫВ";
	Возврат Текстзапроса;

/// МазинЕС-06-12-20-24
КонецФункции

Функция ПолучитьДанныеОТовареGetProduct(Партия)
/// МазинЕС-06-12-20-24

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПродажаЗапчастейТаблица.Товар КАК Товар,
	|	ПродажаЗапчастейТаблица.Партия КАК Партия,
	|	ПродажаЗапчастейТаблица.Ссылка КАК Ссылка,
	|	ПродажаЗапчастейТаблица.СтатусТовара КАК СтатусТовара,
	|	ПродажаЗапчастей.ЗаказКлиента.Номер КАК ЗаказКлиентаНомер
	|ИЗ
	|	Документ.ПродажаЗапчастей.Таблица КАК ПродажаЗапчастейТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|		ПО ПродажаЗапчастейТаблица.Ссылка = ПродажаЗапчастей.Ссылка
	|ГДЕ
	|	ПродажаЗапчастейТаблица.Партия.Наименование = &Наименование";

	Запрос.УстановитьПараметр("Наименование", Партия);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();


	Структура = Новый Структура;

	Если РезультатЗапроса.Пустой() Тогда
		Структура.Вставить("Продан", "");
		Структура.Вставить("Выдан", "");
		Структура.Вставить("ЗаказКлиентаНомер", "");
	КонецЕсли;

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Структура.Вставить("Продан", "В продаже");
		Структура.Вставить("ЗаказКлиентаНомер", ВыборкаДетальныеЗаписи.ЗаказКлиентаНомер);
		Если ВыборкаДетальныеЗаписи.СтатусТовара Тогда
			Структура.Вставить("Выдан", "Выдан");
		Иначе
			Структура.Вставить("Выдан", "На складе");
		КонецЕсли;
	КонецЦикла;

	Возврат Структура;
	 
/// МазинЕС-06-12-20-24	
КонецФункции

Функция СформироватьСтруктуруОшибкиGetProduct(Message, Details)
/// МазинЕС-06-12-20-24
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("message", Message);
	СтруктураОтвета.Вставить("details", Details);

	Возврат СтруктураОтвета;
/// МазинЕС-06-12-20-24
КонецФункции

Функция ПроверитьНаличиеТовараGETCheckTheProduct(Запрос)
/// МазинЕС-06-12-20-24	

	Партия = Строка(Запрос.ПараметрыURL["id"]); 
	МестоХранения = Число(Запрос.ПараметрыURL["place"]);
	СправочникИндНомер = Справочники.ИндКод.НайтиПоНаименованию(Партия); 	
	
		Если МестоХранения = 0  Тогда
		
			НаборЗаписей = РегистрыСведений.ИндНомер.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.индкод.Установить(СправочникИндНомер); 
			НаборЗаписей.Прочитать();
			
			Для Каждого Запись Из НаборЗаписей Цикл 
		    	
		    	Запись.ДатаПроверкиЕстьВНаличии = ТекущаяДата(); 
		    	
			КонецЦикла; 
			
			Попытка
				НаборЗаписей.Записать();
				СтруктураОтвета = НОвый Структура();
				СтруктураОтвета.Вставить("Ответ","Все гуд!");
				
				ЗаписьJSON = Новый ЗаписьJSON;
				ЗаписьJSON.УстановитьСтроку();
				ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета.Ответ);
				СтрокаДляОтвета = ЗаписьJSON.Закрыть();
				Ответ = Новый HTTPСервисОтвет(200);
				Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
				Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
				
				Возврат Ответ;
			Исключение
				ЗаписьJSON = Новый ЗаписьJSON;
				ЗаписьJSON.УстановитьСтроку();
				ЗаписатьJSON(ЗаписьJSON, СформироватьСтруктуруОшибкиGetProduct("Не удалось проставить отметку ""Товар найден""",
					""));
				СтрокаДляОтвета = ЗаписьJSON.Закрыть();
				Ответ = Новый HTTPСервисОтвет(500);
				Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
				Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
				Возврат Ответ;
			КонецПопытки;
		Иначе 
			Попытка 
				СтруктураОтвета = НОвый Структура();
				
				Запрос = Новый Запрос;
				Запрос.Текст =
					"ВЫБРАТЬ
					|	ИндНомер.Стеллаж КАК Стелаж
					|ИЗ
					|	РегистрСведений.ИндНомер КАК ИндНомер
					|ГДЕ
					|	ИндНомер.индкод = &индкод";
				
				Запрос.УстановитьПараметр("индкод",СправочникИндНомер);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				Если РезультатЗапроса.Пустой() ТОгда 
					ЗаписьJSON = Новый ЗаписьJSON;
					ЗаписьJSON.УстановитьСтроку();
					ЗаписатьJSON(ЗаписьJSON, СформироватьСтруктуруОшибкиGetProduct("Не удалось найти место хранения товара",
						""));
					СтрокаДляОтвета = ЗаписьJSON.Закрыть();
					Ответ = Новый HTTPСервисОтвет(500);
					Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
					Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
					Возврат Ответ;	
				КонецЕсли; 
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					СтруктураОтвета.Вставить("Ответ",Строка(ВыборкаДетальныеЗаписи.Стелаж));
				КонецЦикла;
		
				ЗаписьJSON = Новый ЗаписьJSON;
				ЗаписьJSON.УстановитьСтроку();
				ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета.Ответ);
				СтрокаДляОтвета = ЗаписьJSON.Закрыть();
				Ответ = Новый HTTPСервисОтвет(200);
				Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
				Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
				Возврат Ответ;
			Исключение
				ЗаписьJSON = Новый ЗаписьJSON;
				ЗаписьJSON.УстановитьСтроку();
				ЗаписатьJSON(ЗаписьJSON, СформироватьСтруктуруОшибкиGetProduct("Не удалось найти место хранения товара",
					""));
				СтрокаДляОтвета = ЗаписьJSON.Закрыть();
				Ответ = Новый HTTPСервисОтвет(500);
				Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
				Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
				Возврат Ответ;
			КонецПопытки;	
		
		КонецЕсли; 
/// МазинЕС-06-12-20-24	
КонецФункции
