#Область ОбработчикиСобытий

Функция ПолучитьКатегорииТовараgetproductcategories(Запрос)
	
	///+ТатарМА 06.12.2024
	Попытка
		ЗапросКатегории = Новый Запрос;
		ЗапросКатегории.Текст = "ВЫБРАТЬ
		|	Категории.Ссылка КАК Категория,
		|	Категории.Код КАК Код
		|ИЗ
		|	Справочник.Категории КАК Категории
		|ГДЕ
		|	Категории.Родитель = ЗНАЧЕНИЕ(Справочник.Категории.ПустаяСсылка)";

		РезультатТЗ = ЗапросКатегории.Выполнить().Выгрузить();

		МассивКатегорий = Новый Массив;
		Для Каждого Результат Из РезультатТЗ Цикл
			СтруктураКатегорий = Новый Структура;
			СтруктураКатегорий.Вставить("name", Строка(Результат.Категория));
			СтруктураКатегорий.Вставить("id", Результат.Код);
			МассивКатегорий.Добавить(СтруктураКатегорий);
		КонецЦикла;

		СтруктураИнфо= Новый Структура;
		СтруктураИнфо.Вставить("cities", МассивКатегорий);

		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьJSON, СтруктураИнфо);
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета);

		Возврат Ответ;
	Исключение
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		//Информация = ИнформацияОбОшибке();
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьJSON, "Не удалось получить список категорий!");
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета);
		Возврат Ответ;
	КонецПопытки;
	///-ТатарМА 06.12.2024
КонецФункции

Функция ПолучитьТоварыПоКатегорииgetproductbycategories(Запрос)
	
	///+ТатарМА 06.12.2024
	ЗапросТовара = Новый Запрос;
	Текстзапроса = "ВЫБРАТЬ ПЕРВЫЕ 10000
	|	РегИндНомер.индкод.Владелец.Наименование КАК Наименование,
	|	РегИндНомер.индкод КАК индкод,
	|	ВЫБОР
	|		КОГДА РегИндНомер.Цена > 0
	|			ТОГДА РегИндНомер.Цена
	|		ИНАЧЕ РегИндНомер.индкод.Владелец.РекомендованаяЦена
	|	КОНЕЦ КАК Цена,
	|	РегИндНомер.Комментарий КАК Комментарий,
	|	РегИндНомер.индкод.Владелец.Артикул КАК Артикул,
	|	ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.Подкатегория2) КАК Подкатегория2,
	|	ВЫБОР
	|		КОГДА РегИндНомер.Стеллаж <> ЗНАЧЕНИЕ(справочник.Стеллаж.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(РегИндНомер.Стеллаж)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.МестоНаСкладе2)
	|	КОНЕЦ КАК Адрес,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
	|	ПРЕДСТАВЛЕНИЕ(РегистрНакопления1Остатки.Склад) КАК Склад,
	|	РегИндНомер.Поддон КАК Поддон,
	|	РегистрНакопления1Остатки.Склад.Город КАК Город,
	|	РегистрНакопления1Остатки.машина.Год КАК машинаГод,
	|	РегИндНомер.индкод.Владелец.Код КАК индкодВладелецКод,
	|	РегистрНакопления1Остатки.КолвоОстаток КАК КолвоОстаток,
	|	РегИндНомер.индкод.Владелец.Комплектация КАК индкодВладелецКомплектация,
	|	РегИндНомер.индкод.Владелец.АртикулПоиск КАК СтрокаПоиска,
	|	РегИндНомер.индкод.Владелец.DirectText КАК СтрокаПоиска1
	|ПОМЕСТИТЬ ВТ_данныеНоменклатур
	|ИЗ
	|	Справочник.Номенклатура КАК ИндНомер
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК РегИндНомер
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|			ПО (РегИндНомер.индкод = РегистрНакопления1Остатки.индкод)
	|		ПО (ИндНомер.Ссылка = РегИндНомер.индкод.Владелец)
	|ГДЕ
	|	РегистрНакопления1Остатки.КолвоОстаток > 0
	|	И РегИндНомер.АвитоЧастник
	|	И РегИндНомер.индкод.Владелец.Подкатегория2 В ИЕРАРХИИ (&Категория)
	|	И  РАЗНОСТЬДАТ(РегИндНомера.ДатаПроверкиЕстьВНаличии, &ТекДата, ДЕНЬ) <= 30
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ %1
	|	ВТ_данныеНоменклатур.Наименование КАК Наименование,
	|	ПРЕДСТАВЛЕНИЕ(ВТ_данныеНоменклатур.индкод) КАК индкод,
	|	ВТ_данныеНоменклатур.Цена КАК Цена,
	|	ВТ_данныеНоменклатур.Комментарий КАК Комментарий,
	|	ВТ_данныеНоменклатур.Артикул КАК Артикул,
	|	ВТ_данныеНоменклатур.Подкатегория2 КАК Подкатегория2,
	|	ВТ_данныеНоменклатур.Адрес КАК Адрес,
	|	ВТ_данныеНоменклатур.машинаГод КАК машинаГод,
	|	ВТ_данныеНоменклатур.Склад КАК Склад,
	|	ВТ_данныеНоменклатур.НомерЗаписи КАК НомерЗаписи,
	|	ВТ_данныеНоменклатур.Поддон КАК Поддон,
	|	ВТ_данныеНоменклатур.Город КАК Город,
	|	ВТ_данныеНоменклатур.индкодВладелецКод КАК Код,
	|	ВТ_данныеНоменклатур.КолвоОстаток КАК Остаток,
	|	ВТ_данныеНоменклатур.индкодВладелецКомплектация КАК Комплектация,
	|	ВТ_данныеНоменклатур.СтрокаПоиска КАК СтрокаПоиска,
	|	ВТ_данныеНоменклатур.СтрокаПоиска1 КАК СтрокаПоиска1
	|ИЗ
	|	ВТ_данныеНоменклатур КАК ВТ_данныеНоменклатур
	|ГДЕ
	|	ВТ_данныеНоменклатур.НомерЗаписи >= &НачинаяСЗаписи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерЗаписи";

	Категория = Справочники.Категории.НайтиПоКоду(Запрос.ПараметрыURL["categories"]);
	
	запросТовара.Текст =   СтрШаблон(Текстзапроса, Формат(10000, "ЧГ=")); 


	запросТовара.УстановитьПараметр("Категория", Категория);
	запросТовара.УстановитьПараметр("НачинаяСЗаписи", 0);
	ЗапросТовара.УстановитьПараметр("ТекДата", ТекущаяДатаСеанса());
	
	Выборкаобщ = запросТовара.Выполнить().Выбрать().Количество();

	запросТовара.Текст =  СтрШаблон(Текстзапроса, Формат(?(Число(Запрос.ПараметрыURL["count"]) > 0,
	Запрос.ПараметрыURL["count"], 10000), "ЧГ=")); 

	запросТовара.УстановитьПараметр("Категория", Категория);

	запросТовара.УстановитьПараметр("НачинаяСЗаписи", 0);

	Если Число(((Запрос.ПараметрыURL["count"]) * (Запрос.ПараметрыURL["page"]))) > 0 И Число(
		Запрос.ПараметрыURL["page"]) > 1 Тогда
		запросТовара.УстановитьПараметр("НачинаяСЗаписи", Число(((Запрос.ПараметрыURL["count"])
			* ((Запрос.ПараметрыURL["page"]) - 1) + 1)));
	Иначе
		запросТовара.УстановитьПараметр("НачинаяСЗаписи", 0);
	КонецЕсли;
	
	ТЗ_Товары = запросТовара.Выполнить().Выгрузить();
//	ТЗ_Товары.Колонки.Добавить("колФото", Новый ОписаниеТипов("Число"));
//	ТЗ_Товары.Колонки.Добавить("Фото", Новый ОписаниеТипов("Массив"));
	МассивТоваров = Новый Массив;

	//ИндКоды = ТЗ_Товары.ВыгрузитьКолонку("индкод");
	//Фотки = РаботаССайтомWT.ПолучениеФото(ИндКоды);
	//Итер = 0;

	Для Каждого стр Из ТЗ_Товары Цикл
//		НайденныеФотки = Новый Массив;
//		//ПутьКФайлам = "W:\code\imageService\images\" + стр.индкод;
//		НайденныеФотки = Фотки[итер].urls;
//		МассивФото = Новый массив;
//		Если НайденныеФотки <> Неопределено И НайденныеФотки.Количество() > 0 Тогда
//
//			стр.колфото = 1;
//
//			Для Каждого Фотка Из НайденныеФотки Цикл
//				Текст = "";
//				//Текст = "https://wt10.ru" + Фотка; 
//				Текст = Фотка;
//				МассивФото.Добавить(Текст);
//			КонецЦикла;
//		КонецЕсли;
//		Итер = итер + 1;
//		ТЗ_Товары.Сортировать("колФото Убыв");

		СтруктураТоваров = Новый Структура;
		СтруктураТоваров.Вставить("name", Строка(стр.Наименование));
		СтруктураТоваров.Вставить("article", Строка(стр.Артикул));
		СтруктураТоваров.Вставить("price", стр.Цена);
		СтруктураТоваров.Вставить("comment", Строка(стр.Комментарий));
		СтруктураТоваров.Вставить("shelf", Строка(стр.Адрес));
		СтруктураТоваров.Вставить("sklad", Строка(стр.Склад));
		СтруктураТоваров.Вставить("code", Строка(стр.Код));
		СтруктураТоваров.Вставить("categories", Строка(стр.Подкатегория2));
		//СтруктураТоваров.Вставить("type", "PRODUCT");

		СтруктураТоваров.Вставить("city", Строка(стр.Город));

		СтруктураТоваров.Вставить("id", Строка(стр.индкод));
		СтруктураТоваров.Вставить("poddon", Строка(стр.Поддон));
		СтруктураТоваров.Вставить("yearcar", число(стр.машинаГод));
		//СтруктураТоваров.Вставить("photos", МассивФото);
		МассивТоваров.Добавить(СтруктураТоваров);
	КонецЦикла;
	Итог = Выборкаобщ / ?(Число(Запрос.ПараметрыURL["count"]) = 0, Выборкаобщ, Число(Запрос.ПараметрыURL["count"]));
	Итог = ?((Итог - Цел(Итог)) > 0, Цел(Итог) + 1, Цел(Итог));

	СтруктураИнфо= Новый Структура;
	СтруктураИнфо.Вставить("pages", Итог);
	СтруктураИнфо.Вставить("count", Выборкаобщ);

	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("pages", Итог);
	СтруктураОтвета.Вставить("count", Выборкаобщ);
	СтруктураОтвета.Вставить("products", МассивТоваров);

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();

	ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);

	СтрокаДляОтвета = ЗаписьJSON.Закрыть();

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);

	Возврат Ответ;
	///-ТатарМА 06.12.2024
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

