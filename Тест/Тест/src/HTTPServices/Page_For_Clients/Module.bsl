#Область ОбработчикиСобытий

Функция ПолучитьГородаGetCities(Запрос)
	Попытка
		Регион = Запрос.ПараметрыURL["region"];
		СтрокаПоиска = " И " + Символы.ПС + "	 Город.Наименование ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""";

		ЗапросГородов = Новый Запрос;

		Текст = "ВЫБРАТЬ ПЕРВЫЕ 100000
		|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
		|	Город.Код,
		|	Город.Наименование КАК Наименование
		|ПОМЕСТИТЬ ВТ_СписокГородов
		|ИЗ
		|	Справочник.Город КАК Город
		|ГДЕ
		|	Город.Владелец.Код = &Регион
		|%2
		|УПОРЯДОЧИТЬ ПО
		|	Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ %1
		|	ВТ_СписокГородов.Наименование,
		|	ВТ_СписокГородов.Код,
		|	ВТ_СписокГородов.НомерЗаписи
		|ИЗ
		|	ВТ_СписокГородов КАК ВТ_СписокГородов
		|ГДЕ
		|	ВТ_СписокГородов.НомерЗаписи >= &НачинаяСЗаписи";

		Если Запрос.ПараметрыURL["text"] = "00" Тогда
			ЗапросГородов.Текст =  СтрШаблон(Текст, Формат(100000, "ЧГ="), " ");
		Иначе
			ЗапросГородов.Текст =  СтрШаблон(Текст, Формат(100000, "ЧГ="), СтрокаПоиска);
			ЗапросГородов.УстановитьПараметр("Наименование", "%" + ОбщегоНазначения.СформироватьСтрокуДляПоискаВЗапросе(
				Строка(
		Запрос.ПараметрыURL["text"])) + "%");
		КонецЕсли;
		
		ЗапросГородов.УстановитьПараметр("Регион", Регион);
		ЗапросГородов.УстановитьПараметр("НачинаяСЗаписи", 0);

		ОбщееКолво = ЗапросГородов.Выполнить().Выбрать().Количество();

		Если Запрос.ПараметрыURL["text"] = "00" Тогда
			ЗапросГородов.Текст =  СтрШаблон(Текст, Формат(?(Число(Запрос.ПараметрыURL["count"]) > 0,
				Запрос.ПараметрыURL["count"], 100000), "ЧГ="), " ");
		Иначе
			ЗапросГородов.Текст =  СтрШаблон(Текст, Формат(?(Число(Запрос.ПараметрыURL["count"]) > 0,
				Запрос.ПараметрыURL["count"], 100000), "ЧГ="), СтрокаПоиска);
			ЗапросГородов.УстановитьПараметр("Наименование", "%" + ОбщегоНазначения.СформироватьСтрокуДляПоискаВЗапросе(
				Строка(
		Запрос.ПараметрыURL["text"])) + "%");
		КонецЕсли;

		Если Число(((Запрос.ПараметрыURL["count"]) * (Запрос.ПараметрыURL["page"]))) > 0 И Число(
		Запрос.ПараметрыURL["page"]) > 1 Тогда
			ЗапросГородов.УстановитьПараметр("НачинаяСЗаписи", Число(((Запрос.ПараметрыURL["count"])
				* (Запрос.ПараметрыURL["page"] - 1) + 1)));
		Иначе
			ЗапросГородов.УстановитьПараметр("НачинаяСЗаписи", 0);
		КонецЕсли;
		СписокПоиска = ЗапросГородов.Выполнить().Выгрузить();

		МассивГородов = Новый Массив;
		Для Каждого Результат Из СписокПоиска Цикл
			СтруктураГорода = Новый Структура;
			СтруктураГорода.Вставить("name", Строка(Результат.Наименование));
			СтруктураГорода.Вставить("id", Результат.Код);
			МассивГородов.Добавить(СтруктураГорода);
		КонецЦикла;

		Итог = ОбщееКолво / ?(Число(Запрос.ПараметрыURL["count"]) = 0, ОбщееКолво, Число(Запрос.ПараметрыURL["count"]));
		Итог = ?((Итог - Цел(Итог)) > 0, Цел(Итог) + 1, Цел(Итог));

		СтруктураИнфо= Новый Структура;
		СтруктураИнфо.Вставить("pages", Итог);
		СтруктураИнфо.Вставить("count", ОбщееКолво);
		СтруктураИнфо.Вставить("cities", МассивГородов);

		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("info", СтруктураИнфо);

		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		//Информация = ИнформацияОбОшибке();
		ЗаписатьJSON(ЗаписьJSON, СтруктураИнфо);
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета);

		Возврат Ответ;
	Исключение
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		//Информация = ИнформацияОбОшибке();
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		//Информация = ИнформацияОбОшибке();
		ЗаписатьJSON(ЗаписьJSON, "Не удалось получить список городов!");
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета);
		Возврат Ответ;
	КонецПопытки;
	/// Комлев 20/08/24 ---
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти