#Область ОбработчикиСобытий
Функция ПолучитьСписокТоваровGetProductsList(Запрос)
	
	МассивСтеллажей = Новый Массив;
	МассивСтеллажей.Добавить(Справочники.Стеллаж.НайтиПоКоду("000001068")); //RegionEKB
	МассивСтеллажей.Добавить(Справочники.Стеллаж.НайтиПоКоду("000002014")); //RegionMSK
	МассивСтеллажей.Добавить(Справочники.Стеллаж.НайтиПоКоду("000002015")); //RegionNN
	
	ЗапросТовара = Новый Запрос;
	запросТовара.Текст =  СтрШаблон(текстДляНоменклатуры(), Формат(10000, "ЧГ="));
	запросТовара.УстановитьПараметр("наименование", "%" +ОбщегоНазначения.СформироватьСтрокуДляПоискаВЗапросе(Строка(Запрос.ПараметрыURL["text"]))+"%" ); 
	запросТовара.УстановитьПараметр("НачинаяСЗаписи", 0);
	запросТовара.УстановитьПараметр("Стеллаж", МассивСтеллажей);
	
	
	Выборкаобщ = запросТовара.Выполнить().Выбрать().Количество();
	Если Выборкаобщ > 0 Тогда
	запросТовара.Текст =  СтрШаблон(текстДляНоменклатуры(), Формат(?(Число(Запрос.ПараметрыURL["count"])>0,Запрос.ПараметрыURL["count"],10000), "ЧГ="));
	запросТовара.УстановитьПараметр("наименование", "%" +ОбщегоНазначения.СформироватьСтрокуДляПоискаВЗапросе(Строка(Запрос.ПараметрыURL["text"]))+"%" );
	Если Число(((Запрос.ПараметрыURL["count"])*(Запрос.ПараметрыURL["page"])))>0 и Число(Запрос.ПараметрыURL["page"])>1 Тогда
		запросТовара.УстановитьПараметр("НачинаяСЗаписи",  Число(((Запрос.ПараметрыURL["count"])*((Запрос.ПараметрыURL["page"])-1)+1)));
	Иначе 
		запросТовара.УстановитьПараметр("НачинаяСЗаписи", 0);
	КонецЕсли;
	
	ТЗ = запросТовара.Выполнить().Выгрузить();
	//	Выборкаобщ = Тз.Количество();
	Массивкодов = ТЗ.ВыгрузитьКолонку("индкод");
	ТЗ.Колонки.Добавить("колФото",Новый ОписаниеТипов("Число"));  
	ТЗ.Колонки.Добавить("Фото",Новый ОписаниеТипов("Массив"));
	МассивТоваров = Новый Массив;
	
	ИндКоды = тз.ВыгрузитьКолонку("индкод");
	Фотки = ПолучениеФото(ИндКоды);
	Итер = 0;
	
	Для каждого стр из ТЗ Цикл
		НайденныеФотки = Новый Массив;
		//ПутьКФайлам = "W:\code\imageService\images\" + стр.индкод;
		НайденныеФотки = Фотки[итер].urls;
		МассивФото = новый массив;  
		Если НайденныеФотки <> неопределено и НайденныеФотки.Количество()>0 Тогда
			
			стр.колфото = 1;  
			
			Для каждого Фотка Из НайденныеФотки Цикл
				Текст = "";
				//Текст = "https://wt10.ru" + Фотка; 
				Текст = Фотка;
				МассивФото.Добавить(Текст);
			КонецЦикла; 
		КонецЕсли;
		Итер = итер+1;
		тз.Сортировать("колФото Убыв");
		
		СтруктураТоваров = Новый Структура;
		СтруктураТоваров.Вставить("name",    Строка(стр.Наименование));
		СтруктураТоваров.Вставить("search",    Строка(стр.СтрокаПоиска));
		СтруктураТоваров.Вставить("search1",    Строка(стр.СтрокаПоиска1));
		СтруктураТоваров.Вставить("article", Строка(стр.Артикул));
		СтруктураТоваров.Вставить("cost",    Строка(стр.Цена));
		СтруктураТоваров.Вставить("comment", Строка(стр.Комментарий));                      
		СтруктураТоваров.Вставить("place",    Строка(стр.Адрес));
		СтруктураТоваров.Вставить("sklad",    Строка(стр.Склад)); 
		СтруктураТоваров.Вставить("code",    Строка(стр.Код));
		СтруктураТоваров.Вставить("count",    Строка(стр.Остаток));
		СтруктураТоваров.Вставить("stack",    стр.Комплектация);
		
		СтруктураТоваров.Вставить("sity",    Строка(стр.Город));
		
		СтруктураТоваров.Вставить("indcode", Строка(стр.индкод));   
		СтруктураТоваров.Вставить("poddon", Строка(стр.Поддон)); 
		СтруктураТоваров.Вставить("photos", МассивФото);
		МассивТоваров.Добавить(СтруктураТоваров);
	КонецЦикла;
	Итог = Выборкаобщ/?(Число(Запрос.ПараметрыURL["count"])=0,Выборкаобщ,Число(Запрос.ПараметрыURL["count"]));
	Итог = ?((Итог-Цел(Итог))>0,Цел(Итог)+1, Цел(Итог));
	
	СтруктураИнфо= новый Структура;
	СтруктураИнфо.Вставить("pages",Итог);
	СтруктураИнфо.Вставить("count",Выборкаобщ);
//	Если Лев(Запрос.ПараметрыURL["IndCode"],1) = "П" Тогда
//		СтруктураИнфо.Вставить("polka",Строка(ПолучитьПолку(Строка(Запрос.ПараметрыURL["IndCode"])))); 
//		//	Иначе
//		//		СтруктураТоваров.Вставить("polka",Строка(ПолучитьПолку(Строка(стр.Поддон)))); 
//	КонецЕсли;
//	
	
	СтруктураОтвета = новый Структура;
	СтруктураОтвета.Вставить("info",СтруктураИнфо);
	СтруктураОтвета.Вставить("data",МассивТоваров);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
	
	СтрокаДляОтвета = ЗаписьJSON.Закрыть();
	
	Ответ = Новый HTTPСервисОтвет(200);	
	Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
	
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	Возврат Ответ;
	КонецЕсли;
//ПолнотекстовыйПоиск.ОбновитьИндекс();

		
//	Итог = Выборкаобщ / ?(Число(Запрос.ПараметрыURL["count"]) = 0, Выборкаобщ, Число(Запрос.ПараметрыURL["count"]));
//	Итог = ?((Итог - Цел(Итог)) > 0, Цел(Итог) + 1, Цел(Итог));

	//СтруктураИнфо= Новый Структура;
//	СтруктураИнфо.Вставить("pages", Итог);
	//СтруктураИнфо.Вставить("count", МассивТоваров.Количество());

//	СтруктураОтвета = Новый Структура;
//	СтруктураОтвета.Вставить("info", СтруктураИнфо);
//	СтруктураОтвета.Вставить("data", МассивТоваров);

	//ПолнотекстовыйПоиск.УстановитьКоличествоЗаданийИндексирования(5);
	Страница = Число(Запрос.ПараметрыURL["page"]);
	КолВо    = Число(Запрос.ПараметрыURL["count"]);
	ПоисковаяСтрока = Строка(Запрос.ПараметрыURL["text"]);

	СписокПоиска=ПолнотекстовыйПоиск.СоздатьСписок();
	СписокПоиска.ПолучатьОписание = Ложь;
	МассивОтбор = Новый Массив;
	МассивТоваров = Новый Массив;
	СписокПоиска.РазмерПорции = КолВо;

	ТекущаяПозиция = КолВо * (Страница - 1);
	
	МассивОтбор.Добавить(Метаданные.РегистрыСведений.ИндНомер);
	СписокПоиска.ОбластьПоиска = МассивОтбор;
	ЛимитОшибок = Цел(СтрДлина(ПоисковаяСтрока) / 2);
СписокПоиска.СтрокаПоиска=""""+ПоисковаяСтрока  +"""";
	Если Страница = 1 Тогда
		СписокПоиска.ПерваяЧасть();
	Иначе
		СписокПоиска.СледующаяЧасть(ТекущаяПозиция);
 	КонецЕсли;
 Если СписокПоиска.Количество() > 0 тогда

 Иначе
 	
		СписокПоиска.СтрокаПоиска=ПоисковаяСтрока + "#" + Строка(ЛимитОшибок - 1);
	Если Страница = 1 Тогда
		СписокПоиска.ПерваяЧасть();
	Иначе
		СписокПоиска.СледующаяЧасть(ТекущаяПозиция);
 	КонецЕсли;	
 КонецЕсли;
 
 	
 	ОбщееКолво = СписокПоиска.ПолноеКоличество();
	ИндКоды = Новый массив;

	Для Каждого Результат Из СписокПоиска Цикл
		ИндКоды.Добавить(Строка(Результат.Значение.индкод));
	КонецЦикла;

	Фотки = ПолучениеФото(ИндКоды);
	Итер = 0;
	Для Каждого Результат Из СписокПоиска Цикл

		НайденныеФотки = Новый Массив;
		НайденныеФотки = Фотки[Итер].urls;

		МассивФото = Новый массив;

		Если НайденныеФотки <> Неопределено И НайденныеФотки.Количество() > 0 Тогда

			Для Каждого Фотка Из НайденныеФотки Цикл
				Текст = "";
				//Текст = "https://wt10.ru" + Фотка; 
				Текст = Фотка;
				МассивФото.Добавить(Текст);
			КонецЦикла;

		КонецЕсли;
		Итер = Итер + 1;

		СтруктураТоваров = Новый Структура;
		СтруктураТоваров.Вставить("indcode", Строка(Результат.Значение.индкод));
		СтруктураТоваров.Вставить("article", Строка(Результат.Значение.индкод.Владелец.Артикул));
		СтруктураТоваров.Вставить("category", Строка(Результат.Значение.индкод.Владелец.Подкатегория2));
		СтруктураТоваров.Вставить("name", Строка(Результат.Значение.индкод.Владелец));
		СтруктураТоваров.Вставить("photos", МассивФото);
		СтруктураДопРеквизитов = ПолучитьДопРеквизиты(Строка(Результат.Значение.индкод));
		СтруктураТоваров.Вставить("cost", СтруктураДопРеквизитов.cost);
		СтруктураТоваров.Вставить("comment", СтруктураДопРеквизитов.comment);
		СтруктураТоваров.Вставить("place", СтруктураДопРеквизитов.place);
		СтруктураТоваров.Вставить("sklad", СтруктураДопРеквизитов.sklad);
		СтруктураТоваров.Вставить("poddon", СтруктураДопРеквизитов.poddon);
		

 
		МассивТоваров.Добавить(СтруктураТоваров);
	КонецЦикла;
 	

	Итог = ОбщееКолво / ?(Число(Запрос.ПараметрыURL["count"]) = 0, ОбщееКолво, Число(Запрос.ПараметрыURL["count"]));
	Итог = ?((Итог - Цел(Итог)) > 0, Цел(Итог) + 1, Цел(Итог));

	СтруктураИнфо= Новый Структура;
	СтруктураИнфо.Вставить("pages", Итог);
	СтруктураИнфо.Вставить("count", ОбщееКолво);

	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("info", СтруктураИнфо);
	СтруктураОтвета.Вставить("data", МассивТоваров);

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
	
	СтрокаДляОтвета = ЗаписьJSON.Закрыть();
	
	Ответ = Новый HTTPСервисОтвет(200);	
	Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
	
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
//	

	Возврат Ответ;
КонецФункции
#КонецОбласти


#Область СлужебныеПроцедурыИФункции
Функция ПолучитьДопРеквизиты(ИндКод)
Запрос = новый Запрос();
Запрос.текст = "ВЫБРАТЬ
|	ВЫБОР
|		КОГДА РегИндНомер.Цена > 0
|			ТОГДА РегИндНомер.Цена
|		ИНАЧЕ РегИндНомер.индкод.Владелец.РекомендованаяЦена
|	КОНЕЦ КАК Цена,
|	РегИндНомер.Комментарий КАК Комментарий,
|	ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.Подкатегория2) КАК Подкатегория2,
|	ВЫБОР
|		КОГДА РегИндНомер.Стеллаж <> ЗНАЧЕНИЕ(справочник.Стеллаж.ПустаяСсылка)
|			ТОГДА ПРЕДСТАВЛЕНИЕ(РегИндНомер.Стеллаж)
|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.МестоНаСкладе2)
|	КОНЕЦ КАК Адрес,
|	ПРЕДСТАВЛЕНИЕ(РегистрНакопления1Остатки.Склад) КАК Склад,
|	ПРЕДСТАВЛЕНИЕ(РегИндНомер.Поддон) КАК Поддон,
|	РегИндНомер.АвитоЧастник КАК АвитоЧастник,
|	РегИндНомер.индкод.Владелец.Размеры КАК Размеры,
|	РегИндНомер.индкод.Владелец.Вес КАК Вес,
|	РегИндНомер.индкод.Владелец.выс КАК выс,
|	РегИндНомер.индкод.Владелец.длин КАК длин,
|	РегИндНомер.индкод.Владелец.шир КАК шир,
|	РегИндНомер.Состояние
|ИЗ
|	РегистрСведений.ИндНомер КАК РегИндНомер
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
|		ПО РегИндНомер.индкод = РегистрНакопления1Остатки.индкод
|ГДЕ
|	РегИндНомер.индкод.наименование = &ИндКод";

Запрос.УстановитьПараметр("ИндКод",ИндКод);
Выборка = Запрос.Выполнить().Выбрать();
ВЫборка.следующий();
СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("cost", Строка( ВЫборка.Цена));
		СтруктураОтвета.Вставить("comment", Строка( ВЫборка.Комментарий));
		СтруктураОтвета.Вставить("place", Строка( ВЫборка.Адрес));
		СтруктураОтвета.Вставить("sklad", Строка( ВЫборка.Склад));
		СтруктураОтвета.Вставить("poddon", ВЫборка.Поддон);
		Возврат СтруктураОтвета;
		

КонецФункции


Функция ЕстьКириллица(ИсходнаяСтрока) Экспорт
	ИсходнаяСтрока=СокрЛП(ИсходнаяСтрока);
	Если СтрДлина(ИсходнаяСтрока) > 0 Тогда
		Для Сч = 1 По СтрДлина(ИсходнаяСтрока) Цикл
			Символ = НРег(Сред(ИсходнаяСтрока, Сч, 1));
//@skip-check use-non-recommended-method
			Если Найти("абвгдеёжзийклмнопрстуфхцчшщъыьэюя", Символ) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат Ложь;
КонецФункции

Функция ПолучениеФото(ИндКод)
	//Соединение = Новый HTTPСоединение("192.168.0.44",80,,,,,Новый ЗащищенноеСоединениеOpenSSL());  
	Соединение = Новый HTTPСоединение("192.168.0.245",8085);
	
	СтрокаЗапроса = "/v1/images";
	Заголовки = Новый Соответствие;    
	Заголовки.Вставить("Content-Type", "application/json");
	
	//Для Каждого ЭлементМассива из ИндКод Цикл
	//СтрокаЗапроса = СтрокаЗапроса + ЭлементМассива;
	//Конеццикла;
	//Запрос = Новый HTTPЗапрос(СтрокаЗапроса+ИндКод);
	//В запросе можно обратиться к нужному ресурсу и с нужными параметрами
	//Запрос = Новый HTTPЗапрос("/index.php?param1=1¶m2=2"); 
	Запрос = Новый HTTPЗапрос(СтрокаЗапроса,Заголовки);	
	ЗапросСтруктура = Новый Структура();
	
	ЗапросСтруктура.Вставить("indCode", ИндКод);
	
	
	// параметры запроса
	ПотокJSON = Новый ЗаписьJSON();
	ПотокJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ПотокJSON, ЗапросСтруктура);
	СтрокаJSON = ПотокJSON.Закрыть();
	Запрос.УстановитьТелоИзСтроки(СтрокаJSON);
	
	Ответ = Соединение.ВызватьHTTPМетод("POST", Запрос); //Соединение.ОтправитьДляОбработки(Запрос);
	
	Если Ответ.КодСостояния = 200 Тогда
		Тело = Ответ.ПолучитьТелоКакСтроку();
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(Тело);
		
		Ответ  = ПрочитатьJSON(ЧтениеJSON);
		//Сообщить(Ответ); //получим HTML-код страницы 
	Иначе
		//Сообщить("Код ответа: "+Ответ.КодСостояния); //анализируем код состояния и делаем выводы  
		тело = Ответ.ПолучитьТелоКакСтроку();
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(Тело);
		
		Ответ  = ПрочитатьJSON(ЧтениеJSON);
		//Сообщить(Ответ);
		ответ = неопределено;
	КонецЕсли;
	
	Возврат Ответ;
КонецФункции

Функция текстДляНоменклатуры()
	Текстзапроса ="ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.DirectText ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Артикул ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Код ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.МестоНаСкладе2.Наименование ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИндНомер.индкод КАК индкод
	|ПОМЕСТИТЬ ВТ_предКоды
	|ИЗ
	|	РегистрСведений.ИндНомер КАК ИндНомер
	|ГДЕ
	|	ИндНомер.индкод.Наименование ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""
	|	И НЕ ИндНомер.Стеллаж В (&Стеллаж)
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	ИндНомер.индкод
	|ИЗ
	|	РегистрСведений.ИндНомер КАК ИндНомер
	|ГДЕ
	|	ИндНомер.Поддон.Наименование ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""
	|	И НЕ ИндНомер.Стеллаж В (&Стеллаж)
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	ИндНомер.индкод
	|ИЗ
	|	РегистрСведений.ИндНомер КАК ИндНомер
	|ГДЕ
	|	ИндНомер.Стеллаж.Наименование ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""
	|	И НЕ ИндНомер.Стеллаж В (&Стеллаж)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИндНомер.индкод
	|ИЗ
	|	РегистрСведений.ИндНомер КАК ИндНомер
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО ИндНомер.индкод.Владелец = ВТ_Номенклатура.Ссылка
	|ГДЕ
	|	НЕ ИндНомер.Стеллаж В (&Стеллаж)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегИндНомер.индкод.Владелец.Наименование КАК Наименование,
	|	РегИндНомер.индкод КАК индкод,
	|	ВЫБОР
	|		КОГДА РегИндНомер.Цена > 0
	|			ТОГДА РегИндНомер.Цена
	|		ИНАЧЕ РегИндНомер.индкод.Владелец.РекомендованаяЦена
	|	КОНЕЦ КАК Цена,
	|	РегИндНомер.Комментарий КАК Комментарий,
	|	РегИндНомер.индкод.Владелец.Артикул КАК Артикул,
	|	ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.Подкатегория2) КАК Подкатегория2,
	|	ВЫБОР
	|		КОГДА РегИндНомер.Стеллаж <> ЗНАЧЕНИЕ(справочник.Стеллаж.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(РегИндНомер.Стеллаж)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.МестоНаСкладе2)
	|	КОНЕЦ КАК Адрес,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
	|	ПРЕДСТАВЛЕНИЕ(РегистрНакопления1Остатки.Склад) КАК Склад,
	|	РегИндНомер.Поддон КАК Поддон,
	|	РегистрНакопления1Остатки.Склад.Город КАК Город,
	|	РегИндНомер.индкод.Владелец.Код КАК индкодВладелецКод,
	|	РегистрНакопления1Остатки.КолвоОстаток КАК КолвоОстаток,
	|	РегИндНомер.индкод.Владелец.Комплектация КАК индкодВладелецКомплектация,
	|	РегИндНомер.индкод.Владелец.АртикулПоиск КАК СтрокаПоиска,
	|	РегИндНомер.индкод.Владелец.DirectText КАК СтрокаПоиска1
	|ПОМЕСТИТЬ ВТ_данныеНоменклатур
	|ИЗ
	|	ВТ_предКоды КАК ИндНомер
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|		ПО ИндНомер.индкод = РегистрНакопления1Остатки.индкод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК РегИндНомер
	|		ПО ИндНомер.индкод = РегИндНомер.индкод
	|ГДЕ
	|	РегистрНакопления1Остатки.КолвоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ %1
	|	ВТ_данныеНоменклатур.Наименование КАК Наименование,
	|	ПРЕДСТАВЛЕНИЕ(ВТ_данныеНоменклатур.индкод) КАК индкод,
	|	ВТ_данныеНоменклатур.Цена КАК Цена,
	|	ВТ_данныеНоменклатур.Комментарий КАК Комментарий,
	|	ВТ_данныеНоменклатур.Артикул КАК Артикул,
	|	ВТ_данныеНоменклатур.Подкатегория2 КАК Подкатегория2,
	|	ВТ_данныеНоменклатур.Адрес КАК Адрес,
	|	ВТ_данныеНоменклатур.Склад КАК Склад,
	|	ВТ_данныеНоменклатур.НомерЗаписи КАК НомерЗаписи,
	|	ВТ_данныеНоменклатур.Поддон КАК Поддон,
	|	ВТ_данныеНоменклатур.Город КАК Город,
	|	ВТ_данныеНоменклатур.индкодВладелецКод КАК Код,
	|	ВТ_данныеНоменклатур.КолвоОстаток КАК Остаток,
	|	ВТ_данныеНоменклатур.индкодВладелецКомплектация КАК Комплектация,
	|	ВТ_данныеНоменклатур.СтрокаПоиска КАК СтрокаПоиска,
	|	ВТ_данныеНоменклатур.СтрокаПоиска1 КАК СтрокаПоиска1
	|ИЗ
	|	ВТ_данныеНоменклатур КАК ВТ_данныеНоменклатур
	|ГДЕ
	|	ВТ_данныеНоменклатур.НомерЗаписи >= &НачинаяСЗаписи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерЗаписи" ; 
	Возврат текстзапроса;

//текстзапроса ="ВЫБРАТЬ
//	|	Номенклатура.Ссылка КАК Ссылка
//	|ПОМЕСТИТЬ ВТ_Номенклатура
//	|ИЗ
//	|	Справочник.Номенклатура КАК Номенклатура
//	|ГДЕ
//	|	Номенклатура.Directtext ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	ИндНомер.индкод КАК индкод
//	|ПОМЕСТИТЬ ВТ_предКоды
//	|ИЗ
//	|	РегистрСведений.ИндНомер КАК ИндНомер
//	|ГДЕ
//	|	ИндНомер.индкод.Наименование ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""
//	|	И НЕ ИндНомер.Стеллаж В (&Стеллаж)
//	|
//	|ОБЪЕДИНИТЬ 
//	|
//	|ВЫБРАТЬ
//	|	ИндНомер.индкод
//	|ИЗ
//	|	РегистрСведений.ИндНомер КАК ИндНомер
//	|ГДЕ
//	|	ИндНомер.Поддон.Наименование ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""
//	|	И НЕ ИндНомер.Стеллаж В (&Стеллаж)
//	|
//	|ОБЪЕДИНИТЬ 
//	|
//	|ВЫБРАТЬ
//	|	ИндНомер.индкод
//	|ИЗ
//	|	РегистрСведений.ИндНомер КАК ИндНомер
//	|ГДЕ
//	|	ИндНомер.Стеллаж.Наименование ПОДОБНО &Наименование СПЕЦСИМВОЛ ""~""
//	|	И НЕ ИндНомер.Стеллаж В (&Стеллаж)
//	|
//	|ОБЪЕДИНИТЬ ВСЕ
//	|
//	|ВЫБРАТЬ
//	|	ИндНомер.индкод
//	|ИЗ
//	|	РегистрСведений.ИндНомер КАК ИндНомер
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
//	|		ПО ИндНомер.индкод.Владелец = ВТ_Номенклатура.Ссылка
//	|ГДЕ
//	|	НЕ ИндНомер.Стеллаж В (&Стеллаж)
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	РегИндНомер.индкод.Владелец.Наименование КАК Наименование,
//	|	РегИндНомер.индкод КАК индкод,
//	|	ВЫБОР
//	|		КОГДА РегИндНомер.Цена > 0
//	|			ТОГДА РегИндНомер.Цена
//	|		ИНАЧЕ РегИндНомер.индкод.Владелец.РекомендованаяЦена
//	|	КОНЕЦ КАК Цена,
//	|	РегИндНомер.Комментарий КАК Комментарий,
//	|	РегИндНомер.индкод.Владелец.Артикул КАК Артикул,
//	|	ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.Подкатегория2) КАК Подкатегория2,
//	|	ВЫБОР
//	|		КОГДА РегИндНомер.Стеллаж <> ЗНАЧЕНИЕ(справочник.Стеллаж.ПустаяСсылка)
//	|			ТОГДА ПРЕДСТАВЛЕНИЕ(РегИндНомер.Стеллаж)
//	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РегИндНомер.индкод.Владелец.МестоНаСкладе2)
//	|	КОНЕЦ КАК Адрес,
//	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
//	|	ПРЕДСТАВЛЕНИЕ(РегистрНакопления1Остатки.Склад) КАК Склад,
//	|	РегИндНомер.Поддон КАК Поддон,
//	|	РегистрНакопления1Остатки.Склад.Город КАК Город,
//	|	РегИндНомер.индкод.Владелец.Код КАК индкодВладелецКод,
//	|	РегистрНакопления1Остатки.КолвоОстаток КАК КолвоОстаток,
//	|	РегИндНомер.индкод.Владелец.Комплектация КАК индкодВладелецКомплектация,
//	|	РегИндНомер.индкод.Владелец.АртикулПоиск КАК СтрокаПоиска,
//	|	РегИндНомер.индкод.Владелец.DirectText КАК СтрокаПоиска1
//	|ПОМЕСТИТЬ ВТ_данныеНоменклатур
//	|ИЗ
//	|	ВТ_предКоды КАК ИндНомер
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
//	|		ПО ИндНомер.индкод = РегистрНакопления1Остатки.индкод
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК РегИндНомер
//	|		ПО ИндНомер.индкод = РегИндНомер.индкод
//	|ГДЕ
//	|	РегистрНакопления1Остатки.КолвоОстаток > 0
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ ПЕРВЫЕ %1
//	|	ВТ_данныеНоменклатур.Наименование КАК Наименование,
//	|	ПРЕДСТАВЛЕНИЕ(ВТ_данныеНоменклатур.индкод) КАК индкод,
//	|	ВТ_данныеНоменклатур.Цена КАК Цена,
//	|	ВТ_данныеНоменклатур.Комментарий КАК Комментарий,
//	|	ВТ_данныеНоменклатур.Артикул КАК Артикул,
//	|	ВТ_данныеНоменклатур.Подкатегория2 КАК Подкатегория2,
//	|	ВТ_данныеНоменклатур.Адрес КАК Адрес,
//	|	ВТ_данныеНоменклатур.Склад КАК Склад,
//	|	ВТ_данныеНоменклатур.НомерЗаписи КАК НомерЗаписи,
//	|	ВТ_данныеНоменклатур.Поддон КАК Поддон,
//	|	ВТ_данныеНоменклатур.Город КАК Город,
//	|	ВТ_данныеНоменклатур.индкодВладелецКод КАК Код,
//	|	ВТ_данныеНоменклатур.КолвоОстаток КАК Остаток,
//	|	ВТ_данныеНоменклатур.индкодВладелецКомплектация КАК Комплектация,
//	|	ВТ_данныеНоменклатур.СтрокаПоиска КАК СтрокаПоиска,
//	|	ВТ_данныеНоменклатур.СтрокаПоиска1 КАК СтрокаПоиска1
//	|ИЗ
//	|	ВТ_данныеНоменклатур КАК ВТ_данныеНоменклатур
//	|ГДЕ
//	|	ВТ_данныеНоменклатур.НомерЗаписи >= &НачинаяСЗаписи
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	НомерЗаписи" ; 
//	Возврат текстзапроса;
КонецФункции 
#КонецОбласти