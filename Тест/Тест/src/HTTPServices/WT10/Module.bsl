#Область ОбработчикиСобытий
Функция ПолучитьСписокКатегорийgetCategories(Запрос)	
	МассивКатегорий= Новый Массив;
	Дерево = Новый ДеревоЗначений;
	ЗапросКатегорий = Новый Запрос;
	ЗапросКатегорий.Текст = "ВЫБРАТЬ
	                        |	Категории.Ссылка КАК Ссылка,
	                        |	Категории.Код КАК Код
	                        |ИЗ
	                        |	Справочник.Категории КАК Категории
	                        |ИТОГИ ПО
	                        |	Ссылка ТОЛЬКО ИЕРАРХИЯ";
	
	Дерево = ЗапросКатегорий.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	МассивКатегорий= Новый Массив;
	ПустойМассив = новый массив;
	Для Каждого СтрПервогоУровня из Дерево.Строки Цикл
		СтруктураКатегорий1 = Новый Структура;
		СтруктураКатегорий1.Вставить("category",Строка(СтрПервогоУровня.Ссылка));
		СтруктураКатегорий1.Вставить("id",Строка(СтрПервогоУровня.Код));
		МассивКатегорий2 = Новый массив;
		Для Каждого стрВторогоУровня из СтрПервогоУровня.Строки Цикл 
			МассивКатегорий3 = Новый массив;
			
			Для Каждого стрТретьегоУровня из СтрВторогоУровня.Строки Цикл
				СтруктураКатегорий3 = Новый Структура;
				СтруктураКатегорий3.Вставить("category","");
				
				СтруктураКатегорий3.Вставить("category",Строка(стрТретьегоУровня.Ссылка));
				СтруктураКатегорий3.Вставить("id",Строка(стрТретьегоУровня.Код));
				СтруктураКатегорий3.Вставить("subcategory",ПустойМассив);
				МассивКатегорий3.Добавить(СтруктураКатегорий3);
				//МассивКатегорий4 = Новый массив;
			КонецЦикла;	
			СтруктураКатегорий2 = новый Структура;
			СтруктураКатегорий2.Вставить("category",Строка(стрВторогоУровня.Ссылка));
			СтруктураКатегорий2.Вставить("id",Строка(стрВторогоУровня.Код));
			//Если МассивКатегорий3.Количество()>0 Тогда
				
				СтруктураКатегорий2.Вставить("subcategory",МассивКатегорий3);
				
			//КонецЕсли;
			МассивКатегорий2.Добавить(СтруктураКатегорий2);
		КонецЦикла;
		//Если МассивКатегорий2.Количество()>0 Тогда
			СтруктураКатегорий1.Вставить("subcategory",МассивКатегорий2);
			
		//КонецЕсли;
		МассивКатегорий.Добавить(СтруктураКатегорий1);
	КонецЦикла;
	
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ЗаписьJSON, МассивКатегорий);
	
	СтрокаДляОтвета = ЗаписьJSON.Закрыть();
	
	Ответ = Новый HTTPСервисОтвет(200);	
	Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
	
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	Возврат Ответ;
КонецФункции

Функция СоздатьЗаявкуcreateapplication(Запрос)
	
	///+ГомзМА 03.05.2024
	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(Тело);
	
	Массив  = ПрочитатьJSON(ЧтениеJSON);
	
	НомерТелефона = Массив.number;
	НомерТелефона = ПолучитьНормализованныйНомер(НомерТелефона); 
	
	Попытка
		НоваяЗаявка = Документы.ЗаказКлиента.СоздатьДокумент(); 
		НоваяЗаявка.Дата = ТекущаяДатаСеанса();
		НоваяЗаявка.НомерТелефона = НомерТелефона;
		НоваяЗаявка.WTPanel = Справочники.СтатусыWT.НайтиПоКоду("000000017"); //Ожидание
		НоваяЗаявка.Состояние = Перечисления.дт_СостоянияЗаказовКлиента.Ожидание;
		НоваяЗаявка.ПодстатусОбработки = Перечисления.ПодстатусыОбработкиЗаявок.Ожидание;
		НоваяЗаявка.Клиент = ПолучитьКлиентаПоТелефону(НомерТелефона);
		НоваяЗаявка.Записать();
		
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
		Ответ.УстановитьТелоИзСтроки("Заявка № " + НоваяЗаявка.Номер + " успешно создана");
	Исключение
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
		Ответ.УстановитьТелоИзСтроки("Не удалось создать заявку");
	КонецПопытки; 

	Возврат Ответ;
	///-ГомзМА 03.05.2024
	
КонецФункции 

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПолучитьНормализованныйНомер(Номер)

	//Сергеев Ф.В. ++ Дата: 14.05.2024
	ПромежуточныйНомер = "";
	ДопустимыеСимволы = "0123456789";
	ДлинаНомера = СтрДлина(СокрЛП(Номер));
	Для Сч1 = 1 По ДлинаНомера Цикл
		ТекСимвол = Сред(СокрЛП(Номер), Сч1, 1);
		Если СтрНайти(ДопустимыеСимволы, ТекСимвол) > 0 Тогда
			ПромежуточныйНомер = ПромежуточныйНомер + ТекСимвол;
			Если Лев(ПромежуточныйНомер, 1) = "8" Тогда
				ПромежуточныйНомер = "7";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если Лев(ПромежуточныйНомер, 1) = "7" Тогда
		ПромежуточныйНомер = "+" + ПромежуточныйНомер;
	КонецЕсли;
	
	ФорматированныйНомер = Лев(ПромежуточныйНомер, 2) + " " + Сред(ПромежуточныйНомер, 3, 3) + " " + Сред(ПромежуточныйНомер, 6, 3) + "-" + Сред(ПромежуточныйНомер, 9, 2) + "-" + Сред(ПромежуточныйНомер, 11);
	
	Возврат ФорматированныйНомер;
	//Сергеев Ф.В. -- Дата: 14.05.2024
		
КонецФункции

Функция ПолучитьКлиентаПоТелефону(Номер)

	//Сергеев Ф.В. ++ Дата: 14.05.2024
	Результат = Справочники.Клиенты.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Клиенты.Ссылка
		|ИЗ
		|	Справочник.Клиенты КАК Клиенты
		|ГДЕ
		|	Клиенты.Телефон = &Телефон";
	
	Запрос.УстановитьПараметр("Телефон", Номер);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Количество() > 0 Тогда
		РезультатЗапроса.Следующий();
		Результат = РезультатЗапроса.Ссылка;
	КонецЕсли;
	Возврат Результат;
	//Сергеев Ф.В. -- Дата: 14.05.2024
		
КонецФункции

#КонецОбласти