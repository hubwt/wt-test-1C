#Область ОбработчикиСобытий
Функция ПолучитьСписокНарядовgetlistorders(Запрос)
	ЗапросНарядов = Новый Запрос;
	Если Строка(Запрос.ПараметрыURL["text"]) <> "13" Тогда
		СтрокаГруппировки = "И ЗаказНаряд.Состояние = &Состояние";
	Иначе
		СтрокаГруппировки ="";
	КонецЕсли;

	ЗапросНарядов.Текст =  СтрШаблон(текстДляСпискаНарядов(), Формат(10000, "ЧГ="),СтрокаГруппировки);

	Если Строка(Запрос.ПараметрыURL["text"]) <> "13"  Тогда
		ЗапросНарядов.УстановитьПараметр("Состояние",
		Перечисления.СостоянияЗаказНаряда.Получить(Число(Запрос.ПараметрыURL["text"])));
	КонецЕсли;
	ЗапросНарядов.УстановитьПараметр("НачинаяСЗаписи", 0);
	Выборкаобщ = ЗапросНарядов.Выполнить().Выбрать().Количество();

	ЗапросНарядов.Текст =  СтрШаблон(текстДляСпискаНарядов(), Формат(?(Число(Запрос.ПараметрыURL["count"]) > 0,
		Запрос.ПараметрыURL["count"], 10000), "ЧГ="), СтрокаГруппировки);

	Если Строка(Запрос.ПараметрыURL["text"]) <> "13"  Тогда
		ЗапросНарядов.УстановитьПараметр("Состояние",
		Перечисления.СостоянияЗаказНаряда.Получить(Число(Запрос.ПараметрыURL["text"])));
	КонецЕсли;
	Если Число(((Запрос.ПараметрыURL["count"]) * (Запрос.ПараметрыURL["page"]))) > 0 И Число(
		Запрос.ПараметрыURL["page"]) > 1 Тогда
		ЗапросНарядов.УстановитьПараметр("НачинаяСЗаписи", Число(((Запрос.ПараметрыURL["count"])
			* (Запрос.ПараметрыURL["page"] - 1) + 1)));
	Иначе
		ЗапросНарядов.УстановитьПараметр("НачинаяСЗаписи", 0);
	КонецЕсли;

	Выборка = ЗапросНарядов.Выполнить().Выбрать();

	МассивНарядов = Новый Массив;
	Пока выборка.Следующий() Цикл
		СтруктураИнфо = Новый Структура;
		СтруктураИнфо.Вставить("id", Строка(выборка.Номер));
		СтруктураИнфо.Вставить("date", Строка(выборка.Дата));
		СтруктураИнфо.Вставить("client", Строка(выборка.Клиент));
		СтруктураИнфо.Вставить("application", Строка(выборка.ЗаказКлиента));
		СтруктураСтатуса = Новый Структура;
		СтруктураСтатуса.Вставить("state", Строка(выборка.состояние));
		СтруктураСтатуса.Вставить("state_pose", Перечисления.СостоянияЗаказНаряда.Индекс(выборка.состояние));
		СтруктураИнфо.Вставить("state_order", СтруктураСтатуса);
		СтруктураИнфо.Вставить("sum", выборка.СуммаДокумента);
		СтруктураИнфо.Вставить("sum_works", выборка.СуммаРаботы);
		СтруктураИнфо.Вставить("sum_products", выборка.СуммаТовары);
		СтруктураИнфо.Вставить("project", Строка(выборка.Проект));
		//СтруктураИнфо.Вставить("status",Строка(Выборка.СтатусЗаказаВТК)); 
		//СтруктураИнфо.Вставить("client_phone",Строка(Выборка.КлиентТелефон));                                      
		//СтруктураИнфо.Вставить("storekeeper",Строка(выборка.ОтветственныйКладовщик));
		СтруктураИнфо.Вставить("responsible", Строка(выборка.Ответственный));
		СтруктураИнфо.Вставить("comment", Строка(выборка.Комментарий));
		//@skip-check query-in-loop
		МассивТоваров = РаботаССайтомWT.ПолучитьСтруктуруТоваров(выборка.Номер);
		СтруктураИнфо.Вставить("state_product", МассивТоваров);

		МассивНарядов.Добавить(СтруктураИнфо);

	КонецЦикла;
	
	///+ГомзМА 16.04.2024
	Страница = Выборкаобщ / ?(Число(Запрос.ПараметрыURL["count"]) = 0, Выборкаобщ, Число(Запрос.ПараметрыURL["count"]));
	Страница = ?((Страница - Цел(Страница)) > 0, Цел(Страница) + 1, Цел(Страница));
	///-ГомзМА 16.04.2024

//	СтруктураИнфо= Новый Структура;
//	СтруктураИнфо.Вставить("pages", Страница);
//	СтруктураИнфо.Вставить("count", Выборкаобщ);

	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("pages", Страница);
	СтруктураОтвета.Вставить("count", Выборкаобщ);
	//СтруктураОтвета.Вставить("info", СтруктураИнфо);
	СтруктураОтвета.Вставить("zakaz_naryads", МассивНарядов);
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();

	ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);

	СтрокаДляОтвета = ЗаписьJSON.Закрыть();

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);

	Возврат Ответ;
КонецФункции

Функция ПолучитьЗаказНарядgetorder(Запрос)
	
	ТекстЗапроса = "ВЫБРАТЬ
					   |	СотрудникиКонтактнаяИнформация.Ссылка КАК Ссылка,
					   |	СотрудникиКонтактнаяИнформация.Представление КАК Представление,
					   |	СотрудникиКонтактнаяИнформация.Представление КАК ТелефонСлужебный
					   |ИЗ
					   |	Справочник.Сотрудники.КонтактнаяИнформация КАК СотрудникиКонтактнаяИнформация
					   |ГДЕ
					   |	СотрудникиКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСотрудникаСлужебный)
					   |	И СотрудникиКонтактнаяИнформация.Ссылка.Пользователь = &Код";

	ЗапросНомера = Новый Запрос;
	ЗапросНомера.Текст = ТекстЗапроса;
	
	Запросзаявки = Новый Запрос;
	Запросзаявки.Текст = текстДляЗаказНаряда2();
	Запросзаявки.УстановитьПараметр("Номер", Запрос.ПараметрыURL["id"]);
	Выборка = Запросзаявки.Выполнить().Выбрать();
	МассивТоваров = Новый Массив;
	Выборка.Следующий();
		СтруктураИнфо = Новый Структура;
		СтруктураИнфо.Вставить("id", Строка(выборка.Номер));
		СтруктураИнфо.Вставить("date", Строка(выборка.Дата));
		
		СтруктураИнфо.Вставить("date_start", Строка(выборка.ДатаНачала));
		СтруктураИнфо.Вставить("date_end", Строка(выборка.ДатаОкончания));
		СтруктураИнфо.Вставить("sum", выборка.СуммаДокумента);
		СтруктураИнфо.Вставить("sum_works", выборка.СуммаРаботы);
		СтруктураИнфо.Вставить("sum_products", выборка.СуммаТовары);
		СтруктураИнфо.Вставить("comment", выборка.Комментарий);
		СтруктураИнфо.Вставить("cell", Строка(выборка.Ячейка));
		СтруктураКлиента = Новый Структура;
		СтруктураКлиента.Вставить("name", Строка(выборка.Клиент));
		СтруктураКлиента.Вставить("id", Строка(выборка.КлиентКод));
		СтруктураКлиента.Вставить("phone", выборка.КлиентТелефон);
		СтруктураИнфо.Вставить("client", СтруктураКлиента);

		СтруктураИнфо.Вставить("application", Строка(выборка.ЗаказКлиента));
		СтруктураСтатуса = Новый Структура;
		СтруктураСтатуса.Вставить("state", Строка(выборка.состояние));
		СтруктураСтатуса.Вставить("state_pose", Перечисления.СостоянияЗаказНаряда.Индекс(выборка.состояние));
		СтруктураИнфо.Вставить("state_order", СтруктураСтатуса);
		СтруктураИнфо.Вставить("project", Строка(выборка.Проект));
		СтруктураИнфо.Вставить("VIN", Строка(выборка.ВинКод));
		//СтруктураИнфо.Вставить("status",Строка(Выборка.СтатусЗаказаВТК)); 
		//СтруктураИнфо.Вставить("client_phone",Строка(Выборка.КлиентТелефон));                                      
		//СтруктураИнфо.Вставить("storekeeper",Строка(выборка.ОтветственныйКладовщик));
		ЗапросНомера.УстановитьПараметр("Код", выборка.Код);
		 //@skip-check query-in-loop
			ВЫборкаНомера = ЗапросНомера.Выполнить().Выбрать();
			ВЫборкаНомера.Следующий();
		СтруктураМенеджера = Новый Структура;
		СтруктураМенеджера.Вставить("name", Строка(выборка.Инициатор));
		СтруктураМенеджера.Вставить("id", Строка(выборка.Код));
		СтруктураМенеджера.Вставить("phone", Строка(ВЫборкаНомера.ТелефонСлужебный));
		
		СтруктураИнфо.Вставить("manager", СтруктураМенеджера);
		//СтруктураИнфо.Вставить("sum",Строка(выборка.ИтогоРекв));
		//@skip-check query-in-loop
		МассивТоваров = РаботаССайтомWT.ПолучитьСтруктуруТоваров(выборка.Номер);
		СтруктураИнфо.Вставить("state_product", МассивТоваров); 
		//	ВыборкаТоваров = выборка.Таблица.Выбрать();
		//ТЗ_Товары = выборка.Таблица.Выгрузить();
//		Массивкодов = ТЗ_Товары.ВыгрузитьКолонку("Партия");
		//ТЗ_Товары.Колонки.Добавить("колФото", Новый ОписаниеТипов("Число"));
		//ТЗ_Товары.Колонки.Добавить("Фото", Новый ОписаниеТипов("Массив"));
		МассивОтветственных = новый массив;
		ТЗ_Ответственные =  выборка.Ответственные.Выгрузить();
		Для Каждого стр Из ТЗ_Ответственные Цикл
			ЗапросНомера.УстановитьПараметр("Код", стр.Сотрудник);
		 //@skip-check query-in-loop
			ВЫборкаНомера = ЗапросНомера.Выполнить().Выбрать();
			ВЫборкаНомера.Следующий();
			СтруктураОтветственные = Новый Структура;
			СтруктураОтветственные.Вставить("name", Строка(стр.Сотрудник));
		//@skip-check reading-attribute-from-database
			СтруктураОтветственные.Вставить("id", Справочники.Сотрудники.НайтиПоРеквизиту("Пользователь",
				стр.Сотрудник).Код);
			СтруктураОтветственные.Вставить("phone", ВыборкаНомера.Представление);
			//СтруктураОтветственные.Вставить("role", Строка(стр.Роль));
			МассивОтветственных.Добавить(СтруктураОтветственные);
		КонецЦикла;
		СтруктураИнфо.Вставить("workers", МассивОтветственных);
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();

	ЗаписатьJSON(ЗаписьJSON, СтруктураИнфо);

	СтрокаДляОтвета = ЗаписьJSON.Закрыть();

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);

	Возврат Ответ;
КонецФункции

Функция ПолучитьРаботыЗаказНарядаgetworksorder(Запрос)
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ЗаказНарядРаботы.Ссылка,
	|	ЗаказНарядРаботы.НомерСтроки,
	|	ЗаказНарядРаботы.Работа,
	|	ЗаказНарядРаботы.Количество,
	|	ЗаказНарядРаботы.Нормочас,
	|	ЗаказНарядРаботы.Цена,
	|	ЗаказНарядРаботы.Сумма,
	|	ЗаказНарядРаботы.СкидкаПроцент,
	|	ЗаказНарядРаботы.СкидкаСумма,
	|	ЗаказНарядРаботы.СуммаВсего,
	|	ЗаказНарядРаботы.Содержание,
	|	ЗаказНарядРаботы.ИдентификаторСтроки,
	|	ЗаказНарядРаботы.ВремяФакт,
	|	ЗаказНарядРаботы.ВремяПлан,
	|	ЗаказНарядРаботы.СуммаНалог,
	|	ЗаказНарядРаботы.СуммаЗп,
	|	ЗаказНарядРаботы.ИдентификаторСтрока,
	|	ЗаказНарядРаботы.СтатусРаботы,
	|	ЗаказНарядРаботы.ВРаботе,
	|	ЗаказНарядРаботы.ЦенаСоСкидкойНаценкой,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи
	|ПОМЕСТИТЬ ВТ_Пред
	|ИЗ
	|	Документ.ЗаказНаряд.Работы КАК ЗаказНарядРаботы
	|ГДЕ
	|	ЗаказНарядРаботы.Ссылка.Номер = &Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ Первые %1
	|	ВТ_Пред.Ссылка,
	|	ВТ_Пред.НомерСтроки,
	|	ВТ_Пред.Работа,
	|	ВТ_Пред.Количество,
	|	ВТ_Пред.Нормочас,
	|	ВТ_Пред.Цена,
	|	ВТ_Пред.Сумма,
	|	ВТ_Пред.СкидкаПроцент,
	|	ВТ_Пред.СкидкаСумма,
	|	ВТ_Пред.СуммаВсего,
	|	ВТ_Пред.Содержание,
	|	ВТ_Пред.ИдентификаторСтроки,
	|	ВТ_Пред.ВремяФакт,
	|	ВТ_Пред.ВремяПлан,
	|	ВТ_Пред.СуммаНалог,
	|	ВТ_Пред.СуммаЗп,
	|	ВТ_Пред.ИдентификаторСтрока,
	|	ВТ_Пред.СтатусРаботы,
	|	ВТ_Пред.ВРаботе,
	|	ВТ_Пред.ЦенаСоСкидкойНаценкой,
	|	ВТ_Пред.НомерЗаписи
	|ИЗ
	|	ВТ_Пред КАК ВТ_Пред
	|ГДЕ
	|	ВТ_Пред.НомерЗаписи >= &НачинаяСЗаписи";

	ЗапросРабот = Новый Запрос;
	ЗапросРабот.Текст =  СтрШаблон(ТекстЗапроса, Формат(10000, "ЧГ="));
	ЗапросРабот.УстановитьПараметр("Номер", Запрос.ПараметрыURL["id"]);
	ЗапросРабот.УстановитьПараметр("НачинаяСЗаписи", 0);
	
	ОбщееКолво = ЗапросРабот.Выполнить().Выбрать().Количество();
	
	
	
	ЗапросРабот.Текст =  СтрШаблон(ТекстЗапроса, Формат(?(Число(Запрос.ПараметрыURL["count"]) > 0,Запрос.ПараметрыURL["count"], 10000), "ЧГ="));		
	ЗапросРабот.УстановитьПараметр("Номер", Запрос.ПараметрыURL["id"]);
	
	Если Число(((Запрос.ПараметрыURL["count"]) * (Запрос.ПараметрыURL["page"]))) > 0 И Число(
		Запрос.ПараметрыURL["page"]) > 1 Тогда
		ЗапросРабот.УстановитьПараметр("НачинаяСЗаписи", Число(((Запрос.ПараметрыURL["count"])
			* (Запрос.ПараметрыURL["page"] - 1) + 1)));
	Иначе
		ЗапросРабот.УстановитьПараметр("НачинаяСЗаписи", 0);
	КонецЕсли;
	
	Выборка = ЗапросРабот.Выполнить().Выбрать();
	МассивРабот = Новый Массив;
	Пока Выборка.Следующий() Цикл
		СтруктураРаботы = Новый Структура;
			СтруктураРаботы.Вставить("name", Строка(Выборка.Работа));
			СтруктураРаботы.Вставить("position", Выборка.НомерСтроки);
			СтруктураРаботы.Вставить("cost", Выборка.Цена);
			СтруктураРаботы.Вставить("count", Выборка.Количество);
			СтруктураРаботы.Вставить("sum", Выборка.Сумма);
			СтруктураРаботы.Вставить("issued", Строка(Выборка.СтатусРаботы));
			МассивРабот.Добавить(СтруктураРаботы);
	КонецЦикла;
	
	Итог = ОбщееКолво / ?(Число(Запрос.ПараметрыURL["count"]) = 0, ОбщееКолво, Число(Запрос.ПараметрыURL["count"]));
	Итог = ?((Итог - Цел(Итог)) > 0, Цел(Итог) + 1, Цел(Итог));

	СтруктураИнфо= Новый Структура;
	СтруктураИнфо.Вставить("pages", Итог);
	СтруктураИнфо.Вставить("count", ОбщееКолво);
	СтруктураИнфо.Вставить("works", МассивРабот);
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();

	ЗаписатьJSON(ЗаписьJSON, СтруктураИнфо);

	СтрокаДляОтвета = ЗаписьJSON.Закрыть();

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);

	Возврат Ответ;
КонецФункции

Функция ПолучитьТоварыЗаказНарядаgetproductsorder(Запрос)
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ЗаказНарядТовары.Ссылка КАК Ссылка,
	|	ЗаказНарядТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаказНарядТовары.Номенклатура КАК Товар,
	|	ЗаказНарядТовары.Количество КАК Количество,
	|	ЗаказНарядТовары.Цена КАК Цена,
	|	ЗаказНарядТовары.Автомобиль КАК Автомобиль,
	|	ЗаказНарядТовары.СкидкаСумма КАК СкидкаСумма,
	|	ЗаказНарядТовары.СкидкаПроцент КАК СкидкаПроцент,
	|	ЗаказНарядТовары.Сумма КАК Сумма,
	|	ЗаказНарядТовары.Партия КАК Партия,
	|	ПРЕДСТАВЛЕНИЕ(ЗаказНарядТовары.Партия) КАК Партия2,
	|	ЗаказНарядТовары.СуммаВсего КАК СуммаВсего,
	|	ЗаказНарядТовары.Склад КАК Склад,
	|	ЗаказНарядТовары.Ответственный КАК Ответственный,
	|	ЗаказНарядТовары.СуммаНалог КАК СуммаНалог,
	|	ЗаказНарядТовары.СуммаЗп КАК СуммаЗп,
	|	ЗаказНарядТовары.Состояние КАК Состояние,
	|	ЗаказНарядТовары.СуммаСНДС КАК СуммаСНДС,
	|	ЗаказНарядТовары.Номенклатура.Артикул КАК Артикул,
	|	ЗаказНарядТовары.Номенклатура.Код КАК Код,
	|	ЗаказНарядТовары.Номенклатура.Наименование КАК Наименование,
	|	ЗаказНарядТовары.МеткаТовара КАК МеткаТовара,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
	|	ЗаказНарядТовары.МеткаТовара.Порядок КАК МеткаТовараПорядок
	|ПОМЕСТИТЬ ВТ_Пред
	|ИЗ
	|	Документ.ЗаказНаряд.Товары КАК ЗаказНарядТовары
	|ГДЕ
	|	ЗаказНарядТовары.Ссылка.Номер = &Номер
	|%2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Пред.Ссылка КАК Ссылка,
	|	ВТ_Пред.НомерСтроки КАК НомерСтроки,
	|	ВТ_Пред.Товар КАК Товар,
	|	ВТ_Пред.Количество КАК Количество,
	|	ВТ_Пред.Цена КАК Цена,
	|	ВТ_Пред.Автомобиль КАК Автомобиль,
	|	ВТ_Пред.СкидкаСумма КАК СкидкаСумма,
	|	ВТ_Пред.СкидкаПроцент КАК СкидкаПроцент,
	|	ВТ_Пред.Сумма КАК Сумма,
	|	ВТ_Пред.Партия КАК Партия,
	|	ВТ_Пред.Партия2 КАК Партия2,
	|	ВТ_Пред.СуммаВсего КАК СуммаВсего,
	|	ВТ_Пред.Склад КАК Склад,
	|	ВТ_Пред.Ответственный КАК Ответственный,
	|	ВТ_Пред.СуммаНалог КАК СуммаНалог,
	|	ВТ_Пред.СуммаЗп КАК СуммаЗп,
	|	ВТ_Пред.Состояние КАК Состояние,
	|	ВТ_Пред.СуммаСНДС КАК СуммаСНДС,
	|	ВТ_Пред.Артикул КАК Артикул,
	|	ВТ_Пред.Код КАК Код,
	|	ВТ_Пред.Наименование КАК Наименование,
	|	ВТ_Пред.МеткаТовара КАК МеткаТовара,
	|	ВТ_Пред.НомерЗаписи КАК НомерЗаписи,
	|	ВТ_Пред.МеткаТовараПорядок КАК МеткаТовараПорядок
	|ПОМЕСТИТЬ ЗаказНаряд
	|ИЗ
	|	ВТ_Пред КАК ВТ_Пред
	|%3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ %1
	|	ЗаказНаряд.Ссылка КАК Ссылка,
	|	ЗаказНаряд.НомерСтроки КАК НомерСтроки,
	|	ЗаказНаряд.Товар КАК Товар,
	|	ЗаказНаряд.Количество КАК Количество,
	|	ЗаказНаряд.Цена КАК Цена,
	|	ЗаказНаряд.Автомобиль КАК Автомобиль,
	|	ЗаказНаряд.СкидкаСумма КАК СкидкаСумма,
	|	ЗаказНаряд.СкидкаПроцент КАК СкидкаПроцент,
	|	ЗаказНаряд.Сумма КАК Сумма,
	|	ЗаказНаряд.Партия КАК Партия,
	|	ЗаказНаряд.Партия2 КАК Партия2,
	|	ЗаказНаряд.СуммаВсего КАК СуммаВсего,
	|	ЗаказНаряд.Склад КАК Склад,
	|	ЗаказНаряд.Ответственный КАК Ответственный,
	|	ЗаказНаряд.СуммаНалог КАК СуммаНалог,
	|	ЗаказНаряд.СуммаЗп КАК СуммаЗп,
	|	ЗаказНаряд.Состояние КАК Состояние,
	|	ЗаказНаряд.СуммаСНДС КАК СуммаСНДС,
	|	ЗаказНаряд.Артикул КАК Артикул,
	|	ЗаказНаряд.Код КАК Код,
	|	ЗаказНаряд.МеткаТовара КАК МеткаТовара,
	|	ЕСТЬNULL(ЗаказНаряд.МеткаТовараПорядок, 13) КАК МеткаТовараПорядок,
	|	ЗаказНаряд.НомерЗаписи КАК НомерЗаписи
	|ИЗ
	|	ЗаказНаряд КАК ЗаказНаряд
	|ГДЕ
	|	ЗаказНаряд.НомерЗаписи >= &НачинаяСЗаписи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Если Строка(Запрос.ПараметрыURL["text"]) <> "13" Тогда
		СтрокаГруппировки = " И ЗаказНарядТовары.Состояние = &СостояниеТовара";
	Иначе
		СтрокаГруппировки ="";
	КонецЕсли;
	/// Комлев 11/9/24 +++
	Если Строка(Запрос.ПараметрыURL["text_search"]) <> "00" Тогда
		УсловиеПоиска = " ГДЕ ВТ_Пред.Код ПОДОБНО ""%"" + &СтрокаПоиска + ""%"" ИЛИ ВТ_Пред.Наименование ПОДОБНО ""%"" + &СтрокаПоиска + ""%"" ИЛИ ВТ_Пред.Артикул ПОДОБНО ""%"" + &СтрокаПоиска + ""%""";
	Иначе
		УсловиеПоиска = "";
	КонецЕсли;
	/// Комлев 11/9/24 ---
	ЗапросРабот = Новый Запрос;

	ЗапросРабот.Текст =  СтрШаблон(ТекстЗапроса, Формат(10000, "ЧГ="), СтрокаГруппировки, УсловиеПоиска);
	Если Строка(Запрос.ПараметрыURL["text"]) <> "13"  Тогда
		ЗапросРабот.УстановитьПараметр("СостояниеТовара",
		Перечисления.СтатусыТовараВЗаказНаряде.Получить(Число(Запрос.ПараметрыURL["text"])));
	КонецЕсли;
	/// Комлев 11/9/24 +++
	Если Строка(Запрос.ПараметрыURL["text_search"]) <> "00"  Тогда
		ЗапросРабот.УстановитьПараметр("СтрокаПоиска", Строка(Запрос.ПараметрыURL["text_search"]));
	КонецЕсли;
	/// Комлев 11/9/24 ---
	ЗапросРабот.УстановитьПараметр("Номер", Запрос.ПараметрыURL["id"]);
	ЗапросРабот.УстановитьПараметр("НачинаяСЗаписи", 0);

	ОбщееКолво = ЗапросРабот.Выполнить().Выбрать().Количество();

	ЗапросРабот.Текст =  СтрШаблон(ТекстЗапроса, Формат(?(Число(Запрос.ПараметрыURL["count"]) > 0,
		Запрос.ПараметрыURL["count"], 10000), "ЧГ="), СтрокаГруппировки, УсловиеПоиска);
	Если Строка(Запрос.ПараметрыURL["text"]) <> "13"  Тогда
		ЗапросРабот.УстановитьПараметр("СостояниеТовара",
		Перечисления.СтатусыТовараВЗаказНаряде.Получить(Число(Запрос.ПараметрыURL["text"])));
	КонецЕсли;
	/// Комлев 11/9/24 +++
	Если Строка(Запрос.ПараметрыURL["text_search"]) <> "00"  Тогда
		ЗапросРабот.УстановитьПараметр("СтрокаПоиска", Строка(Запрос.ПараметрыURL["text_search"]));
	КонецЕсли;
	/// Комлев 11/9/24 ---
	ЗапросРабот.УстановитьПараметр("Номер", Запрос.ПараметрыURL["id"]);

	Если Число(((Запрос.ПараметрыURL["count"]) * (Запрос.ПараметрыURL["page"]))) > 0 И Число(
		Запрос.ПараметрыURL["page"]) > 1 Тогда
		ЗапросРабот.УстановитьПараметр("НачинаяСЗаписи", Число(((Запрос.ПараметрыURL["count"])
			* (Запрос.ПараметрыURL["page"] - 1) + 1)));
	Иначе
		ЗапросРабот.УстановитьПараметр("НачинаяСЗаписи", 0);
	КонецЕсли;
	
	Выборка = ЗапросРабот.Выполнить().Выбрать();
	МассивТоваров = Новый Массив;
	Пока Выборка.Следующий() Цикл
						Если стрНайти(Выборка.Партия, "_") <> 0 Тогда
				МассивФото = Новый массив;
								ИндКоды =  Новый массив;
				   ИндКоды.Добавить(Выборка.Партия2);
						Фотки = РаботаССайтомWT.ПолучениеФото(ИндКоды);
						НайденныеФотки = Новый Массив;
		
						Попытка
		
							НайденныеФотки = Фотки[0].urls;

								Для Каждого Фотка Из НайденныеФотки Цикл
									Текст = "";
			
									Текст = Фотка;
									МассивФото.Добавить(Текст);
								КонецЦикла;
			
						Исключение
							МассивФото.Добавить();
						КонецПопытки;

					СтруктураТоваров = Новый Структура;
				СтруктураТоваров.Вставить("name", Строка(Выборка.Товар));
				СтруктураТоваров.Вставить("position", Число(Выборка.НомерСтроки));
				СтруктураТоваров.Вставить("cost", Выборка.Цена);
				СтруктураТоваров.Вставить("count", Выборка.Количество);
				СтруктураТоваров.Вставить("sum", Строка(Выборка.Сумма));
				СтруктураТоваров.Вставить("issued", Строка(Выборка.Состояние));
				СтруктураТоваров.Вставить("id", Строка(Выборка.Партия));
	 			СтруктураТоваров.Вставить("type", "PRODUCT");
				СтруктураТоваров.Вставить("sklad", Строка(Выборка.Склад));
				СтруктураТоваров.Вставить("photos", МассивФото);
				СтруктураТоваров.Вставить("state", Строка(Выборка.Состояние));
				СтруктураТоваров.Вставить("article", Строка(Выборка.Артикул));
				СтруктураТоваров.Вставить("product_mark", Строка(Выборка.МеткаТовара));
				СтруктураСтатуса = Новый Структура;
				СтруктураСтатуса.Вставить("mark", Строка(выборка.МеткаТовара));
				СтруктураСтатуса.Вставить("mark_pose", выборка.МеткаТовараПорядок);
				СтруктураТоваров.Вставить("product_mark", СтруктураСтатуса);
				
				ИнфоОПартии = РаботаССайтомWT.ПолучитьИнформациюОПартии(Строка(Выборка.Партия));
				СтруктураТоваров.Вставить("shelf", Строка(ИнфоОПартии.Стеллаж));
				СтруктураТоваров.Вставить("poddon", Строка(ИнфоОПартии.Поддон));
				СтруктураТоваров.Вставить("year_car", Строка(ИнфоОПартии.ГодМашины));
				СтруктураТоваров.Вставить("photos", МассивФото);
				МассивТоваров.Добавить(СтруктураТоваров);
			Иначе
				ИндКоды =  Новый массив;
				ИндКоды.Добавить(Выборка.Код);
				Попытка
				Попытка
					Фотки = РаботаССайтомWT.ПолучениеФотокарточек(ИндКоды);
					НайденныеФотки = Фотки[0].images.common;
					Если Фотки[0].images.main <> "" Тогда
						НайденныеФотки.Вставить(0, Фотки[0].images.main);
					КонецЕсли;
				Исключение
					НайденныеФотки = Новый массив;
				КонецПопытки;
					МассивФото = Новый массив;

					Текст = НайденныеФотки;
					Если НайденныеФотки <> Неопределено И НайденныеФотки <> "" Тогда
			
		//	стр.колфото = 1;  

						Для Каждого Фотка Из НайденныеФотки Цикл
							Текст = "";
				//Текст = "https://wt10.ru" + Фотка; 
							Текст = Фотка;
							МассивФото.Добавить(Текст);
						КонецЦикла;
					КонецЕсли;

				Исключение
					МассивФото.Добавить("");
				КонецПопытки;

				СтруктураТоваров = Новый Структура;
				СтруктураТоваров.Вставить("name", Строка(Выборка.Товар));
				СтруктураТоваров.Вставить("position", Строка(Выборка.НомерСтроки));
				СтруктураТоваров.Вставить("cost", Выборка.Цена);
				СтруктураТоваров.Вставить("count", Выборка.Количество);
				СтруктураТоваров.Вставить("sum", Строка(Выборка.Сумма));
				СтруктураТоваров.Вставить("issued", Строка(Выборка.Состояние));
				СтруктураТоваров.Вставить("id", Строка(Выборка.Код));
				СтруктураТоваров.Вставить("type", "CARD_PRODUCT");
				СтруктураСтатуса = Новый Структура;
				СтруктураСтатуса.Вставить("mark", Строка(выборка.МеткаТовара));
				СтруктураСтатуса.Вставить("mark_pose", выборка.МеткаТовараПорядок);
				СтруктураТоваров.Вставить("product_mark", СтруктураСтатуса);
				СтруктураТоваров.Вставить("sklad", Строка(Выборка.Склад));
				СтруктураТоваров.Вставить("photos", МассивФото);
				СтруктураТоваров.Вставить("state", Строка(Выборка.Состояние));
				СтруктураТоваров.Вставить("article", Строка(Выборка.Артикул));
				ИнфоОПартии = РаботаССайтомWT.ПолучитьИнформациюОПартии(Строка(Выборка.Партия));
				СтруктураТоваров.Вставить("shelf", Строка(ИнфоОПартии.Стеллаж));
				СтруктураТоваров.Вставить("poddon", Строка(ИнфоОПартии.Поддон));
				СтруктураТоваров.Вставить("year_car", Строка(ИнфоОПартии.ГодМашины));
				
				//МассивТоваров.Добавить(СтруктураТоваров);
				СтруктураТоваров.Вставить("photos", МассивФото);
				МассивТоваров.Добавить(СтруктураТоваров);

			КонецЕсли;
				
	КонецЦикла;
	
	Итог = ОбщееКолво / ?(Число(Запрос.ПараметрыURL["count"]) = 0, ОбщееКолво, Число(Запрос.ПараметрыURL["count"]));
	Итог = ?((Итог - Цел(Итог)) > 0, Цел(Итог) + 1, Цел(Итог));

	СтруктураИнфо= Новый Структура;
	СтруктураИнфо.Вставить("pages", Итог);
	СтруктураИнфо.Вставить("count", ОбщееКолво);
	СтруктураИнфо.Вставить("products", МассивТоваров);

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();

	ЗаписатьJSON(ЗаписьJSON, СтруктураИнфо);

	СтрокаДляОтвета = ЗаписьJSON.Закрыть();

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);

	Возврат Ответ;
КонецФункции

Функция ВзятьВРаботуКладощикtakeznstorager(Запрос)
	Запросзн = Новый Запрос;
	Запросзн.Текст = текстДляЗаказНаряда2();
	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);

	Массив  = ПрочитатьJSON(ЧтениеJSON);

	Запросзн.УстановитьПараметр("Номер", Массив.id);
	Выборка = Запросзн.Выполнить().Выбрать();
	Ответственный = Справочники.Сотрудники.НайтиПоКоду(Массив.author).Пользователь;
	Пока выборка.Следующий() Цикл
		ТекстЛога =  " Взял в работу: ";

		РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка, Массив.author, ТекстЛога);
		ОбъектЗн = Выборка.ссылка.ПолучитьОбъект();
		Отбор = Новый Структура;
		Отбор.Вставить("Сотрудник", Ответственный);

		НайденныеСтроки = ОбъектЗн.Ответственные.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаОтветственного = ОбъектЗн.Ответственные.Добавить();
			СтрокаОтветственного.Сотрудник = Ответственный;
			СтрокаОтветственного.Роль = Перечисления.дт_РолиВПродаже.Кладовщик;
		КонецЕсли;
		
	//	ОбъектЗн.ОтветственныйЗаОбработку = Ответственный;
		ОбъектЗн.Записать();
	КонецЦикла;

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	Ответ.УстановитьТелоИзСтроки("Успех");
	Возврат Ответ;
КонецФункции

Функция ВыйтиИзЗНgetoutapp(Запрос)

	ЗапросЗаявки = Новый Запрос;
	ЗапросЗаявки.Текст = текстДляЗаказНаряда2();
	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);

	Массив  = ПрочитатьJSON(ЧтениеJSON);

	ЗапросЗаявки.УстановитьПараметр("Номер", Массив.id);
	Выборка = ЗапросЗаявки.Выполнить().Выбрать();
	Ответственный = Справочники.Сотрудники.НайтиПоКоду(Массив.author).Пользователь;
	ТипВыхода = Строка(Массив.type);

	Если ответственный = Неопределено Тогда
		Ответственный = Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;

	выборка.Следующий();

	ОбъектЗН = Выборка.ссылка.ПолучитьОбъект();
	Если ТипВыхода = "Менеджер" Тогда
		ОбъектЗН.Ответственный = Справочники.Пользователи.ПустаяСсылка();
	Иначе
		Отбор = Новый Структура;
		Отбор.Вставить("Сотрудник", Ответственный);
		НайденныеСтроки = ОбъектЗН.Ответственные.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() <> 0 Тогда
			Позиция = НайденныеСтроки[0].НомерСтроки;
			ОбъектЗН.Ответственные.удалить(Позиция - 1);
		КонецЕсли;
	КонецЕсли;

	ОбъектЗН.Записать();
	ТекстЛога =  " Вышел: " + ОбъектЗН.Номер;
	РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка, Массив.author, ТекстЛога);
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	Ответ.УстановитьТелоИзСтроки("Успех");
	Возврат Ответ;

КонецФункции

Функция НаполнитьЗаказНарядfillingorder(Запрос)
	Запросзаявки = Новый Запрос;
	Запросзаявки.Текст = текстДляЗаказНаряда2();
	Запросзаявки.УстановитьПараметр("Номер", Запрос.ПараметрыURL["id"]);
	Выборка = Запросзаявки.Выполнить().Выбрать();
	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);

	Массив  = ПрочитатьJSON(ЧтениеJSON);
	ИндКод  = Массив.id;
	//Позиция = Число(Массив.pose);
	Автор 	= Массив.author;
	Партия = Справочники.ИндКод.НайтиПоНаименованию(ИндКод);

	Номенклатура = Справочники.ИндКод.НайтиПоНаименованию(ИндКод).Владелец;
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура", Номенклатура);
	Отбор.Вставить("Партия", Партия);

	Пока выборка.Следующий() Цикл
		Если выборка.Состояние = Перечисления.СостоянияЗаказНаряда.Выполнен Тогда
			ЗаписьJSON = Новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку();

			Информация = ИнформацияОбОшибке();

			ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Наряд закрыт!",
				Информация.Описание));
			СтрокаДляОтвета = ЗаписьJSON.Закрыть();

			Ответ = Новый HTTPСервисОтвет(500);
			Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

			Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
			Возврат ответ;
		КонецЕсли;

		ОбъектНаряда = Выборка.ссылка.ПолучитьОбъект();
		//ОбъектНаряда = Документы.ЗаказНаряд.СоздатьДокумент();   

		НайденныеСтроки = ОбъектНаряда.Товары.НайтиСтроки(Отбор);
		Если НайденныеСтроки.количество() > 0 Тогда
			СтрокаТЧ = ОбъектНаряда.Товары[НайденныеСтроки[0].НомерСтроки - 1];
			СтрокаТЧ.Партия = Партия; 
			//@skip-check query-in-loop
			СтрокаТЧ.Автомобиль = РаботаССайтомWT.ПолучитьМашину(Партия);
			СтрокаТЧ.Склад = Справочники.Склады.НайтиПоКоду("000000002");
			СтрокаТЧ.Состояние = Перечисления.СтатусыТовараВЗаказНаряде.Установлена;

			ТекстЛога =  " В заказ-наряде " + ОбъектНаряда.номер + " установил партию в товаре "
				+ СтрокаТЧ.Номенклатура + " " + СтрокаТЧ.Партия;
			РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка, Автор, ТекстЛога);
			ОбъектНаряда.Записать(РежимЗаписиДокумента.Проведение);

			Ответ = Новый HTTPСервисОтвет(200);
			Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
			Ответ.УстановитьТелоИзСтроки("Успех");
			//Возврат Ответ;
		Иначе

			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура", Номенклатура);
			Отбор.Вставить("Партия", Справочники.ИндКод.ПустаяСсылка());
			ОбъектНаряда = Выборка.ссылка.ПолучитьОбъект();
		//ОбъектНаряда = Документы.ЗаказНаряд.СоздатьДокумент();   

			НайденныеСтроки = ОбъектНаряда.Товары.НайтиСтроки(Отбор);
			Если НайденныеСтроки.количество() > 0 Тогда

				СтрокаТЧ = ОбъектНаряда.Товары[НайденныеСтроки[0].НомерСтроки - 1];
				СтрокаТЧ.Партия = Партия; 
			//@skip-check query-in-loop
				СтрокаТЧ.Автомобиль = РаботаССайтомWT.ПолучитьМашину(Партия);
				СтрокаТЧ.Склад = Справочники.Склады.НайтиПоКоду("000000002");
				СтрокаТЧ.Состояние = Перечисления.СтатусыТовараВЗаказНаряде.Установлена;

				ТекстЛога =  " В заказ-наряде " + ОбъектНаряда.номер + " установил партию в товаре "
					+ СтрокаТЧ.Номенклатура + " " + СтрокаТЧ.Партия;
				РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка, Автор, ТекстЛога);
				ОбъектНаряда.Записать(РежимЗаписиДокумента.Проведение);

				Ответ = Новый HTTPСервисОтвет(200);
				Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
				Ответ.УстановитьТелоИзСтроки("Успех");
				Возврат Ответ;
			ИначеЕсли Не ОбъектНаряда.ЗаблокироватьТЧТовары Тогда
				Новаястрока = ОбъектНаряда.Товары.Добавить();
				Новаястрока.Партия = Партия;
				Новаястрока.Номенклатура = Номенклатура;
				Новаястрока.Количество = 1;
				//@skip-check query-in-loop
				Новаястрока.Автомобиль = РаботаССайтомWT.ПолучитьМашину(Партия);
				Новаястрока.Состояние = Перечисления.СтатусыТовараВЗаказНаряде.Установлена;
				//@skip-check reading-attribute-from-database
				Новаястрока.Цена = Партия.Владелец.РекомендованаяЦена;
				Новаястрока.Склад = Справочники.Склады.НайтиПоКоду("000000002");

				ТекстЛога =  " В заказ-наряде " + ОбъектНаряда.номер + " установил партию в товаре "
					+ Новаястрока.Номенклатура + " " + Новаястрока.Партия;
				РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка, Автор, ТекстЛога);
				ОбъектНаряда.Записать(РежимЗаписиДокумента.Проведение);

				Ответ = Новый HTTPСервисОтвет(200);
				Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
				Ответ.УстановитьТелоИзСтроки("Успех");
				//Возврат Ответ;

				//Ответ = Новый HTTPСервисОтвет(400);
				//Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
				//Ответ.УстановитьТелоИзСтроки("Заказ-наряд закрыт!");
				//Возврат Ответ;	
			КонецЕсли;
	ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
		Информация = ИнформацияОбОшибке();
		
		ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Такой позиции в заказ-наряде нет или партия уже установлена!", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		
		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
	
			//Возврат Ответ;
		КонецЕсли;

	КонецЦикла;


	Возврат Ответ;

КонецФункции

Функция УдалитьТоварИзЗНldeteproductZNdeleteproductzn(Запрос)
	ЗапросЗН = Новый Запрос;
	ЗапросЗН.Текст = текстДляЗаказНаряда2();
	ЗапросЗН.УстановитьПараметр("Номер",Запрос.ПараметрыURL["id"] ); 
	Попытка
	Выборка = ЗапросЗН.Выполнить().Выбрать();
	
	
	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(Тело);
	
	Массив  = ПрочитатьJSON(ЧтениеJSON);
	//ИндКод  = Массив.IndCode;
	Позиция = Число(Запрос.ПараметрыURL["pose"]);
	Юзер = Справочники.Сотрудники.НайтиПоКоду(Массив.author).Пользователь;
	Если Юзер = Справочники.Пользователи.ПустаяСсылка() Тогда
		Ответ = Новый HTTPСервисОтвет(450);
		Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			

		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
		Информация = ИнформацияОбОшибке();
		
		ЗаписатьJSON(ЗаписьJSON,РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Ошибка выполнения запроса", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		
		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
		
		Возврат Ответ;
		
	КонецЕсли;	
	
	 	выборка.Следующий();
		ОбъектЗН = Выборка.ссылка.ПолучитьОбъект();
		ТекстЛога =  " В ЗН " + ОбъектЗН.номер + " удалил товар " + ОбъектЗН.Товары[Позиция-1].Номенклатура + " "+ ОбъектЗН.Товары[Позиция-1].Партия;
		ОбъектЗН.Товары.удалить(Позиция-1);
		 
		РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка,Массив.author,ТекстЛога);
		ОбъектЗН.записать();
		РаботаССайтомWT.ПересчётСуммыЗН(Выборка.ссылка);
	
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
	Ответ.УстановитьТелоИзСтроки("Успех");
	
	Исключение
	
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
		Информация = ИнформацияОбОшибке();
		
		ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Ошибка выполнения запроса", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		
		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
		
	КонецПопытки;
	Возврат Ответ;
КонецФункции  

Функция СменаCтатусаТоваровВЗНchangestateorder(Запрос)
	Запросзаявки = Новый Запрос;
	Запросзаявки.Текст = текстДляЗаказНаряда2();
	Запросзаявки.УстановитьПараметр("Номер", Запрос.ПараметрыURL["id"]);
	Выборка = Запросзаявки.Выполнить().Выбрать();
	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);

	Массив  = ПрочитатьJSON(ЧтениеJSON);
	Тип   = Массив.state;
	
	Автор 	= Массив.author;

	 выборка.Следующий(); 
		Если выборка.Состояние = Перечисления.СостоянияЗаказНаряда.Выполнен Тогда
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
		Информация = ИнформацияОбОшибке();
		
		ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Наряд закрыт!", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		
		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
		Возврат ответ;

		КонецЕсли;

		ОбъектНаряда = Выборка.ссылка.ПолучитьОбъект();
		//ОбъектНаряда = Документы.ЗаказНаряд.СоздатьДокумент();   
		
		//НайденныеСтроки = ОбъектНаряда.Товары.НайтиСтроки(Отбор);
		//Если НайденныеСтроки.количество() > 0 Тогда
		Для каждого элемент из Массив.pose цикл
		Позиция = Число(элемент);	
		Попытка
			СтрокаТЧ = ОбъектНаряда.Товары[Позиция - 1];  
			//СтрокаТЧ.Склад = Справочники.Склады.НайтиПоКоду("000000002");		
			СтрокаТЧ.Состояние = Перечисления.СтатусыТовараВЗаказНаряде.Получить(Тип);
			ТекстЛога =  " В заказ-наряде " + ОбъектНаряда.номер + " сменил статус в товаре "
						 + СтрокаТЧ.Номенклатура + " " + СтрокаТЧ.Партия;
			РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка, Автор, ТекстЛога);
			
			
			//Иначе
		Исключение
			///Если  Не ОбъектНаряда.ЗаблокироватьТЧТовары Тогда
			//	
			//	Новаястрока = ОбъектНаряда.Товары.Добавить();
			//	Новаястрока.Партия = партия;
			//	Новаястрока.Номенклатура = Номенклатура; 
			//	Новаястрока.Количество = 1;
			//	Новаястрока.Автомобиль = ПолучитьМашину(партия);
			//	Новаястрока.Состояние = Перечисления.СтатусыТовараВЗаказНаряде.Выдано;
			//	Новаястрока.Цена = Справочники.ИндКод.НайтиПоНаименованию(ИндКод).Владелец.РекомендованаяЦена;
			//	Новаястрока.Склад = Справочники.Склады.НайтиПоКоду("000000002"); 	
			//	
			//	ТекстЛога =  " В заказ-наряде " + ОбъектНаряда.номер + " установил партию в товаре " + Новаястрока.Номенклатура + " "+ Новаястрока.Партия; 
			//	ЛогированиеWT10(Выборка.ссылка,Автор,ТекстЛога);
			//	ОбъектНаряда.Записать(РежимЗаписиДокумента.Проведение); 
			//	
			//	Ответ = Новый HTTPСервисОтвет(200);
			//	Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			//	Ответ.УстановитьТелоИзСтроки("Успех");
			//	Возврат Ответ;
			//Иначе
			//	Ответ = Новый HTTPСервисОтвет(400);
			//	Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			//	Ответ.УстановитьТелоИзСтроки("Заказ-наряд закрыт!");
			//	Возврат Ответ;	
			//КонецЕсли; 
//
//			Ответ = Новый HTTPСервисОтвет(400);
//			Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
//			Ответ.УстановитьТелоИзСтроки("Не удалось сменить статус товара!");
//			Возврат Ответ;
			ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
		Информация = ИнформацияОбОшибке();
		
		ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Не удалось сменить статус товара!", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		
		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
		Возврат ответ;
		//КонецЕсли;
			//КонецЕсли;
		КонецПопытки;
	КонецЦикла;
//	Ответ = Новый HTTPСервисОтвет(400);
//	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
//	Ответ.УстановитьТелоИзСтроки("Не верные данные");
  //Возврат Ответ;
  ОбъектНаряда.Записать(РежимЗаписиДокумента.Проведение);
  
Ответ = Новый HTTPСервисОтвет(200);
			Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
			Ответ.УстановитьТелоИзСтроки("Успех");
			Возврат Ответ;
КонецФункции


Функция СменаCтатусаВЗНchangestateorder(Запрос)
	Запросзаявки = Новый Запрос;
	Запросзаявки.Текст = текстДляЗаказНаряда2();
	Запросзаявки.УстановитьПараметр("Номер", Запрос.ПараметрыURL["id"]);
	Выборка = Запросзаявки.Выполнить().Выбрать();
	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);

	Массив  = ПрочитатьJSON(ЧтениеJSON);
	Тип   = Массив.state;
	//Позиция = Число(Массив.pose);
	Автор 	= Массив.author;

	Пока выборка.Следующий() Цикл
		Если выборка.Состояние = Перечисления.СостоянияЗаказНаряда.Выполнен Тогда
	
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
		Информация = ИнформацияОбОшибке();
		
		ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Наряд закрыт!", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		
		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
		Возврат Ответ;

		КонецЕсли;

		ОбъектНаряда = Выборка.ссылка.ПолучитьОбъект();
		//ОбъектНаряда = Документы.ЗаказНаряд.СоздатьДокумент();   
		
		//НайденныеСтроки = ОбъектНаряда.Товары.НайтиСтроки(Отбор);
		//Если НайденныеСтроки.количество() > 0 Тогда
		Попытка
		
			ОбъектНаряда.Состояние = Перечисления.СостоянияЗаказНаряда.Получить(Тип);
//			ТекстЛога =  " В заказ-наряде " + ОбъектНаряда.номер + " сменил статус в товаре "
//						 + СтрокаТЧ.Номенклатура + " " + СтрокаТЧ.Партия;
//			РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка, Автор, ТекстЛога);
			ОбъектНаряда.Записать(РежимЗаписиДокумента.Проведение);

			Ответ = Новый HTTPСервисОтвет(200);
			Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
			Ответ.УстановитьТелоИзСтроки("Успех");
			Возврат Ответ;
			//Иначе
		Исключение
			///Если  Не ОбъектНаряда.ЗаблокироватьТЧТовары Тогда
			//	
			//	Новаястрока = ОбъектНаряда.Товары.Добавить();
			//	Новаястрока.Партия = партия;
			//	Новаястрока.Номенклатура = Номенклатура; 
			//	Новаястрока.Количество = 1;
			//	Новаястрока.Автомобиль = ПолучитьМашину(партия);
			//	Новаястрока.Состояние = Перечисления.СтатусыТовараВЗаказНаряде.Выдано;
			//	Новаястрока.Цена = Справочники.ИндКод.НайтиПоНаименованию(ИндКод).Владелец.РекомендованаяЦена;
			//	Новаястрока.Склад = Справочники.Склады.НайтиПоКоду("000000002"); 	
			//	
			//	ТекстЛога =  " В заказ-наряде " + ОбъектНаряда.номер + " установил партию в товаре " + Новаястрока.Номенклатура + " "+ Новаястрока.Партия; 
			//	ЛогированиеWT10(Выборка.ссылка,Автор,ТекстЛога);
			//	ОбъектНаряда.Записать(РежимЗаписиДокумента.Проведение); 
			//	
			//	Ответ = Новый HTTPСервисОтвет(200);
			//	Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			//	Ответ.УстановитьТелоИзСтроки("Успех");
			//	Возврат Ответ;
			//Иначе
			//	Ответ = Новый HTTPСервисОтвет(400);
			//	Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			//	Ответ.УстановитьТелоИзСтроки("Заказ-наряд закрыт!");
			//	Возврат Ответ;	
			//КонецЕсли; 

	
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
		Информация = ИнформацияОбОшибке();
		
		ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Не удалось сменить статус товара!", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		
		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
		Возврат Ответ;
			//КонецЕсли;
		КонецПопытки;
	КонецЦикла;
	
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
		Информация = ИнформацияОбОшибке();
		
		ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Не верные данные!", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		
		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
		Возврат Ответ;
КонецФункции

Функция ОтправитьВРВРsendrvr(Запрос)
	Запросзаявки = Новый Запрос;
	Запросзаявки.Текст = текстДляЗаказНаряда2();
	Запросзаявки.УстановитьПараметр("Номер", Запрос.ПараметрыURL["id"]);
	Выборка = Запросзаявки.Выполнить().Выбрать();
	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);

	Массив  = ПрочитатьJSON(ЧтениеJSON);
	ИндКод  = Массив.id;
	//Позиция = Число(Массив.pose);
	Автор 	= Массив.author;
	Партия = Справочники.ИндКод.НайтиПоНаименованию(ИндКод);

	Номенклатура = Справочники.ИндКод.НайтиПоНаименованию(ИндКод).Владелец;
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура", Номенклатура);
	Отбор.Вставить("Партия", Справочники.ИндКод.ПустаяСсылка());

	Пока выборка.Следующий() Цикл
		ОбъектНаряда = Выборка.ссылка.ПолучитьОбъект();
		//ОбъектНаряда = Документы.ЗаказНаряд.СоздатьДокумент();   

		НайденныеСтроки = ОбъектНаряда.Товары.НайтиСтроки(Отбор);
		Если НайденныеСтроки.количество() > 0 Тогда
			СтрокаТЧ = ОбъектНаряда.Товары[НайденныеСтроки[0].НомерСтроки - 1];
			СтрокаТЧ.Партия = Партия; 
			//@skip-check query-in-loop
			СтрокаТЧ.Автомобиль = РаботаССайтомWT.ПолучитьМашину(Партия);
			СтрокаТЧ.Склад = Справочники.Склады.НайтиПоКоду("000000002");
			СтрокаТЧ.Состояние = Перечисления.СтатусыТовараВЗаказНаряде.Выдано;
			//@skip-check query-in-loop
			РаботаССайтомWT.РедактироватьПолку(ИндКод, "K-2-11-1", Автор);
			ТекстЛога =  " В заказ-наряде " + ОбъектНаряда.номер + " установил партию в товаре "
				+ СтрокаТЧ.Номенклатура + " " + СтрокаТЧ.Партия;
			РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка, Автор, ТекстЛога);
			ОбъектНаряда.Записать(РежимЗаписиДокумента.Проведение);
			Ответ = Новый HTTPСервисОтвет(200);
			Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
			Ответ.УстановитьТелоИзСтроки("Успех");
			Возврат Ответ;

		Иначе
			//	Если  Не ОбъектНаряда.ЗаблокироватьТЧТовары Тогда
			//	
			//	Новаястрока = ОбъектНаряда.Товары.Добавить();
			//	Новаястрока.Партия = партия;
			//	Новаястрока.Номенклатура = Номенклатура; 
			//	Новаястрока.Количество = 1;
			//	Новаястрока.Автомобиль = ПолучитьМашину(партия);
			//	Новаястрока.Состояние = Перечисления.СтатусыТовараВЗаказНаряде.Выдано;
			//	Новаястрока.Цена = Справочники.ИндКод.НайтиПоНаименованию(ИндКод).Владелец.РекомендованаяЦена;
			//	Новаястрока.Склад = Справочники.Склады.НайтиПоКоду("000000002"); 	
			//	
			//	ТекстЛога =  " В заказ-наряде " + ОбъектНаряда.номер + " установил партию в товаре " + Новаястрока.Номенклатура + " "+ Новаястрока.Партия; 
			//	ЛогированиеWT10(Выборка.ссылка,Автор,ТекстЛога);
			//	ОбъектНаряда.Записать(РежимЗаписиДокумента.Проведение); 
			//	
			//	Ответ = Новый HTTPСервисОтвет(200);
			//	Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			//	Ответ.УстановитьТелоИзСтроки("Успех");
			//	Возврат Ответ;
			//Иначе
			//	Ответ = Новый HTTPСервисОтвет(400);
			//	Ответ.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
			//	Ответ.УстановитьТелоИзСтроки("Заказ-наряд закрыт!");
			//	Возврат Ответ;	
			//КонецЕсли; 

//			Ответ = Новый HTTPСервисОтвет(400);
//			Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
//			Ответ.УстановитьТелоИзСтроки("Такой позиции в заказ-нарядде нет или партия уже установлена!");
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
		Информация = ИнформацияОбОшибке();
		
		ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Такой позиции в заказ-нарядде нет или партия уже установлена!", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		
		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
		КонецЕсли;

	КонецЦикла;
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
		Информация = ИнформацияОбОшибке();
		
		ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Нет такого наряда!", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		
		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ТекстыДляЗапросов
Функция текстДляСпискаНарядов()
	Текст = "ВЫБРАТЬ
	|	ЗаказНарядТовары.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(ЗаказНарядТовары.НомерСтроки) КАК КоличествоСтрок,
	|	ЗаказНарядТовары.Состояние КАК Состояние
	|ПОМЕСТИТЬ ВТ_Условие
	|ИЗ
	|	Документ.ЗаказНаряд.Товары КАК ЗаказНарядТовары
	|СГРУППИРОВАТЬ ПО
	|	ЗаказНарядТовары.Состояние,
	|	ЗаказНарядТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Условие.Ссылка КАК Ссылка,
	|	СУММА(ВТ_Условие.КоличествоСтрок) КАК КоличествоСтрок
	|ПОМЕСТИТЬ ВТ_Сборка
	|ИЗ
	|	ВТ_Условие КАК ВТ_Условие
	|ГДЕ
	|	(ВТ_Условие.Состояние = ЗНАЧЕНИЕ(Перечисление.СтатусыТовараВЗаказНаряде.Планово)
	|	ИЛИ ВТ_Условие.Состояние = ЗНАЧЕНИЕ(Перечисление.СтатусыТовараВЗаказНаряде.Срочно))
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Условие.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Условие.Ссылка КАК Ссылка,
	|	СУММА(ВТ_Условие.КоличествоСтрок) КАК КоличествоСтрок
	|ПОМЕСТИТЬ ВТ_Выдача
	|ИЗ
	|	ВТ_Условие КАК ВТ_Условие
	|ГДЕ
	|	(ВТ_Условие.Состояние = ЗНАЧЕНИЕ(Перечисление.СтатусыТовараВЗаказНаряде.Собрано)
	|	ИЛИ ВТ_Условие.Состояние = ЗНАЧЕНИЕ(Перечисление.СтатусыТовараВЗаказНаряде.НетВНаличии))
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Условие.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сотрудники.Код КАК Код,
	|	ЗаказНаряд.Номер КАК Номер,
	|	ЗаказНаряд.Ссылка КАК Ссылка,
	|	ЗаказНаряд.Дата КАК Дата,
	|	ЗаказНаряд.Клиент КАК Клиент,
	|	ЗаказНаряд.Ответственный КАК Ответственный,
	|	ЗаказНаряд.Состояние КАК Состояние,
	|	ЗаказНаряд.ЗаказКлиента КАК ЗаказКлиента,
	|	ЗаказНаряд.ВнутреннийЗаказНаряд КАК Внутр,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
	|	ВТ_Сборка.КоличествоСтрок КАК КоличествоСборка,
	|	ВТ_Выдача.КоличествоСтрок КАК КоличествоВыдача,
	|	ЗаказНаряд.Комментарий,
	|	ЗаказНаряд.СуммаДокумента,
	|	ЗаказНаряд.СуммаРаботы,
	|	ЗаказНаряд.СуммаТовары,
	|	ЗаказНаряд.Проект
	|ПОМЕСТИТЬ ВТ_Наряд
	|ИЗ
	|	Документ.ЗаказНаряд КАК ЗаказНаряд
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сборка КАК ВТ_Сборка
	|		ПО (ВТ_Сборка.Ссылка = ЗаказНаряд.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ЗаказНаряд.Инициатор = Сотрудники.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Выдача КАК ВТ_Выдача
	|		ПО ЗаказНаряд.Ссылка = ВТ_Выдача.Ссылка
	|ГДЕ
	|	ЗаказНаряд.Дата > датавремя(2023, 07, 18)
	|	И не ЗаказНаряд.ВнутреннийЗаказНаряд
//	|	И ЗаказНаряд.Состояние <> Значение(перечисление.СостоянияЗаказНаряда.Выполнен)
	|	%2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ %1
	|	ВТ_Наряд.Код КАК Код,
	|	ВТ_Наряд.Номер КАК Номер,
	|	ВТ_Наряд.Дата КАК Дата,
	|	ВТ_Наряд.Клиент КАК Клиент,
	|	ВТ_Наряд.Ответственный КАК Ответственный,
	|	ВТ_Наряд.Состояние КАК Состояние,
	|	ВТ_Наряд.ЗаказКлиента КАК ЗаказКлиента,
	|	ВТ_Наряд.НомерЗаписи КАК НомерЗаписи,
	|	ВТ_Наряд.КоличествоСборка КАК КоличествоСборка,
	|	ВТ_Наряд.КоличествоВыдача КАК КоличествоВыдача,
	|	ВТ_Наряд.Внутр КАК Внутр,
	|	ВТ_Наряд.Комментарий КАК Комментарий,
	|	ВТ_Наряд.СуммаДокумента,
	|	ВТ_Наряд.СуммаРаботы,
	|	ВТ_Наряд.СуммаТовары,
	|	ВТ_Наряд.Проект
	|ИЗ
	|	ВТ_Наряд КАК ВТ_Наряд
	|ГДЕ
	|	ВТ_Наряд.НомерЗаписи >= &НачинаяСЗаписи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерЗаписи";
	Возврат текст;

КонецФункции

Функция текстДляЗаказНаряда2()
	Текст = "ВЫБРАТЬ
	|	Сотрудники.Код КАК Код,
	|	ЗаказНаряд.Номер КАК Номер,
	|	ЗаказНаряд.Ссылка КАК Ссылка,
	|	ЗаказНаряд.Дата КАК Дата,
	|	ЗаказНаряд.Клиент КАК Клиент,
	|	ЗаказНаряд.Ответственный КАК Ответственный,
	|	ЗаказНаряд.Состояние КАК Состояние,
	|	ЗаказНаряд.ВинКод,
	|	ЗаказНаряд.Проект,
	|	ЗаказНаряд.Клиент.Код,
	|	ЗаказНаряд.Клиент.Телефон,
	|	ЗаказНаряд.Инициатор,
	|	ЗаказНаряд.СуммаДокумента,
	|	ЗаказНаряд.СуммаРаботы,
	|	ЗаказНаряд.СуммаТовары,
	|	ЗаказНаряд.ДатаНачала,
	|	ЗаказНаряд.ДатаОкончания,
	|	ЗаказНаряд.Комментарий,
	|	ЗаказНаряд.Ячейка,
	|	ЗаказНаряд.ЗаказКлиента,
	|	ЗаказНаряд.Ответственные.(
	|		Ссылка,
	|		НомерСтроки,
	|		Сотрудник,
	|		Роль,
	|		Выработка,
	|		Ставка,
	|		СуммаНачислено)
	|ИЗ
	|	Документ.ЗаказНаряд КАК ЗаказНаряд
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ЗаказНаряд.Инициатор = Сотрудники.Ссылка
	|ГДЕ
	|	ЗаказНаряд.Номер = &Номер
	|	или ЗаказНаряд.Ячейка.наименование = &Номер";
	Возврат Текст;
КонецФункции
#КонецОбласти



#КонецОбласти



Функция СменатовараЗНreplaceproductzn(Запрос)
Запросзаявки = Новый Запрос;
	Запросзаявки.Текст = текстДляЗаказНаряда2();
	Запросзаявки.УстановитьПараметр("Номер", Запрос.ПараметрыURL["id"]);
	Попытка
		Выборка = Запросзаявки.Выполнить().Выбрать();
		Тело = Запрос.ПолучитьТелоКакстроку();
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Тело);

		Массив  = ПрочитатьJSON(ЧтениеJSON);

		Замена  = Массив.id;
		Позиция = Массив.pose;
		Автор 	= Массив.author;

		Выборка.Следующий();

		ОбъектЗаявки = Выборка.Ссылка.ПолучитьОбъект();
		Новаястрока = ОбъектЗаявки.Товары[Позиция - 1];
		Если СтрНайти(Строка(Замена), "_") > 0 Тогда
			Партия = Справочники.ИндКод.НайтиПоНаименованию(Замена);
			Номенклатура = Партия.Владелец;
			//ИнфоПартия = ПолучитьИнформациюОПартии(Партия.Наименование);
				
				Новаястрока.Партия = Партия;
				Новаястрока.Номенклатура = Номенклатура;
				//Новаястрока.Количество = 1;
				//@skip-check reading-attribute-from-database
				//Новаястрока.Цена = ?(ИнфоПартия.Цена <> 0, ИнфоПартия.Цена, Номенклатура.РекомендованаяЦена);
				//Новаястрока.ЦенаСоСкидкойНаценкой = Новаястрока.Цена;
					//Новаястрока.Артикул = Номенклатура.Артикул;
				ТекстЛога =  " В заявке " + ОбъектЗаявки.Номер + " добавил партию  " + Новаястрока.Номенклатура + " "
					+ Новаястрока.Партия;
				РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка, Автор, ТекстЛога);
				ОбъектЗаявки.Записать(РежимЗаписиДокумента.Запись);

				Ответ = Новый HTTPСервисОтвет(200);
				Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
				//Ответ.УстановитьТелоИзСтроки("Успех. Строка С Партией добавлена");
		Иначе
			Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Замена);
			ИнфоНоменклатура = РаботаССайтомWT.ПолучитьИнформациюОТоваре(Замена);
			Новаястрока.Партия = Справочники.ИндКод.ПустаяСсылка();
			Новаястрока.Номенклатура = ИнфоНоменклатура.Товар;
			//Новаястрока.Количество = 1;
			//Новаястрока.Цена = ИнфоНоменклатура.Цена;
			//Новаястрока.ЦенаСоСкидкойНаценкой = Новаястрока.Цена;
			ТекстЛога =  " В заявке " + ОбъектЗаявки.номер + " установил Товар " + Новаястрока.Номенклатура;
			РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка, Автор, ТекстЛога);
			ОбъектЗаявки.Записать(РежимЗаписиДокумента.Запись);

			Ответ = Новый HTTPСервисОтвет(200);
			Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
			//Ответ.УстановитьТелоИзСтроки("Успех. Номенклатура установлена " + строка(Новаястрока.Номенклатура));
		КонецЕсли;
		РаботаССайтомWT.ПересчётСуммыЗН(Выборка.ссылка);

	Исключение
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		Информация = ИнформацияОбОшибке();
		ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Ошибка выполнения запроса", Информация.Описание));

		СтрокаДляОтвета = ЗаписьJSON.Закрыть();

		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");

		Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета);
		Возврат Ответ;
	КонецПопытки;
	Возврат Ответ;
КонецФункции

Функция СменаМеткиТоваровВЗНchangestateorder(Запрос)
Запросзаявки = Новый Запрос;
	Запросзаявки.Текст = текстДляЗаказНаряда2();
	Запросзаявки.УстановитьПараметр("Номер", Запрос.ПараметрыURL["id"]);
	Выборка = Запросзаявки.Выполнить().Выбрать();
	Тело = Запрос.ПолучитьТелоКакстроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);

	Массив  = ПрочитатьJSON(ЧтениеJSON);
	Тип   = Массив.state;
	
	Автор 	= Массив.author;

	выборка.Следующий(); 
		Если выборка.Состояние = Перечисления.СостоянияЗаказНаряда.Выполнен Тогда
			Ответ = Новый HTTPСервисОтвет(400);
			Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
			Ответ.УстановитьТелоИзСтроки("Наряд закрыт!");
			Возврат Ответ;

		КонецЕсли;

		ОбъектНаряда = Выборка.ссылка.ПолучитьОбъект();
		Для каждого элемент из Массив.pose цикл
		Позиция = Число(элемент);	
		Попытка
			СтрокаТЧ = ОбъектНаряда.Товары[Позиция - 1];  
			//СтрокаТЧ.Склад = Справочники.Склады.НайтиПоКоду("000000002");		
			СтрокаТЧ.МеткаТовара = Перечисления.МеткиДляТоваровЗН.Получить(Тип);
			ТекстЛога =  " В заказ-наряде " + ОбъектНаряда.номер + " сменил статус в товаре "
						 + СтрокаТЧ.Номенклатура + " " + СтрокаТЧ.Партия;
			РаботаССайтомWT.ЛогированиеWT10(Выборка.ссылка, Автор, ТекстЛога);
			

		
			//Иначе
		Исключение
			
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		
		Информация = ИнформацияОбОшибке();
		
		ЗаписатьJSON(ЗаписьJSON, РаботаССайтомWT.СформироватьСтруктуруОшибки( , "Не удалось сменить статус товара!", Информация.Описание));
		СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
		Ответ = Новый HTTPСервисОтвет(500);
		Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
		
		Ответ.УстановитьТелоИзСтроки( СтрокаДляОтвета);

		КонецПопытки;
	КонецЦикла;
ОбъектНаряда.Записать(РежимЗаписиДокумента.Проведение);
		Ответ = Новый HTTPСервисОтвет(200);
			Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
			Ответ.УстановитьТелоИзСтроки("Успех");
			Возврат Ответ;

КонецФункции
