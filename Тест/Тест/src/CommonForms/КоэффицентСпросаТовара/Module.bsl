&НаКлиенте
Процедура ПриОткрытии(Отказ)

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВсеГода = 1;
	Элементы.Год.СписокВыбора.ЗагрузитьЗначения(СформироватьСвойМассивЗначений());
КонецПроцедуры

&НаКлиенте
Процедура ГодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	/// Комлев АА 14/11/24 +++
	СтандартнаяОбработка = Ложь;
	Элемент.СписокВыбора.ЗагрузитьЗначения(СформироватьСвойМассивЗначений());
	/// Комлев АА 14/11/24 ---
КонецПроцедуры

Функция СформироватьСвойМассивЗначений()
	/// Комлев АА 14/11/24 +++
	МассивГодов = Новый Массив;
	МассивГодов.Добавить(Дата(Год(ТекущаяДата()), 1, 1));
	Индекс = 7;
	ТекДата = ТекущаяДата();
	Пока Индекс <> 0 Цикл
		ТекДата =  ДобавитьМесяц(ТекДата, -12);
		МассивГодов.Добавить(Дата(Год(ТекДата), 1, 1));
		Индекс = Индекс - 1;
	КонецЦикла;
	Возврат МассивГодов;
	/// Комлев АА 14/11/24 ---
КонецФункции

&НаКлиенте
Процедура ГодОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Год = ВыбранноеЗначение;
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзменении(Элемент)
	ВсеГода = 2;
	КоэффицентПоГоду();
КонецПроцедуры

Процедура КоэффицентПоГоду()
	Текст = "ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	КОЛИЧЕСТВО(ЗаказКлиентаТовары.Ссылка) КАК КоличествоЗаявок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ МЕСЯЦ(ЗаказКлиентаТовары.Ссылка.Дата)) КАК КоличествоМесяцев,
	|	ВЫРАЗИТЬ(КОЛИЧЕСТВО(ЗаказКлиентаТовары.Ссылка) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ МЕСЯЦ(ЗаказКлиентаТовары.Ссылка.Дата)) КАК
	|		ЧИСЛО(10, 2)) КАК Коэффицент
	|ПОМЕСТИТЬ ТоварыИзЗаявокСКоэфф
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ЗаказКлиентаТовары.Ссылка.Дата, Год) = НачалоПериода(&Дата, Год)
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаТовары.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка КАК Товар,
	|	ТоварыИзЗаявокСКоэфф.КоличествоЗаявок КАК КоличествоЗаявок,
	|	ТоварыИзЗаявокСКоэфф.КоличествоМесяцев КАК КоличествоМесяцев,
	|	ТоварыИзЗаявокСКоэфф.Коэффицент КАК Коэффицент
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыИзЗаявокСКоэфф КАК ТоварыИзЗаявокСКоэфф
	|		ПО (ТоварыИзЗаявокСКоэфф.Номенклатура = СпрНоменклатура.Ссылка)";
	
	СписокНоменклатурыКоэффицент.ПроизвольныйЗапрос = Истина;
	СписокНоменклатурыКоэффицент.ТекстЗапроса = Текст;
	СписокНоменклатурыКоэффицент.Параметры.УстановитьЗначениеПараметра("Дата", Год);
	Элементы.СписокНоменклатурыКоэффицент.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ВсеГодаПриИзменении(Элемент)
	Год = Дата(1, 1, 1);
	Если ВсеГода = 1 Тогда
		ТекстЗапросаВсеКоэффВсеГода();
	КонецЕсли;
КонецПроцедуры

Процедура ТекстЗапросаВсеКоэффВсеГода()
	Текст = "ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	КОЛИЧЕСТВО(ЗаказКлиентаТовары.Ссылка) КАК КоличествоЗаявок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ МЕСЯЦ(ЗаказКлиентаТовары.Ссылка.Дата)) КАК КоличествоМесяцев,
	|	ВЫРАЗИТЬ(КОЛИЧЕСТВО(ЗаказКлиентаТовары.Ссылка) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ МЕСЯЦ(ЗаказКлиентаТовары.Ссылка.Дата)) КАК
	|		ЧИСЛО(10, 2)) КАК Коэффицент
	|ПОМЕСТИТЬ ТоварыИзЗаявокСКоэфф
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаТовары.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка КАК Товар,
	|	ТоварыИзЗаявокСКоэфф.КоличествоЗаявок КАК КоличествоЗаявок,
	|	ТоварыИзЗаявокСКоэфф.КоличествоМесяцев КАК КоличествоМесяцев,
	|	ТоварыИзЗаявокСКоэфф.Коэффицент КАК Коэффицент
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыИзЗаявокСКоэфф КАК ТоварыИзЗаявокСКоэфф
	|		ПО (ТоварыИзЗаявокСКоэфф.Номенклатура = СпрНоменклатура.Ссылка)";
	СписокНоменклатурыКоэффицент.ПроизвольныйЗапрос = Истина;
	СписокНоменклатурыКоэффицент.ТекстЗапроса = Текст;
	Элементы.СписокНоменклатурыКоэффицент.Обновить();
КонецПроцедуры

