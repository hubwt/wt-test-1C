&НаКлиенте
Процедура ОбновитьОтборПартий()
	///// 
	ТекДанные = Элементы.СписокНоменклатуры.ТекущаяСтрока; 
	СписокПартий.Параметры.УстановитьЗначениеПараметра("Товар", ТекДанные);

КонецПроцедуры



&НаКлиенте
Процедура СписокНоменклатурыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.СписокНоменклатуры.ТекущиеДанные <> Неопределено Тогда
		ОбновитьОтборПартий();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ПериодПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПериодПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Период) Тогда 
		
		СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("Дата1", Период.ДатаНачала);
		СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("Дата2", Период.ДатаОкончания);
		ЗаполнитьПодвал(); 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьПодвал(); 
КонецПроцедуры




&НаКлиенте
Процедура ОткрытьДетальНаСайте1(Команда)
	
	
	ОбщДействия.ОткрытьДетальНаСайтеWT10(ЭтаФорма.Элементы.СписокПартий.ТекущиеДанные.индкод);
		


КонецПроцедуры
	
&НаКлиенте
Процедура ОткрытьКарточкуТовараНаСайте(Команда)

	ОбщДействия.ОткрытьКарточкуТовараНаСайтеWT10(ЭтаФорма.Элементы.СписокНоменклатуры.ТекущиеДанные.Код);
	
КонецПроцедуры




&НаКлиенте
Процедура СписокПартийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
		СтруктураЗаписи = Новый Структура("индкод",  ПолучитьиндКод(Элементы.СписокПартий.ТекущиеДанные.индКод));
		МассивСтруктураЗаписи = Новый Массив;
		МассивСтруктураЗаписи.Добавить(СтруктураЗаписи);
		КлючЗаписи = Новый ("РегистрСведенийКлючЗаписи.ИндНомер", МассивСтруктураЗаписи);
		
		Параметрыформы = Новый Структура("Ключ", КлючЗаписи);                            
		ОткрытьФорму("РегистрСведений.ИндНомер.ФормаЗаписи", Параметрыформы);
		
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьиндКод(Код)
	Возврат Справочники.ИндКод.НайтиПоНаименованию(Код);
КонецФункции

Процедура ЗаполнитьПодвал()
	
	Схема = Элементы.СписокНоменклатуры.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокНоменклатуры.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	

	ЭтотОбъект.ЭтаФорма.Элементы.СписокНоменклатурыКоличествоПродаж.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокНоменклатурыСпросили.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокНоменклатурыЗПМенеджераНаНеЛиквид.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	

	ЭтотОбъект.ЭтаФорма.Элементы.СписокНоменклатурыКоличествоПродаж.ТекстПодвала =  Формат(Результат.Итог("КоличествоПродаж"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокНоменклатурыСпросили.ТекстПодвала =  Формат(Результат.Итог("Спросили"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокНоменклатурыЗПМенеджераНаНеЛиквид.ТекстПодвала =  Формат(Результат.Итог("ЗПМенеджераНаНеЛиквид"),"ЧДЦ=0; ЧН=-");
	
КонецПроцедуры



&НаКлиенте
Процедура ДобавитьВЗаказКлиента1(Команда)
	СостоянияВРаботе = Новый Массив();
	СостоянияВРаботе.Добавить(ПредопределенноеЗначение("Перечисление.дт_СостоянияЗаказовКлиента.Продажа"));
	СостоянияВРаботе.Добавить(ПредопределенноеЗначение("Перечисление.дт_СостоянияЗаказовКлиента.Ожидание"));
	
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	//ПараметрыФормы.Вставить("Отбор", Новый Структура("Состояние", СостоянияВРаботе));
	
	ОткрытьФорму("Документ.ЗаказКлиента.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ДобавитьПартиюВЗаказКлиента  = Ложь; 
	Отказ = ЛОЖЬ; 
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		
		Если Элементы.СписокНоменклатуры.ТекущаяСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
			Партия = Новый Структура();
		Партия.Вставить("Номенклатура", Элементы.СписокНоменклатуры.ТекущаяСтрока);
		Партия.Вставить("Цена", Элементы.СписокНоменклатуры.ТекущиеДанные.Цена);
		
		/// +++ добавить партию дин.списка партия в Заказклиента// если выполняется команда из контексного меню дин.списка Партия
		Если  ДобавитьПартиюВЗаказКлиента = истина тогда  
		Попытка
		Партия.Вставить("Партия", Элементы.Партии.ТекущиеДанные.индкод);
		Исключение 
		КонецПопытки;
		КонецЕсли;
		 // ---
		ДобавитьВЗаказКлиентаНаСервере(ВыбранноеЗначение, Партия, Отказ);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьВЗаказКлиентаНаСервере(ДокументЗаказКлиента, Партия, Отказ)
	
	
	ДокОбъект = ДокументЗаказКлиента.ПолучитьОбъект();
	
	
	ПараметрыОтбора = Новый Структура("Номенклатура");
	ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Партия);
	
	НайденныеСтроки = ДокОбъект.Товары.НайтиСтроки(ПараметрыОтбора);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		НомерСтроки = НайденныеСтроки[0].НомерСтроки;
		Партия.Вставить("НомерСтроки", НомерСтроки - 1);
		Возврат	
	КонецЕсли;
	
	НоваяСтрока = ДокОбъект.Товары.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыОтбора);
	Попытка
	НоваяСтрока.Партия = Партия.Партия; 
	исключение 
	КонецПопытки;
	НоваяСтрока.Количество = 1;
	
	//НоваяСтрока.Цена = Партия.Цена;
	//НоваяСтрока.Сумма = Партия.Цена;
	
	Попытка
		
		ДокОбъект.Записать();
		Партия.Вставить("НомерСтроки", НоваяСтрока.НомерСтроки - 1);
		
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		ДокОбъект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		
	КонецПопытки;
	
КонецПроцедуры

