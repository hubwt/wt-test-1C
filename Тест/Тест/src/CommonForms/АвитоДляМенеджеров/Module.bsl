
&НаКлиенте
Процедура ОбновитьФайлАвтовыгрузки(Команда)
	Если ЗначениеЗаполнено(Менеджер) Тогда
		ФИО = ВернутьФИОМенеджера(Менеджер); 
		АвтозагрузкаАвитоХодовые(ФИО); 
		ЭтаФорма.ОбновитьОтображениеДанных();
	Иначе 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.текст = "Поле менеджер не заполнено"; 
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВернутьФИОМенеджера(Менеджер)

Запрос = Новый Запрос;
Запрос.Текст =
	"ВЫБРАТЬ
	|	Сотрудники.Пользователь.Наименование КАК ПользовательНаименование
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка = &Ссылка";

Запрос.УстановитьПараметр("Ссылка", Менеджер);

РезультатЗапроса = Запрос.Выполнить();

ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
ВыборкаДетальныеЗаписи.Следующий(); 

Если НЕ РезультатЗапроса.Пустой() ТОгда 
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий(); 
	Возврат ВыборкаДетальныеЗаписи.ПользовательНаименование;
Иначе 
	Возврат  Неопределено;
КонецЕсли; 

КонецФункции

&НаКлиенте
Процедура СписокТоваровАвитоМенеджерВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
		СтандартнаяОбработка = Ложь; 
		Структура = Новый структура; 
		Структура.Вставить("Индкод", ПолучитьиндКод(Элементы.СписокТоваровАвитоМенеджер.ТекущиеДанные.индкод));
		КлючЗаписи  = Новый ("РегистрСведенийКлючЗаписи.ИндНомер",Структура);
		
		Параметрыформы = Новый Структура ;
		Параметрыформы.Вставить("Ключ",КлючЗаписи);
		
		ОткрытьФорму("РегистрСведений.ИндНомер.ФормаЗаписи", Параметрыформы);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьиндКод(Код)
	Возврат Справочники.ИндКод.НайтиПоНаименованию(Код);
КонецФункции

#Область ФормируемФайлАвтовыгрузкиДляМенеджеров

Процедура АвтозагрузкаАвитоХодовые(МенеджерНаименование) 
	
	///+ТатарМА 09.12.2024
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстДляТоваровАвито();
	
	МассивКатегорийШин = Новый Массив;
	МассивКатегорийШин.Добавить(Справочники.Категории.НайтиПоКоду("000000501"));
	МассивКатегорийШин.Добавить(Справочники.Категории.НайтиПоКоду("000000502"));
	
	Запрос.УстановитьПараметр("Стеллаж", Справочники.Стеллаж.НайтиПоКоду("000001072"));
	Запрос.УстановитьПараметр("Категории", МассивКатегорийШин);
	Запрос.УстановитьПараметр("Поддон", Справочники.Поддоны.НайтиПоКоду("000000003")); // П0003 потеряшки
	Запрос.УстановитьПараметр("ГруппаМестХранения", Справочники.ГруппыМестХранения.НайтиПоКоду("000000002")); //B-KOMPL
	Запрос.УстановитьПараметр("АккаунтАвито", МенеджерНаименование);
	ДеталиТЗ = Запрос.Выполнить().Выгрузить();
	
	//+++ Убрать дубли по индкодам +++
	ПоискДублей = ДеталиТЗ.Скопировать(, "индкод, КолвоДублей");
	ПоискДублей.Свернуть("индкод", "КолвоДублей");
	
	Дубли = ПоискДублей.НайтиСтроки(Новый Структура("КолвоДублей", 2)); 
	Если Дубли <> Неопределено Тогда  
		Для каждого Дубль Из Дубли Цикл
		НайденныйИндкод = Дубль.индкод;	
		СтрокиДляУдаления = ДеталиТЗ.НайтиСтроки(Новый Структура("индкод", НайденныйИндкод));
			Для каждого СтрокаДляУдаления Из СтрокиДляУдаления Цикл
				ДеталиТЗ.Удалить(СтрокаДляУдаления);
			КонецЦикла;
		КонецЦикла;	
	КонецЕсли;
	КоличествоДеталей = ДеталиТЗ.Количество();
	//--- Убрать дубли по индкодам ---
	
	//+++ Добавляем модель, степень и город +++
	ДанныеДляАртикуловТЗ = ЗагрузитьДанныеИзExcel();
	
	ДеталиТЗ.Колонки.Добавить("МодельИзЭксель");
	ДеталиТЗ.Колонки.Добавить("Степень");
	ДеталиТЗ.Колонки.Добавить("Город");
	ДеталиТЗ.Колонки.Добавить("ВременнаяПустая");
	
	ГруппировкаТЗ = ДеталиТЗ.Скопировать(, "Артикул, КолвоОстаток");
	ГруппировкаТЗ.Свернуть("Артикул", "КолвоОстаток");
	
	Для каждого СтрокаТЗ Из ГруппировкаТЗ Цикл
		ПараметрыОтбора = Новый Структура("Артикул", СтрокаТЗ.Артикул);
		НайденныеСтрокиТоваров = ДеталиТЗ.НайтиСтроки(ПараметрыОтбора);
		Индекс = 0;
		Для каждого НайденнаяСтрока Из НайденныеСтрокиТоваров Цикл
			Индекс = Индекс + 1;
			Если Индекс > 97 Тогда
				Индекс = 1;	
			КонецЕсли;
			ПараметрыОтбораДанныеДляАртикуловТЗ = Новый Структура("Номер", Индекс);
			СтрокаДанныеДляАртикуловТЗ = ДанныеДляАртикуловТЗ.НайтиСтроки(ПараметрыОтбораДанныеДляАртикуловТЗ);
			НайденнаяСтрока.Город = СтрокаДанныеДляАртикуловТЗ[0].Город;
			НайденнаяСтрока.МодельИзЭксель = СтрокаДанныеДляАртикуловТЗ[0].МодельИзЭксель;
			НайденнаяСтрока.Степень = СтрокаДанныеДляАртикуловТЗ[0].Степень;
		КонецЦикла;
	КонецЦикла;
	//--- Добавляем модель, степень и город ---
	
	Если КоличествоДеталей > 49000 Тогда
		КонечныйНомер = 48000;
	Иначе
		КонечныйНомер = КоличествоДеталей;
	КонецЕсли;
	
	ТекстФайла = "";
	МенеджерНаименование =ПолучитьСтрокуНаЛатинском(МенеджерНаименование);
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл("\\192.168.0.245\shared_folder\Autoloads_MarketPlace\Autoload_avito_marketable_manager\avito_marketable" +МенеджерНаименование+ ".xml", "UTF-8"); 
	
	ЗаписьXML.ЗаписатьБезОбработки("<Ads formatVersion=""3"" target=""Avito.ru"">");
	
	КонечноеЗначение = 1;
	Для НомерЗаписи = 0 По КонечныйНомер Цикл
		
		НомерЗаписи = НомерЗаписи + 1000;
		ЧастьДеталей = Новый Массив;
		Если НомерЗаписи > КонечныйНомер Тогда
			НомерЗаписи = КонечныйНомер;
		КонецЕсли;
		Для Сч = КонечноеЗначение По НомерЗаписи Цикл
			ЧастьДеталей.Добавить(ДеталиТЗ[Сч - 1]);
		КонецЦикла;
		КонечноеЗначение = НомерЗаписи + 1;
		ТекстФайла = ВыгрузитьДанныеНаСервереАвитоХодовые(ЧастьДеталей);
		
		ЗаписьXML.ЗаписатьБезОбработки(ТекстФайла);
		
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьБезОбработки("</Ads>");
	
	СсылкаНаФайлАвтовыгрузки = "https://nextcloud.worktruck.ru/shared/Autoloads_MarketPlace/Autoload_avito_marketable_manager/avito_marketable" +МенеджерНаименование+".xml";
	///-ТатарМА 09.12.2024
	// https://nextcloud.worktruck.ru/shared/Autoloads_MarketPlace/Autoload_avito_marketable_manager/avito_marketableADAEVASVETLANAALEKSANDROVNA.xml
КонецПроцедуры
Функция ПолучитьТекстДляТоваровАвито()
	
	///+ТатарМА 09.12.2024
	Результат = "ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиентаТовары.Ссылка) КАК КоличествоЗаявок
	|ПОМЕСТИТЬ ТоварыИзЗаявок
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИндНомер.индкод КАК индкод,
	|	ИндНомер.индкод.Владелец КАК Товар,
	|	ИндНомер.индкод.Владелец.НомерПроизводителя КАК НомерПроизводителя,
	|	ИндНомер.индкод.Владелец.Бренд КАК Бренд,
	|	ИндНомер.СостояниеАвито КАК Состояние,
	|	ИндНомер.Цена КАК Цена,
	|	ЕСТЬNULL(ИндНомер.индкод.Владелец.Вес, 0) КАК Вес,
	|	РегистрНакопления1Остатки.машина КАК машина,
	|	РегистрНакопления1Остатки.машина.Серия КАК Серия,
	|	РегистрНакопления1Остатки.машина.Модель КАК Модель,
	|	РегистрНакопления1Остатки.КолвоОстаток КАК КолвоОстаток,
	|	ИндНомер.индкод.Владелец.длин КАК Длина,
	|	ИндНомер.индкод.Владелец.шир КАК Ширина,
	|	ИндНомер.индкод.Владелец.выс КАК Высота,
	|	ИндНомер.Комментарий КАК Комментарий,
	|	ИндНомер.индкод.Владелец.Подкатегория2 КАК Категории,
	|	ИндНомер.индкод.Владелец.ШиринаШин КАК ШиринаШин,
	|	ИндНомер.индкод.Владелец.ВысотаШин КАК ВысотаШин,
	|	ИндНомер.индкод.Владелец.ДиаметрШин КАК ДиаметрШин,
	|	ИндНомер.индкод.Владелец.ОсьШин КАК ОсьШин,
	|	ИндНомер.индкод.Владелец.СезонностьШин КАК СезонностьШин,
	|	ИндНомер.индкод.Владелец.ИндексСкорости КАК ИндексСкорости,
	|	ИндНомер.индкод.Владелец.ИндексНагрузки КАК ИндексНагрузки,
	|	ИндНомер.индкод.Владелец.МодельШин КАК МодельШин,
	|	ИндНомер.Стеллаж.Владелец КАК Склад,
	|	ИндНомер.индкод.Наименование КАК ИндкодНаименование,
	|	ИндНомер.индкод.Владелец.Артикул КАК Артикул,
	|	ПРЕДСТАВЛЕНИЕ(ИндНомер.индкод) КАК индкодПредставление,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
	|	ИндНомер.индкод.Владелец.Подкатегория2.АвитоТехХарактеристикаЗапчасти.Наименование КАК
	|		индкодВладелецПодкатегория2АвитоТехХарактеристикаЗапчастиНаименование,
	|	ИндНомер.индкод.Владелец.Подкатегория2.АвитоТипЗапчасти.Наименование КАК
	|		индкодВладелецПодкатегория2АвитоТипЗапчастиНаименование,
	|	ИндНомер.АккаунтАвито КАК АккаунтАвито,
	|	ИндНомер.Наименование КАК НаименованиеАвито,
	|	ИндНомер.Описание КАК ОписаниеАвито,
	|	ИндНомер.Адресс КАК АдрессАвито,
	|	ИндНомер.Доступность,
	|	ИндНомер.Происхождение,
	|	ИндНомер.ОтсрочкаПлатежа,
	|	ИндНомер.НДСВключён,
	|	ИндНомер.ТелефонМенеджера
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	РегистрСведений.ИндНомер КАК ИндНомер
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыИзЗаявок КАК ТоварыИзЗаявок
	|		ПО ИндНомер.индкод.Владелец = ТоварыИзЗаявок.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки КАК РегистрНакопления1Остатки
	|		ПО ИндНомер.индкод = РегистрНакопления1Остатки.индкод
	|ГДЕ
	|	РегистрНакопления1Остатки.КолвоОстаток > 0
	|	И ИндНомер.АккаунтАвито = &АккаунтАвито
	|	И ИндНомер.АвитоЧастник
	|	И ИндНомер.индкод.Владелец <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ИндНомер.ЕстьФото = ИСТИНА
	|	И ИндНомер.Стеллаж <> &Стеллаж
	|	И ВЫБОР
	|		КОГДА НЕ ИндНомер.индкод.Владелец.Подкатегория2 В (&Категории)
	|			ТОГДА НЕ РегистрНакопления1Остатки.машина.Серия = ЗНАЧЕНИЕ(Справочник.Серии.ПустаяСсылка)
	|		ИНАЧЕ
	|		НЕ (ИндНомер.индкод.Владелец.Бренд = ЗНАЧЕНИЕ(Справочник.Бренд.ПустаяСсылка)
	|		ИЛИ ИндНомер.индкод.Владелец.МодельШин = ЗНАЧЕНИЕ(Справочник.МоделиШин.ПустаяСсылка)
	|		ИЛИ ИндНомер.индкод.Владелец.ВысотаШин = ЗНАЧЕНИЕ(Справочник.ВысотаШин.ПустаяСсылка)
	|		ИЛИ ИндНомер.индкод.Владелец.ШиринаШин = ЗНАЧЕНИЕ(Справочник.ШиринаШин.ПустаяСсылка)
	|		ИЛИ ИндНомер.индкод.Владелец.ДиаметрШин = ЗНАЧЕНИЕ(Справочник.ДиаметрШин.ПустаяСсылка)
	|		ИЛИ ИндНомер.индкод.Владелец.ИндексНагрузки = 0
	|		ИЛИ ИндНомер.индкод.Владелец.ИндексСкорости = НЕОПРЕДЕЛЕНО
	|		ИЛИ ИндНомер.индкод.Владелец.ОсьШин = НЕОПРЕДЕЛЕНО
	|		ИЛИ ИндНомер.индкод.Владелец.СезонностьШин = НЕОПРЕДЕЛЕНО
	|		ИЛИ ИндНомер.индкод.Владелец.Состояние = НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ
	|	И ИндНомер.Поддон <> &Поддон
	|	И ИндНомер.Стеллаж.ГруппаМестХранения <> &ГруппаМестХранения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Данные.НомерЗаписи КАК НомерЗаписи,
	|	ВТ_Данные.индкод КАК индкод,
	|	ВТ_Данные.Товар.Код КАК КодТовара,
	|	ВТ_Данные.Товар КАК Товар,
	|	ВТ_Данные.НомерПроизводителя КАК НомерПроизводителя,
	|	ВТ_Данные.Бренд КАК Бренд,
	|	ВТ_Данные.Состояние КАК Состояние,
	|	ВТ_Данные.Цена КАК Цена,
	|	ВТ_Данные.Вес КАК Вес,
	|	ВТ_Данные.машина КАК машина,
	|	ВТ_Данные.Серия КАК Серия,
	|	ВТ_Данные.Модель КАК Модель,
	|	ВТ_Данные.КолвоОстаток КАК КолвоОстаток,
	|	ВТ_Данные.Длина КАК Длина,
	|	ВТ_Данные.Ширина КАК Ширина,
	|	ВТ_Данные.Высота КАК Высота,
	|	ВТ_Данные.Комментарий КАК Комментарий,
	|	ВТ_Данные.Категории КАК Категории,
	|	ВТ_Данные.ШиринаШин КАК ШиринаШин,
	|	ВТ_Данные.ВысотаШин КАК ВысотаШин,
	|	ВТ_Данные.ДиаметрШин КАК ДиаметрШин,
	|	ВТ_Данные.ОсьШин КАК ОсьШин,
	|	ВТ_Данные.СезонностьШин КАК СезонностьШин,
	|	ВТ_Данные.ИндексСкорости КАК ИндексСкорости,
	|	ВТ_Данные.ИндексНагрузки КАК ИндексНагрузки,
	|	ВТ_Данные.МодельШин КАК МодельШин,
	|	ВТ_Данные.Склад КАК Склад,
	|	ВТ_Данные.ИндкодНаименование КАК ИндкодНаименование,
	|	ВТ_Данные.Артикул КАК Артикул,
	|	ВТ_Данные.индкодПредставление КАК индкодПредставление,
	|	1 КАК КолвоДублей,
	|	ВТ_Данные.индкодВладелецПодкатегория2АвитоТехХарактеристикаЗапчастиНаименование КАК SparePartType,
	|	ВТ_Данные.индкодВладелецПодкатегория2АвитоТипЗапчастиНаименование КАК TechnicSparePartType,
	|	ВТ_Данные.НаименованиеАвито КАК НаименованиеАвито,
	|	ВТ_Данные.ОписаниеАвито КАК ОписаниеАвито,
	|	ВТ_Данные.АдрессАвито КАК АдрессАвито,
	|	ВТ_Данные.Доступность КАК Availability,
	|	ВТ_Данные.Происхождение КАК Originality,
	|	ВТ_Данные.ОтсрочкаПлатежа КАК PostponedPayment,
	|	ВТ_Данные.НДСВключён КАК PriceWithVAT,
	|	ВТ_Данные.ТелефонМенеджера КАК ContactPhone
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерЗаписи";
	
	Возврат Результат;
	///-ТатарМА 09.12.2024
	
КонецФункции 
Функция ЗагрузитьДанныеИзExcel()
	
	///+ГомзМА 02.09.2024
    // Путь к файлу Excel
    ИмяФайла = "\\192.168.0.245\shared_folder\Autoloads_MarketPlace\ДанныеДляАртикулов.xlsx";

    // Создаем таблицу значений
    ТаблицаЗначений = Новый ТаблицаЗначений;

    // Добавляем колонки в таблицу значений
    ТаблицаЗначений.Колонки.Добавить("Номер");
    ТаблицаЗначений.Колонки.Добавить("МодельИзЭксель");
    ТаблицаЗначений.Колонки.Добавить("Степень");
    ТаблицаЗначений.Колонки.Добавить("Город");

    // Создаем COM-объект для работы с Excel
    ExcelApp = Новый COMОбъект("Excel.Application");

    // Открываем файл Excel
    Книга = ExcelApp.Workbooks.Open(ИмяФайла);

    // Берем первый лист
    Лист = Книга.Worksheets(1);

    // Определяем количество строк
    КоличествоСтрок = Лист.UsedRange.Rows.Count;

    // Заполняем таблицу значений, начиная со второй строки (первая строка - заголовки)
    Для Строка = 2 По КоличествоСтрок Цикл
        НоваяСтрока = ТаблицаЗначений.Добавить();
        НоваяСтрока.Номер 			= Лист.Cells(Строка, 1).Value;
        НоваяСтрока.МодельИзЭксель 	= Лист.Cells(Строка, 2).Value;
        НоваяСтрока.Степень 		= Лист.Cells(Строка, 3).Value;
        НоваяСтрока.Город			= Лист.Cells(Строка, 4).Value;
    КонецЦикла;

    // Закрываем книгу Excel
    Книга.Close();

    // Освобождаем COM-объект
    ExcelApp.Quit();

    Возврат ТаблицаЗначений;
	///-ГомзМА 02.09.2024
	
КонецФункции
Функция ВыгрузитьДанныеНаСервереАвитоХодовые(ТЗРезультат)
	
	///+ТатарМА 09.12.2024
	МассивИндКодов = Новый Массив;
	Для каждого СтрокаМассива Из ТЗРезультат Цикл
		МассивИндКодов.Добавить(СтрокаМассива.индкодПредставление);
	КонецЦикла;
	Фотки = ПолучитьФото(МассивИндКодов);
	Итер = 0;	
	
	ТекстФайла = "";
	
	Если Фотки <> Неопределено Тогда
		Для каждого РезультатЗапроса Из ТЗРезультат Цикл
			Для каждого СтрокаФото ИЗ Фотки Цикл 
				Если  СтрокаФото.indCode = РезультатЗапроса.индкод.наименование Тогда 
				НайденныеФотки = СтрЗаменить(СтрокаФото.xml, "</", "<Image url=""https://nextcloud.worktruck.ru/shared/Autoloads_MarketPlace/Dop.photoAvito/1.png""/>" + Символы.ПС + 
																   "<Image url=""https://nextcloud.worktruck.ru/shared/Autoloads_MarketPlace/Dop.photoAvito/2.png""/>" + Символы.ПС +
																   "<Image url=""https://nextcloud.worktruck.ru/shared/Autoloads_MarketPlace/Dop.photoAvito/3.png""/>" + Символы.ПС +
																   "<Image url=""https://nextcloud.worktruck.ru/shared/Autoloads_MarketPlace/Dop.photoAvito/4.png""/>" + Символы.ПС +
																   "<Image url=""https://nextcloud.worktruck.ru/shared/Autoloads_MarketPlace/Dop.photoAvito/5.png""/>" + Символы.ПС +
																   "<Image url=""https://nextcloud.worktruck.ru/shared/Autoloads_MarketPlace/Dop.photoAvito/6.png""/>" + Символы.ПС +
																   "<Image url=""https://nextcloud.worktruck.ru/shared/Autoloads_MarketPlace/Dop.photoAvito/7.png""/>" + Символы.ПС +
																   "<Image url=""https://nextcloud.worktruck.ru/shared/Autoloads_MarketPlace/Dop.photoAvito/8.png""/>" + Символы.ПС +
																   "</"); 
					//Обрезать Фотки до 10 штук
					КоличествоСтрок = СтрЧислоСтрок(НайденныеФотки);
					Если КоличествоСтрок - 2 > 10 Тогда
						Текст = "";
						Для Строка = 1 По 11 Цикл
							Текст = Текст + СтрПолучитьСтроку(НайденныеФотки, Строка) + Символы.ПС;
						КонецЦикла;
						Текст = Текст + "</Images>";
						НайденныеФотки = Текст;
					КонецЕсли;
				Прервать;  
			конецЕсли;
		КонецЦикла;
			Итер = Итер +1;
			
			Адрес = РезультатЗапроса.Город;
			
			НомерПроизводителя = СтрЗаменить(РезультатЗапроса.НомерПроизводителя, "*", "");
			НомерПроизводителя = СтрЗаменить(НомерПроизводителя, ",", "");
			
			Если РезультатЗапроса.Категории = Справочники.Категории.НайтиПоКоду("000000501") ИЛИ
				РезультатЗапроса.Категории = Справочники.Категории.НайтиПоКоду("000000502") Тогда
				Название = Лев("" + РезультатЗапроса.Товар + " SCANIA " + РезультатЗапроса.МодельИзЭксель, 51);
				Если СтрДлина("" + РезультатЗапроса.Товар + " SCANIA " + РезультатЗапроса.МодельИзЭксель) > 50 Тогда
					НайтиПоследнийПробел = СтрНайти(Название, " ", НаправлениеПоиска.СКонца);
					Название 			 = Лев(Название, НайтиПоследнийПробел - 1);
					ДлинаСтроки 		 = СтрДлина(Название);
					КодПоследнегоСимвола = КодСимвола(Название, ДлинаСтроки);
					ПоследнийСимвол 	 = Символ(КодПоследнегоСимвола);
					Если ПоследнийСимвол = "." ИЛИ ПоследнийСимвол = "," ИЛИ ПоследнийСимвол = "/" Тогда
						Название = Лев(Название, ДлинаСтроки - 1);
					КонецЕсли;
				КонецЕсли;
			Иначе
				Название = Лев("" + РезультатЗапроса.Товар + " SCANIA " + РезультатЗапроса.МодельИзЭксель, 51);
				Если СтрДлина("" + РезультатЗапроса.Товар + " SCANIA " + РезультатЗапроса.МодельИзЭксель) > 50 Тогда
					НайтиПоследнийПробел = СтрНайти(Название, " ", НаправлениеПоиска.СКонца);
					Название 			 = Лев(Название, НайтиПоследнийПробел - 1);
					ДлинаСтроки 		 = СтрДлина(Название);
					КодПоследнегоСимвола = КодСимвола(Название, ДлинаСтроки);
					ПоследнийСимвол 	 = Символ(КодПоследнегоСимвола);
					Если ПоследнийСимвол = "." ИЛИ ПоследнийСимвол = "," ИЛИ ПоследнийСимвол = "/" Тогда
						Название = Лев(Название, ДлинаСтроки - 1);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Название = СтрЗаменить(Название, "(", "");
			Название = СтрЗаменить(Название, ")", "");
			Название = СтрЗаменить(Название, "*", "");
			Название = СтрЗаменить(Название, ",", "");
			Название = СтрЗаменить(Название, "уценка", "");
			Название = СтрЗаменить(Название, "&", "");
			
			Индкод = РезультатЗапроса.индкод.Наименование;
			
			АйдиКод = "new_" + РезультатЗапроса.индкод + "_1";
			// ++ Эти поля из индномера для редактирования объявления 
			НаименованиеАвито	= РезультатЗапроса.НаименованиеАвито; // Блыло Название
			ОписаниеАвито		= РезультатЗапроса.ОписаниеАвито; 
			АдрессАвито			= РезультатЗапроса.АдрессАвито;		// Было Адрес	
			Availability		= РезультатЗапроса.Availability ;
			Originality			= РезультатЗапроса.Originality;
			PostponedPayment	= РезультатЗапроса.PostponedPayment;
			PriceWithVAT		= РезультатЗапроса.PriceWithVAT;
			ContactPhone		= РезультатЗапроса.ContactPhone; 
			// ++ Эти поля из индномера для редактирования объявления 
			Аналоги = НайтиАналогиДетали(РезультатЗапроса.Товар);
			
			Если РезультатЗапроса.Состояние <> Перечисления.Состояние.БУ ИЛИ
				РезультатЗапроса.Состояние <> Перечисления.Состояние.Новый ИЛИ
				РезультатЗапроса.Состояние <> Перечисления.Состояние.Перекупка ИЛИ
				РезультатЗапроса.Состояние <> Перечисления.Состояние.Восстановленная Тогда
				
				Состояние = Неопределено;
			Иначе
				Состояние = Строка(РезультатЗапроса.Состояние);
			КонецЕсли; 
			
			Если РезультатЗапроса.НомерПроизводителя = "*" Тогда
				Если РезультатЗапроса.Артикул = "*" Тогда
					ОригинальныйНомер = "";
				Иначе
					ОригинальныйНомер = РезультатЗапроса.Артикул;
				КонецЕсли;
			Иначе
				ОригинальныйНомер = РезультатЗапроса.НомерПроизводителя;
			КонецЕсли;
			
			Если Аналоги = Неопределено Тогда
				Если РезультатЗапроса.НомерПроизводителя = "*" Тогда
					Если РезультатЗапроса.Артикул = "*" Тогда
						Аналоги = "";
					Иначе
						Аналоги = РезультатЗапроса.Артикул;
					КонецЕсли;
				Иначе
					Аналоги = РезультатЗапроса.НомерПроизводителя;
				КонецЕсли;
			Иначе
				Аналоги = Аналоги;
			КонецЕсли;
			
			МодельСерия = ?(РезультатЗапроса.Серия = Справочники.Серии.ПустаяСсылка(), "5 серия", НРег(РезультатЗапроса.Серия)) + " серии: " + ?(РезультатЗапроса.Модель = Справочники.МоделиАвтомобилей.ПустаяСсылка(),"R",РезультатЗапроса.Модель);
			
			Если РезультатЗапроса.Бренд = Справочники.Бренд.ПустаяСсылка() Тогда
				Бренд = "Scania";
			ИначеЕсли РезультатЗапроса.Бренд = Справочники.Бренд.НайтиПоКоду("000000288") Тогда //RM Italy
				Бренд = "";
			Иначе
				Бренд = РезультатЗапроса.Бренд;
			КонецЕсли;
			
			Если Состояние = Неопределено Тогда
				Состояние = "Б/у";
			Иначе
				Состояние = Состояние;
			КонецЕсли;
			
			Цена = Формат(РезультатЗапроса.Цена, "ЧДЦ=0; ЧГ=0");
			
			СтепеньИзноса = РезультатЗапроса.Степень;
			
			Если РезультатЗапроса.Категории = Справочники.Категории.НайтиПоКоду("000000501") ИЛИ
				РезультатЗапроса.Категории = Справочники.Категории.НайтиПоКоду("000000502")  Тогда
				
				Если НЕ (РезультатЗапроса.ШиринаШин = Справочники.ШиринаШин.ПустаяСсылка() 	  ИЛИ 
					РезультатЗапроса.ВысотаШин = Справочники.ВысотаШин.ПустаяСсылка() 	  ИЛИ 
					РезультатЗапроса.ДиаметрШин = Справочники.ДиаметрШин.ПустаяСсылка()) Тогда
					РазмерыШин = "ширина " + РезультатЗапроса.ШиринаШин + ", высота " + РезультатЗапроса.ВысотаШин + ", диаметр" + РезультатЗапроса.ДиаметрШин;
				Иначе
					РазмерыШин = "По запросу";
				КонецЕсли;
				
				ТекстФайла = ТекстФайла + " 
				|<Ad>
				|<Id>" + АйдиКод + "</Id> 
				|<ContactPhone>" + ContactPhone+ "</ContactPhone>
				|<Address>" + Строка(АдрессАвито) + "</Address> 
				|<ContactMethod>По телефону и в сообщениях</ContactMethod>
				|<Category>Запчасти и аксессуары</Category>
				|<Title>" + НаименованиеАвито + "</Title>
				|<Description>" + ОписаниеАвито + "</Description>
				|<Price>" + Цена + "</Price>
				|" + НайденныеФотки + "
				|<VideoURL>https://rutube.ru/video/private/3d12a0445c38d7648e4fff724ebcd69c/?p=uL3e2SsIgFvgo3YnYu2_Ug</VideoURL>
				|<GoodsType>Шины, диски и колёса</GoodsType>
				|<AdType>Товар приобретен на продажу</AdType>
				|<ProductType>Шины для грузовиков и спецтехники</ProductType>
				|<Brand>" + Бренд + "</Brand>
				|<Model>" + РезультатЗапроса.МодельШин + "</Model>
				|<PostponedPayment>" + PostponedPayment + "</PostponedPayment>
				|<Condition>" + Состояние + "</Condition>
				|<TireSectionWidth>" + РезультатЗапроса.ШиринаШин + "</TireSectionWidth>
				|<TireAspectRatio>" + РезультатЗапроса.ВысотаШин + "</TireAspectRatio>
				|<RimDiameter>" + РезультатЗапроса.ДиаметрШин + "</RimDiameter>
				|<WheelAxle>" + РезультатЗапроса.ОсьШин + "</WheelAxle>
				|<TireType>" + РезультатЗапроса.СезонностьШин + "</TireType>
				|<SpeedIndex>" + РезультатЗапроса.ИндексСкорости + "</SpeedIndex>
				|<LoadIndex>" + РезультатЗапроса.ИндексНагрузки + "</LoadIndex>
				
				|<SparePartType>" + РезультатЗапроса.SparePartType + "</SparePartType>
				|<TechnicSparePartType>" + РезультатЗапроса.TechnicSparePartType + "</TechnicSparePartType>
				|<Availability>"+ Availability +"</Availability>
				|<Originality>" + Originality + "</Originality>
				|<PriceWithVAT>" + PriceWithVAT + "</PriceWithVAT>
				
				|</Ad>"; 
			Иначе
				
				Если НЕ (РезультатЗапроса.Длина = 0 	ИЛИ 
					РезультатЗапроса.Ширина = 0 	ИЛИ 
					РезультатЗапроса.Высота = 0)	Тогда
					Размеры = "" + РезультатЗапроса.Длина + "х" + РезультатЗапроса.Ширина + "х" + РезультатЗапроса.Высота + "см.<br>Вес: " + РезультатЗапроса.Вес + "кг";
				Иначе
					Размеры = "По запросу";
				КонецЕсли;
				
				Вес 	= Окр(РезультатЗапроса.Вес);
				Длина 	= Окр(РезультатЗапроса.Длина);
				Высота 	= Окр(РезультатЗапроса.Высота);
				Ширина 	= Окр(РезультатЗапроса.Ширина);
						
				Если НомерПроизводителя = "" И СтрЗаменить(РезультатЗапроса.Артикул, "*", "") = "" Тогда
					ЗаменаТекстаДетали = "<Technic>Тягачи</Technic>" + Символы.ПС + 
					"<Make>Scania</Make>" + Символы.ПС +  
					"<Model>" + Строка(?(РезультатЗапроса.Модель = Справочники.МоделиАвтомобилей.ПустаяСсылка(), "R", РезультатЗапроса.Модель)) + "</Model>";
				Иначе
					ЗаменаТекстаДетали = "<oem>" + ?(НомерПроизводителя <> "", НомерПроизводителя, СтрЗаменить(РезультатЗапроса.Артикул, "*", "")) + "</oem>";
				КонецЕсли;
				
				ТекстФайла = ТекстФайла + " 
				|<Ad>
				|<Id>" + АйдиКод + "</Id> 
				|<ContactPhone>" + ContactPhone+ "</ContactPhone>
				|<Address>" + АдрессАвито + "</Address> 
				|<ContactMethod>По телефону и в сообщениях</ContactMethod>
				|<Category>Запчасти и аксессуары</Category>
				|<Title>" + НаименованиеАвито + "</Title>
				|<Description>" + ОписаниеАвито + "</Description>
				|<Price>" + Цена + "</Price>
				|" + НайденныеФотки + "
				|<VideoURL>https://rutube.ru/video/private/3d12a0445c38d7648e4fff724ebcd69c/?p=uL3e2SsIgFvgo3YnYu2_Ug</VideoURL>
				|<GoodsType>Запчасти</GoodsType>
				|<AdType>Товар приобретен на продажу</AdType>
				|<ProductType>Для грузовиков и спецтехники</ProductType>
				|<WeightForDelivery>" + Вес + "</WeightForDelivery>
				|<LengthForDelivery>" + Длина + "</LengthForDelivery>
				|<HeightForDelivery>" + Высота + "</HeightForDelivery>
				|<WidthForDelivery>" + Ширина + "</WidthForDelivery>
    //			|<SparePartType>" + ?(РезультатЗапроса.Вес > 14, "Кабина", "Электроника и свет") + "</SparePartType>
	//			|<TechnicSparePartType>" + ?(РезультатЗапроса.Вес > 14, "Кабины в сборе", "Контроллеры, реле и датчики") + "</TechnicSparePartType>
				|<Brand>" + Бренд + "</Brand>
				|" + ЗаменаТекстаДетали + "
				|<Condition>" + Состояние + "</Condition>
				
				|<SparePartType>" + Строка(РезультатЗапроса.SparePartType) + "</SparePartType>
				|<TechnicSparePartType>" + Строка(РезультатЗапроса.TechnicSparePartType) + "</TechnicSparePartType>
				|<Availability>"+ Availability +"</Availability>
				|<Originality>" + Originality + "</Originality>
				|<PriceWithVAT>" + PriceWithVAT + "</PriceWithVAT>
				|</Ad>";
			
			КонецЕсли;			
		КонецЦикла;		
	КонецЕсли;
	
	Возврат ТекстФайла;
	///-ТатарМА 10.12.2024
	
КонецФункции

&НаКлиенте
Процедура МенеджерПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Менеджер) Тогда 
		Элементы.СписокТоваровАвитоМенеджер.Видимость = Истина; 
		СписокТоваровАвитоМенеджер.Параметры.УстановитьЗначениеПараметра("АккаунтАвито", Строка(Менеджер));
	КонецЕсли ;
	
КонецПроцедуры

Функция ПолучитьФото(ИндКод)
	
	///+ГомзМА 15.02.2024
	Соединение = Новый HTTPСоединение("192.168.0.245", 8085);
	СтрокаЗапроса = "/v1/images/avito/xml"; 
	
	Заголовки = Новый Соответствие;    
	Заголовки.Вставить("Content-Type", "application/json");
	
	Запрос = Новый HTTPЗапрос(СтрокаЗапроса, Заголовки);
	
	ЗапросСтруктура = Новый Структура;
	ЗапросСтруктура.Вставить("indCode", ИндКод); 
	
	ПотокJSON = Новый ЗаписьJSON(); 
	ПотокJSON.УстановитьСтроку();
	
	ЗаписатьJSON(ПотокJSON, ЗапросСтруктура);
	СтрокаJSON = ПотокJSON.Закрыть();
	
	Запрос.УстановитьТелоИзСтроки(СтрокаJSON);
	
	Ответ = Соединение.ВызватьHTTPМетод("POST", Запрос);
	
	Если Ответ.КодСостояния = 200 Тогда
		Тело = Ответ.ПолучитьТелоКакСтроку();  
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(Тело); 
		Ответ  = ПрочитатьJSON(ЧтениеJSON); 
	Иначе Сообщить("Код ответа: " + Ответ.КодСостояния); //анализируем код состояния и делаем выводы 
		Ответ = Неопределено;
	КонецЕсли;
	
	Возврат Ответ;
	///-ГомзМА 15.02.2024
	
КонецФункции
Функция НайтиАналогиДетали(Товар)
	
	///+ГомзМА 02.09.2024
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ 
	|	НоменклатураНомераЗамен.НомерЗамены КАК НомерЗамены
	|ИЗ
	|	Справочник.Номенклатура.НомераЗамен КАК НоменклатураНомераЗамен
	|ГДЕ
	|	НоменклатураНомераЗамен.Ссылка.Ссылка = &Товар";
	
	Запрос.УстановитьПараметр("Товар", Товар);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Количество() > 0 Тогда
		Результат = "";
		Пока РезультатЗапроса.Следующий() Цикл
			Результат = Результат + Строка(РезультатЗапроса.НомерЗамены) + Символы.ПС;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	///-ГомзМА 02.09.2024
	
КонецФункции // НайтиАналогиДетали()
 
 Функция ПолучитьСтрокуНаЛатинском(ИсходныйТекст)
	СоответствиеСимволов = Новый Соответствие;
	СоответствиеСимволов.Вставить("А", "A");
	СоответствиеСимволов.Вставить("Б", "B");
	СоответствиеСимволов.Вставить("В", "V");
	СоответствиеСимволов.Вставить("Г", "G");
	СоответствиеСимволов.Вставить("Д", "D");
	СоответствиеСимволов.Вставить("Е", "E");
	СоответствиеСимволов.Вставить("Ё", "E");
	СоответствиеСимволов.Вставить("Ж", "ZH");
	СоответствиеСимволов.Вставить("З", "Z");
	СоответствиеСимволов.Вставить("И", "I");
	СоответствиеСимволов.Вставить("Й", "Y");
	СоответствиеСимволов.Вставить("К", "K");
	СоответствиеСимволов.Вставить("Л", "L");
	СоответствиеСимволов.Вставить("М", "M");
	СоответствиеСимволов.Вставить("Н", "N");
	СоответствиеСимволов.Вставить("О", "O");
	СоответствиеСимволов.Вставить("П", "P");
	СоответствиеСимволов.Вставить("Р", "R");
	СоответствиеСимволов.Вставить("С", "S");
	СоответствиеСимволов.Вставить("Т", "T");
	СоответствиеСимволов.Вставить("У", "U");
	СоответствиеСимволов.Вставить("Ф", "F");
	СоответствиеСимволов.Вставить("Х", "KH");
	СоответствиеСимволов.Вставить("Ц", "TS");
	СоответствиеСимволов.Вставить("Ч", "CH");
	СоответствиеСимволов.Вставить("Ш", "SH");
	СоответствиеСимволов.Вставить("Щ", "SHCH");
	СоответствиеСимволов.Вставить("Ъ", "");
	СоответствиеСимволов.Вставить("Ы", "Y");
	СоответствиеСимволов.Вставить("Ь", "");
	СоответствиеСимволов.Вставить("Э", "E");
	СоответствиеСимволов.Вставить("Ю", "YU");
	СоответствиеСимволов.Вставить("Я", "YA");
	
	ИсходныйТекст = СокрЛП(ВРег(ИсходныйТекст));
	ГотовоеЗначение = "";
	ТекущийСимвол = "";
	ТекущийГотовыйСимвол = "";
	Для к = 1 по СтрДлина(ИсходныйТекст) Цикл
		ТекущийСимвол = Сред(ИсходныйТекст, к, 1);
		ТекущийГотовыйСимвол = СоответствиеСимволов.Получить(ТекущийСимвол);
		Если ТекущийГотовыйСимвол = Неопределено Тогда
			ГотовоеЗначение = ГотовоеЗначение + ТекущийСимвол;
		Иначе
			ГотовоеЗначение = ГотовоеЗначение + ТекущийГотовыйСимвол;
		КонецЕсли;
		
	КонецЦикла;
	ГотовоеЗначение = СтрЗаменить(ГотовоеЗначение," ",""); 
Возврат ГотовоеЗначение;
КонецФункции 


#КонецОбласти // ФормируемФайлАвтовыгрузкиДляМенеджеров

