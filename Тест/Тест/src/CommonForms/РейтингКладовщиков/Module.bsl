
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	РейтингМенеджеров.Параметры.УстановитьЗначениеПараметра("ВидРасхода",Справочники.ВидыРасходов.НайтиПоКоду("000000041"));
	
	элементы.РейтингМенеджеровКонтроль.Доступность = Пользователи.РолиДоступны("ПолныеПрава,РОП");
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	РейтингМенеджеров.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Период.ДатаНачала);
	РейтингМенеджеров.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Период.ДатаОкончания);
	//РейтингМенеджеров.Параметры.УстановитьЗначениеПараметра("ВидРасхода",Справочники.ВидыРасходов.НайтиПоКоду("000000041"));
	
	СписокСчета.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Период.ДатаНачала);
	СписокСчета.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Период.ДатаОкончания);
	
	заявки.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Период.ДатаНачала);
	заявки.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Период.ДатаОкончания);

	ПоказателиКладовщиков.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Период.ДатаНачала);
	ПоказателиКладовщиков.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Период.ДатаОкончания);
	

	ЗаполнениеПодвала();
	
	///+ГомзМА 03.03.2023
	ЭтаФорма.Модифицированность = Ложь;
	///-ГомзМА 03.03.2023
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСчетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СсылкаДляОткрытия    = Элементы.СписокСчета.ТекущиеДанные[СтрЗаменить(Поле.Имя,Элемент.имя,"")];
	ПараметрыФормы       = Новый Структура("Ключ", СсылкаДляОткрытия);
	Если ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ПриходДенегНасчет") Тогда
		ИмяФормыДокумента="Документ.ПриходДенегНасчет.Форма.ФормаДокумента";
	ИначеЕсли ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ЗаказКлиента") Тогда
		ИмяФормыДокумента="Документ.ЗаказКлиента.Форма.ФормаДокумента";
	ИначеЕсли ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ПродажаЗапчастей") Тогда
		ИмяФормыДокумента="Документ.ПродажаЗапчастей.Форма.ФормаДокумента";
	ИначеЕсли ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ПредварительныйСчет") Тогда
		ИмяФормыДокумента="Документ.ПредварительныйСчет.Форма.ФормаДокумента";
	Иначе
		СтандартнаяОбработка = Истина;
		Возврат;
	КонецЕсли;
	ФормаДокумента = ПолучитьФорму(ИмяФормыДокумента, ПараметрыФормы);
	ФормаДокумента.Открыть();
	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	РейтингМенеджеров.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Период.ДатаНачала);
	РейтингМенеджеров.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Период.ДатаОкончания);
	
	СписокСчета.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Период.ДатаНачала);
	СписокСчета.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Период.ДатаОкончания);
	
	заявки.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Период.ДатаНачала);
	заявки.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Период.ДатаОкончания);
	
	
	ПоказателиКладовщиков.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Период.ДатаНачала);
	ПоказателиКладовщиков.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Период.ДатаОкончания);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
	ЗаполнениеПодвала();
	
КонецПроцедуры

Процедура ЗаполнениеПодвала()
    Схема = Элементы.ПоказателиКладовщиков.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы.ПоказателиКладовщиков.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковКомплектовка.ГоризонтальноеПоложениеВПодвале    = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковПоступления.ГоризонтальноеПоложениеВПодвале 	  = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковКарточки.ГоризонтальноеПоложениеВПодвале   	  = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковСрЦена.ГоризонтальноеПоложениеВПодвале 	 	  = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковЦена.ГоризонтальноеПоложениеВПодвале 	 		  = ГоризонтальноеПоложениеЭлемента.Право;
	
		
    ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковКомплектовка.ТекстПодвала =  Формат(Результат.Итог("Комплектовка"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковПоступления.ТекстПодвала  =  Формат(Результат.Итог("Поступления"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковКарточки.ТекстПодвала     =  Формат(Результат.Итог("Карточки"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковСрЦена.ТекстПодвала 	    =  Формат(Результат.Итог("СрЦена"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковЦена.ТекстПодвала 	    =  Формат(Результат.Итог("Цена"),"ЧДЦ=0; ЧН=-");
	КонецПроцедуры

&НаКлиенте
Процедура РейтингМенеджеровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.имя = "РейтингМенеджеровКонтроль" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = Элементы.РейтингМенеджеров.ТекущиеДанные;
		ТекущийМенеджер = Элементы.РейтингМенеджеров.ТекущиеДанные.Менеджер;
		Если ТекущиеДанные <> Неопределено Тогда
			Если ТекущиеДанные.Контроль Тогда
				СнятьКонтроль(ТекущийМенеджер);
			Иначе
				ПоставитьКонтроль(ТекущийМенеджер);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	//Параметр в динамическом списке нужно обновить
	//Список.Параметры.УстановитьЗначениеПараметра("ВыбраннаяЗапись", ВыбраннаяЗапись);
	
	Элементы.РейтингМенеджеров.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура СнятьКонтроль(Менеджер)
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДополнительныеНомера.Добавочный КАК Добавочный,
	|	ДополнительныеНомера.Менеджер КАК Менеджер,
	|	ДополнительныеНомера.Контроль КАК Контроль
	|ИЗ
	|	РегистрСведений.ДополнительныеНомера КАК ДополнительныеНомера
	|ГДЕ
	|	ДополнительныеНомера.Менеджер = &Менеджер";
	Запрос.УстановитьПараметр("Менеджер",Менеджер);
	Выборка = запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Запись = РегистрыСведений.ДополнительныеНомера.СоздатьМенеджерЗаписи();
	Запись.Менеджер   = Выборка.Менеджер;
	Запись.Добавочный = Выборка.Добавочный;
	Запись.Контроль   = Ложь;
	
	Запись.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ПоставитьКонтроль(Менеджер)
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДополнительныеНомера.Добавочный КАК Добавочный,
	|	ДополнительныеНомера.Менеджер КАК Менеджер,
	|	ДополнительныеНомера.Контроль КАК Контроль
	|ИЗ
	|	РегистрСведений.ДополнительныеНомера КАК ДополнительныеНомера
	|ГДЕ
	|	ДополнительныеНомера.Менеджер = &Менеджер";
	Запрос.УстановитьПараметр("Менеджер",Менеджер);
	Выборка = запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Запись = РегистрыСведений.ДополнительныеНомера.СоздатьМенеджерЗаписи();
	Запись.Менеджер   = Выборка.Менеджер;
	Запись.Добавочный = Выборка.Добавочный;
	Запись.Контроль   = Истина;
	
	Запись.Записать();
	
КонецПроцедуры

