#область ВыдачаФишекОперативныйУчет
&НаКлиенте
Процедура ВыдатьФишку(Команда)
	
	ЕСли НЕ ЗначениеЗаполнено(КлиентВыдать) ТОгда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.текст = "Поле Клиент не Заполнено!!";
		Сообщение.Сообщить();
		Возврат; 
	ИначеЕсли  НЕ ЗначениеЗаполнено(НомерФишкиВыдать) ТОгда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.текст = "Поле Номер не Заполнено!!";
		Сообщение.Сообщить();
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(ПродажаВыдать) Тогда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.текст = "Поле Продажа не Заполнено!!";
		Сообщение.Сообщить();
		Возврат;	
	Иначе
		ВыдатьФишкуНаСервере();
	КонецЕсли; 
	
	ОбновитьСписки(); 

КонецПроцедуры
&НаСервере
Процедура ВыдатьФишкуНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИндНомерФишкиСрезПоследних.НоминалФишки
		|ИЗ
		|	РегистрСведений.ИндНомерФишки.СрезПоследних(&Дата, ИндНомерФишки = &ИндНомерФишки) КАК ИндНомерФишкиСрезПоследних
		|ГДЕ
		|	ИндНомерФишкиСрезПоследних.КлиентВернул = ИСТИНА";
	
	Запрос.УстановитьПараметр("ИндНомерФишки", НомерФишкиВыдать);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос2 = Новый Запрос;
	Запрос2.Текст =
		"ВЫБРАТЬ
		|	ИндНомерФишкиСрезПоследних.НоминалФишки
		|ИЗ
		|	РегистрСведений.ИндНомерФишки.СрезПоследних(, ИндНомерФишки = &ИндНомерФишки) КАК ИндНомерФишкиСрезПоследних";
	
	Запрос2.УстановитьПараметр("ИндНомерФишки", НомерФишкиВыдать);
	
	РезультатЗапроса2 = Запрос2.Выполнить();
	
	Если  РезультатЗапроса2.Пустой() Тогда 
		
	ИНаче   
		РезультатЗапроса = Запрос.Выполнить();
		
		Если  РезультатЗапроса.Пустой() Тогда 
		
			Сообщение = Новый СообщениеПользователю();
			Сообщение.текст = "Фишка: " + НомерФишкиВыдать + " Находится у клиента, её нельзя выдать";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;
	КонецЕсли; 
		
		// +++ Запись в регистр Сведений
		//	+ Найти ссылку на менеджера менеджера
			ИмяТекПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().ПолноеИмя;
			СсылкаТекПользователя = Справочники.Сотрудники.НайтиПоНаименованию(ИмяТекПользователя);
		//	- Найти ссылку на менеджера менеджера
		НоваяЗапись = РегистрыСведений.ИндНомерФишки.СоздатьМенеджерЗаписи();
   		
   		НоваяЗапись.ИндНомерФишки 	= НомерФишкиВыдать;
   		НоваяЗапись.НоминалФишки 	= НомерФишкиВыдать.НоминалФишки;
   		НоваяЗапись.Клиент 			= КлиентВыдать;
   		НоваяЗапись.ДокРегистратор 	= ПродажаВыдать; // Документы.ПродажаЗапчастей.ПустаяСсылка();
   		НоваяЗапись.ВыданаКлиенту	= Истина; 
   		НоваяЗапись.КлиентВернул	= ложь; 
   		НоваяЗапись.Период 			= ТекущаяДата();
		НоваяЗапись.Менеджер		= СсылкаТекПользователя; 
		
		НоваяЗапись.Записать();
		

КонецПроцедуры
&НаКлиенте
Процедура НомерФишкиВыдатьПриИзменении(Элемент)
	
	НоминалВыдать = НомерФишкиВыдатьПриИзмененииНаСервере(НомерФишкиВыдать);

КонецПроцедуры

&НаСервереБезКонтекста
Функция НомерФишкиВыдатьПриИзмененииНаСервере(НомерФишкиВыдать)

	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ФишкиВоркТрак.НоминалФишки КАК Номинал
		|ИЗ
		|	Справочник.ФишкиВоркТрак КАК ФишкиВоркТрак
		|ГДЕ
		|	ФишкиВоркТрак.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", НомерФишкиВыдать);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Номинал; 
	КонецЦикла;

КонецФункции


#Конецобласти

#область ПриёмФишекОперативныйУчет

&НаКлиенте
Процедура ПринятьФишку(Команда)
	
	ЕСли НЕ ЗначениеЗаполнено(КлиентПринять) ТОгда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.текст = "Поле Клиент не Заполнено!!";
		Сообщение.Сообщить();
		Возврат; 
	ИначеЕсли  НЕ ЗначениеЗаполнено(НомерФишкиПринять) ТОгда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.текст = "Поле Номер не Заполнено!!";
		Сообщение.Сообщить();
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(ПродажаПринять) Тогда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.текст = "Поле Продажа не Заполнено!!";
		Сообщение.Сообщить();
		Возврат;	
	Иначе
		 ПринятьФишкуНаСервере();
	КонецЕсли; 
	
	ОбновитьСписки(); 
	
КонецПроцедуры

&НаКлиенте
Процедура НомерФишкиПринятьПриИзменении(Элемент)
	НоминалПринять = НомерФишкиПринятьПриИзмененииНаСервере(НомерФишкиПринять);
КонецПроцедуры

&НаСервереБезКонтекста
Функция НомерФишкиПринятьПриИзмененииНаСервере(НомерФишкиПринять)
		Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ФишкиВоркТрак.НоминалФишки КАК Номинал
		|ИЗ
		|	Справочник.ФишкиВоркТрак КАК ФишкиВоркТрак
		|ГДЕ
		|	ФишкиВоркТрак.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", НомерФишкиПринять);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Номинал; 
	КонецЦикла;
КонецФункции

&НаСервере
Процедура ПринятьФишкуНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИндНомерФишкиСрезПоследних.НоминалФишки
		|ИЗ
		|	РегистрСведений.ИндНомерФишки.СрезПоследних(&Дата, ИндНомерФишки = &ИндНомерФишки) КАК ИндНомерФишкиСрезПоследних
		|ГДЕ
		|	ИндНомерФишкиСрезПоследних.ВыданаКлиенту = ИСТИНА";
	
	Запрос.УстановитьПараметр("ИндНомерФишки", НомерФишкиПринять);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос2 = Новый Запрос;
	Запрос2.Текст =
		"ВЫБРАТЬ
		|	ИндНомерФишкиСрезПоследних.НоминалФишки
		|ИЗ
		|	РегистрСведений.ИндНомерФишки.СрезПоследних(, ИндНомерФишки = &ИндНомерФишки) КАК ИндНомерФишкиСрезПоследних";
	
	Запрос2.УстановитьПараметр("ИндНомерФишки", НомерФишкиПринять);
	
	РезультатЗапроса2 = Запрос2.Выполнить();
	
	Если  РезультатЗапроса2.Пустой() Тогда 
			Сообщение = Новый СообщениеПользователю();
			Сообщение.текст = "Фишка: " + НомерФишкиПринять + " Находится в ВоркТраке, клиент ее не мог вернуть (НЕТ запиисей)";
			Сообщение.Сообщить();
		Возврат; 
	
	ИНаче   
		РезультатЗапроса = Запрос.Выполнить();
		
		Если  РезультатЗапроса.Пустой() Тогда 
		
			Сообщение = Новый СообщениеПользователю();
			Сообщение.текст = "Фишка: " + НомерФишкиПринять + " Находится в ВоркТраке, клиент ее не мог вернуть (Срез полседних выдана истина)";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;
	КонецЕсли; 
		
		// +++ Запись в регистр Сведений 
			//	+ Найти ссылку на менеджера менеджера
			ИмяТекПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().ПолноеИмя;
			СсылкаТекПользователя = Справочники.Сотрудники.НайтиПоНаименованию(ИмяТекПользователя);
			//	- Найти ссылку на менеджера менеджера
		
		НоваяЗапись = РегистрыСведений.ИндНомерФишки.СоздатьМенеджерЗаписи();
   		
   		НоваяЗапись.ИндНомерФишки 	= НомерФишкиПринять;
   		НоваяЗапись.НоминалФишки 	= НомерФишкиПринять.НоминалФишки;
   		НоваяЗапись.Клиент 			= КлиентПринять;
   		НоваяЗапись.ДокРегистратор 	= ПродажаПринять; // Документы.ПродажаЗапчастей.ПустаяСсылка();
   		НоваяЗапись.ВыданаКлиенту	= лОЖЬ; 
   		НоваяЗапись.КлиентВернул	= иСТИНА; 
   		НоваяЗапись.Период 			= ТекущаяДата();
		НоваяЗапись.Менеджер		= СсылкаТекПользователя; 
		
		НоваяЗапись.Записать();
	
	
КонецПроцедуры
#Конецобласти

#Область ДинамичекихСписков

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновитьСписки(); 
КонецПроцедуры
Функция ОбновитьСписки()
	
	СписокСвободныхФишек.Параметры.УстановитьЗначениеПараметра	("Дата",ТекущаяДата());
	РассчитатьИтогиСписокСвободныхФишек(); 
	
	СписокФишкиУКлиентов.Параметры.УстановитьЗначениеПараметра	("Дата",ТекущаяДата());
	РассчитатьИтогиСписокФишкиУКлиентов();
	 
КонецФункции

Процедура РассчитатьИтогиСписокСвободныхФишек()

  Схема = Элементы.СписокСвободныхФишек.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
  Настройки = Элементы.СписокСвободныхФишек.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
  КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
  МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , , Тип(
    "ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
  ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
  ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
  ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
  Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
  
 
  ЭтотОбъект.ЭтаФорма.Элементы.СписокСвободныхФишекНоминал.ТекстПодвала =  "Общая сумма Фишек: " + Формат(Результат.Итог(
    "Номинал"), "ЧДЦ=2; ЧН=-");
	 ЭтотОбъект.ЭтаФорма.Элементы.СписокСвободныхФишекНаименование.ТекстПодвала =  "Общая количество Фишек: " + Формат(Результат.Итог(
    "Количество"), "ЧДЦ=0; ЧН=-");

КонецПроцедуры

Процедура РассчитатьИтогиСписокФишкиУКлиентов()

  Схема = Элементы.СписокФишкиУКлиентов.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
  Настройки = Элементы.СписокФишкиУКлиентов.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
  КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
  МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , , Тип(
    "ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
  ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
  ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
  ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
  Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
  
 	
  ЭтотОбъект.ЭтаФорма.Элементы.СписокФишкиУКлиентовНоминалФишки.ТекстПодвала =  "Общая сумма Фишек: " + Формат(Результат.Итог(
    "НоминалФишки"), "ЧДЦ=2; ЧН=-");
   ЭтотОбъект.ЭтаФорма.Элементы.СписокФишкиУКлиентовСсылка.ТекстПодвала =  "Общая количество Фишек: " + Формат(Результат.Итог(
    "Количество"), "ЧДЦ=0; ЧН=-"); 
КонецПроцедуры

#Конецобласти

#Область СобытияФормы

&НаКлиенте
Процедура УчестьФишку(Команда)
	ОткрытьФорму("Справочник.ФишкиВоркТрак.ФормаСписка",);
КонецПроцедуры

&НаКлиенте
Процедура ПродажаВыдатьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
//	ПродажаОтборПоКлиенту(Элемент, ДанныеВыбора, СтандартнаяОбработка,КлиентВыдать);
	СтандартнаяОбработка = Ложь; 
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("Клиент", КлиентВыдать);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",Ложь); ///Если хотим несколько значений
	ПараметрыФормы.Вставить("Отбор",ПараметрыОтбора);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"ВыдатьФишку");

	ОткрытьФорму("Документ.ПродажаЗапчастей.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажаПринятьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
//	ПродажаОтборПоКлиенту(Элемент, ДанныеВыбора, СтандартнаяОбработка,КлиентПринять);
	СтандартнаяОбработка = Ложь; 
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("Клиент", КлиентПринять);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",Ложь); ///Если хотим несколько значений
	ПараметрыФормы.Вставить("Отбор",ПараметрыОтбора);

	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"ПинятьФишку");

	ОткрытьФорму("Документ.ПродажаЗапчастей.Форма.ФормаВыбора",ПараметрыФормы,
	ЭтаФорма, , , , ОбработкаВыбора);

КонецПроцедуры
 
&НаКлиенте
Процедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт

   //Дополнительные условия если необходимо
   Если ДопПараметры = "ПинятьФишку" тогда

    	Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
     
    ПродажаПринять = Значение ///Если Множественный Выбор - то вернется массив 
    
    ИНачеЕсли ДопПараметры = "ВыдатьФишку" тогда
		Если Значение = Неопределено Тогда  ///Если ничего не выбрать - вернется пустое значение (Неопределено)
        	Возврат;
    	КонецЕсли;
     
    ПродажаВыдать = Значение ///Если Множественный Выбор - то вернется массив 

    КонецЕсли;
КонецПроцедуры

#Конецобласти

