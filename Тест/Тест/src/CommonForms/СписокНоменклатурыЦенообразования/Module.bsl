
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	ПоискНаСервере();
	
КонецПроцедуры
Процедура ПоискНаСервере()
	ТексЗапросаСПоиском = "ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ НоменклатураПоиск
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	(Номенклатура.Наименование ПОДОБНО &наименование
	|	ИЛИ Номенклатура.Артикул ПОДОБНО &наименование
	|	ИЛИ Номенклатура.АртикулПоиск ПОДОБНО &наименование
	|	ИЛИ Номенклатура.НомерПроизводителя ПОДОБНО &наименование
	|	ИЛИ Номенклатура.Код ПОДОБНО &наименование)
	|
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НоменклатураНомераЗамен.Ссылка
	|ИЗ
	|	Справочник.Номенклатура.НомераЗамен КАК НоменклатураНомераЗамен
	|ГДЕ
	|	НоменклатураНомераЗамен.НомерЗамены ПОДОБНО &наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиентаТовары.Ссылка) КАК Спросили,
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_Спрашивают
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажаЗапчастейТаблица.Ссылка) КАК Ссылка,
	|	ПродажаЗапчастейТаблица.Товар КАК Товар
	|ПОМЕСТИТЬ ВТ_Продажи
	|ИЗ
	|	Документ.ПродажаЗапчастей.Таблица КАК ПродажаЗапчастейТаблица
	|СГРУППИРОВАТЬ ПО
	|	ПродажаЗапчастейТаблица.Товар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(дт_ЦеныНоменклатуры.Период) КАК Период,
	|	дт_ЦеныНоменклатуры.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ МаксПериод
	|ИЗ
	|	РегистрСведений.дт_ЦеныНоменклатуры КАК дт_ЦеныНоменклатуры
	|ГДЕ
	|	дт_ЦеныНоменклатуры.ТипЦен.Код = ""000000004""
	|СГРУППИРОВАТЬ ПО
	|	дт_ЦеныНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	дт_ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(дт_ЦеныНоменклатуры.Цена) КАК Цена
	|ПОМЕСТИТЬ Актуальная
	|ИЗ
	|	РегистрСведений.дт_ЦеныНоменклатуры КАК дт_ЦеныНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксПериод КАК МаксПериод
	|		ПО (дт_ЦеныНоменклатуры.Период = МаксПериод.Период)
	|		И (дт_ЦеныНоменклатуры.Номенклатура = МаксПериод.Номенклатура)
	|СГРУППИРОВАТЬ ПО
	|	дт_ЦеныНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Наименование,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.ЦенаФиксирована = ИСТИНА
	|			ТОГДА ""Актуальная""
	|		ИНАЧЕ ""Старая""
	|	КОНЕЦ КАК ТипЦены,
	|	СправочникНоменклатура.Код КАК Код,
	|	СправочникНоменклатура.Артикул КАК Артикул,
	|	СправочникНоменклатура.НомерПроизводителя КАК НомерПроизводителя,
	|	СправочникНоменклатура.Производитель КАК Производитель,
	|	СправочникНоменклатура.Состояние КАК Состояние,
	|	СправочникНоменклатура.Бренд КАК Бренд,
	|	РегистрНакопления1Остатки.КолвоОстаток КАК КолвоОстаток,
	|	СправочникНоменклатура.Серия КАК Серия,
	|	ВТ_Продажи.Ссылка КАК КоличествоПродаж,
	|	ОКР(Актуальная.Цена, 0) КАК Цена,
	|	ВТ_Спрашивают.Спросили КАК Спросили
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РегистрНакопления1.Остатки(,НЕ Склад = &Склад) КАК РегистрНакопления1Остатки
	|		ПО (СправочникНоменклатура.Ссылка = РегистрНакопления1Остатки.Товар)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Продажи КАК ВТ_Продажи
	|		ПО (СправочникНоменклатура.Ссылка = ВТ_Продажи.Товар)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Актуальная КАК Актуальная
	|		ПО (Актуальная.Номенклатура = СправочникНоменклатура.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Спрашивают КАК ВТ_Спрашивают
	|		ПО (СправочникНоменклатура.Ссылка = ВТ_Спрашивают.Номенклатура.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураПоиск КАК НоменклатураПоиск
	|		ПО (НоменклатураПоиск.Ссылка = СправочникНоменклатура.Ссылка)";
	
	СписокНоменклатуры.ТекстЗапроса = ТексЗапросаСПоиском;
	СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("Наименование", "%" + СтрокаПоиска + "%");
	//++ МазинЕС Не считать количество с учетом склада востановленя
	СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("Склад", Справочники.Склады.НайтиПоКоду("000000022"));
	//-- МазинЕС Не считать количество с учетом склада востановленя
КонецПроцедуры


&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.НаПереоценку Тогда
		ДатаВПрошлом = ДобавитьМесяц(ТекущаяДата(), -4);
		НачалоГода = ДобавитьМесяц(ТекущаяДата(), -12);
		СписокНоменклатурыНаПереоценку.Параметры.УстановитьЗначениеПараметра("ДатаВПрошлом", ДатаВПрошлом);
		СписокНоменклатурыНаПереоценку.Параметры.УстановитьЗначениеПараметра("ДатаНачала", НачалоДня(НачалоГода));
		СписокНоменклатурыНаПереоценку.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", ТекущаяДата());
	КонецЕсли;
КонецПроцедуры
#КонецОбласти
#Область ОбработчикиКомандФормы



&НаКлиенте
Процедура Создать(Команда)
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента");
КонецПроцедуры
#КонецОбласти


&НаКлиенте
Процедура Обновить(Команда)
	Количество = КоличествоСтрокВСписке("СписокНоменклатурыНаПереоценку");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекст(Команда)

	Перем ТекстСообщения;
	
	Отказ = Ложь;
	
	общЗаданияПоРасп.ОбновитьОдинТовар(ЭтаФорма.Элементы.СписокНоменклатуры.ТекущаяСтрока, ТекстСообщения, Отказ);
	
	Если ТекстСообщения <> Неопределено Тогда
		
		Картинка = ?(Отказ, БиблиотекаКартинок.Остановить, Неопределено);
		Ключ = Строка(ЭтаФорма.УникальныйИдентификатор) + "_" + ЭтаФорма.Элементы.СписокНоменклатуры.ТекущиеДанные.Код; 
		ПоказатьОповещениеПользователя(,, ТекстСообщения, Картинка,, Ключ);
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция КоличествоСтрокВСписке(НазваниеСписка) // Строка 
	// Комлев АА +++
	СКД = Элементы[НазваниеСписка].ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	НастройкиКД = Элементы[НазваниеСписка].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикКД = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКД = КомпоновщикКД.Выполнить(СКД, НастройкиКД, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКД = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКД.Инициализировать(МакетКД);
	ПроцессорВыводаКД = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	РезультатКД_ТЗ = ПроцессорВыводаКД.Вывести(ПроцессорКД);

	Возврат РезультатКД_ТЗ.Количество();
	// Комлев АА ---
КонецФункции

&НаСервере
Функция ИзменитьЗапросСписокПартийНаСервере()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|РегистрНакопления1Остатки.машина КАК машина,
	|ИндНомер.Цена КАК цена,
	|Комментарии.Комментарий КАК Комментарий,
	|ИндНомер.Код КАК Код,
	|РегистрНакопления1Остатки.индкод КАК индкод,
	|РегистрНакопления1Остатки.Товар КАК Товар,
	|РегистрНакопления1Остатки.машина.Год КАК машинаГод,
	|ИндНомер.АвитоЧастник КАК Конвеер,
	|ИндНомер.Комментарий КАК Комментарий1,
	|ИндНомер.ЦенаПроверена КАК ЦенаПроверена,
	|ИндНомер.Оценка,
	|ИндНомер.ЕстьФото,
	|ИндНомер.ДатаПроверкиЕстьВНаличии КАК ДатаИнвентаризации,
	|ИндНомер.ОтветственныйЕстьВНаличии КАК ОтветственныйЗаИнвентаризацию,
	|ИндНомер.Стеллаж КАК МестоХранения,
	|РегистрНакопления1Остатки.Склад КАК Склад
|ИЗ
	|РегистрНакопления.РегистрНакопления1.Остатки(, Товар = &Товар) КАК РегистрНакопления1Остатки
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Комментарии КАК Комментарии
	|	ПО (Комментарии.Товар = РегистрНакопления1Остатки.Товар)
	|	И (Комментарии.Машина = РегистрНакопления1Остатки.машина)
	|	И (Комментарии.индкод = РегистрНакопления1Остатки.индкод)
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИндНомер КАК ИндНомер
	|	ПО (ИндНомер.индкод = РегистрНакопления1Остатки.индкод)
|ГДЕ
	|ИндНомер.АвитоЧастник = ИСТИНА";
	
	СписокПартий.ТекстЗапроса = ТекстЗапроса;
	
	Возврат ТекстЗапроса; 
КонецФункции

&НаКлиенте
Процедура СписокНоменклатурыНаПереоценкуПриАктивизацииСтроки(Элемент)
	ОбновитьОтборПартий("СписокНоменклатурыНаПереоценку");
КонецПроцедуры

&НаКлиенте
Процедура СписокНомСкладВостановленияПриАктивизацииСтроки(Элемент)
	ОбновитьОтборПартий("СписокНомСкладВостановления");
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьОтборПартий(Таблица)
	
	ТекДанные = Элементы[Таблица].ТекущаяСтрока;

	Если Таблица = "СписокНомСкладВостановления" Тогда  
		ИзменитьЗапросНаСервере1(ТекДанные);
		
	
	ИначеЕСли Таблица = "СписокНомВостДеталей" Тогда 
		ИзменитьЗапросНаСервере2();
		СписокПартий.Параметры.УстановитьЗначениеПараметра("Товар", ТекДанные); 
		
	ИначеЕсли Таблица = "СписокНоменклатуры" ТОгда 
		ИзменитьЗапросНаСервере3(ТекДанные);
	ИначеЕсли Таблица = "СписокНоменклатурыНаПереоценку" ТОгда 
		ИзменитьЗапросСписокПартийНаСервере();
		СписокПартий.Параметры.УстановитьЗначениеПараметра("Товар", ТекДанные);
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВПеремещениеИОткрыть(Команда)
	ПараметрыФормы = Новый Структура("РежимВыбора", Истина);
	
	ОткрытьФорму("Документ.ПеремещениеТоваров.ФормаВыбора", ПараметрыФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры


&НаСервере
Процедура ИзменитьЗапросНаСервере1(ТекДанные)
    	ИзменитьЗапросСписокПартийНаСервере();
    	Строка = СтрЗаменить(СписокПартий.ТекстЗапроса,"Товар = &Товар","Товар = &Товар И Склад = &Склад");
		Строка = СтрЗаменить(Строка,"ГДЕ ИндНомер.АвитоЧастник = ИСТИНА","");
		СписокПартий.ТекстЗапроса = Строка; 
		
		СписокПартий.Параметры.УстановитьЗначениеПараметра("Товар", ТекДанные);
		СписокПартий.Параметры.УстановитьЗначениеПараметра("Склад", Справочники.Склады.НайтиПоКоду("000000022"));
		
КонецПроцедуры

&НаСервере
Процедура ИзменитьЗапросНаСервере2()
    	ИзменитьЗапросСписокПартийНаСервере();
		Строка = СтрЗаменить(СписокПартий.ТекстЗапроса,"ИндНомер.АвитоЧастник = ИСТИНА","ИндНомер.АвитоЧастник = ИСТИНА И ИндНомер.Состояние = ЗНАЧЕНИЕ(Перечисление.Состояние.Восстановленная)");
		СписокПартий.ТекстЗапроса = Строка; 
КонецПроцедуры

&НаСервере
Процедура ИзменитьЗапросНаСервере3(ТекДанные)
    	
    	ИзменитьЗапросСписокПартийНаСервере();
		Строка = СтрЗаменить(СписокПартий.ТекстЗапроса,"Товар = &Товар","Товар = &Товар И НЕ Склад = &Склад");
		СписокПартий.ТекстЗапроса = Строка; 
		
		СписокПартий.Параметры.УстановитьЗначениеПараметра("Товар", ТекДанные);
		СписокПартий.Параметры.УстановитьЗначениеПараметра("Склад", Справочники.Склады.НайтиПоКоду("000000022"));
		
КонецПроцедуры
&НаКлиенте
Процедура СписокНоменклатурыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.СписокНоменклатуры.ТекущиеДанные <> Неопределено Тогда
		ОбновитьОтборПартий("СписокНоменклатуры");
	КонецЕсли;

КонецПроцедуры



&НаКлиенте
Процедура СписокНомВостДеталейПриАктивизацииСтроки(Элемент)
	Если Элементы.СписокНомВостДеталей.ТекущиеДанные <> Неопределено Тогда
		ОбновитьОтборПартий("СписокНомВостДеталей");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокНомСкладВостановления.Параметры.УстановитьЗначениеПараметра("Склад", Справочники.Склады.НайтиПоКоду("000000022"));
	СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("Склад", Справочники.Склады.НайтиПоКоду("000000022"));
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДетальНаСайте1(Команда)
	ОбщДействия.ОткрытьДетальНаСайтеWT10(ЭтаФорма.Элементы.СписокПартий.ТекущиеДанные.индкод);
КонецПроцедуры
	
&НаКлиенте
Процедура ОткрытьКарточкуТовараНаСайте(Команда)

	ОбщДействия.ОткрытьКарточкуТовараНаСайтеWT10(ЭтаФорма.Элементы.СписокНоменклатуры.ТекущиеДанные.Код);
	
КонецПроцедуры


&НаКлиенте
Процедура СписокПартийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтруктураЗаписи = Новый Структура("индкод", ПолучитьиндКод(Элементы.СписокПартий.ТекущиеДанные.индКод));
	МассивСтруктураЗаписи = Новый Массив;
	МассивСтруктураЗаписи.Добавить(СтруктураЗаписи);
	КлючЗаписи = Новый ("РегистрСведенийКлючЗаписи.ИндНомер", МассивСтруктураЗаписи);

	Параметрыформы = Новый Структура("Ключ", КлючЗаписи);                            
		
	ОткрытьФорму("РегистрСведений.ИндНомер.ФормаЗаписи", Параметрыформы);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьиндКод(Код)
	Возврат Справочники.ИндКод.НайтиПоНаименованию(Код);
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Отказ = ЛОЖЬ;
		
		Партия = Новый Структура("индкод,Склад");
		Партия.Вставить("КолвоОстаток",1);
		Структура = ЗаполнитьАвтоИТовар(Элементы.СписокПартий.ТекущиеДанные.индкод);
		Партия.Вставить("Товар",Структура.Товар);
		Партия.Вставить("машина",Структура.машина);
	
		ЗаполнитьЗначенияСвойств(Партия, Элементы.СписокПартий.ТекущиеДанные);
		ДобавитьВПеремещениеНаСервере(ВыбранноеЗначение, Партия, Отказ);
	
		Если Не Отказ Тогда
	
			
		ПараметрыФормы = Новый Структура("НомерСтроки");
		ЗаполнитьЗначенияСвойств(ПараметрыФормы, Партия);
		ПараметрыФормы.Вставить("Ключ", ВыбранноеЗначение);
		ОткрытьФорму("Документ.ПеремещениеТоваров.ФормаОбъекта", ПараметрыФормы);
		
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьАвтоИТовар(индкод)
	Структура = Новый Структура();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РегистрНакопления1Остатки.машина КАК машина,
		|	РегистрНакопления1Остатки.Товар КАК Товар
		|ИЗ
		|	РегистрНакопления.РегистрНакопления1.Остатки(, индкод = &индкод) КАК РегистрНакопления1Остатки";
	
	Запрос.УстановитьПараметр("индкод", индкод);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если НЕ РезультатЗапроса.Пустой() Тогда 
		Выборка.Следующий();
		Структура.Вставить("Товар", Выборка.Товар);
		Структура.Вставить("машина",Выборка.машина);
	Иначе 	
		Структура.Вставить("Товар", Справочники.Номенклатура.ПустаяСсылка());
		Структура.Вставить("машина",Справочники.Машины.ПустаяСсылка());
	КонецЕсли; 
	Возврат Структура;
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьВПеремещениеНаСервере(ДокументПеремещение, Партия,Отказ)
	
	ДокОбъект = ДокументПеремещение.ПолучитьОбъект();
	
	
	Если Партия.Склад <> ДокОбъект.СкладОтправитель Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Этот товар находится на складе [%1], а перемещение выполняется со склада [%2]",
		Партия.Склад,
		ДокОбъект.СкладОтправитель),
		,
		,
		,
		Отказ
		);
		Возврат	
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("Товар", Партия.Товар);
	ПараметрыОтбора.Вставить("Автомобиль", Партия.машина);
	ПараметрыОтбора.Вставить("Партия", Партия.индкод);
	НайденныеСтроки = ДокОбъект.Товары.НайтиСтроки(ПараметрыОтбора);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		НомерСтроки = НайденныеСтроки[0].НомерСтроки;
		
		Партия.Вставить("НомерСтроки", НомерСтроки - 1);
		Возврат	
	КонецЕсли;
	
	НоваяСтрока = ДокОбъект.Товары.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыОтбора);
	НоваяСтрока.Количество = Партия.КолвоОстаток;
	
	Попытка
		
		ДокОбъект.Записать();
		Партия.Вставить("НомерСтроки", НоваяСтрока.НомерСтроки - 1);
		
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрШаблон("Не удалось записать документ %1. %2",
		ДокОбъект,
		ОписаниеОшибки()),
		,
		,
		,
		Отказ
		);
		
	КонецПопытки;
	
	
КонецПроцедуры
