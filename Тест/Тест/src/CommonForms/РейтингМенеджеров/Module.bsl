
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РейтингМенеджеров.Параметры.УстановитьЗначениеПараметра("ВидРасхода",Справочники.ВидыРасходов.НайтиПоКоду("000000041"));
	
	элементы.РейтингМенеджеровКонтроль.Доступность = Пользователи.РолиДоступны("ПолныеПрава,РОП");
	
	ЗаполнитьсреднийИнтервалЗакупаПоКомпании();
	///+ГомзМА 05.07.2023
	//СписокОстатковНаСчёте.Параметры.УстановитьЗначениеПараметра("Дата", ПериодОстатокДенег);
	///-ГомзМА 05.07.2023
	
	
	///+ГомзМА 30.08.2023
	Если ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Найти("Реклама")) Тогда
		Для каждого Подстраница Из Элементы.Подстраницы.ПодчиненныеЭлементы Цикл
			Если Подстраница.Имя = "ПодстраницаОтделРекламы" Тогда
				Элементы[Подстраница.Имя].Видимость = Истина;
			Иначе
				Элементы[Подстраница.Имя].Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	///-ГомзМА 30.08.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ОбновитьСпискиВЦелом(Период.ДатаНачала,период.ДатаОкончания);
	ОбновитьСпискиФинОтделВЧислах(Период.ДатаНачала,Период.ДатаОкончания);
	ОбновитьСпискиотделаКадров(Период.ДатаНачала,Период.ДатаОкончания);
    ОбновитьСпискиФинОтделВДинамике(Период.ДатаНачала,Период.ДатаОкончания); 
	ОбновитьСпискиОКК(Период.ДатаНачала,Период.ДатаОкончания);
	ЗаполнениеПодвала();
    ЗаполнениеПодвалаСотрудники(); 
	ЗаполнениеПодвалаОКК();

	
	ЗаполнитьПодвалВкладкиФинансовыйОтдел();
	
	ПодготовитьСписокКлиентов(); 
	
	ЗаполнениеПодвалаСотрудники(); 
	ЗаполнениеПодвалаОКК();
	ЗаполнениеПодвалаОборот();
	ЗаполнениеПодвалаТовароОборот();
	//ЗаполнениеПодвалаКлиенты();
	ЗаполнениеПодвалаЗарплата();
	///+ГомзМА 03.03.2023
	ЭтаФорма.Модифицированность = Ложь;
	///-ГомзМА 03.03.2023
	
КонецПроцедуры 

&НаКлиенте
Процедура ПериодФинОтделВЧислахПриИзменении(Элемент)
	ОбновитьСпискиФинОтделВЧислах(ПериодФинОтделВЧислах.ДатаНачала,ПериодФинОтделВЧислах.ДатаОкончания);
КонецПроцедуры 

&НаКлиенте
Процедура ПериодДинамикиФинОтделаПриИзменении(Элемент)
	ОбновитьСпискиФинОтделВДинамике(ПериодДинамикиФинОтдела.ДатаНачала,ПериодДинамикиФинОтдела.ДатаОкончания);
	ЗаполнитьПодвалВкладкиФинансовыйОтдел();
КонецПроцедуры   

&НаКлиенте
Процедура СотрудникиПериодПриИзменении(Элемент)
	ОбновитьСпискиотделаКадров(ПериодСотрудники.ДатаНачала,ПериодСотрудники.ДатаОкончания);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьсреднийИнтервалЗакупаПоКомпании()
	запрос = Новый запрос;
	Запрос.текст ="ВЫБРАТЬ
	|	ПродажаЗапчастей.Дата КАК Дата
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	
	Выборка = Запрос.Выполнить().Выгрузить();
	индекс = 0;
	Суммаинтервалов = 0;
	выборка.Колонки.Добавить("Период",Новый ОписаниеТипов("Число"),"Период",);
	Для каждого стр из выборка Цикл
		Если индекс = 0 тогда
			индекс = 1;
			Продолжить;
		Иначе
			Стр.Период = (НачалоДня(Стр.Дата) - НачалоДня(выборка[индекс-1].Дата)) / (60 * 60 * 24);
			индекс = индекс +1;
			
			Суммаинтервалов = Суммаинтервалов + Стр.Период; 
			Если Индекс = выборка.Количество() тогда
				СпоследнейПродажи = (НачалоДня(ТекущаяДата()) - НачалоДня(Стр.Дата)) / (60 * 60 * 24);
				СреднийИнтервалЗакупа = (Суммаинтервалов/(выборка.Количество()-1))*24;
			Иначе
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если СреднийИнтервалЗакупа = 1 Тогда 
		элементы.Декорация17.Заголовок = "час";
	ИначеЕсли СреднийИнтервалЗакупа > 1 и СреднийИнтервалЗакупа < 5 Тогда 
		элементы.Декорация17.Заголовок = "часа";
	Иначе 
		элементы.Декорация17.Заголовок = "часов";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОстатокДенегПриИзменении(Элемент)
	
	///+ГомзМА 05.07.2023
	ОбновитьСписки();
	ЗаполнитьПодвалВкладкиФинансовыйОтдел();
	///-ГомзМА 05.07.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОККПриИзменении(Элемент)
	ОбновитьСпискиОКК(ПериодОКК.ДатаНачала,ПериодОКК.ДатаОкончания);
КонецПроцедуры

&НаКлиенте
Процедура ПериодГрафикиобщиеПриИзменении(Элемент)
	ОбновитьСпискиСотрудников(ПериодГрафикиобщие.ДатаНачала,ПериодГрафикиобщие.ДатаОкончания);
	ОбновитьСпискиФинОтделВДинамике( ПериодГрафикиобщие.ДатаНачала,ПериодГрафикиобщие.ДатаОкончания); 
	ПостроитьГрафикОбщие();
	ПостроитьГрафикСотрудники();
КонецПроцедуры 

&НаКлиенте
Процедура ПериодГрафикиТоварооборотПриИзменении(Элемент)
	ОбновитьСпискиТоварооборот(ПериодГрафикиТоварооборот.ДатаНачала,ПериодГрафикиТоварооборот.ДатаОкончания);
	ПостроитьГрафикТоварооборот();
КонецПроцедуры

&НаКлиенте
Процедура ПериодОКК1ПриИзменении(Элемент)
	ОбновитьСпискиОКК(ПериодОКК.ДатаНачала,ПериодОКК.ДатаОкончания);
	ПостроитьГрафикОКК();
КонецПроцедуры



&НаКлиенте
Процедура СписокСчетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СсылкаДляОткрытия    = Элементы.СписокСчета.ТекущиеДанные[СтрЗаменить(Поле.Имя,Элемент.имя,"")];
	ПараметрыФормы       = Новый Структура("Ключ", СсылкаДляОткрытия);
	Если ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ПриходДенегНасчет") Тогда
		ИмяФормыДокумента="Документ.ПриходДенегНасчет.Форма.ФормаДокумента";
	ИначеЕсли ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ЗаказКлиента") Тогда
		ИмяФормыДокумента="Документ.ЗаказКлиента.Форма.ФормаДокумента";
	ИначеЕсли ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ПродажаЗапчастей") Тогда
		ИмяФормыДокумента="Документ.ПродажаЗапчастей.Форма.ФормаДокумента";
	ИначеЕсли ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ПредварительныйСчет") Тогда
		ИмяФормыДокумента="Документ.ПредварительныйСчет.Форма.ФормаДокумента";
	Иначе
		СтандартнаяОбработка = Истина;
		Возврат;
	КонецЕсли;
	ФормаДокумента = ПолучитьФорму(ИмяФормыДокумента, ПараметрыФормы);
	ФормаДокумента.Открыть();
	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписки()
	ОбновитьСпискиНагрузки();
	ПостроитьГрафики();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСпискиВЦелом(ДатаНачала,ДатаОкончания)
	РейтингМенеджеров.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ДатаНачала);
	РейтингМенеджеров.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",ДатаОкончания);
	РейтингМенеджеров.Параметры.УстановитьЗначениеПараметра("ТекДата",ТекущаяДата());

	
	СписокДоговоров.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ДатаНачала);
	СписокДоговоров.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",ДатаОкончания);
	
	СписокСчета.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ДатаНачала);
	СписокСчета.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",ДатаОкончания);
	
	заявки.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ДатаНачала);
	заявки.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",ДатаОкончания);
	
	
	ПоказателиКладовщиков.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ДатаНачала);
	ПоказателиКладовщиков.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",ДатаОкончания);
	
	СписокБаланс.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ДатаНачала);
	СписокБаланс.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",ДатаОкончания);
	
	СписокЗпПоОтделам.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ДатаНачала);
	СписокЗпПоОтделам.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",ДатаОкончания);

	
	ОбновитьСпискиТоварооборот(ДатаНачала,ДатаОкончания);
	ОбновитьСпискиСотрудников(ДатаНачала,ДатаОкончания);  
	
		МассивРасходов = Новый массив;
	массивРасходов.Добавить(Справочники.ВидыРасходов.НайтиПоКоду("000000042"));
	массивРасходов.Добавить(Справочники.ВидыРасходов.НайтиПоКоду("000000031"));
	массивРасходов.Добавить(Справочники.ВидыРасходов.НайтиПоКоду("000000009"));
	массивРасходов.Добавить(Справочники.ВидыРасходов.НайтиПоКоду("000000033"));
	СписокОбщихПоказателей.Параметры.УстановитьЗначениеПараметра("ВидРасхода",    массивРасходов);

	СписокОбщихПоказателей.Параметры.УстановитьЗначениеПараметра("ФинансовыйСтатус", Справочники.СтатусыФиксацииЗаказаМашин.НайтиПоКоду("000000001"));
	СписокОбщихПоказателей.Параметры.УстановитьЗначениеПараметра("ВидРасхода",Справочники.ВидыРасходов.НайтиПоКоду("000000010"));
	СписокОбщихПоказателей.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ДатаНачала);
	СписокОбщихПоказателей.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",ДатаОкончания);

КонецПроцедуры

&НаСервере
Процедура ОбновитьСпискиСотрудников(ДатаНачала,ДатаОкончания)
	СписокСотрудники.Параметры.УстановитьЗначениеПараметра("ДатаНачала", ДатаНачала);
	СписокСотрудники.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", ДатаОкончания);
КонецПроцедуры

&НаСервере
Процедура ОбновитьСпискиТоварооборот(ДатаНачала,ДатаОкончания)
	МассивРасходов = Новый массив;
	массивРасходов.Добавить(Справочники.ВидыРасходов.НайтиПоКоду("000000042"));
	массивРасходов.Добавить(Справочники.ВидыРасходов.НайтиПоКоду("000000031"));
	массивРасходов.Добавить(Справочники.ВидыРасходов.НайтиПоКоду("000000009"));
	массивРасходов.Добавить(Справочники.ВидыРасходов.НайтиПоКоду("000000033"));
	СписокТоварооборот.Параметры.УстановитьЗначениеПараметра("ВидРасхода",    массивРасходов);
	СписокТоварооборот.Параметры.УстановитьЗначениеПараметра("ДатаНачала", 	  ДатаНачала);
	СписокТоварооборот.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", ДатаОкончания);
КонецПроцедуры



&НаСервере
Процедура ОбновитьСпискиФинОтделВЧислах(ДатаНачала,ДатаОкончания) 
	///+ГомзМА 05.07.2023
	СписокОстатковНаСчёте.Параметры.УстановитьЗначениеПараметра("ДатаНачала", 	ДатаНачала);
	СписокОстатковНаСчёте.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", ДатаОкончания);
	
	Расходы.Параметры.УстановитьЗначениеПараметра("ДатаНачала", ДатаНачала);
	Расходы.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", 	ДатаОкончания);
	
	ВидыРасхода.Параметры.УстановитьЗначениеПараметра("ДатаНачала", 	ДатаНачала);
	ВидыРасхода.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", 	ДатаОкончания);
	///-ГомзМА 05.07.2023 
КонецПроцедуры

&НаСервере
Процедура ОбновитьСпискиФинОтделВДинамике(ДатаНачала,ДатаОкончания)
	СписокДинамикиФинОтдела.Параметры.УстановитьЗначениеПараметра("ДатаНачала", 	ДатаНачала);
	СписокДинамикиФинОтдела.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", 	ДатаОкончания);
	СписокДинамикиФинОтдела.Параметры.УстановитьЗначениеПараметра("ФинансовыйСтатус", Справочники.СтатусыФиксацииЗаказаМашин.НайтиПоКоду("000000001"));
	СписокДинамикиФинОтдела.Параметры.УстановитьЗначениеПараметра("КурсЕвро", 	    ПолучитьКурсыВалют(ТекущаяДата()));
КонецПроцедуры 

&НаСервере
Процедура ОбновитьСпискиОКК(ДатаНачала,ДатаОкончания)
	СписокОтделКК.Параметры.УстановитьЗначениеПараметра("ДатаНачала", 	 ДатаНачала);
	СписокОтделКК.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", ДатаОкончания);
КонецПроцедуры

&НаСервере
Процедура ОбновитьСпискиотделаКадров(ДатаНачала,ДатаОкончания)
	
КонецПроцедуры




&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ОбновитьСписки();
	ПриОткрытииНаСервере();
	//ЗаполнениеПодвала();
ОбновитьСпискиВЦелом(Период.ДатаНачала,период.ДатаОкончания);
	ОбновитьСпискиФинОтделВЧислах(Период.ДатаНачала,Период.ДатаОкончания);
	ОбновитьСпискиотделаКадров(Период.ДатаНачала,Период.ДатаОкончания);
    ОбновитьСпискиФинОтделВДинамике(Период.ДатаНачала,Период.ДатаОкончания); 
	ОбновитьСпискиОКК(Период.ДатаНачала,Период.ДатаОкончания);
	//ЗаполнитьПодвалВкладкиФинансовыйОтдел();
	ПодготовитьСписокКлиентов();
	//ЗаполнениеПодвала();
	//ЗаполнениеПодвалаСотрудники(); 
	//ЗаполнениеПодвалаОКК();
	//ЗаполнениеПодвалаОборот();
	//ЗаполнениеПодвалаТовароОборот();
	//ЗаполнениеПодвалаКлиенты();
	//ЗаполнениеПодвалаЗарплата();
	//СгруппироватьПоТипу(); 
	ОбновитьСпискиНагрузки();
КонецПроцедуры 

&НаКлиенте
Процедура СгруппироватьПоТипу()
ГруппировкаСписка = СписокРасходы.Группировка.Элементы;
ЭлементГруппировки = ГруппировкаСписка.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
ЭлементГруппировки.Поле = Новый ПолеКомпоновкиДанных("Период");
КонецПроцедуры

Процедура ЗаполнениеПодвала()
	Схема = Элементы.РейтингМенеджеров.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.РейтингМенеджеров.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКоличествоАвтомобилей.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКлиентыобработанные.ГоризонтальноеПоложениеВПодвале   = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКоличествоКлиентов.ГоризонтальноеПоложениеВПодвале    = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКоличествоЗвонков.ГоризонтальноеПоложениеВПодвале 	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровСуммаПоступлений.ГоризонтальноеПоложениеВПодвале 	 	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровДлительность.ГоризонтальноеПоложениеВПодвале 			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКолвоПродаж.ГоризонтальноеПоложениеВПодвале 			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровСуммаПродаж.ГоризонтальноеПоложениеВПодвале 			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКолвоЗаявок.ГоризонтальноеПоложениеВПодвале 			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровЗПМенеджера.ГоризонтальноеПоложениеВПодвале 			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровИсходящие.ГоризонтальноеПоложениеВПодвале 			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровВходящие.ГоризонтальноеПоложениеВПодвале 				= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровНаличные.ГоризонтальноеПоложениеВПодвале				= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровБезнал.ГоризонтальноеПоложениеВПодвале 				= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровДельта.ГоризонтальноеПоложениеВПодвале 				= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеров1СуммаПоступлений.ГоризонтальноеПоложениеВПодвале 	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеров1ДоПлана.ГоризонтальноеПоложениеВПодвале 				= ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКоличествоАвтомобилей.ТекстПодвала =  Формат(Результат.Итог("КоличествоАвтомобилей"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКлиентыобработанные.ТекстПодвала   =  Формат(Результат.Итог("Клиентыобработанные"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКоличествоКлиентов.ТекстПодвала    =  Формат(Результат.Итог("КоличествоКлиентов"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКоличествоЗвонков.ТекстПодвала 	 =  Формат(Результат.Итог("КоличествоЗвонков"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровСуммаПоступлений.ТекстПодвала 	 =  Формат(Результат.Итог("СуммаПоступлений"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровДлительность.ТекстПодвала 		 =  Формат(Результат.Итог("Длительность"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКолвоПродаж.ТекстПодвала 			 =  Формат(Результат.Итог("КолвоПродаж"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровСуммаПродаж.ТекстПодвала 			 =  Формат(Результат.Итог("СуммаПродаж"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКолвоЗаявок.ТекстПодвала 		 	 =  Формат(Результат.Итог("КолвоЗаявок"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровЗПМенеджера.ТекстПодвала 			 =  Формат(Результат.Итог("ЗПМенеджера"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровИсходящие.ТекстПодвала 			 =  Формат(Результат.Итог("Исходящие"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровВходящие.ТекстПодвала 			 =  Формат(Результат.Итог("Входящие"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровНаличные.ТекстПодвала 			 =  Формат(Результат.Итог("Наличные"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровБезнал.ТекстПодвала 				 =  Формат(Результат.Итог("Безнал"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровДельта.ТекстПодвала 				 =  Формат(Результат.Итог("Дельта"),"ЧДЦ=0; ЧН=-");
	//Если ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровСуммаРасходом <> Неопределено Тогда
	//ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровСуммаРасходом.ТекстПодвала 	 =  Формат(Результат.Итог("СуммаРасходом"),"ЧДЦ=0; ЧН=-");
	//КонецЕсли;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеров1СуммаПоступлений.ТекстПодвала 	 =  Формат(Результат.Итог("СуммаПоступлений"),"ЧДЦ=0; ЧН=-");
	//ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеров1ДоПлана.ТекстПодвала 	     	 =  Формат(Результат.Итог("ДоПлана"),"ЧДЦ=0; ЧН=-");
	
	
	Схема = Элементы.СписокСчета.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокСчета.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСчетаСуммаПрихода.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСчетаСуммаПродажи.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСчетаСуммаЗаявки.ГоризонтальноеПоложениеВПодвале  = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСчетаСуммаСчёта.ГоризонтальноеПоложениеВПодвале 	 = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСчетаСуммаСчёта.ТекстПодвала    =  Формат(Результат.Итог("СуммаСчёта"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСчетаСуммаЗаявки.ТекстПодвала   =  Формат(Результат.Итог("СуммаЗаявки"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСчетаСуммаПродажи.ТекстПодвала  =  Формат(Результат.Итог("СуммаПродажи"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСчетаСуммаПрихода.ТекстПодвала  =  Формат(Результат.Итог("СуммаПрихода"),"ЧДЦ=0; ЧН=-"); 
	
	Схема = Элементы.ПоказателиКладовщиков.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ПоказателиКладовщиков.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковКомплектовка.ГоризонтальноеПоложениеВПодвале    = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковПоступления.ГоризонтальноеПоложениеВПодвале 	  = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковКарточки.ГоризонтальноеПоложениеВПодвале   	  = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковСрЦена.ГоризонтальноеПоложениеВПодвале 	 	  = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковЦена.ГоризонтальноеПоложениеВПодвале 	 		  = ГоризонтальноеПоложениеЭлемента.Право;
	
	
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковКомплектовка.ТекстПодвала =  Формат(Результат.Итог("Комплектовка"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковПоступления.ТекстПодвала  =  Формат(Результат.Итог("Поступления"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковКарточки.ТекстПодвала     =  Формат(Результат.Итог("Карточки"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковСрЦена.ТекстПодвала 	    =  Формат(Результат.Итог("СрЦена"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ПоказателиКладовщиковЦена.ТекстПодвала 	    =  Формат(Результат.Итог("Цена"),"ЧДЦ=0; ЧН=-");
	
	
	Схема = Элементы.Заявки.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.Заявки.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличестоОбщее.ГоризонтальноеПоложениеВПодвале    		= ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаОбщая.ГоризонтальноеПоложениеВПодвале    			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоДумает.ГоризонтальноеПоложениеВПодвале    		= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаДумает.ГоризонтальноеПоложениеВПодвале    			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоЖдёмДенег.ГоризонтальноеПоложениеВПодвале  	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаЖдёмДенег.ГоризонтальноеПоложениеВПодвале    		= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоНетВНаличии.ГоризонтальноеПоложениеВПодвале    = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаНетВНаличии.ГоризонтальноеПоложениеВПодвале    		= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоОжидание.ГоризонтальноеПоложениеВПодвале    	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаОжидание.ГоризонтальноеПоложениеВПодвале    		= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоОтказ.ГоризонтальноеПоложениеВПодвале    		= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаОтказ.ГоризонтальноеПоложениеВПодвале    			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоПродажа.ГоризонтальноеПоложениеВПодвале    	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаПродажа.ГоризонтальноеПоложениеВПодвале    			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСостояние.ГоризонтальноеПоложениеВПодвале    			= ГоризонтальноеПоложениеЭлемента.Право;    
	
	
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличестоОбщее.ТекстПодвала    		= Формат(Результат.Итог("КоличестоОбщее"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаОбщая.ТекстПодвала    			= Формат(Результат.Итог("СуммаОбщая"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоДумает.ТекстПодвала    	= Формат(Результат.Итог("КоличествоДумает"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаДумает.ТекстПодвала    			= Формат(Результат.Итог("СуммаДумает"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоЖдёмДенег.ТекстПодвала  	= Формат(Результат.Итог("КоличествоЖдёмДенег"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаЖдёмДенег.ТекстПодвала    		= Формат(Результат.Итог("СуммаЖдёмДенег"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоНетВНаличии.ТекстПодвала   = Формат(Результат.Итог("КоличествоНетВНаличии"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаНетВНаличии.ТекстПодвала  		= Формат(Результат.Итог("КоличествоНетВНаличии"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоОжидание.ТекстПодвала    	= Формат(Результат.Итог("КоличествоОжидание"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаОжидание.ТекстПодвала    		= Формат(Результат.Итог("СуммаОжидание"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоОтказ.ТекстПодвала    		= Формат(Результат.Итог("КоличествоОтказ"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаОтказ.ТекстПодвала    			= Формат(Результат.Итог("СуммаОтказ"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиКоличествоПродажа.ТекстПодвала    	= Формат(Результат.Итог("КоличествоПродажа"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСуммаПродажа.ТекстПодвала    		= Формат(Результат.Итог("СуммаПродажа"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ЗаявкиСостояние.ТекстПодвала    			= Формат(Результат.Итог("Состояние"),"ЧДЦ=0; ЧН=-");   
	
	
	Схема = Элементы.СписокБаланс.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокБаланс.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансКолвоПриход.ГоризонтальноеПоложениеВПодвале    		= ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансСуммаПрихода.ГоризонтальноеПоложениеВПодвале    		= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансКоличество.ГоризонтальноеПоложениеВПодвале    			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансСумма.ГоризонтальноеПоложениеВПодвале    				= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансБалансТовара.ГоризонтальноеПоложениеВПодвале  			= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансБалансДеньги.ГоризонтальноеПоложениеВПодвале    		= ГоризонтальноеПоложениеЭлемента.Право;
	//ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансБалансПоПоступлению.ГоризонтальноеПоложениеВПодвале    = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансКолвоПоПоступлению.ГоризонтальноеПоложениеВПодвале    	= ГоризонтальноеПоложениеЭлемента.Право;   
	
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансКолвоПриход.ТекстПодвала    		= Формат(Результат.Итог("КолвоПриход"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансСуммаПрихода.ТекстПодвала    		= Формат(Результат.Итог("СуммаПрихода"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансКоличество.ТекстПодвала    		= Формат(Результат.Итог("Количество"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансСумма.ТекстПодвала    				= Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансБалансТовара.ТекстПодвала  		= Формат(Результат.Итог("БалансТовара"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансБалансДеньги.ТекстПодвала    		= Формат(Результат.Итог("БалансДеньги"),"ЧДЦ=0; ЧН=-");
	//ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансБалансПоПоступлению.ТекстПодвала   = Формат(Результат.Итог("БалансПоПоступлению"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокБалансКолвоПоПоступлению.ТекстПодвала    = Формат(Результат.Итог("КолвоПоПоступлению"),"ЧДЦ=0; ЧН=-");
	
	
	Схема = Элементы.СписокДоговоров.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокДоговоров.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДоговоровколичество.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДоговоровколичество.ТекстПодвала    = Формат(Результат.Итог("Количество"),"ЧДЦ=0; ЧН=-");
//	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеров1СуммаПоступлений.ТекстПодвала 	 =  Формат(Результат.Итог("СуммаПоступлений"),"ЧДЦ=0; ЧН=-");
	
	Схема = Элементы.РейтингМенеджеров2.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.РейтингМенеджеров2.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровВРаботе1.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровСуммаВРаботе1.ГоризонтальноеПоложениеВПодвале   = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровперерыв1.ГоризонтальноеПоложениеВПодвале    = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКоличествоЗвонков1.ГоризонтальноеПоложениеВПодвале 	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровВходящие1.ГоризонтальноеПоложениеВПодвале 	 	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровДлительностьВходящих1.ГоризонтальноеПоложениеВПодвале 	 	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровИсходящие1.ГоризонтальноеПоложениеВПодвале 	 	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровДлительностьИсходящих1.ГоризонтальноеПоложениеВПодвале 	 	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровДлительность1.ГоризонтальноеПоложениеВПодвале 	 	= ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровВРаботе1.ТекстПодвала 		 	 =  Формат(Результат.Итог("ВРаботе"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровСуммаВРаботе1.ТекстПодвала 			 =  Формат(Результат.Итог("СуммаВРаботе"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровперерыв1.ТекстПодвала 			 =  Формат(Результат.Итог("перерыв"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровКоличествоЗвонков1.ТекстПодвала 			 =  Формат(Результат.Итог("КоличествоЗвонков"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровВходящие1.ТекстПодвала 			 =  Формат(Результат.Итог("Входящие"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровДлительностьВходящих1.ТекстПодвала 				 =  Формат(Результат.Итог("ДлительностьВходящих"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровИсходящие1.ТекстПодвала 				 =  Формат(Результат.Итог("Исходящие"),"ЧДЦ=0; ЧН=-");  
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровДлительностьИсходящих1.ТекстПодвала 				 =  Формат(Результат.Итог("ДлительностьИсходящих"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.РейтингМенеджеровДлительность1.ТекстПодвала 				 =  Формат(Результат.Итог("Длительность"),"ЧДЦ=0; ЧН=-");

	


КонецПроцедуры

Процедура ЗаполнениеПодвалаСотрудники()
    Схема = Элементы.СписокСотрудники.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокСотрудники.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудникиВыручка.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудникиКоличествоСотрудников.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудникиПроизводительность.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудникиВыручка.ТекстПодвала               = Формат(Результат.Итог("Выручка"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудникиКоличествоСотрудников.ТекстПодвала = Формат(Результат.Итог("КоличествоСотрудников"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудникиПроизводительность.ТекстПодвала    = Формат(Результат.Итог("Производительность"),"ЧДЦ=0; ЧН=-"); 
/////////////////////////////////////////////////////////////////////////
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудники1Выручка.ГоризонтальноеПоложениеВПодвале                = ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудники1Мощность.ГоризонтальноеПоложениеВПодвале               = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудники1ПроизводительностьВЧас.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудники1Выручка.ТекстПодвала                = Формат(Результат.Итог("Выручка"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудники1Мощность.ТекстПодвала               = Формат(Результат.Итог("Мощность"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокСотрудники1ПроизводительностьВЧас.ТекстПодвала = Формат(Результат.Итог("ПроизводительностьВЧас"),"ЧДЦ=0; ЧН=-"); 	
КонецПроцедуры

Процедура ЗаполнениеПодвалаОКК()
    Схема = Элементы.СписокОтделКК1.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокОтделКК1.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК1КоличествоЗвонков.ГоризонтальноеПоложениеВПодвале   = ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК1КоличествоСообщений.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК1Суммаобращений.ГоризонтальноеПоложениеВПодвале      = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК1КоличествоЗвонков.ТекстПодвала   = Формат(Результат.Итог("КоличествоЗвонков"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК1КоличествоСообщений.ТекстПодвала = Формат(Результат.Итог("КоличествоСообщений"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК1Суммаобращений.ТекстПодвала      = Формат(Результат.Итог("Суммаобращений"),"ЧДЦ=0; ЧН=-"); 
/////////////////////////////////////////////////////////////////////////
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК2КоличествоЗаявок.ГоризонтальноеПоложениеВПодвале  = ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК2КоличествоОтказов.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК2КоличествоПродаж.ГоризонтальноеПоложениеВПодвале  = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК2Суммаобращений.ГоризонтальноеПоложениеВПодвале    = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК2КоличествоЗаявок.ТекстПодвала  = Формат(Результат.Итог("КоличествоЗаявок"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК2КоличествоОтказов.ТекстПодвала = Формат(Результат.Итог("КоличествоОтказов"),"ЧДЦ=0; ЧН=-"); 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК2КоличествоПродаж.ТекстПодвала  = Формат(Результат.Итог("КоличествоПродаж"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК2Суммаобращений.ТекстПодвала    = Формат(Результат.Итог("Суммаобращений"),"ЧДЦ=0; ЧН=-");
//////////////////////////////////////////////////////////////////////////	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК3СуммаЗаявок.ГоризонтальноеПоложениеВПодвале    = ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК3СуммаОтказов.ГоризонтальноеПоложениеВПодвале   = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК3СуммаПродаж.ГоризонтальноеПоложениеВПодвале    = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК3Суммаобращений.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК3СуммаЗаявок.ТекстПодвала    = Формат(Результат.Итог("СуммаЗаявок"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК3СуммаОтказов.ТекстПодвала   = Формат(Результат.Итог("СуммаОтказов"),"ЧДЦ=0; ЧН=-"); 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК3СуммаПродаж.ТекстПодвала    = Формат(Результат.Итог("СуммаПродаж"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОтделКК3Суммаобращений.ТекстПодвала = Формат(Результат.Итог("Суммаобращений"),"ЧДЦ=0; ЧН=-");

КонецПроцедуры

Процедура ЗаполнениеПодвалаОборот()
    Схема = Элементы.СписокДинамикиФинОтдела.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокДинамикиФинОтдела.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтделаБалансПриход.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтделаБалансРасход.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтделаБалансОборот.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтделаБалансПриход.ТекстПодвала = Формат(Результат.Итог("БалансПриход"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтделаБалансРасход.ТекстПодвала = Формат(Результат.Итог("БалансРасход"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтделаБалансОборот.ТекстПодвала = Формат(Результат.Итог("БалансОборот"),"ЧДЦ=0; ЧН=-"); 
/////////////////////////////////////////////////////////////////////////
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтдела1БалансПриход.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтдела1БалансРасход.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтдела1БалансОборот.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтдела1БалансПриход.ТекстПодвала = Формат(Результат.Итог("БалансПриход"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтдела1БалансРасход.ТекстПодвала = Формат(Результат.Итог("БалансРасход"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокДинамикиФинОтдела1БалансОборот.ТекстПодвала = Формат(Результат.Итог("БалансОборот"),"ЧДЦ=0; ЧН=-");	
КонецПроцедуры 

Процедура ЗаполнениеПодвалаТовароОборот()
    Схема = Элементы.СписокТоварооборот.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокТоварооборот.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборотСумма.ГоризонтальноеПоложениеВПодвале             = ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборотСуммаПроизводство.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборотСуммаРеализация.ГоризонтальноеПоложениеВПодвале   = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборотСумма.ТекстПодвала             = Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборотСуммаПроизводство.ТекстПодвала = Формат(Результат.Итог("СуммаПроизводство"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборотСуммаРеализация.ТекстПодвала   = Формат(Результат.Итог("СуммаРеализация"),"ЧДЦ=0; ЧН=-"); 
/////////////////////////////////////////////////////////////////////////
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборот1КолвоКонечныйОстаток.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборот1КолвоПроизводство.ГоризонтальноеПоложениеВПодвале    = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборот1КоличествоРеализация.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборот1КолвоКонечныйОстаток.ТекстПодвала = Формат(Результат.Итог("КолвоКонечныйОстаток"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборот1КолвоПроизводство.ТекстПодвала    = Формат(Результат.Итог("КолвоПроизводство"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокТоварооборот1КоличествоРеализация.ТекстПодвала = Формат(Результат.Итог("КоличествоРеализация"),"ЧДЦ=0; ЧН=-");	
КонецПроцедуры

Процедура ЗаполнениеПодвалаКлиенты()
    Схема = Элементы.ТаблицаКлиенты.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ТаблицаКлиенты.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ТаблицаКлиентыЦелевые.ГоризонтальноеПоложениеВПодвале        = ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.ТаблицаКлиентыАктивные.ГоризонтальноеПоложениеВПодвале       = ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.ТаблицаКлиентыЛояльные.ГоризонтальноеПоложениеВПодвале       = ГоризонтальноеПоложениеЭлемента.Право; 
	ЭтотОбъект.ЭтаФорма.Элементы.ТаблицаКлиентыПотенциальные.ГоризонтальноеПоложениеВПодвале  = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.ТаблицаКлиентыЦелевые.ТекстПодвала        = Формат(Результат.Итог("Целевые"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ТаблицаКлиентыАктивные.ТекстПодвала       = Формат(Результат.Итог("Активные"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ТаблицаКлиентыЛояльные.ТекстПодвала       = Формат(Результат.Итог("Лояльные"),"ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.ТаблицаКлиентыПотенциальные.ТекстПодвала  = Формат(Результат.Итог("Потенциальные"),"ЧДЦ=0; ЧН=-");
КонецПроцедуры  

Процедура ЗаполнениеПодвалаЗарплата()
    Схема = Элементы.СписокЗпПоОтделам.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокЗпПоОтделам.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокЗпПоОтделамСумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право; 
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокЗпПоОтделамСумма.ТекстПодвала = Формат(Результат.Итог("сумма"),"ЧДЦ=0; ЧН=-");
КонецПроцедуры




&НаСервере
Процедура ЗаполнитьПодвалВкладкиФинансовыйОтдел()
	
	///+ГомзМА 05.07.2023
	//Динамический список СписокОстатковНаСчёте
	Схема = Элементы.СписокОстатковНаСчёте.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокОстатковНаСчёте.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеБалансОстаток.ГоризонтальноеПоложениеВПодвале 		= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеБалансОстатокНаДату.ГоризонтальноеПоложениеВПодвале 	= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеРасход.ГоризонтальноеПоложениеВПодвале 				= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеСуммаДокумента.ГоризонтальноеПоложениеВПодвале 		= ГоризонтальноеПоложениеЭлемента.Право;
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеПрибыль.ГоризонтальноеПоложениеВПодвале 				= ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеБалансОстаток.ТекстПодвала  		=  Формат(Результат.Итог("БалансОстаток"), "ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеБалансОстатокНаДату.ТекстПодвала  =  Формат(Результат.Итог("БалансОстатокНаДату"), "ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеСуммаДокумента.ТекстПодвала 		=  Формат(Результат.Итог("СуммаДокумента"), "ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеРасход.ТекстПодвала  		  		=  Формат(Результат.Итог("Расход"), "ЧДЦ=0; ЧН=-");
	ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеПрибыль.ТекстПодвала  		  	=  Формат(Результат.Итог("Прибыль"), "ЧДЦ=0; ЧН=-");
	
	//Динамический список Расходы
	Схема = Элементы.Расходы.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.Расходы.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.РасходыСумма.ГоризонтальноеПоложениеВПодвале 		= ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.РасходыСумма.ТекстПодвала  =  Формат(Результат.Итог("Сумма"), "ЧДЦ=0; ЧН=-");
	АктуальныйОстаток                                       =  ПолучитьАктуальныйОстаток();
	Долги                                                   =  ПолучитьАктуальныйДолг();
	//Динамический список ВидыРасхода
	Схема = Элементы.ВидыРасхода.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ВидыРасхода.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ЭтотОбъект.ЭтаФорма.Элементы.ВидыРасходаСумма.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	
	ЭтотОбъект.ЭтаФорма.Элементы.ВидыРасходаСумма.ТекстПодвала 	=  Формат(Результат.Итог("Сумма"), "ЧДЦ=0; ЧН=-");
	///-ГомзМА 05.06.2023
	
КонецПроцедуры

Функция ПолучитьАктуальныйОстаток()
	Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	БалансОстатки.БалансОстаток КАК БалансОстаток
	|ИЗ
	|	РегистрНакопления.Баланс.Остатки КАК БалансОстатки";
	Выборка = Запрос.Выполнить().Выбрать();
	выборка.Следующий();
	Возврат Выборка.БалансОстаток;
КонецФункции

Функция ПолучитьАктуальныйДолг()
	Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(ФиксацияЗаказаМашин.СтоимостьАвтоЕвро) КАК СтоимостьАвтоЕвро
	|ИЗ
	|	Документ.ФиксацияЗаказаМашин КАК ФиксацияЗаказаМашин
	|ГДЕ
	|	ФиксацияЗаказаМашин.Статус = &Статус";
	Запрос.УстановитьПараметр("Статус",Справочники.СтатусыФиксацииЗаказаМашин.НайтиПоКоду("000000001"));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		выборка.Следующий();
		Возврат (Выборка.СтоимостьАвтоЕвро*ПолучитьКурсыВалют(ТекущаяДата()));
	Иначе
		Возврат 0;
	КонецЕсли;	
КонецФункции



&НаКлиенте
Процедура РейтингМенеджеровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.имя = "РейтингМенеджеровКонтроль" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = Элементы.РейтингМенеджеров.ТекущиеДанные;
		ТекущийМенеджер = Элементы.РейтингМенеджеров.ТекущиеДанные.Менеджер;
		Если ТекущиеДанные <> Неопределено Тогда
			Если ТекущиеДанные.Контроль Тогда
				СнятьКонтроль(ТекущийМенеджер);
			Иначе
				ПоставитьКонтроль(ТекущийМенеджер);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	//Параметр в динамическом списке нужно обновить
	//Список.Параметры.УстановитьЗначениеПараметра("ВыбраннаяЗапись", ВыбраннаяЗапись);
	
	Элементы.РейтингМенеджеров.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура СнятьКонтроль(Менеджер)
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДополнительныеНомера.Добавочный КАК Добавочный,
	|	ДополнительныеНомера.Менеджер КАК Менеджер,
	|	ДополнительныеНомера.Контроль КАК Контроль
	|ИЗ
	|	РегистрСведений.ДополнительныеНомера КАК ДополнительныеНомера
	|ГДЕ
	|	ДополнительныеНомера.Менеджер = &Менеджер";
	Запрос.УстановитьПараметр("Менеджер",Менеджер);
	Выборка = запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Запись = РегистрыСведений.ДополнительныеНомера.СоздатьМенеджерЗаписи();
	Запись.Менеджер   = Выборка.Менеджер;
	Запись.Добавочный = Выборка.Добавочный;
	Запись.Контроль   = Ложь;
	
	Запись.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ПоставитьКонтроль(Менеджер)
	Запрос = новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДополнительныеНомера.Добавочный КАК Добавочный,
	|	ДополнительныеНомера.Менеджер КАК Менеджер,
	|	ДополнительныеНомера.Контроль КАК Контроль
	|ИЗ
	|	РегистрСведений.ДополнительныеНомера КАК ДополнительныеНомера
	|ГДЕ
	|	ДополнительныеНомера.Менеджер = &Менеджер";
	Запрос.УстановитьПараметр("Менеджер",Менеджер);
	Выборка = запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Запись = РегистрыСведений.ДополнительныеНомера.СоздатьМенеджерЗаписи();
	Запись.Менеджер   = Выборка.Менеджер;
	Запись.Добавочный = Выборка.Добавочный;
	Запись.Контроль   = Истина;
	
	Запись.Записать();
	
КонецПроцедуры


&НаСервере
Процедура ВкладкиПриСменеСтраницыНаСервере()
	
	///+ГомзМА 04.07.2023
	//Если ТекущаяСтраница = Элементы.ВкладкаОстатокДенег Тогда
	//Схема = Элементы.СписокОстатковНаСчёте.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	//Настройки = Элементы.СписокОстатковНаСчёте.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	//КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	//ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	//ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	//Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//
	//
	//ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеБалансОстаток.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	//
	//
	//ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеБалансОстаток.ТекстПодвала  =  Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	//КонецЕсли;
	///-ГомзМА 04.07.2023
	
КонецПроцедуры


&НаКлиенте
Процедура ВкладкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	///+ГомзМА 04.07.2023
	//	Если ТекущаяСтраница = Элементы.ВкладкаОстатокДенег Тогда
	//Схема = Элементы.СписокОстатковНаСчёте.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	//Настройки = Элементы.СписокОстатковНаСчёте.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	//КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	//ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	//ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	//ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	//Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//
	//
	//ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеБалансОстаток.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	//
	//
	//ЭтотОбъект.ЭтаФорма.Элементы.СписокОстатковНаСчётеБалансОстаток.ТекстПодвала  =  Формат(Результат.Итог("Сумма"),"ЧДЦ=0; ЧН=-");
	//	КонецЕсли;
	///-ГомзМА 04.07.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРасходПриИзменении(Элемент)
	
	///+ГомзМА 05.07.2023
	ОбновитьСписки();
	ЗаполнитьПодвалВкладкиФинансовыйОтдел();
	///-ГомзМА 05.07.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодВидРасходаПриИзменении(Элемент)
	
	///+ГомзМА 05.07.2023
	ОбновитьСписки();
	ЗаполнитьПодвалВкладкиФинансовыйОтдел();
	///-ГомзМА 05.07.2023
	
КонецПроцедуры

&НаКлиенте
Процедура ПодстраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	///+ГомзМА 05.07.2023
	Если ТекущаяСтраница = Элементы.ПодстраницаФинансовыйОтдел Тогда
		ЗаполнитьПодвалВкладкиФинансовыйОтдел();
		//ЗаполнитьТЗПоступлениеПоНаправлению();
	КонецЕсли;
	
	Если ТекущаяСтраница = Элементы.ПодстраницаГрафики Тогда
		ОбновитьСпискиСотрудников(ПериодГрафикиобщие.ДатаНачала,ПериодГрафикиобщие.ДатаОкончания);
		ОбновитьСпискиФинОтделВДинамике( ПериодГрафикиобщие.ДатаНачала,ПериодГрафикиобщие.ДатаОкончания); 
		ПостроитьГрафикОбщие();
		ПостроитьГрафикСотрудники();
		
		ОбновитьСпискиТоварооборот(ПериодГрафикиТоварооборот.ДатаНачала,ПериодГрафикиТоварооборот.ДатаОкончания);
		ПостроитьГрафикТоварооборот();
		
		ОбновитьСпискиОКК(ПериодОКК.ДатаНачала,ПериодОКК.ДатаОкончания);
		ПостроитьГрафикОКК();
	КонецЕсли;	
	///-ГомзМА 05.07.2023
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьТЗПоступлениеПоНаправлению()
	
	///+ГомзМА 06.07.2023
	ТаблицаЗначений = Новый ТаблицаЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриходДенегНаСчет.Счет КАК Счет
	|ИЗ
	|	Документ.ПриходДенегНаСчет КАК ПриходДенегНаСчет
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходДенегНаСчет.Счет";
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	ТаблицаЗначений.Колонки.Добавить("Направление");
	Пока РезультатЗапроса.Следующий() Цикл
		//ТаблицаЗначений.Колонки.Добавить(РезультатЗапроса.Счет.Наименование);
		ТаблицаЗначений.Колонки.Добавить("ИПТрофимовВЮрс");
		
		
		
	КонецЦикла;
	///-ГомзМА 06.07.2023
	
КонецПроцедуры



&НаСервере
Функция ПолучитьКурсыВалют(ДатаЗагрузки) 
	Прокси = WSСсылки.DailyInfo.СоздатьWSПрокси(
	"http://web.cbr.ru/", "DailyInfo", "DailyInfoSoap");
	ТипWSПараметра = Прокси.ФабрикаXDTO.паКеты.Получить(
	"http://web.cbr.ru/").Получить("GetCursOnDate");
	wsПараметр = Прокси.ФабрикаXDTO.Создать(ТипWSПараметра);
	wsПараметр.On_Date = ДатаЗагрузки;  
	Попытка
	КурсыВалют = Прокси.GetCursOnDate(WSПараметр);
	Для каждого Элемент из КурсыВалют.GetCursOnDateResult.diffgram.ValuteData.ValuteCursOnDate Цикл
		НоваяСтрокаТз = ТаблицаКурсовВалюты.Добавить();
		НоваяСтрокаТз.НазваниеВалюты     = Элемент.Vname;
		НоваяСтрокаТз.Номинал            = Элемент.Vnom;
		НоваяСтрокаТз.ЦифровойКодВалюты  = Элемент.Vcode;
		НоваяСтрокаТз.СимвольныйКодВалюты = Элемент.VChCode;
		НоваяСтрокаТз.КурсВалюты         = Элемент.VCurs;
		Если Элемент.Vcode = "978" тогда
			Возврат Число(Элемент.VCurs);
		КонецЕсли;
		
	КонецЦикла;
Исключение
	Возврат 100;
	КонецПопытки;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьКурс(Команда)
	ТаблицаКурсовВалюты.Очистить();
	ПолучитьКурсыВалют(ТекущаяДата());
КонецПроцедуры


&НаСервере
Процедура ПостроитьГрафики()
	
КонецПроцедуры 

&НаСервере
Процедура ПостроитьГрафикОбщие()
	Схема = Элементы.СписокДинамикиФинОтдела.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокДинамикиФинОтдела.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ГрафикДинамикиКомпании.Очистить();	
	СерияПриход = ГрафикДинамикиКомпании.Серии.Добавить("Прибыль"); 
	СерияРасход = ГрафикДинамикиКомпании.Серии.Добавить("Расход");
	СерияОборот = ГрафикДинамикиКомпании.Серии.Добавить("Выручка");	
	Для каждого стр из Результат Цикл
		Точка = ГрафикДинамикиКомпании.УстановитьТочку(стр.ПериодМесяц);
		
		ГрафикДинамикиКомпании.УстановитьЗначение(Точка, СерияПриход, стр.БалансПриход);
		ГрафикДинамикиКомпании.УстановитьЗначение(Точка, СерияРасход, стр.БалансРасход);
		ГрафикДинамикиКомпании.УстановитьЗначение(Точка, СерияОборот, стр.БалансОборот);		
	КонецЦикла; 
КонецПроцедуры  

&НаСервере
Процедура ПостроитьГрафикСотрудники()
	Схема = Элементы.СписокСотрудники.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокСотрудники.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ДиаграммаСотрудники.Очистить();	
	СерияКолво = ДиаграммаСотрудники.Серии.Добавить("Кол-во сотрудников"); 
	СерияЗП = ДиаграммаСотрудники.Серии.Добавить("Сумма ЗП (млн)");               
	СерияПрвть = ДиаграммаСотрудники.Серии.Добавить("Производительность(тыс.) ₽/чел.");
	СерияМощь = ДиаграммаСотрудники.Серии.Добавить("Мощность (тыс. часов)");
	
	Для каждого стр из Результат Цикл
		Точка = ДиаграммаСотрудники.УстановитьТочку(стр.Период);
		
		ДиаграммаСотрудники.УстановитьЗначение(Точка, СерияКолво, стр.КоличествоСотрудников);
		ДиаграммаСотрудники.УстановитьЗначение(Точка, СерияЗП,    стр.СуммаЗП/1000000);
		ДиаграммаСотрудники.УстановитьЗначение(Точка, СерияПрвть, стр.Производительность/1000);
		ДиаграммаСотрудники.УстановитьЗначение(Точка, СерияМощь,  стр.Мощность/1000);
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Процедура ПостроитьГрафикТоварооборот()
	Схема = Элементы.СписокТоварооборот.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокТоварооборот.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ДиаграммаТоварооборотСумма.Очистить();
	ДиаграммаТоварооборотКоличество.Очистить();
	
	СерияКолвоПрво    = ДиаграммаТоварооборотКоличество.Серии.Добавить("Кол-во Произведено"); 
	СерияКолвоРеализ  = ДиаграммаТоварооборотКоличество.Серии.Добавить("Кол-во Реализовано");               
	СерияКолвоОстаток = ДиаграммаТоварооборотКоличество.Серии.Добавить("Остаток запчастей");
	
	СерияСуммаЗакуп    = ДиаграммаТоварооборотСумма.Серии.Добавить("Сумма закупа");
	СерияСуммаПрво     = ДиаграммаТоварооборотСумма.Серии.Добавить("Сумма производства"); 
	СерияСуммаРеализ   = ДиаграммаТоварооборотСумма.Серии.Добавить("Сумма реализации");
	
	
	Для каждого стр из Результат Цикл
		Точка1 = ДиаграммаТоварооборотСумма.УстановитьТочку(стр.Период);
		Точка2 = ДиаграммаТоварооборотКоличество.УстановитьТочку(стр.Период);
		
		ДиаграммаТоварооборотКоличество.УстановитьЗначение(Точка2, СерияКолвоПрво, стр.КолвоПроизводство);
		ДиаграммаТоварооборотКоличество.УстановитьЗначение(Точка2, СерияКолвоРеализ, стр.КоличествоРеализация);
		ДиаграммаТоварооборотКоличество.УстановитьЗначение(Точка2, СерияКолвоОстаток, стр.КолвоКонечныйОстаток);
		
		ДиаграммаТоварооборотСумма.УстановитьЗначение(Точка1, СерияСуммаЗакуп,  стр.Сумма);
		ДиаграммаТоварооборотСумма.УстановитьЗначение(Точка1, СерияСуммаПрво,   стр.СуммаПроизводство);
		ДиаграммаТоварооборотСумма.УстановитьЗначение(Точка1, СерияСуммаРеализ, стр.СуммаРеализация);	
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Процедура ПостроитьГрафикОКК()
	Схема = Элементы.СписокОтделКК.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокОтделКК.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ДиаграммаКонверсия.Очистить();
	ДиаграммаСуммыЗаявок.Очистить();
	
	СерияКоличествоЗвонков    = ДиаграммаКонверсия.Серии.Добавить("Количество Звонков"); 
	СерияКоличествоСообщений  = ДиаграммаКонверсия.Серии.Добавить("Количество Сообщений");               
	СерияКоличествоЗаявок     = ДиаграммаКонверсия.Серии.Добавить("Количество Заявок");
	СерияКоличествоПродаж     = ДиаграммаКонверсия.Серии.Добавить("Количество Продаж");
	СерияКоличествоОтказов    = ДиаграммаКонверсия.Серии.Добавить("Количество Отказов");
	
	СерияСуммаЗаявок    = ДиаграммаСуммыЗаявок.Серии.Добавить("СуммаЗаявок");	              
	
	Для каждого стр из Результат Цикл
		Точка1 = ДиаграммаСуммыЗаявок.УстановитьТочку(стр.Период);
		Точка2 = ДиаграммаКонверсия.УстановитьТочку(стр.Период);
		
		ДиаграммаКонверсия.УстановитьЗначение(Точка2, СерияКоличествоЗвонков, стр.КоличествоЗвонков);
		ДиаграммаКонверсия.УстановитьЗначение(Точка2, СерияКоличествоСообщений, стр.КоличествоСообщений);
		ДиаграммаКонверсия.УстановитьЗначение(Точка2, СерияКоличествоЗаявок, стр.КоличествоЗаявок);
		ДиаграммаКонверсия.УстановитьЗначение(Точка2, СерияКоличествоПродаж, стр.КоличествоПродаж);
		ДиаграммаКонверсия.УстановитьЗначение(Точка2, СерияКоличествоОтказов, стр.КоличествоОтказов);
		
		ДиаграммаСуммыЗаявок.УстановитьЗначение(Точка1, СерияСуммаЗаявок,  стр.СуммаЗаявок);	
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ПодготовитьСписокКлиентов()	// Сергеев +000003849
	ТекстЗапроса = ТекстЗапросаКлиентов();
	//Клиенты.ТекстЗапроса = ТекстЗапроса;			
	
	
	
	запрос = Новый запрос;
	Запрос.текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Датаокончания", Период.Датаокончания);
	
	НачальноеКоличествоКлиентов = ПолучитьКоличествоЦелевыхДоПериода(Период.ДатаНачала); 
	Выборка = Запрос.Выполнить().Выгрузить();
	Суммаинтервалов = 0;
	КоличствоЦелевых = ПолучитьКоличествоЦелевыхДоПериода(Период.ДатаНачала);
	выборка.Колонки.Добавить("Потенциальные",Новый ОписаниеТипов("Число"),"Потенциальные",);
	
	Для каждого стр из выборка Цикл
	КоличствоЦелевых = Стр.Целевые + КоличствоЦелевых;
	Стр.Целевые = КоличствоЦелевых;
	Стр.Потенциальные = Стр.Целевые-Стр.Активные - Стр.лояльные;	
	КонецЦикла;
	
	
	
	ТаблицаКлиенты.Загрузить(Выборка);
	
КонецПроцедуры 

&наСервере
Функция ТекстЗапросаКлиентов()
	
	Результат =
	"ВЫБРАТЬ
	|	ПродажаЗапчастей.Клиент КАК Клиент,
	|	НАЧАЛОПЕРИОДА(ПродажаЗапчастей.Дата, МЕСЯЦ) КАК Период,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажаЗапчастей.Ссылка) КАК Продажи
	|ПОМЕСТИТЬ ВТ_ПродажиПоКлиентам
	|ИЗ
	|	Документ.ПродажаЗапчастей КАК ПродажаЗапчастей
	|ГДЕ
	|	ПродажаЗапчастей.Дата МЕЖДУ &ДатаНачала И &Датаокончания
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажаЗапчастей.Клиент,
	|	НАЧАЛОПЕРИОДА(ПродажаЗапчастей.Дата, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПродажиПоКлиентам.Период КАК Период,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_ПродажиПоКлиентам.Продажи = 1
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Активные,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_ПродажиПоКлиентам.Продажи > 1
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Лояльные
	|ПОМЕСТИТЬ ВТ_АктКлиенты
	|ИЗ
	|	ВТ_ПродажиПоКлиентам КАК ВТ_ПродажиПоКлиентам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПродажиПоКлиентам.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Клиенты.Ссылка) КАК Целевые,
	|	НАЧАЛОПЕРИОДА(Клиенты.ДатаСоздания, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТ_Целевые
	|ИЗ
	|	Справочник.Клиенты КАК Клиенты
	|ГДЕ
	|	Клиенты.Целевой
	|	И Клиенты.ДатаСоздания МЕЖДУ &ДатаНачала И &Датаокончания
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(Клиенты.ДатаСоздания, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_АктКлиенты.Период КАК Период,
	|	ЕстьNull(ВТ_АктКлиенты.Активные,0) КАК Активные,
	|	ЕстьNull(ВТ_АктКлиенты.Лояльные,0) КАК Лояльные,
	|	ЕстьNull(ВТ_Целевые.Целевые,0) КАК Целевые
	|ИЗ
	|	ВТ_АктКлиенты КАК ВТ_АктКлиенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Целевые КАК ВТ_Целевые
	|		ПО ВТ_АктКлиенты.Период = ВТ_Целевые.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Возврат результат;
КонецФункции

&НаСервере
Функция ПолучитьКоличествоЦелевыхДоПериода(Датаокончания) 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Клиенты.Ссылка), 0) КАК Количествоцелевых
	               |ИЗ
	               |	Справочник.Клиенты КАК Клиенты
	               |ГДЕ
	               |	Клиенты.Целевой
	               |	И Клиенты.ДатаСоздания МЕЖДУ &ДатаНачала И &ДатаОкончания";
	Запрос.УстановитьПараметр("ДатаНачала", Дата(1,1,1));
	Запрос.УстановитьПараметр("ДатаОкончания", Датаокончания);
	Выборка = запрос.Выполнить().Выбрать();
	Если выборка.Количество()> 0 Тогда
		Выборка.Следующий();
		Если Выборка.КоличествоЦелевых = Неопределено Тогда
		
		Возврат 0;
Иначе	
	Возврат выборка.Количествоцелевых;	
		КонецЕсли;
		
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПериодНагрузкаПриИзменении(Элемент)
	ОбновитьСпискиНагрузки();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСпискиНагрузки()
	Массив = Новый массив;
	Массив.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Думает);
	Массив.Добавить(Перечисления.дт_СостоянияЗаказовКлиента.Ожидание);
	
	СписокНагрузкаМенеджеров.Параметры.УстановитьЗначениеПараметра("ДатаСвязи", КонецДня(ТекущаяДата()));
	СписокНагрузкаМенеджеров.Параметры.УстановитьЗначениеПараметра("МассивМенеджеров", МассивМенеджеров);

	СписокНагрузкаМенеджеров.Параметры.УстановитьЗначениеПараметра("ДатаНачала", ПериодНагрузка.ДатаНачала);
	СписокНагрузкаМенеджеров.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", ПериодНагрузка.ДатаОкончания);
	СписокНагрузкаМенеджеров.Параметры.УстановитьЗначениеПараметра("Состояния", Массив);
	КонецПроцедуры

&НаКлиенте
	Процедура СписокНагрузкаМенеджеровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		Если поле.имя = "СписокНагрузкаМенеджеровФлаг" Тогда
			
			СтандартнаяОбработка = Ложь;
			Манагер = МассивМенеджеров.НайтиПоЗначению(элементы.СписокНагрузкаМенеджеров.ТекущиеДанные.Ответственный);
			Если манагер = Неопределено Тогда
				МассивМенеджеров.Добавить(элементы.СписокНагрузкаМенеджеров.ТекущиеДанные.Ответственный);
			Иначе
				МассивМенеджеров.Удалить(манагер);
			КонецЕсли;
		КонецЕсли;
		
			СписокНагрузкаМенеджеров.Параметры.УстановитьЗначениеПараметра("МассивМенеджеров", МассивМенеджеров);
	КонецПроцедуры

&НаКлиенте
	Процедура ПериодРекламыПриИзменении(Элемент)
		СписокМаршрутРекламы.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ПериодРекламы.ДатаНачала);
		СписокМаршрутРекламы.Параметры.УстановитьЗначениеПараметра("Датаокончания",ПериодРекламы.Датаокончания);

	КонецПроцедуры

&НаКлиенте
Процедура СписокМаршрутРекламыПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		СписокПодвалРекламы.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ПериодРекламы.ДатаНачала);
		СписокПодвалРекламы.Параметры.УстановитьЗначениеПараметра("Датаокончания",ПериодРекламы.Датаокончания);
		СписокПодвалРекламы.Параметры.УстановитьЗначениеПараметра("Линия",Элементы.СписокМаршрутРекламы.ТекущиеДанные.ЛинияНомер);
	КонецЕсли;
	
	КонецПроцедуры

&НаКлиенте
	Процедура СписокПодвалРекламыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
			
	СсылкаДляОткрытия    = Элементы.СписокПодвалРекламы.ТекущиеДанные[СтрЗаменить(Поле.Имя,Элемент.имя,"")];
	ПараметрыФормы       = Новый Структура("Ключ", СсылкаДляОткрытия);
	Если ТипЗнч(СсылкаДляОткрытия)=тип("ДокументСсылка.ЗаказКлиента") Тогда
		СтандартнаяОбработка = Ложь;
		ИмяФормыДокумента="Документ.ЗаказКлиента.Форма.ФормаДокумента";
		ФормаДокумента = ПолучитьФорму(ИмяФормыДокумента, ПараметрыФормы);
		ФормаДокумента.Открыть();
	Иначе
		СтандартнаяОбработка = Истина;
		Возврат;
	КонецЕсли;
	КонецПроцедуры














